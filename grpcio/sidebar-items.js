initSidebarItems({"enum":[["CompressionAlgorithms","Various compression algorithms supported by gRPC."],["CompressionLevel","Compression levels supported by gRPC."],["Error","Errors generated from this library."],["LbPolicy",""],["MethodType","Method types supported by gRPC."],["OptTarget","The optimization target for a [`Channel`]."],["RpcStatusCode","Result of a remote procedure call."]],"fn":[["pb_de",""],["pb_ser",""],["redirect_log","Redirect grpc log to rust's log implementation."]],"struct":[["CallOption","Options for calls made by client."],["Channel","A gRPC channel."],["ChannelBuilder","[`Channel`] factory in order to configure the properties."],["ChannelCredentials","Client-side SSL credentials."],["ChannelCredentialsBuilder","[`ChannelCredentials`] factory in order to configure the properties."],["Client","A generic client for making RPC calls."],["ClientCStreamReceiver","A receiver for client streaming call."],["ClientDuplexReceiver","A response receiver for duplex call."],["ClientSStreamReceiver","A receiver for server streaming call."],["ClientStreamingSink","A sink for client streaming call."],["ClientStreamingSinkResult",""],["ClientUnaryReceiver","A receiver for unary request."],["Deadline",""],["DuplexSink","A sink for duplex streaming call."],["DuplexSinkFailure",""],["EnvBuilder","[`Environment`] factory in order to configure the properties."],["Environment","An object that used to control concurrency and start gRPC event loop."],["Marshaller","Defines how to serialize and deserialize between the specialized type and byte slice."],["Metadata","A collection of metadata entries that can be exchanged during a call."],["MetadataBuilder","Builder for immutable Metadata."],["MetadataIter","Immutable metadata iterator"],["Method","A description of a remote method."],["RequestStream","A stream for client a streaming call and a duplex streaming call."],["ResourceQuota","ResourceQuota represents a bound on memory and thread usage by the gRPC. NOTE: The management of threads created in grpc-core don't use ResourceQuota. TODO: Manage the poller threads created in grpc-rs with this ResourceQuota later."],["RpcContext","A context for rpc handling."],["RpcStatus","RPC result returned from the server."],["Server","A gRPC server."],["ServerBuilder","[`Server`] factory in order to configure the properties."],["ServerCredentials","Server-side SSL credentials."],["ServerCredentialsBuilder","[`ServerCredentials`] factory in order to configure the properties."],["ServerStreamingSink","A sink for server streaming call."],["ServerStreamingSinkFailure",""],["Service","A gRPC service."],["ServiceBuilder","[`Service`] factory in order to configure the properties."],["ShutdownFuture","A `Future` that will resolve when shutdown completes."],["StreamingCallSink","A sink for client streaming call and duplex streaming call. To close the sink properly, you should call [`close`] before dropping."],["UnarySink","A sink for unary call."],["UnarySinkResult",""],["WriteFlags","Flags for write operations."]],"type":[["ClientCStreamSender","A sink for client streaming call."],["ClientDuplexSender","A sink for duplex streaming call."],["Result","Type alias to use this library's [`Error`] type in a `Result`."]]});