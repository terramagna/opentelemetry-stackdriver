var searchIndex={};
searchIndex["anyhow"] = {"doc":"This library provides [`anyhow::Error`][Error], a trait…","i":[[3,"Error","anyhow","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[11,"new","","",0,[[["stderror"]],["self"]]],[11,"new","","Create a new error object from any error type.",1,[[["e"]],["self"]]],[11,"msg","","Create a new error object from a printable error message.",1,[[["m"]],["self"]]],[11,"context","","Wrap the error value with additional context.",1,[[["c"]],["self"]]],[11,"chain","","An iterator of the chain of source errors contained by…",1,[[["self"]],["chain"]]],[11,"root_cause","","The lowest level cause of this error — this error's…",1,[[["self"]],["stderror"]]],[11,"is","","Returns true if `E` is the type held by this error object.",1,[[["self"]],["bool"]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result"]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[["self"]],[["option"],["e"]]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[["self"]],[["option"],["e"]]]],[6,"Result","","`Result<T, Error>`",null,null],[8,"Context","","Provides the `context` method for `Result`.",null,null],[10,"context","","Wrap the error value with additional context.",2,[[["c"]],[["error"],["result",["error"]]]]],[10,"with_context","","Wrap the error value with additional context that is…",2,[[["f"]],[["error"],["result",["error"]]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not satisfied.",null,null],[14,"anyhow","","Construct an ad-hoc error from a string.",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"from","","",1,[[],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"as_ref","","",1,[[["self"]],["stderror"]]],[11,"as_ref","","",1,[[["self"]],["stderror"]]],[11,"from","","",1,[[["e"]],["self"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"clone","","",0,[[["self"]],["chain"]]],[11,"default","","",0,[[],["self"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Chain"],[3,"Error"],[8,"Context"]]};
searchIndex["async_stream"] = {"doc":"Asynchronous stream of elements.","i":[[14,"stream","async_stream","Asynchronous stream",null,null],[14,"try_stream","","Asynchronous fallible stream",null,null]],"p":[]};
searchIndex["async_stream_impl"] = {"doc":"","i":[[24,"AsyncStreamHack","async_stream_impl","",null,null],[24,"AsyncTryStreamHack","","",null,null]],"p":[]};
searchIndex["async_trait"] = {"doc":"","i":[[23,"async_trait","async_trait","",null,null]],"p":[]};
searchIndex["base64"] = {"doc":"Configs","i":[[3,"Config","base64","Contains configuration parameters for base64 encoding",null,null],[4,"DecodeError","","Errors that can occur while decoding.",null,null],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",0,null],[13,"InvalidLength","","The length of the input is invalid.",0,null],[13,"InvalidLastSymbol","","The last non-padding input symbol's encoded 6 bits have…",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`).",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`).",1,null],[13,"Crypt","","The `crypt(3)` character set (uses…",1,null],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",null,[[["t"]],["string"]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",null,[[["t"],["config"],["string"]]]],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the…",null,[[["t"],["config"]],["usize"]]],[5,"decode","","Decode from string reference as octets. Returns a Result…",null,[[["t"]],[["vec",["u8"]],["decodeerror"],["result",["vec","decodeerror"]]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",null,[[["t"],["config"]],[["vec",["u8"]],["decodeerror"],["result",["vec","decodeerror"]]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",null,[[["t"],["config"],["vec"]],[["result",["decodeerror"]],["decodeerror"]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",null,[[["t"],["config"]],[["decodeerror"],["usize"],["result",["usize","decodeerror"]]]]],[0,"display","","Enables base64'd output anywhere you might use a `Display`…",null,null],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format…",null,null],[11,"with_config","","Create a `Base64Display` with the provided config.",2,[[["config"]],["base64display"]]],[0,"write","base64","Implementations of `io::Write` to transparently handle…",null,null],[3,"EncoderWriter","base64::write","A `Write` implementation that base64 encodes data before…",null,null],[11,"new","","Create a new encoder that will write to the provided…",3,[[["w"],["config"]],["encoderwriter"]]],[11,"finish","","Encode all remaining buffered data and write it, including…",3,[[["self"]],["result"]]],[17,"STANDARD","base64","Standard character set with padding.",null,null],[17,"STANDARD_NO_PAD","","Standard character set without padding.",null,null],[17,"URL_SAFE","","URL-safe character set with padding",null,null],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",null,null],[17,"CRYPT","","As per `crypt(3)` requirements",null,null],[11,"new","","Create a new `Config`.",4,[[["characterset"],["bool"]],["config"]]],[11,"pad","","Sets whether to pad output with `=` characters.",4,[[["bool"]],["config"]]],[11,"decode_allow_trailing_bits","","Sets whether to emit errors for nonzero trailing bits.",4,[[["bool"]],["config"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","base64::display","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","base64::write","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","base64","",0,[[["self"]],["decodeerror"]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"clone","","",4,[[["self"]],["config"]]],[11,"eq","","",0,[[["decodeerror"],["self"]],["bool"]]],[11,"ne","","",0,[[["decodeerror"],["self"]],["bool"]]],[11,"fmt","base64::write","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","base64","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","base64::display","",2,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","base64","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"write","base64::write","Encode input and then write to the delegate writer.",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","Because this is usually treated as OK to call multiple…",3,[[["self"]],["result"]]]],"p":[[4,"DecodeError"],[4,"CharacterSet"],[3,"Base64Display"],[3,"EncoderWriter"],[3,"Config"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["result",["u128"]],["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i64"],["result",["i64"]]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u128"]],["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["result",["u128"]],["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i64"],["result",["i64"]]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u128"]],["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","i":[[3,"BytesMut","bytes","A unique reference to a contiguous slice of memory.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"IoSliceMut","bytes::buf","A buffer type used for `readv`.",null,null],[3,"IntoIter","","Iterator over the bytes contained by the buffer.",null,null],[0,"ext","","Extra utilities for `Buf` and `BufMut` types.",null,null],[3,"Limit","bytes::buf::ext","A `BufMut` adapter which limits the amount of bytes that…",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an…",null,null],[3,"Chain","","A `Chain` sequences two buffers.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner…",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the…",null,null],[11,"new","","Creates a new `Chain` sequencing the provided values.",0,[[["u"],["t"]],["chain"]]],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",0,[[["self"]],["t"]]],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",0,[[["self"]],["t"]]],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",0,[[["self"]],["u"]]],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",0,[[["self"]],["u"]]],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",0,[[]]],[11,"into_inner","","Consumes this `Limit`, returning the underlying value.",1,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",1,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",1,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be written",1,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be written.",1,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",2,[[],["b"]]],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",3,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be read.",3,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",3,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",4,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",4,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",4,[[],["b"]]],[8,"BufExt","","Extra methods for implementations of `Buf`.",null,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",5,[[["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",5,[[["buf"]],[["chain"],["buf"]]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",5,[[],["reader"]]],[8,"BufMutExt","","Extra methods for implementations of `BufMut`.",null,null],[11,"limit","","Creates an adaptor which can write at most `limit` bytes…",6,[[["usize"]],["limit"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",6,[[],["writer"]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with…",6,[[["bufmut"]],[["bufmut"],["chain"]]]],[11,"new","bytes::buf","Creates an iterator over the bytes contained by the buffer.",7,[[["t"]],["intoiter"]]],[11,"into_inner","","Consumes this `IntoIter`, returning the underlying value.",7,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",8,[[["self"]]]],[11,"bytes_vectored","","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[10,"advance","","Advance the internal cursor of the Buf",8,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","","A trait for values that provide sequential write access to…",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usize"]]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut…",9,[[["self"]]]],[11,"bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"with_capacity","bytes","Creates a new `BytesMut` with the specified capacity.",10,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",10,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",10,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",10,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",10,[[],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytesmut"]]],[11,"split","","Removes the bytes from the current view, returning them in…",10,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",10,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",10,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",10,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",10,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",10,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this `BytesMut`.",10,[[["self"]]]],[11,"unsplit","","Absorbs a `BytesMut` that was previously split off.",10,[[["self"],["bytesmut"]]]],[11,"new","","Creates a new empty `Bytes`.",11,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",11,[[],["bytes"]]],[11,"len","","Returns the number of bytes contained in this `Bytes`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",11,[[["self"]],["bool"]]],[11,"copy_from_slice","","Creates `Bytes` instance from slice, by copying it.",11,[[],["self"]]],[11,"slice","","Returns a slice of self for the provided range.",11,[[["self"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",8,[[["self"]]]],[11,"bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[10,"advance","bytes","Advance the internal cursor of the Buf",8,[[["self"],["usize"]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usize"]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",9,[[["self"]]]],[11,"bytes_vectored_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"from","bytes","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"from","bytes::buf","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","bytes::buf::ext","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"remaining","","",0,[[["self"]],["usize"]]],[11,"bytes","","",0,[[["self"]]]],[11,"advance","","",0,[[["self"],["usize"]]]],[11,"bytes_vectored","","",0,[[["self"]],["usize"]]],[11,"remaining","","",3,[[["self"]],["usize"]]],[11,"bytes","","",3,[[["self"]]]],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"remaining","bytes","",10,[[["self"]],["usize"]]],[11,"bytes","","",10,[[["self"]]]],[11,"advance","","",10,[[["self"],["usize"]]]],[11,"to_bytes","","",10,[[["self"]],["bytes"]]],[11,"remaining","","",11,[[["self"]],["usize"]]],[11,"bytes","","",11,[[["self"]]]],[11,"advance","","",11,[[["self"],["usize"]]]],[11,"to_bytes","","",11,[[["self"]],["bytes"]]],[11,"remaining_mut","bytes::buf::ext","",0,[[["self"]],["usize"]]],[11,"bytes_mut","","",0,[[["self"]]]],[11,"advance_mut","","",0,[[["self"],["usize"]]]],[11,"bytes_vectored_mut","","",0,[[["self"]],["usize"]]],[11,"remaining_mut","","",1,[[["self"]],["usize"]]],[11,"bytes_mut","","",1,[[["self"]]]],[11,"advance_mut","","",1,[[["self"],["usize"]]]],[11,"remaining_mut","bytes","",10,[[["self"]],["usize"]]],[11,"advance_mut","","",10,[[["self"],["usize"]]]],[11,"bytes_mut","","",10,[[["self"]]]],[11,"put","","",10,[[["self"],["buf"]]]],[11,"put_slice","","",10,[[["self"]]]],[11,"deref","","",10,[[["self"]]]],[11,"deref","","",11,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","bytes::buf","",12,[[],["ioslicemut"]]],[11,"from","","",12,[[],["ioslicemut"]]],[11,"from","bytes","",10,[[],["bytesmut"]]],[11,"from","","",10,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["bytesmut"]],["bytes"]]],[11,"from","","",11,[[],["bytes"]]],[11,"from","","",11,[[["str"]],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from","","",11,[[["string"]],["bytes"]]],[11,"fmt","bytes::buf","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes::buf::ext","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytes::buf","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytes","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",10,[[["self"]],["bool"]]],[11,"eq","","",10,[[["str"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["vec"]],["bool"]]],[11,"eq","","",10,[[["string"],["self"]],["bool"]]],[11,"eq","","",10,[[["t"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",10,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"]],["bool"]]],[11,"eq","","",11,[[["str"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",11,[[["string"],["self"]],["bool"]]],[11,"eq","","",11,[[["t"],["self"]],["bool"]]],[11,"cmp","","",10,[[["self"],["bytesmut"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["bytes"]],["ordering"]]],[11,"partial_cmp","","",10,[[["self"],["bytesmut"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["bytes"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"next","bytes::buf","",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"extend","bytes","",10,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"from_iter","","",10,[[["intoiterator"]],["self"]]],[11,"from_iter","","",10,[[["intoiterator"]],["self"]]],[11,"from_iter","","",11,[[["intoiterator"]],["self"]]],[11,"into_iter","bytes::buf::ext","",0,[[]]],[11,"into_iter","bytes","",10,[[]]],[11,"into_iter","","",11,[[]]],[11,"write_str","","",10,[[["str"],["self"]],["result"]]],[11,"write_fmt","","",10,[[["self"],["arguments"]],["result"]]],[11,"as_ref","","",10,[[["self"]]]],[11,"as_ref","","",11,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["bytesmut"]]],[11,"clone","","",11,[[["self"]],["bytes"]]],[11,"default","","",10,[[],["bytesmut"]]],[11,"default","","",11,[[],["bytes"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow","","",11,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]],[11,"fill_buf","bytes::buf::ext","",2,[[["self"]],["result"]]],[11,"consume","","",2,[[["self"],["usize"]]]],[11,"read","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[11,"bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]]],"p":[[3,"Chain"],[3,"Limit"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"BufExt"],[8,"BufMutExt"],[3,"IntoIter"],[8,"Buf"],[8,"BufMut"],[3,"BytesMut"],[3,"Bytes"],[3,"IoSliceMut"]]};
searchIndex["c2_chacha"] = {"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha","",null,null],[8,"Machine","c2_chacha::guts","",null,null],[16,"u32x4","","",0,null],[16,"u64x2","","",0,null],[16,"u128x1","","",0,null],[16,"u32x4x2","","",0,null],[16,"u64x2x2","","",0,null],[16,"u64x4","","",0,null],[16,"u128x2","","",0,null],[16,"u32x4x4","","",0,null],[16,"u64x2x4","","",0,null],[16,"u128x4","","",0,null],[11,"unpack","","",0,[[["s"]],["v"]]],[11,"vec","","",0,[[["a"]],["v"]]],[11,"read_le","","",0,[[],["v"]]],[11,"read_be","","",0,[[],["v"]]],[10,"instance","","",0,[[],["self"]]],[3,"ChaCha","","",null,null],[3,"State","","",null,null],[11,"new","","",1,[[],["self"]]],[11,"refill4","","Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill","","Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param","","",1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param","","",1,[[["u32"],["self"]],["u64"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","","",1,[[["self"]],["chacha"]]],[11,"clone","","",2,[[["self"]],["state"]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["chrono"] = {"doc":"Chrono: Date and Time for Rust","i":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with…",null,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor…",0,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",0,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",0,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",0,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",1,null],[13,"Tue","","Tuesday.",1,null],[13,"Wed","","Wednesday.",1,null],[13,"Thu","","Thursday.",1,null],[13,"Fri","","Friday.",1,null],[13,"Sat","","Saturday.",1,null],[13,"Sun","","Sunday.",1,null],[0,"prelude","","A convenience module appropriate for glob imports (`use…",null,null],[0,"offset","","The time zone, which calculates offsets from the local…",null,null],[3,"FixedOffset","chrono::offset","The time zone with fixed offset, from UTC-23:59:59 to…",null,null],[3,"Local","","The local timescale. This is implemented via the standard…",null,null],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[4,"LocalResult","","The conversion result from the local time to the…",null,null],[13,"None","","Given local time representation is invalid. This can occur…",2,null],[13,"Single","","Given local time representation has a single unique result.",2,null],[13,"Ambiguous","","Given local time representation has multiple results and…",2,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",3,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",3,[[["i32"]],[["option",["fixedoffset"]],["fixedoffset"]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",3,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",3,[[["i32"]],[["option",["fixedoffset"]],["fixedoffset"]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",3,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",3,[[["self"]],["i32"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",4,[[],[["date",["local"]],["local"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,[[],[["datetime",["local"]],["local"]]]],[11,"today","","Returns a `Date` which corresponds to the current date.",5,[[],[["date",["utc"]],["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",5,[[],[["datetime",["utc"]],["utc"]]]],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],["fixedoffset"]]],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the…",7,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",7,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",7,[[["u32"],["i32"],["self"]],[["localresult",["date"]],["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",7,[[["u32"],["self"],["i32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",7,[[["u32"],["self"],["i32"]],[["localresult",["date"]],["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",7,[[["u32"],["i32"],["weekday"],["self"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",7,[[["u32"],["i32"],["weekday"],["self"]],[["localresult",["date"]],["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["i64"],["u32"],["self"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["i64"],["u32"],["self"]],[["datetime"],["localresult",["datetime"]]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],[["datetime"],["localresult",["datetime"]]]]],[11,"timestamp_nanos","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],["datetime"]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",7,[[["str"],["self"]],[["parseresult",["datetime"]],["datetime"]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",7,[[],["self"]]],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",7,[[["naivedate"],["self"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["naivedatetime"],["self"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",7,[[["naivedate"],["self"]],[["localresult",["date"]],["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["naivedatetime"],["self"]],[["datetime"],["localresult",["datetime"]]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",7,[[["naivedate"],["self"]]]],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",7,[[["naivedatetime"],["self"]]]],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["naivedate"],["self"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["naivedatetime"],["self"]],["datetime"]]],[11,"single","","Returns `Some` only when the conversion result is unique,…",2,[[],["option"]]],[11,"earliest","","Returns `Some` for the earliest possible conversion…",2,[[],["option"]]],[11,"latest","","Returns `Some` for the latest possible conversion result,…",2,[[],["option"]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["fnmut"]],["localresult"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",2,[[["naivetime"]],[["datetime"],["localresult",["datetime"]]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",2,[[["u32"]],[["datetime"],["localresult",["datetime"]]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["datetime"],["localresult",["datetime"]]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["datetime"],["localresult",["datetime"]]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["datetime"],["localresult",["datetime"]]]]],[11,"unwrap","","Returns the single unique conversion result, or panics…",2,[[],["t"]]],[0,"naive","chrono","Date and time types unconcerned with timezones.",null,null],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every…",null,null],[3,"IsoWeek","","ISO 8601 week.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["u32"],["i32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["u32"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["u32"],["i32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["u32"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["weekday"],["u32"],["i32"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["weekday"],["u32"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from a day's number in the…",8,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from a day's number in the…",8,[[["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_weekday_of_month","","Makes a new `NaiveDate` by counting the number of…",8,[[["u32"],["i32"],["weekday"],["u8"]],["naivedate"]]],[11,"from_weekday_of_month_opt","","Makes a new `NaiveDate` by counting the number of…",8,[[["u32"],["i32"],["weekday"],["u8"]],[["option",["naivedate"]],["naivedate"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",8,[[["str"]],[["parseresult",["naivedate"]],["naivedate"]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],["naivetime"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",8,[[["oldduration"]],[["option",["naivedate"]],["naivedate"]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",8,[[["oldduration"]],[["option",["naivedate"]],["naivedate"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",8,[[["naivedate"]],["oldduration"]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",8,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",8,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"year","","Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week","","Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0","","Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",10,[[["str"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",10,[[["self"],["oldduration"]]]],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",10,[[["self"],["oldduration"]]]],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",10,[[["naivetime"]],["oldduration"]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",10,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the…",10,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",11,[[["naivedate"],["naivetime"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",11,[[["str"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"date","","Retrieves a date component.",11,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",11,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",11,[[["oldduration"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",11,[[["oldduration"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",11,[[["naivedatetime"]],["oldduration"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",11,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",11,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[0,"serde","","Serialization/Deserialization of naive types in alternate…",null,null],[0,"ts_nanoseconds","chrono::naive::serde","Used to serialize/deserialize from nanosecond-precision…",null,null],[5,"serialize","chrono::naive::serde::ts_nanoseconds","Serialize a UTC datetime into an integer number of…",null,[[["naivedatetime"],["s"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a nanoseconds timestamp",null,[[["d"]],[["naivedatetime"],["result",["naivedatetime"]]]]],[0,"ts_milliseconds","chrono::naive::serde","Used to serialize/deserialize from millisecond-precision…",null,null],[5,"serialize","chrono::naive::serde::ts_milliseconds","Serialize a UTC datetime into an integer number of…",null,[[["naivedatetime"],["s"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a milliseconds timestamp",null,[[["d"]],[["naivedatetime"],["result",["naivedatetime"]]]]],[0,"ts_seconds","chrono::naive::serde","Used to serialize/deserialize from second-precision…",null,null],[5,"serialize","chrono::naive::serde::ts_seconds","Serialize a UTC datetime into an integer number of seconds…",null,[[["naivedatetime"],["s"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a seconds timestamp",null,[[["d"]],[["naivedatetime"],["result",["naivedatetime"]]]]],[17,"MIN_DATE","chrono::naive","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,[[["naivedate"]],["date"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",12,[[["self"],["naivetime"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"succ","","Makes a new `Date` for the next date.",12,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",12,[[["self"]],[["option",["date"]],["date"]]]],[11,"pred","","Makes a new `Date` for the prior date.",12,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",12,[[["self"]],[["option",["date"]],["date"]]]],[11,"offset","","Retrieves an associated offset from UTC.",12,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",12,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",12,[[["tz2"],["self"]],[["date"],["timezone"]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",12,[[["oldduration"]],[["option",["date"]],["date"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",12,[[["oldduration"]],[["option",["date"]],["date"]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",12,[[["date"],["timezone"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",12,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",12,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",12,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",12,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",13,[[["naivedatetime"]],["datetime"]]],[11,"date","","Retrieves a date component.",13,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",13,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",13,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",13,[[["tz2"],["self"]],[["datetime"],["timezone"]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",13,[[["oldduration"]],[["datetime"],["option",["datetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",13,[[["oldduration"]],[["datetime"],["option",["datetime"]]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",13,[[["datetime"],["timezone"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",13,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",13,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",13,[[["secondsformat"],["self"],["bool"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",13,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",13,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[0,"format","","Formatting (and parsing) utilities for date and time.",null,null],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of…",null,null],[12,"year","","Year.",14,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE…",14,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear","","Year in the ISO week date.",14,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that…",14,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the…",14,null],[12,"month","","Month (1--12).",14,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday…",14,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday…",14,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,null],[12,"weekday","","Day of the week.",14,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,null],[12,"minute","","Minute number (0--59).",14,null],[12,"second","","Second number (0--60, accounting for leap seconds).",14,null],[12,"nanosecond","","The number of nanoseconds since the whole second…",14,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on…",14,null],[12,"offset","","Offset from the local time to UTC, in seconds.",14,null],[3,"InternalNumeric","","An opaque type representing numeric item types for…",null,null],[3,"InternalFixed","","An opaque type representing fixed-format item types for…",null,null],[3,"ParseError","","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A temporary object which can be used as an argument to…",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",15,null],[13,"Zero","","Zero (`0`) padding.",15,null],[13,"Space","","Space padding.",15,null],[4,"Numeric","","Numeric item types. They have associated formatting width…",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before…",16,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2).…",16,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years…",16,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2).…",16,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,null],[13,"Month","","Month (FW=PW=2).",16,null],[13,"Day","","Day of the month (FW=PW=2).",16,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday…",16,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday…",16,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6…",16,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,null],[13,"Ordinal","","Day of the year (FW=PW=3).",16,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second…",16,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on…",16,null],[13,"Internal","","Internal uses only.",16,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",17,null],[13,"LongMonthName","","Full month names.",17,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,null],[13,"LongWeekdayName","","Full day of the week names.",17,null],[13,"LowerAmPm","","AM/PM.",17,null],[13,"UpperAmPm","","AM/PM.",17,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned…",17,null],[13,"Nanosecond3","","Same as `Nanosecond` but the accuracy is fixed to 3.",17,null],[13,"Nanosecond6","","Same as `Nanosecond` but the accuracy is fixed to 6.",17,null],[13,"Nanosecond9","","Same as `Nanosecond` but the accuracy is fixed to 9.",17,null],[13,"TimezoneName","","Timezone name.",17,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,null],[13,"TimezoneOffset","","Same as `TimezoneOffsetColon` but prints no colon. Parsing…",17,null],[13,"TimezoneOffsetZ","","Same as `TimezoneOffsetColonZ` but prints no colon.…",17,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and…",17,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,null],[13,"Internal","","Internal uses only.",17,null],[4,"Item","","A single formatting item. This is used for both formatting…",null,null],[13,"Literal","","A literally printed and parsed text.",18,null],[13,"OwnedLiteral","","Same as `Literal` but with the string owned by the item.",18,null],[13,"Space","","Whitespace. Prints literally but reads zero or more…",18,null],[13,"OwnedSpace","","Same as `Space` but with the string owned by the item.",18,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal…",18,null],[13,"Fixed","","Fixed-format item.",18,null],[13,"Error","","Issues a formatting error. Used to signal an invalid…",18,null],[5,"parse","","Tries to parse given string into `parsed` with given…",null,[[["str"],["i"],["parsed"]],["parseresult"]]],[5,"format","","Tries to format given arguments with given formatting…",null,[[["naivedate"],["naivetime"],["formatter"],["option",["naivedate"]],["option",["naivetime"]],["i"],["option"]],["result"]]],[11,"new","","Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year","","Tries to set the `year` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_month","","Tries to set the `month` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,[[["weekday"],["self"]],["parseresult"]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_day","","Tries to set the `day` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],["parseresult"]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour…",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_minute","","Tries to set the `minute` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_second","","Tries to set the `second` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_offset","","Tries to set the `offset` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,[[["self"]],[["parseresult",["naivedate"]],["naivedate"]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,[[["self"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],[["fixedoffset"],["parseresult",["fixedoffset"]]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given…",14,[[["tz"],["self"]],[["parseresult",["datetime"]],["datetime"]]]],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting…",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],["strftimeitems"]]],[6,"ParseResult","chrono::format","Same as `Result<T, ParseError>`.",null,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivetime"]],["naivedate"],["naivetime"],["i"],["option",["naivedate"]]],["delayedformat"]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and…",20,[[["off"],["option",["naivetime"]],["naivedate"],["naivetime"],["i"],["option",["naivedate"]]],["delayedformat"]]],[0,"serde","chrono","Serialization/Deserialization in alternate formats",null,null],[0,"ts_nanoseconds","chrono::serde","Ser/de to/from timestamps in nanoseconds",null,null],[5,"serialize","chrono::serde::ts_nanoseconds","Serialize a UTC datetime into an integer number of…",null,[[["datetime"],["s"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a nanosecond timestamp",null,[[["d"]],[["datetime",["utc"]],["result",["datetime"]]]]],[0,"ts_nanoseconds_option","chrono::serde","Ser/de to/from optional timestamps in nanoseconds",null,null],[5,"serialize","chrono::serde::ts_nanoseconds_option","Serialize a UTC datetime into an integer number of…",null,[[["s"],["option"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a nanosecond timestamp or none",null,[[["d"]],[["option",["datetime"]],["result",["option"]]]]],[0,"ts_milliseconds","chrono::serde","Ser/de to/from timestamps in milliseconds",null,null],[5,"serialize","chrono::serde::ts_milliseconds","Serialize a UTC datetime into an integer number of…",null,[[["datetime"],["s"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a millisecond timestamp",null,[[["d"]],[["datetime",["utc"]],["result",["datetime"]]]]],[0,"ts_milliseconds_option","chrono::serde","Ser/de to/from optional timestamps in milliseconds",null,null],[5,"serialize","chrono::serde::ts_milliseconds_option","Serialize a UTC datetime into an integer number of…",null,[[["s"],["option"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a millisecond timestamp or…",null,[[["d"]],[["option",["datetime"]],["result",["option"]]]]],[0,"ts_seconds","chrono::serde","Ser/de to/from timestamps in seconds",null,null],[5,"serialize","chrono::serde::ts_seconds","Serialize a UTC datetime into an integer number of seconds…",null,[[["datetime"],["s"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a seconds timestamp",null,[[["d"]],[["datetime",["utc"]],["result",["datetime"]]]]],[0,"ts_seconds_option","chrono::serde","Ser/de to/from optional timestamps in seconds",null,null],[5,"serialize","chrono::serde::ts_seconds_option","Serialize a UTC datetime into an integer number of seconds…",null,[[["s"],["option"]],["result"]]],[5,"deserialize","","Deserialize a `DateTime` from a seconds timestamp or none",null,[[["d"]],[["option",["datetime"]],["result",["option"]]]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",null,null],[17,"MAX_DATE","","The maximum possible `Date`.",null,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",21,[[["u16"]],["self"]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",21,[[["u16"]],["self"]]],[8,"Datelike","","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",22,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",22,[[["self"]]]],[10,"month","","Returns the month number starting from 1.",22,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",22,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",22,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",22,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",22,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",22,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",22,[[["self"]],["weekday"]]],[10,"iso_week","","Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,"with_year","","Makes a new value with the year number changed.",22,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[11,"num_days_from_ce","","Counts the days in the proleptic Gregorian calendar, with…",22,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",23,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",23,[[["self"]]]],[10,"minute","","Returns the minute number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",23,[[["u32"],["self"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",23,[[["self"]],["u32"]]],[11,"succ","","The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","chrono::offset","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","chrono::naive","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","chrono::format","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","chrono::format::strftime","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"eq","chrono","",24,[[["duration"],["self"]],["bool"]]],[11,"ne","","",24,[[["duration"],["self"]],["bool"]]],[11,"cmp","","",24,[[["duration"],["self"]],["ordering"]]],[11,"sub","","",24,[[["duration"]],["duration"]]],[11,"clone","","",24,[[["self"]],["duration"]]],[11,"mul","","",24,[[["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"neg","","",24,[[],["duration"]]],[11,"partial_cmp","","",24,[[["duration"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",24,[[["duration"],["self"]],["bool"]]],[11,"le","","",24,[[["duration"],["self"]],["bool"]]],[11,"gt","","",24,[[["duration"],["self"]],["bool"]]],[11,"ge","","",24,[[["duration"],["self"]],["bool"]]],[11,"div","","",24,[[["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"add","","",24,[[["duration"]],["duration"]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"fix","chrono::offset","",3,[[["self"]],["fixedoffset"]]],[11,"fix","","",5,[[["self"]],["fixedoffset"]]],[11,"from_offset","","",3,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",3,[[["naivedate"],["self"]],[["fixedoffset"],["localresult",["fixedoffset"]]]]],[11,"offset_from_local_datetime","","",3,[[["naivedatetime"],["self"]],[["fixedoffset"],["localresult",["fixedoffset"]]]]],[11,"offset_from_utc_date","","",3,[[["naivedate"],["self"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",3,[[["naivedatetime"],["self"]],["fixedoffset"]]],[11,"from_offset","","",4,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",4,[[["naivedate"],["self"]],[["fixedoffset"],["localresult",["fixedoffset"]]]]],[11,"offset_from_local_datetime","","",4,[[["naivedatetime"],["self"]],[["fixedoffset"],["localresult",["fixedoffset"]]]]],[11,"offset_from_utc_date","","",4,[[["naivedate"],["self"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",4,[[["naivedatetime"],["self"]],["fixedoffset"]]],[11,"from_local_date","","",4,[[["naivedate"],["self"]],[["date",["local"]],["localresult",["date"]]]]],[11,"from_local_datetime","","",4,[[["naivedatetime"],["self"]],[["datetime",["local"]],["localresult",["datetime"]]]]],[11,"from_utc_date","","",4,[[["naivedate"],["self"]],[["date",["local"]],["local"]]]],[11,"from_utc_datetime","","",4,[[["naivedatetime"],["self"]],[["datetime",["local"]],["local"]]]],[11,"from_offset","","",5,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",5,[[["naivedate"],["self"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_local_datetime","","",5,[[["naivedatetime"],["self"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_utc_date","","",5,[[["naivedate"],["self"]],["utc"]]],[11,"offset_from_utc_datetime","","",5,[[["naivedatetime"],["self"]],["utc"]]],[11,"year","chrono::naive","Returns the year number in the calendar date.",8,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",8,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",8,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",8,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",8,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",8,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",8,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",8,[[["self"]],["weekday"]]],[11,"iso_week","","",8,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"year","","Returns the year number in the calendar date.",11,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",11,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",11,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",11,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",11,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",11,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",11,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",11,[[["self"]],["weekday"]]],[11,"iso_week","","",11,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"year","chrono","",12,[[["self"]],["i32"]]],[11,"month","","",12,[[["self"]],["u32"]]],[11,"month0","","",12,[[["self"]],["u32"]]],[11,"day","","",12,[[["self"]],["u32"]]],[11,"day0","","",12,[[["self"]],["u32"]]],[11,"ordinal","","",12,[[["self"]],["u32"]]],[11,"ordinal0","","",12,[[["self"]],["u32"]]],[11,"weekday","","",12,[[["self"]],["weekday"]]],[11,"iso_week","","",12,[[["self"]],["isoweek"]]],[11,"with_year","","",12,[[["self"],["i32"]],[["option",["date"]],["date"]]]],[11,"with_month","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_month0","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_day","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_day0","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_ordinal","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_ordinal0","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"year","","",13,[[["self"]],["i32"]]],[11,"month","","",13,[[["self"]],["u32"]]],[11,"month0","","",13,[[["self"]],["u32"]]],[11,"day","","",13,[[["self"]],["u32"]]],[11,"day0","","",13,[[["self"]],["u32"]]],[11,"ordinal","","",13,[[["self"]],["u32"]]],[11,"ordinal0","","",13,[[["self"]],["u32"]]],[11,"weekday","","",13,[[["self"]],["weekday"]]],[11,"iso_week","","",13,[[["self"]],["isoweek"]]],[11,"with_year","","",13,[[["self"],["i32"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"hour","chrono::naive","Returns the hour number from 0 to 23.",10,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",10,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",10,[[["self"]],["u32"]]],[11,"hour","","Returns the hour number from 0 to 23.",11,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",11,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"hour","chrono","",13,[[["self"]],["u32"]]],[11,"minute","","",13,[[["self"]],["u32"]]],[11,"second","","",13,[[["self"]],["u32"]]],[11,"nanosecond","","",13,[[["self"]],["u32"]]],[11,"with_hour","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_minute","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_second","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_nanosecond","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",13,[[["datetime",["utc"]],["utc"]],["self"]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",13,[[["datetime",["utc"]],["utc"]],["self"]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",13,[[["datetime",["fixedoffset"]],["fixedoffset"]],["self"]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",13,[[["datetime",["fixedoffset"]],["fixedoffset"]],["self"]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",13,[[["datetime",["local"]],["local"]],["self"]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",13,[[["datetime",["local"]],["local"]],["self"]]],[11,"from","","",13,[[["systemtime"]],[["datetime",["utc"]],["utc"]]]],[11,"from","","",13,[[["systemtime"]],[["datetime",["local"]],["local"]]]],[11,"next","chrono::format::strftime","",19,[[["self"]],[["option",["item"]],["item"]]]],[11,"clone","chrono::offset","",2,[[["self"]],["localresult"]]],[11,"clone","","",3,[[["self"]],["fixedoffset"]]],[11,"clone","","",4,[[["self"]],["local"]]],[11,"clone","","",5,[[["self"]],["utc"]]],[11,"clone","chrono::naive","",8,[[["self"]],["naivedate"]]],[11,"clone","","",9,[[["self"]],["isoweek"]]],[11,"clone","","",10,[[["self"]],["naivetime"]]],[11,"clone","","",11,[[["self"]],["naivedatetime"]]],[11,"clone","chrono","",12,[[["self"]],["date"]]],[11,"clone","","",0,[[["self"]],["secondsformat"]]],[11,"clone","","",13,[[["self"]],["datetime"]]],[11,"clone","chrono::format","",15,[[["self"]],["pad"]]],[11,"clone","","",16,[[["self"]],["numeric"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["fixed"]]],[11,"clone","","",27,[[["self"]],["internalfixed"]]],[11,"clone","","",18,[[["self"]],["item"]]],[11,"clone","","",28,[[["self"]],["parseerror"]]],[11,"clone","","",14,[[["self"]],["parsed"]]],[11,"clone","chrono::format::strftime","",19,[[["self"]],["strftimeitems"]]],[11,"clone","chrono","",1,[[["self"]],["weekday"]]],[11,"clone","","",25,[[["self"]],["parseweekdayerror"]]],[11,"default","chrono::format","",14,[[],["parsed"]]],[11,"cmp","chrono::naive","",8,[[["naivedate"],["self"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["isoweek"]],["ordering"]]],[11,"cmp","","",10,[[["naivetime"],["self"]],["ordering"]]],[11,"cmp","","",11,[[["naivedatetime"],["self"]],["ordering"]]],[11,"cmp","chrono","",12,[[["self"],["date"]],["ordering"]]],[11,"cmp","","",13,[[["datetime"],["self"]],["ordering"]]],[11,"eq","chrono::offset","",2,[[["localresult"],["self"]],["bool"]]],[11,"ne","","",2,[[["localresult"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["fixedoffset"]],["bool"]]],[11,"ne","","",3,[[["self"],["fixedoffset"]],["bool"]]],[11,"eq","","",5,[[["self"],["utc"]],["bool"]]],[11,"eq","chrono::naive","",8,[[["naivedate"],["self"]],["bool"]]],[11,"ne","","",8,[[["naivedate"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"ne","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"eq","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"ne","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"eq","","",11,[[["naivedatetime"],["self"]],["bool"]]],[11,"ne","","",11,[[["naivedatetime"],["self"]],["bool"]]],[11,"eq","chrono","",12,[[["date"],["self"]],["bool"]]],[11,"eq","","",0,[[["secondsformat"],["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["datetime"]],["bool"]]],[11,"eq","chrono::format","",15,[[["pad"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["numeric"]],["bool"]]],[11,"ne","","",16,[[["self"],["numeric"]],["bool"]]],[11,"eq","","",26,[[["internalnumeric"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["fixed"]],["bool"]]],[11,"ne","","",17,[[["self"],["fixed"]],["bool"]]],[11,"eq","","",27,[[["internalfixed"],["self"]],["bool"]]],[11,"ne","","",27,[[["internalfixed"],["self"]],["bool"]]],[11,"eq","","",18,[[["item"],["self"]],["bool"]]],[11,"ne","","",18,[[["item"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",28,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",14,[[["parsed"],["self"]],["bool"]]],[11,"ne","","",14,[[["parsed"],["self"]],["bool"]]],[11,"eq","chrono","",1,[[["self"],["weekday"]],["bool"]]],[11,"eq","","",25,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"ne","","",25,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"partial_cmp","chrono::naive","",8,[[["naivedate"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",8,[[["naivedate"],["self"]],["bool"]]],[11,"le","","",8,[[["naivedate"],["self"]],["bool"]]],[11,"gt","","",8,[[["naivedate"],["self"]],["bool"]]],[11,"ge","","",8,[[["naivedate"],["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["isoweek"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"le","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"gt","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"ge","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"partial_cmp","","",10,[[["naivetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"le","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"gt","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"ge","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"partial_cmp","","",11,[[["naivedatetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",11,[[["naivedatetime"],["self"]],["bool"]]],[11,"le","","",11,[[["naivedatetime"],["self"]],["bool"]]],[11,"gt","","",11,[[["naivedatetime"],["self"]],["bool"]]],[11,"ge","","",11,[[["naivedatetime"],["self"]],["bool"]]],[11,"partial_cmp","chrono","",12,[[["self"],["date"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","Compare two DateTimes based on their true time, ignoring…",13,[[["self"],["datetime"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","chrono::offset","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format::strftime","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::offset","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",1,[[["formatter"],["self"]],["result"]]],[11,"sub","chrono::naive","",10,[[["fixedoffset"]],["naivetime"]]],[11,"sub","","",11,[[["fixedoffset"]],["naivedatetime"]]],[11,"sub","chrono","",13,[[["fixedoffset"]],["datetime"]]],[11,"sub","chrono::naive","",8,[[["oldduration"]],["naivedate"]]],[11,"sub","","",8,[[["naivedate"]],["oldduration"]]],[11,"sub","","",10,[[["oldduration"]],["naivetime"]]],[11,"sub","","",10,[[["naivetime"]],["oldduration"]]],[11,"sub","","",11,[[["oldduration"]],["naivedatetime"]]],[11,"sub","","",11,[[["naivedatetime"]],["oldduration"]]],[11,"sub","chrono","",12,[[["oldduration"]],["date"]]],[11,"sub","","",12,[[["date"]],["oldduration"]]],[11,"sub","","",13,[[["oldduration"]],["datetime"]]],[11,"sub","","",13,[[["datetime"]],["oldduration"]]],[11,"add","chrono::naive","",10,[[["fixedoffset"]],["naivetime"]]],[11,"add","","",11,[[["fixedoffset"]],["naivedatetime"]]],[11,"add","chrono","",13,[[["fixedoffset"]],["datetime"]]],[11,"add","chrono::naive","",8,[[["oldduration"]],["naivedate"]]],[11,"add","","",10,[[["oldduration"]],["naivetime"]]],[11,"add","","",11,[[["oldduration"]],["naivedatetime"]]],[11,"add","chrono","",12,[[["oldduration"]],["date"]]],[11,"add","","",13,[[["oldduration"]],["datetime"]]],[11,"add_assign","chrono::naive","",8,[[["self"],["oldduration"]]]],[11,"add_assign","","",10,[[["self"],["oldduration"]]]],[11,"add_assign","","",11,[[["self"],["oldduration"]]]],[11,"sub_assign","","",8,[[["self"],["oldduration"]]]],[11,"sub_assign","","",10,[[["self"],["oldduration"]]]],[11,"sub_assign","","",11,[[["self"],["oldduration"]]]],[11,"hash","chrono::offset","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","chrono::naive","",8,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","chrono","",12,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_str","chrono::naive","",8,[[["str"]],[["parseresult",["naivedate"]],["naivedate"]]]],[11,"from_str","","",10,[[["str"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"from_str","","",11,[[["str"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"from_str","chrono","",13,[[["str"]],[["datetime",["utc"]],["parseresult",["datetime"]]]]],[11,"from_str","","",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["local"]]]]],[11,"from_str","","",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"description","chrono::format","",28,[[["self"]],["str"]]],[11,"from_i64","chrono","",1,[[["i64"]],[["weekday"],["option",["weekday"]]]]],[11,"from_u64","","",1,[[["u64"]],[["weekday"],["option",["weekday"]]]]],[11,"serialize","chrono::naive","",8,[[["s"],["self"]],["result"]]],[11,"serialize","","",10,[[["s"],["self"]],["result"]]],[11,"serialize","","",11,[[["s"],["self"]],["result"]]],[11,"serialize","chrono","Serialize into a rfc3339 time string",13,[[["s"],["self"]],["result"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"deserialize","chrono::naive","",8,[[["d"]],["result"]]],[11,"deserialize","","",10,[[["d"]],["result"]]],[11,"deserialize","","",11,[[["d"]],["result"]]],[11,"deserialize","chrono","",13,[[["d"]],["result"]]],[11,"deserialize","","",13,[[["d"]],["result"]]],[11,"deserialize","","",13,[[["d"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",24,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",24,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",24,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",24,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",24,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",24,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",24,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",24,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",24,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",24,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",24,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",24,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",24,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",24,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",24,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",24,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",24,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",24,[[["duration"],["self"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",24,[[["duration"],["self"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",24,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",24,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",24,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",24,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",24,[[["duration"]],[["outofrangeerror"],["duration"],["result",["duration","outofrangeerror"]]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",24,[[["self"]],[["outofrangeerror"],["result",["duration","outofrangeerror"]],["duration"]]]]],"p":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"FixedOffset"],[3,"Local"],[3,"Utc"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"ParseWeekdayError"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"]]};
searchIndex["crossbeam_deque"] = {"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Injector","","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker"],["self"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker"],["self"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"eq","","",0,[[["steal"],["self"]],["bool"]]],[11,"ne","","",0,[[["steal"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[],["bool"]]],[5,"pin","","Pins the current thread.",null,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering"],["self"],["guard"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["self"],["pointer"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["guard"],["ordering"],["self"],["pointer"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["shared"],["compareandseterror"],["result",["shared","compareandseterror"]]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["shared"],["compareandseterror"],["result",["shared","compareandseterror"]]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["usize"],["ordering"],["self"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["usize"],["ordering"],["self"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["usize"],["ordering"],["self"],["guard"]],["shared"]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],[["t"],["option"]]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],[["option",["collector"]],["collector"]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"from","","",1,[[],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"from","","",2,[[],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_queue"] = {"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push","","Attempts to push an element into the queue.",1,[[["self"],["t"]],[["result",["pusherror"]],["pusherror"]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",1,[[["self"]],["usize"]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push","","Pushes an element into the queue.",2,[[["self"],["t"]]]],[11,"pop","","Pops an element from the queue.",2,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",2,[[["self"]],["usize"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",3,[[["self"]],["poperror"]]],[11,"clone","","",0,[[["self"]],["pusherror"]]],[11,"default","","",2,[[],["segqueue"]]],[11,"eq","","",3,[[["poperror"],["self"]],["bool"]]],[11,"eq","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"ne","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"] = {"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[["self"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the inner value.",2,[[],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["duration"],["self"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],[["lockresult"],["t"]]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],[["shardedlockreadguard"],["trylockresult",["shardedlockreadguard"]]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],[["lockresult",["shardedlockreadguard"]],["shardedlockreadguard"]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[["trylockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],[["shardedlockwriteguard"],["lockresult",["shardedlockwriteguard"]]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["f"]],[["result",["scopedjoinhandle"]],["scopedjoinhandle"]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[["t"]],["t"]]],[11,"from","","",2,[[],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"from","","",6,[[],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","crossbeam_utils::sync","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"from","crossbeam_utils","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","crossbeam_utils","",2,[[["self"],["__h"]]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["ct_logs"] = {"doc":"This library is automatically generated from Google's list…","i":[[7,"LOGS","ct_logs","",null,null]],"p":[]};
searchIndex["derivative"] = {"doc":"","i":[[24,"Derivative","derivative","",null,null]],"p":[]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"into","","",0,[[],["result"]]],[11,"clone","","",0,[[["self"]],["either"]]]],"p":[[4,"Either"]]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",null,null],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,[[["self"]]]]],"p":[[3,"FnvHasher"]]};
searchIndex["futures"] = {"doc":"Abstractions for asynchronous programming.","i":[[14,"ready","futures","Extracts the successful type of a `Poll<T>`.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[14,"pending","","A macro which yields to the event loop once.",null,null],[14,"poll","","A macro which returns the result of polling a future once…",null,null],[0,"channel","","Cross-task communication.",null,null],[0,"oneshot","futures::channel","A channel for sending a single message between…",null,null],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another…",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending values across…",null,[[]]],[3,"Canceled","","Error returned from a `Receiver` when the corresponding…",null,null],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",null,null],[3,"TrySendError","","The error type returned from `try_send`.",null,null],[3,"TryRecvError","","The error type returned from `try_next`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[0,"executor","futures","Task execution.",null,null],[3,"BlockingStream","futures::executor","An iterator which blocks on values from a stream until…",null,null],[3,"Enter","","Represents an executor context.",null,null],[3,"EnterError","","An error returned by `enter` if an execution scope has…",null,null],[3,"LocalSpawner","","A handle to a `LocalPool` that implements `Spawn`.",null,null],[3,"LocalPool","","A single-threaded task pool for polling futures to…",null,null],[5,"block_on","","Run a future to completion on the current thread.",null,[[["f"]]]],[5,"block_on_stream","","Turn a stream into a blocking iterator.",null,[[["s"]],["blockingstream"]]],[5,"enter","","Marks the current thread as being within the dynamic…",null,[[],[["entererror"],["enter"],["result",["enter","entererror"]]]]],[3,"ThreadPool","","A general-purpose thread pool for scheduling tasks that…",null,null],[3,"ThreadPoolBuilder","","Thread pool configuration object.",null,null],[0,"future","futures","Asynchronous values.",null,null],[8,"Future","futures::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value,…",0,[[["pin"],["self"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",1,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns `true` if the underlying future should no longer…",2,[[["self"]],["bool"]]],[6,"BoxFuture","","An owned dynamically typed [`Future`] for use in cases…",null,null],[6,"LocalBoxFuture","","`BoxFuture`, but without the `Send` requirement.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"lazy","","Creates a new future that allows delayed execution of a…",null,[[["f"]],["lazy"]]],[3,"Lazy","","Future for the [`lazy`] function.",null,null],[5,"maybe_done","","Wraps a future into a `MaybeDone`",null,[[["fut"]],["maybedone"]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",4,null],[13,"Done","","The output of the completed future",4,null],[13,"Gone","","The empty variant after the result of a [`MaybeDone`] has…",4,null],[5,"pending","","Creates a future which never resolves, representing a…",null,[[],["pending"]]],[3,"Pending","","Future for the [`pending()`] function.",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning…",null,[[["f"]],["pollfn"]]],[3,"PollFn","","Future for the [`poll_fn`] function.",null,null],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[["t"]],["ready"]]],[5,"ok","","Create a future that is immediately ready with a success…",null,[[["t"]],[["ready",["result"]],["result"]]]],[5,"err","","Create a future that is immediately ready with an error…",null,[[["e"]],[["ready",["result"]],["result"]]]],[3,"Ready","","Future for the `ready` function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["join"]]],[5,"join3","","Same as `join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["join3"]]],[5,"join4","","Same as `join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["join4"]]],[5,"join5","","Same as `join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["join5"]]],[3,"Join","","Future for the `join` function.",null,null],[3,"Join3","","Future for the [`join3`] function.",null,null],[3,"Join4","","Future for the [`join4`] function.",null,null],[3,"Join5","","Future for the [`join5`] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["select"]]],[3,"Select","","Future for the [`select()`] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["tryjoin"]]],[5,"try_join3","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["tryjoin3"]]],[5,"try_join4","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["tryjoin4"]]],[5,"try_join5","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["tryjoin5"]]],[3,"TryJoin","","Future for the `try_join` function.",null,null],[3,"TryJoin3","","Future for the [`try_join3`] function.",null,null],[3,"TryJoin4","","Future for the [`try_join4`] function.",null,null],[3,"TryJoin5","","Future for the [`try_join5`] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["tryselect"]]],[3,"TrySelect","","Future for the [`try_select()`] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having…",null,null],[13,"Left","","First branch of the type",5,null],[13,"Right","","Second branch of the type",5,null],[3,"OptionFuture","","A future representing a value which may or may not be…",null,null],[8,"FutureExt","","An extension trait for `Future`s that provides a variety…",null,null],[11,"map","","Map this future's output to a different type, returning a…",6,[[["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing…",6,[[["f"]],["then"]]],[11,"left_future","","Wrap this future in an `Either` future, making it the…",6,[[],["either"]]],[11,"right_future","","Wrap this future in an `Either` future, making it the…",6,[[],["either"]]],[11,"into_stream","","Convert this future into a single element stream.",6,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the output of…",6,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",6,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",6,[[],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it…",6,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",6,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",6,[[],["shared"]]],[11,"remote_handle","","Turn this future into a future that yields `()` on…",6,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",6,[[],[["pin",["box"]],["box",["future"]]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",6,[[],[["pin",["box"]],["box",["future"]]]]],[11,"unit_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",6,[[],["uniterror"]]],[11,"never_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",6,[[],["nevererror"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future…",6,[[["context"],["self"]],["poll"]]],[11,"now_or_never","","Evaluates and consumes the future, returning the resulting…",6,[[],["option"]]],[3,"FlattenStream","","Stream for the `flatten_stream` method.",null,null],[3,"Flatten","","Future for the `flatten` method.",null,null],[3,"Fuse","","Future for the `fuse` method.",null,null],[3,"Inspect","","Future for the `inspect` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"Map","","Future for the `map` method.",null,null],[3,"Then","","Future for the `then` method.",null,null],[3,"UnitError","","Future for the `unit_error` combinator.",null,null],[3,"NeverError","","Future for the `never_error` combinator.",null,null],[8,"TryFutureExt","","Adapters specific to [`Result`]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful…",7,[[],["flattensink"]]],[11,"map_ok","","Maps this future's success value to a different value.",7,[[["f"]],["mapok"]]],[11,"map_ok_or_else","","Maps this future's success value to a different value, and…",7,[[["f"],["e"]],["mapokorelse"]]],[11,"map_err","","Maps this future's error value to a different value.",7,[[["f"]],["maperr"]]],[11,"err_into","","Maps this future's `Error` to a new error type using the…",7,[[],["errinto"]]],[11,"and_then","","Executes another future after this one resolves…",7,[[["f"]],["andthen"]]],[11,"or_else","","Executes another future if this one resolves to an error.…",7,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of a future before…",7,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of a future before…",7,[[["f"]],["inspecterr"]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful…",7,[[],["tryflattenstream"]]],[11,"unwrap_or_else","","Unwraps this future's ouput, producing a future with this…",7,[[["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a [`TryFuture`] into a type that implements `Future`.",7,[[],["intofuture"]]],[11,"try_poll_unpin","","A convenience method for calling [`TryFuture::try_poll`]…",7,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[3,"AndThen","","Future for the `and_then` method.",null,null],[3,"ErrInto","","Future for the `err_into` method.",null,null],[3,"FlattenSink","","Sink for the `flatten_sink` method.",null,null],[3,"IntoFuture","","Future for the `into_future` method.",null,null],[3,"MapErr","","Future for the `map_err` method.",null,null],[3,"MapOk","","Future for the `map_ok` method.",null,null],[3,"OrElse","","Future for the `or_else` method.",null,null],[3,"InspectOk","","Future for the `inspect_ok` method.",null,null],[3,"InspectErr","","Future for the `inspect_err` method.",null,null],[3,"TryFlattenStream","","Stream for the `try_flatten_stream` method.",null,null],[3,"UnwrapOrElse","","Future for the `unwrap_or_else` method.",null,null],[5,"join_all","","Creates a future which represents a collection of the…",null,[[["i"]],["joinall"]]],[3,"JoinAll","","Future for the [`join_all`] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of…",null,[[["i"]],["selectall"]]],[3,"SelectAll","","Future for the [`select_all`] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of…",null,[[["i"]],["tryjoinall"]]],[3,"TryJoinAll","","Future for the [`try_join_all`] function.",null,null],[5,"select_ok","","Creates a new future which will select the first…",null,[[["i"]],["selectok"]]],[3,"SelectOk","","Future for the [`select_ok`] function.",null,null],[5,"abortable","","Creates a new `Abortable` future and a `AbortHandle` which…",null,[[["fut"]]]],[3,"Abortable","","A future which can be remotely short-circuited using an…",null,null],[3,"AbortHandle","","A handle to a `Abortable` future.",null,null],[3,"AbortRegistration","","A registration handle for a `Abortable` future. Values of…",null,null],[3,"Aborted","","Indicator that the `Abortable` future was aborted.",null,null],[3,"Remote","","A future which sends its output to the corresponding…",null,null],[3,"RemoteHandle","","The handle to a remote future returned by `remote_handle`.…",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` method.",null,null],[3,"Shared","","Future for the `shared` method.",null,null],[0,"io","futures","Asynchronous I/O.",null,null],[8,"AsyncRead","futures::io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_close","","Attempt to close the object.",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",10,[[["pin"],["seekfrom"],["context"],["self"]],[["poll",["result"]],["result",["u64","error"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",11,[[["pin"],["self"],["usize"]]]],[3,"Error","","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",12,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",12,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",12,null],[13,"ConnectionReset","","The connection was reset by the remote server.",12,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",12,null],[13,"NotConnected","","The network operation failed because it was not connected…",12,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",12,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",12,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",12,null],[13,"AlreadyExists","","An entity already exists, often a file.",12,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",12,null],[13,"InvalidInput","","A parameter was incorrect.",12,null],[13,"InvalidData","","Data not valid for the operation were encountered.",12,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",12,null],[13,"WriteZero","","An error returned when an operation could not be completed…",12,null],[13,"Interrupted","","This operation was interrupted.",12,null],[13,"Other","","Any I/O error not part of this list.",12,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",12,null],[3,"IoSlice","","A buffer type used with `Write::write_vectored`.",null,null],[3,"IoSliceMut","","A buffer type used with `Read::read_vectored`.",null,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O…",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",13,null],[13,"End","","Sets the offset to the size of this object plus the…",13,null],[13,"Current","","Sets the offset to the current position plus the specified…",13,null],[8,"AsyncReadExt","","An extension trait which adds utility methods to…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with…",14,[[["r"]],["chain"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in…",14,[[["self"]],["read"]]],[11,"read_vectored","","Creates a future which will read from the `AsyncRead` into…",14,[[["self"]],["readvectored"]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to…",14,[[["self"]],["readexact"]]],[11,"read_to_end","","Creates a future which will read all the bytes from this…",14,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Creates a future which will read all the bytes from this…",14,[[["self"],["string"]],["readtostring"]]],[11,"split","","Helper method for splitting this read/write object into…",14,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most…",14,[[["u64"]],["take"]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to…",null,null],[11,"flush","","Creates a future which will entirely flush this…",15,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this…",15,[[["self"]],["close"]]],[11,"write","","Creates a future which will write bytes from `buf` into…",15,[[["self"]],["write"]]],[11,"write_vectored","","Creates a future which will write bytes from `bufs` into…",15,[[["self"]],["writevectored"]]],[11,"write_all","","Write data into this object.",15,[[["self"]],["writeall"]]],[11,"into_sink","","Allow using an [`AsyncWrite`] as a `Sink``<Item:…",15,[[],["intosink"]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",16,[[["seekfrom"],["self"]],["seek"]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Creates a future which will read all the bytes associated…",17,[[["vec"],["self"],["u8"]],["readuntil"]]],[11,"read_line","","Creates a future which will read all the bytes associated…",17,[[["self"],["string"]],["readline"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",17,[[],["lines"]]],[3,"AllowStdIo","","A simple wrapper type which allows types which implement…",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Cursor","","A `Cursor` wraps an in-memory buffer and provides it with…",null,null],[3,"Chain","","Reader for the `chain` method.",null,null],[3,"Close","","Future for the `close` method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],["copy"]]],[3,"Copy","","Future for the [`copy()`] function.",null,null],[5,"copy_buf","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],["copybuf"]]],[3,"CopyBuf","","Future for the [`copy_buf()`] function.",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty"]]],[3,"Empty","","Reader for the [`empty()`] function.",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"IntoSink","","Sink for the `into_sink` method.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Read","","Future for the `read` method.",null,null],[3,"ReadExact","","Future for the `read_exact` method.",null,null],[3,"ReadHalf","","The readable half of an object returned from…",null,null],[3,"ReadLine","","Future for the `read_line` method.",null,null],[3,"ReadToEnd","","Future for the `read_to_end` method.",null,null],[3,"ReadToString","","Future for the `read_to_string` method.",null,null],[3,"ReadUntil","","Future for the `read_until` method.",null,null],[3,"ReadVectored","","Future for the `read_vectored` method.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats…",null,[[["u8"]],["repeat"]]],[3,"Repeat","","Reader for the [`repeat()`] function.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[5,"sink","","Creates an instance of a writer which will successfully…",null,[[],["sink"]]],[3,"Sink","","Writer for the [`sink()`] function.",null,null],[3,"Take","","Reader for the `take` method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the `write` method.",null,null],[3,"WriteAll","","Future for the `write_all` method.",null,null],[3,"WriteHalf","","The writable half of an object returned from…",null,null],[3,"WriteVectored","","Future for the `write_vectored` method.",null,null],[0,"lock","futures","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures::lock","An RAII guard returned by the `MutexGuard::map` and…",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been…",null,null],[3,"MutexGuard","","An RAII guard returned by the `lock` and `try_lock`…",null,null],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[8,"Future","futures::prelude","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value,…",0,[[["pin"],["self"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",1,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",18,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",18,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",18,[[["self"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",19,null],[16,"Error","","The type of failures yielded by this future",19,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",19,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",20,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",20,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_close","","Attempt to close the object.",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",10,[[["pin"],["seekfrom"],["context"],["self"]],[["poll",["result"]],["result",["u64","error"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",11,[[["pin"],["self"],["usize"]]]],[0,"sink","futures","Asynchronous sinks.",null,null],[8,"Sink","futures::sink","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",20,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",20,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[3,"Close","","Future for the `close` method.",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"Send","","Future for the `send` method.",null,null],[3,"SendAll","","Future for the `send_all` method.",null,null],[3,"SinkErrInto","","Sink for the `sink_err_into` method.",null,null],[3,"SinkMapErr","","Sink for the `sink_map_err` method.",null,null],[3,"With","","Sink for the `with` method.",null,null],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of…",null,null],[11,"with","","Composes a function in front of the sink.",21,[[["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",21,[[["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",21,[[["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the…",21,[[],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",21,[[["usize"]],["buffer"]]],[11,"close","","Close the sink.",21,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",21,[[["si"]],["fanout"]]],[11,"flush","","Flush the sink, processing all pending items.",21,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",21,[[["self"],["item"]],["send"]]],[11,"send_all","","A future that completes after the given stream has been…",21,[[["st"],["self"]],["sendall"]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the…",21,[[],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the…",21,[[],["either"]]],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",null,null],[3,"Drain","","Sink for the [`drain`] function.",null,null],[5,"drain","","Create a sink that will just discard all items given to it.",null,[[],["drain"]]],[3,"WithFlatMap","","Sink for the `with_flat_map` method.",null,null],[3,"Buffer","","Sink for the `buffer` method.",null,null],[0,"stream","futures","Asynchronous streams.",null,null],[8,"Stream","futures::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",18,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",18,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",18,[[["self"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",19,null],[16,"Error","","The type of failures yielded by this future",19,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",19,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns `true` if the stream should no longer be polled.",22,[[["self"]],["bool"]]],[6,"BoxStream","","An owned dynamically typed [`Stream`] for use in cases…",null,null],[6,"LocalBoxStream","","`BoxStream`, but without the `Send` requirement.",null,null],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iter"]]],[3,"Iter","","Stream for the [`iter`] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[["t"]],["repeat"]]],[3,"Repeat","","Stream for the [`repeat`] function.",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty"]]],[3,"Empty","","Stream for the [`empty`] function.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending"]]],[3,"Pending","","Stream for the [`pending()`] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[["fut"]],["once"]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning…",null,[[["f"]],["pollfn"]]],[3,"PollFn","","Stream for the [`poll_fn`] function.",null,null],[5,"select","","This function will attempt to pull items from both…",null,[[["st1"],["st2"]],["select"]]],[3,"Select","","Stream for the [`select()`] function.",null,null],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",null,[[["t"],["f"]],["unfold"]]],[3,"Unfold","","Stream for the [`unfold`] function.",null,null],[5,"try_unfold","","Creates a `TryStream` from a seed and a closure returning…",null,[[["t"],["f"]],["tryunfold"]]],[3,"TryUnfold","","Stream for the [`try_unfold`] function.",null,null],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Creates a future that resolves to the next item in the…",23,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a future of `(next_item,…",23,[[],["streamfuture"]]],[11,"map","","Maps this stream's items to a different type, returning a…",23,[[["f"]],["map"]]],[11,"enumerate","","Creates a stream which gives the current iteration count…",23,[[],["enumerate"]]],[11,"filter","","Filters the values produced by this stream according to…",23,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",23,[[["f"]],["filtermap"]]],[11,"then","","Computes from this stream's items new items of a different…",23,[[["f"]],["then"]]],[11,"collect","","Transforms a stream into a collection, returning a future…",23,[[],["collect"]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",23,[[],["concat"]]],[11,"fold","","Execute an accumulating asynchronous computation over a…",23,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",23,[[],["flatten"]]],[11,"scan","","Combinator similar to [`StreamExt::fold`] that holds…",23,[[["s"],["f"]],["scan"]]],[11,"skip_while","","Skip elements on this stream while the provided…",23,[[["f"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the provided…",23,[[["f"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",23,[[["f"]],["foreach"]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided…",23,[[["f"]],["foreachconcurrent"]]],[11,"take","","Creates a new stream of at most `n` items of the…",23,[[["usize"]],["take"]]],[11,"skip","","Creates a new stream which skips `n` items of the…",23,[[["usize"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be…",23,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",23,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",23,[[],["catchunwind"]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",23,[[],[["pin",["box"]],["box",["stream"]]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",23,[[],[["pin",["box"]],["box",["stream"]]]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",23,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",23,[[["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",23,[[["st"]],["zip"]]],[11,"chain","","Adapter for chaining two streams.",23,[[["st"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",23,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",23,[[["usize"]],["chunks"]]],[11,"forward","","A future that completes after the given stream has been…",23,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",23,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",23,[[["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the…",23,[[],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the…",23,[[],["either"]]],[11,"poll_next_unpin","","A convenience method for calling [`Stream::poll_next`] on…",23,[[["context"],["self"]],[["option"],["poll",["option"]]]]],[11,"select_next_some","","Returns a [`Future`] that resolves when the next item in…",23,[[["self"]],["selectnextsome"]]],[3,"Chain","","Stream for the `chain` method.",null,null],[3,"Collect","","Future for the `collect` method.",null,null],[3,"Concat","","Future for the `concat` method.",null,null],[3,"Enumerate","","Stream for the `enumerate` method.",null,null],[3,"Filter","","Stream for the `filter` method.",null,null],[3,"FilterMap","","Stream for the `filter_map` method.",null,null],[3,"Flatten","","Stream for the `flatten` method.",null,null],[3,"Fold","","Future for the `fold` method.",null,null],[3,"Forward","","Future for the `forward` method.",null,null],[3,"ForEach","","Future for the `for_each` method.",null,null],[3,"Fuse","","Stream for the `fuse` method.",null,null],[3,"StreamFuture","","Future for the `into_future` method.",null,null],[3,"Inspect","","Stream for the `inspect` method.",null,null],[3,"Map","","Stream for the `map` method.",null,null],[3,"Next","","Future for the `next` method.",null,null],[3,"SelectNextSome","","Future for the `select_next_some` method.",null,null],[3,"Peek","","Future for the `Peekable::peek()` function from [`Peekable`]",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Scan","","Stream for the `scan` method.",null,null],[3,"Skip","","Stream for the `skip` method.",null,null],[3,"SkipWhile","","Stream for the `skip_while` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"TakeWhile","","Stream for the `take_while` method.",null,null],[3,"Then","","Stream for the `then` method.",null,null],[3,"Zip","","Stream for the `zip` method.",null,null],[8,"TryStreamExt","","Adapters specific to `Result`-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts…",24,[[],["errinto"]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the…",24,[[["f"]],["mapok"]]],[11,"map_err","","Wraps the current stream in a new stream which maps the…",24,[[["f"]],["maperr"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",24,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",24,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of this stream,…",24,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of this stream,…",24,[[["f"]],["inspecterr"]]],[11,"into_stream","","Wraps a [`TryStream`] into a type that implements `Stream`",24,[[],["intostream"]]],[11,"try_next","","Creates a future that attempts to resolve the next item in…",24,[[["self"]],["trynext"]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the…",24,[[["f"]],["tryforeach"]]],[11,"try_skip_while","","Skip elements on this stream while the provided…",24,[[["f"]],["tryskipwhile"]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the…",24,[[["f"]],["tryforeachconcurrent"]]],[11,"try_collect","","Attempt to transform a stream into a collection, returning…",24,[[],["trycollect"]]],[11,"try_filter","","Attempt to filter the values produced by this stream…",24,[[["f"]],["tryfilter"]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",24,[[["f"]],["tryfiltermap"]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous…",24,[[],["tryflatten"]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous…",24,[[["t"],["f"]],["tryfold"]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",24,[[],["tryconcat"]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream…",24,[[["usize"]],["trybufferunordered"]]],[11,"try_poll_next_unpin","","A convenience method for calling…",24,[[["context"],["self"]],[["option",["result"]],["poll",["option"]]]]],[11,"into_async_read","","Adapter that converts this stream into an `AsyncRead`.",24,[[],["intoasyncread"]]],[3,"AndThen","","Stream for the `and_then` method.",null,null],[3,"ErrInto","","Stream for the `err_into` method.",null,null],[3,"MapOk","","Stream for the `map_ok` method.",null,null],[3,"MapErr","","Stream for the `map_err` method.",null,null],[3,"OrElse","","Stream for the `or_else` method.",null,null],[3,"InspectOk","","Stream for the `inspect_ok` method.",null,null],[3,"InspectErr","","Stream for the `inspect_err` method.",null,null],[3,"TryNext","","Future for the `try_next` method.",null,null],[3,"TryForEach","","Future for the `try_for_each` method.",null,null],[3,"TryFilter","","Stream for the `try_filter` method.",null,null],[3,"TryFilterMap","","Stream for the `try_filter_map` method.",null,null],[3,"TryFlatten","","Stream for the `try_flatten` method.",null,null],[3,"TryCollect","","Future for the `try_collect` method.",null,null],[3,"TryConcat","","Future for the `try_concat` method.",null,null],[3,"TryFold","","Future for the `try_fold` method.",null,null],[3,"TrySkipWhile","","Stream for the `try_skip_while` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"Chunks","","Stream for the `chunks` method.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered…",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","futures::stream","A set of futures which may complete in any order.",null,null],[3,"BufferUnordered","","Stream for the `buffer_unordered` method.",null,null],[3,"Buffered","","Stream for the `buffered` method.",null,null],[3,"ForEachConcurrent","","Future for the `for_each_concurrent` method.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",null,null],[12,"0","","",25,null],[12,"1","","",25,null],[5,"select_all","","Convert a list of streams into a `Stream` of results from…",null,[[["i"]],["selectall"]]],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` method.",null,null],[3,"TryBufferUnordered","","Stream for the `try_buffer_unordered` method.",null,null],[3,"TryForEachConcurrent","","Future for the `try_for_each_concurrent` method.",null,null],[3,"IntoAsyncRead","","Reader for the `into_async_read` method.",null,null],[0,"task","futures","Tools for working with tasks.",null,null],[3,"Context","futures::task","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",26,null],[13,"Pending","","Represents that a value is not ready yet.",26,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[8,"Spawn","","The `Spawn` trait allows for pushing futures onto an…",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",27,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",27,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[8,"LocalSpawn","","The `LocalSpawn` is similar to [`Spawn`], but allows…",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",28,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",28,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [`Waker`] which does nothing when `wake()` is…",null,[[],["waker"]]],[5,"noop_waker_ref","","Get a static reference to a [`Waker`] which does nothing…",null,[[],["waker"]]],[8,"SpawnExt","","Extension trait for `Spawn`.",null,null],[11,"spawn","","Spawns a task that polls the given future with output `()`…",29,[[["self"],["fut"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion…",29,[[["self"],["fut"]],[["spawnerror"],["result",["remotehandle","spawnerror"]],["remotehandle"]]]],[8,"LocalSpawnExt","","Extension trait for `LocalSpawn`.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output `()`…",30,[[["self"],["fut"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion…",30,[[["self"],["fut"]],[["spawnerror"],["result",["remotehandle","spawnerror"]],["remotehandle"]]]],[5,"waker","","Creates a [`Waker`] from an `Arc<impl ArcWake>`.",null,[[["arc"]],["waker"]]],[5,"waker_ref","","Creates a reference to a [`Waker`] from a reference to…",null,[[["arc"]],["wakerref"]]],[3,"WakerRef","","A [`Waker`] that is only valid for a given lifetime.",null,null],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make…",31,[[["arc"]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make…",31,[[["arc"]]]],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[0,"never","futures","This module contains the `Never` type.",null,null],[6,"Never","futures::never","A type with no possible values.",null,null],[14,"join","futures","Polls multiple futures simultaneously, returning a tuple…",null,null],[14,"try_join","","Polls multiple futures simultaneously, resolving to a…",null,null],[14,"select","","Polls multiple futures and streams simultaneously,…",null,null],[14,"select_biased","","Polls multiple futures and streams simultaneously,…",null,null],[11,"from","futures::channel::oneshot","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"try_poll","","",32,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","futures::channel::mpsc","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"try_poll_next","","",37,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"try_poll_next","","",38,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","futures::executor","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","futures::task","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"try_poll","","",49,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"try_poll","","",50,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures::future","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"try_poll","","",51,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"try_poll","","",52,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"try_poll","","",53,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"try_poll","","",54,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"try_poll","","",60,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"try_poll","","",61,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"try_poll","","",62,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"try_poll","","",63,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"try_poll","","",64,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"try_poll_next","","",66,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"try_poll","","",67,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"try_poll","","",68,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"try_poll","","",69,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"try_poll_next","","",70,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"try_poll","","",71,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"try_poll","","",72,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"try_poll","","",73,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"try_poll","","",74,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"try_poll","","",75,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"try_poll","","",76,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"try_poll_next","","",77,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"try_poll","","",78,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"try_poll","","",79,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"try_poll","","",80,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"try_poll","","",81,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"try_poll","","",82,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"try_poll","","",83,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"try_poll_next","","",84,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"try_poll","","",85,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"try_poll","","",88,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"try_poll","","",89,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"try_poll","","",90,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"try_poll","","",95,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"try_poll","","",96,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"try_poll","","",97,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures::io","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"try_poll","","",106,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"try_poll","","",107,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"try_poll","","",108,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"try_poll","","",110,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"try_poll_next","","",112,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"try_poll","","",113,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"try_poll","","",114,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"try_poll","","",116,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"try_poll","","",117,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"try_poll","","",118,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"try_poll","","",119,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"try_poll","","",120,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"try_poll","","",122,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"try_poll","","",126,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"try_poll","","",127,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"try_poll","","",129,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures::lock","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"from","","",131,[[],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","futures::sink","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"try_poll","","",134,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"try_poll","","",135,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"try_poll","","",136,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"try_poll","","",137,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"try_poll_next","","",138,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"try_poll_next","","",139,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"try_poll_next","","",140,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"try_poll_next","","",143,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"try_poll_next","","",144,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures::stream","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"try_poll_next","","",145,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"try_poll_next","","",146,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"try_poll_next","","",147,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"try_poll_next","","",148,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"try_poll_next","","",149,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"try_poll_next","","",150,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"try_poll_next","","",151,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"try_poll_next","","",152,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"try_poll_next","","",153,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"try_poll_next","","",154,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"try_poll","","",156,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"try_poll_next","","",158,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"try_poll_next","","",159,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"try_poll_next","","",160,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"try_poll","","",161,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"try_poll","","",162,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"try_poll_next","","",164,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"try_poll_next","","",166,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"try_poll_next","","",167,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"try_poll","","",169,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"try_poll_next","","",171,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"try_poll_next","","",172,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"try_poll_next","","",173,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"try_poll_next","","",174,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"try_poll_next","","",175,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"try_poll_next","","",176,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"try_poll_next","","",177,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"try_poll_next","","",179,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"try_poll_next","","",180,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"try_poll_next","","",181,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"try_poll_next","","",182,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"try_poll_next","","",183,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"try_poll_next","","",184,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"try_poll_next","","",185,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"try_poll","","",186,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"try_poll","","",187,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"try_poll_next","","",188,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"try_poll_next","","",189,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"try_poll_next","","",190,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"try_poll","","",191,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"try_poll","","",192,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"try_poll","","",193,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"try_poll_next","","",194,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"try_poll_next","","",195,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"try_poll_next","","",197,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"try_poll_next","","",198,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures::stream::futures_unordered","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"into_iter","","",199,[[],["i"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"into_iter","","",200,[[],["i"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"into_iter","","",201,[[],["i"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"into_iter","","",202,[[],["i"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","futures::stream","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"try_poll_next","","",203,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"try_poll_next","","",204,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"try_poll_next","","",206,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"try_poll_next","","",208,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"try_poll_next","","",209,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"try_poll_next","","",210,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"try_poll","","",211,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"from","futures::task","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"from","","",26,[[],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_string","","",217,[[["self"]],["string"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"cmp","futures::io","",12,[[["errorkind"],["self"]],["ordering"]]],[11,"deref_mut","","",100,[[["self"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"deref","","",99,[[["self"]]]],[11,"deref","","",100,[[["self"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",98,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",98,[[["nulerror"]],["error"]]],[11,"from","","",98,[[["intoinnererror"]],["error"]]],[11,"description","","",98,[[["self"]],["str"]]],[11,"cause","","",98,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",98,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",13,[[["self"]],["seekfrom"]]],[11,"clone","","",12,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",12,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",13,[[["seekfrom"],["self"]],["bool"]]],[11,"ne","","",13,[[["seekfrom"],["self"]],["bool"]]],[11,"eq","","",12,[[["errorkind"],["self"]],["bool"]]],[11,"clone","futures::task","",214,[[["self"]],["waker"]]],[11,"clone","","",216,[[["self"]],["rawwakervtable"]]],[11,"clone","","",26,[[["self"]],["poll"]]],[11,"drop","","",214,[[["self"]]]],[11,"eq","","",216,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",216,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",215,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",215,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",26,[[["poll"],["self"]],["bool"]]],[11,"ne","","",26,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",215,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",216,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",213,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",214,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",26,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"from","","",26,[[["t"]],["poll"]]],[11,"partial_cmp","","",26,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",26,[[["poll"],["self"]],["bool"]]],[11,"le","","",26,[[["poll"],["self"]],["bool"]]],[11,"gt","","",26,[[["poll"],["self"]],["bool"]]],[11,"ge","","",26,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",26,[[],["result"]]],[11,"from_error","","",26,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",26,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",26,[[],["result"]]],[11,"from_error","","",26,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",26,[[],[["result"],["poll",["result"]]]]],[11,"default","","",219,[[],["atomicwaker"]]],[11,"fmt","","",219,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"seek","futures::io","",101,[[["seekfrom"],["self"]],[["error"],["u64"],["result",["u64","error"]]]]],[11,"poll_seek","futures::future","",5,[[["seekfrom"],["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","futures::io","Seek to an offset, in bytes, in the underlying reader.",102,[[["pin",["bufreader"]],["seekfrom"],["context"],["bufreader"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","","",104,[[["seekfrom"],["pin",["cursor"]],["cursor"],["context"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",103,[[["seekfrom"],["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","","",101,[[["seekfrom"],["allowstdio"],["pin",["allowstdio"]],["context"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"partial_cmp","","",101,[[["self"],["allowstdio"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",101,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",101,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",101,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",101,[[["self"],["allowstdio"]],["bool"]]],[11,"as_mut","","",125,[[["self"]]]],[11,"next","futures::stream::futures_unordered","",202,[[["self"]],[["pin"],["option",["pin"]]]]],[11,"size_hint","","",202,[[["self"]]]],[11,"next","","",200,[[["self"]],[["fut"],["option"]]]],[11,"size_hint","","",200,[[["self"]]]],[11,"next","","",199,[[["self"]],[["fut"],["option"]]]],[11,"size_hint","","",199,[[["self"]]]],[11,"next","","",201,[[["self"]],[["pin"],["option",["pin"]]]]],[11,"size_hint","","",201,[[["self"]]]],[11,"fmt","futures::future","",93,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","futures::future","",83,[[["context"],["pin",["inspecterr"]],["inspecterr"]],["poll"]]],[11,"poll","futures::stream","",170,[[["context"],["peek"],["pin",["peek"]]],["poll"]]],[11,"poll","futures::future","",52,[[["context"],["pending"],["pin",["pending"]]],["poll"]]],[11,"poll","futures::sink","",134,[[["context"],["pin",["close"]],["close"]],["poll"]]],[11,"poll","futures::stream","",193,[[["context"],["tryfold"],["pin",["tryfold"]]],["poll"]]],[11,"poll","futures::io","",120,[[["pin",["readvectored"]],["context"],["readvectored"]],["poll"]]],[11,"poll","futures::stream","",168,[[["next"],["context"],["pin",["next"]]],["poll"]]],[11,"poll","futures::future","",62,[[["context"],["pin",["tryjoin4"]],["tryjoin4"]],["poll"]]],[11,"poll","","",82,[[["context"],["inspectok"],["pin",["inspectok"]]],["poll"]]],[11,"poll","futures::stream","",205,[[["pin",["foreachconcurrent"]],["context"],["foreachconcurrent"]],["poll"]]],[11,"poll","futures::io","",106,[[["context"],["close"],["pin",["close"]]],["poll"]]],[11,"poll","futures::future","",55,[[["context"],["pin",["join"]],["join"]],["poll"]]],[11,"poll","futures::io","",118,[[["context"],["pin",["readtostring"]],["readtostring"]],["poll"]]],[11,"poll","futures::future","",74,[[["pin",["nevererror"]],["context"],["nevererror"]],["poll"]]],[11,"poll","","",58,[[["pin",["join5"]],["join5"],["context"]],["poll"]]],[11,"poll","futures::stream","",165,[[["streamfuture"],["context"],["pin",["streamfuture"]]],["poll"]]],[11,"poll","futures::io","",117,[[["readtoend"],["pin",["readtoend"]],["context"]],["poll"]]],[11,"poll","futures::future","",53,[[["context"],["pin",["pollfn"]],["pollfn"]],["poll"]]],[11,"poll","futures::sink","",137,[[["pin",["sendall"]],["sendall"],["context"]],["poll"]]],[11,"poll","futures::io","",127,[[["writeall"],["pin",["writeall"]],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll","futures::stream","",211,[[["pin",["tryforeachconcurrent"]],["tryforeachconcurrent"],["context"]],["poll"]]],[11,"poll","futures::future","",63,[[["tryjoin5"],["pin",["tryjoin5"]],["context"]],["poll"]]],[11,"poll","","",72,[[["context"],["then"],["pin",["then"]]],["poll"]]],[11,"poll","futures::io","",110,[[["context"],["pin",["flush"]],["flush"]],["poll"]]],[11,"poll","futures::future","",96,[[["catchunwind"],["context"],["pin",["catchunwind"]]],["poll"]]],[11,"poll","","",87,[[["context"],["selectall"],["pin",["selectall"]]],["poll"]]],[11,"poll","","",57,[[["context"],["join4"],["pin",["join4"]]],["poll"]]],[11,"poll","","",78,[[["pin",["intofuture"]],["intofuture"],["context"]],["poll"]]],[11,"poll","","",89,[[["selectok"],["pin",["selectok"]],["context"]],["poll"]]],[11,"poll","","",59,[[["select"],["context"],["pin",["select"]]],["poll"]]],[11,"poll","","",75,[[["context"],["pin",["andthen"]],["andthen"]],["poll"]]],[11,"poll","","",86,[[["context"],["pin",["joinall"]],["joinall"]],["poll"]]],[11,"poll","","",94,[[["context"],["pin",["remote"]],["remote"]],["poll"]]],[11,"poll","","",51,[[["lazy"],["context"],["pin",["lazy"]]],["poll"]]],[11,"poll","","",81,[[["context"],["pin",["orelse"]],["orelse"]],["poll"]]],[11,"poll","futures::io","",129,[[["pin",["writevectored"]],["writevectored"],["context"]],["poll"]]],[11,"poll","futures::stream","",163,[[["context"],["pin",["foreach"]],["foreach"]],["poll"]]],[11,"poll","futures::io","",119,[[["pin",["readuntil"]],["context"],["readuntil"]],["poll"]]],[11,"poll","futures::future","",67,[[["pin",["flatten"]],["context"],["flatten"]],["poll"]]],[11,"poll","futures::io","",107,[[["context"],["pin",["copy"]],["copy"]],["poll"]]],[11,"poll","futures::future","",71,[[["map"],["pin",["map"]],["context"]],["poll"]]],[11,"poll","futures::io","",114,[[["context"],["readexact"],["pin",["readexact"]]],["poll"]]],[11,"poll","futures::sink","",136,[[["pin",["send"]],["send"],["context"]],["poll"]]],[11,"poll","futures::stream","",192,[[["tryconcat"],["pin",["tryconcat"]],["context"]],["poll"]]],[11,"poll","futures::future","",5,[[["context"],["pin",["either"]],["either"]],["poll"]]],[11,"poll","","",64,[[["tryselect"],["context"],["pin",["tryselect"]]],["poll"]]],[11,"poll","futures::stream","",156,[[["pin",["concat"]],["concat"],["context"]],["poll"]]],[11,"poll","futures::future","",76,[[["pin",["errinto"]],["context"],["errinto"]],["poll"]]],[11,"poll","futures::stream","",162,[[["context"],["pin",["forward"]],["forward"]],["poll"]]],[11,"poll","futures::io","",126,[[["context"],["pin",["write"]],["write"]],["poll"]]],[11,"poll","futures::stream","",191,[[["context"],["pin",["trycollect"]],["trycollect"]],["poll"]]],[11,"poll","futures::lock","",132,[[["mutexlockfuture"],["context"],["pin",["mutexlockfuture"]]],["poll"]]],[11,"poll","futures::future","",95,[[["context"],["pin",["remotehandle"]],["remotehandle"]],["poll"]]],[11,"poll","","",65,[[["optionfuture"],["context"],["pin",["optionfuture"]]],["poll"]]],[11,"poll","","",54,[[["context"],["ready"],["pin",["ready"]]],["poll"]]],[11,"poll","futures::io","",116,[[["context"],["readline"],["pin",["readline"]]],["poll"]]],[11,"poll","futures::stream","",186,[[["context"],["trynext"],["pin",["trynext"]]],["poll"]]],[11,"poll","futures::io","",108,[[["context"],["copybuf"],["pin",["copybuf"]]],["poll"]]],[11,"poll","futures::future","",68,[[["context"],["pin",["fuse"]],["fuse"]],["poll"]]],[11,"poll","","",61,[[["tryjoin3"],["context"],["pin",["tryjoin3"]]],["poll"]]],[11,"poll","","",56,[[["context"],["join3"],["pin",["join3"]]],["poll"]]],[11,"poll","futures::sink","",135,[[["context"],["pin",["flush"]],["flush"]],["poll"]]],[11,"poll","futures::future","",80,[[["pin",["mapok"]],["context"],["mapok"]],["poll"]]],[11,"poll","futures::stream","",187,[[["pin",["tryforeach"]],["context"],["tryforeach"]],["poll"]]],[11,"poll","futures::future","",97,[[["context"],["shared"],["pin",["shared"]]],["poll"]]],[11,"poll","","",69,[[["inspect"],["context"],["pin",["inspect"]]],["poll"]]],[11,"poll","","",85,[[["pin",["unwraporelse"]],["context"],["unwraporelse"]],["poll"]]],[11,"poll","futures::stream","",161,[[["context"],["fold"],["pin",["fold"]]],["poll"]]],[11,"poll","futures::io","",113,[[["read"],["context"],["pin",["read"]]],["poll"]]],[11,"poll","futures::stream","",155,[[["context"],["pin",["collect"]],["collect"]],["poll"]]],[11,"poll","futures::future","",4,[[["maybedone"],["pin",["maybedone"]],["context"]],["poll"]]],[11,"poll","","",73,[[["context"],["pin",["uniterror"]],["uniterror"]],[["poll",["result"]],["result"]]]],[11,"poll","futures::stream","",169,[[["context"],["pin",["selectnextsome"]],["selectnextsome"]],["poll"]]],[11,"poll","futures::future","",88,[[["context"],["tryjoinall"],["pin",["tryjoinall"]]],["poll"]]],[11,"poll","","",60,[[["context"],["pin",["tryjoin"]],["tryjoin"]],["poll"]]],[11,"poll","","",90,[[["context"],["abortable"],["pin",["abortable"]]],["poll"]]],[11,"poll","","",79,[[["maperr"],["context"],["pin",["maperr"]]],["poll"]]],[11,"poll","futures::io","",122,[[["pin",["seek"]],["context"],["seek"]],["poll"]]],[11,"drop","futures::lock","",133,[[["self"]]]],[11,"drop","futures::stream","",198,[[["self"]]]],[11,"drop","futures::lock","",130,[[["self"]]]],[11,"drop","","",132,[[["self"]]]],[11,"drop","futures::future","",97,[[["self"]]]],[11,"is_terminated","","",52,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",155,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",73,[[["self"]],["bool"]]],[11,"is_terminated","","",81,[[["self"]],["bool"]]],[11,"is_terminated","","",51,[[["self"]],["bool"]]],[11,"is_terminated","","",57,[[["self"]],["bool"]]],[11,"is_terminated","","",55,[[["self"]],["bool"]]],[11,"is_terminated","futures::lock","",132,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",211,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",78,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",170,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",59,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",163,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",58,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",162,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",67,[[["self"]],["bool"]]],[11,"is_terminated","","",75,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",156,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",82,[[["self"]],["bool"]]],[11,"is_terminated","","",76,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",169,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",56,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",168,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",68,[[["self"]],["bool"]]],[11,"is_terminated","","",74,[[["self"]],["bool"]]],[11,"is_terminated","","",71,[[["self"]],["bool"]]],[11,"is_terminated","","",4,[[["self"]],["bool"]]],[11,"is_terminated","","",79,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",191,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",69,[[["self"]],["bool"]]],[11,"is_terminated","","",72,[[["self"]],["bool"]]],[11,"is_terminated","","",54,[[["self"]],["bool"]]],[11,"is_terminated","","",65,[[["self"]],["bool"]]],[11,"is_terminated","","",83,[[["self"]],["bool"]]],[11,"is_terminated","","",97,[[["self"]],["bool"]]],[11,"is_terminated","","",80,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",161,[[["self"]],["bool"]]],[11,"is_terminated","","",193,[[["self"]],["bool"]]],[11,"is_terminated","","",165,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",85,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",186,[[["self"]],["bool"]]],[11,"is_terminated","","",205,[[["self"]],["bool"]]],[11,"deref_mut","futures::lock","",130,[[["self"]],["u"]]],[11,"deref_mut","","",133,[[["self"]],["t"]]],[11,"eq","futures::future","",93,[[["aborted"],["self"]],["bool"]]],[11,"eq","futures::io","",101,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",101,[[["self"],["allowstdio"]],["bool"]]],[11,"cmp","","",101,[[["self"],["allowstdio"]],["ordering"]]],[11,"fill_buf","","",101,[[["self"]],[["error"],["result",["error"]]]]],[11,"consume","","",101,[[["self"],["usize"]]]],[11,"spawn_obj","futures::stream","",198,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"read","futures::io","",101,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_vectored","","",101,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_to_end","","",101,[[["self"],["vec"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_to_string","","",101,[[["string"],["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_exact","","",101,[[["self"]],[["error"],["result",["error"]]]]],[11,"clone","futures::future","",90,[[["self"]],["abortable"]]],[11,"clone","","",91,[[["self"]],["aborthandle"]]],[11,"clone","futures::sink","",139,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::future","",5,[[["self"]],["either"]]],[11,"clone","futures::io","",101,[[["self"]],["allowstdio"]]],[11,"clone","futures::future","",54,[[["self"]],["ready"]]],[11,"clone","","",97,[[["self"]],["shared"]]],[11,"clone","futures::io","",104,[[["self"]],["cursor"]]],[11,"clone","futures::future","",52,[[["self"]],["pending"]]],[11,"clone","","",65,[[["self"]],["optionfuture"]]],[11,"clone","","",93,[[["self"]],["aborted"]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",84,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",123,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",142,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",137,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",94,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",178,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",122,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",78,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",112,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",97,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",198,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",70,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",187,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",80,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",188,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",179,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",83,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",185,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",91,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",181,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",59,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",121,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",189,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",190,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",135,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",195,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",132,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",174,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",118,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",211,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",95,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",168,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",128,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",143,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",175,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",183,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",68,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",126,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",148,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",146,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",147,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",69,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",155,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",93,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",160,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",76,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",184,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",81,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",104,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",138,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",208,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",149,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",212,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",145,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",202,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",172,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",180,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",105,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",171,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",72,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",194,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",63,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",124,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",162,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",151,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",154,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",169,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",127,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",200,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",129,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",207,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",197,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",111,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",157,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",204,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",114,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",140,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",87,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",139,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",165,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",152,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",57,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",173,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",113,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",161,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",164,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",66,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",186,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",125,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",106,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",201,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",90,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",199,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",67,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",167,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",141,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",150,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",133,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",77,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",117,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",206,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",75,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",120,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",182,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",193,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",153,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",79,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",130,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",209,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",163,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",108,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",136,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",210,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",156,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",73,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",131,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",203,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",116,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",196,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",191,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",107,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",109,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",144,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",119,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",166,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",159,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",88,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",115,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",158,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",192,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",64,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",134,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",110,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_read","futures::stream","",212,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","futures::io","",102,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",102,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",109,[[["context"],["pin",["empty"]],["empty"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",121,[[["repeat"],["context"],["pin",["repeat"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",121,[[["repeat"],["context"],["pin",["repeat"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",105,[[["pin",["chain"]],["chain"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",105,[[["pin",["chain"]],["chain"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",101,[[["allowstdio"],["pin",["allowstdio"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",101,[[["allowstdio"],["pin",["allowstdio"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",124,[[["pin",["take"]],["take"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",104,[[["pin",["cursor"]],["cursor"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",104,[[["pin",["cursor"]],["cursor"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",115,[[["pin",["readhalf"]],["context"],["readhalf"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",115,[[["pin",["readhalf"]],["context"],["readhalf"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","futures::future","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_ready","","",5,[[["context"],["pin",["either"]],["either"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",5,[[["item"],["pin",["either"]],["either"]],["result"]]],[11,"poll_flush","","",5,[[["context"],["pin",["either"]],["either"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",5,[[["context"],["pin",["either"]],["either"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",159,[[["context"],["pin",["filtermap"]],["filtermap"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",159,[[["pin",["filtermap"]],["item"],["filtermap"]],["result"]]],[11,"poll_flush","","",159,[[["context"],["pin",["filtermap"]],["filtermap"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",159,[[["context"],["pin",["filtermap"]],["filtermap"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",195,[[["context"],["intostream"],["pin",["intostream"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",195,[[["intostream"],["item"],["pin",["intostream"]]],["result"]]],[11,"poll_flush","","",195,[[["context"],["intostream"],["pin",["intostream"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",195,[[["context"],["intostream"],["pin",["intostream"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",171,[[["context"],["pin",["peekable"]],["peekable"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",171,[[["item"],["pin",["peekable"]],["peekable"]],["result"]]],[11,"poll_flush","","",171,[[["context"],["pin",["peekable"]],["peekable"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",171,[[["context"],["pin",["peekable"]],["peekable"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",160,[[["context"],["flatten"],["pin",["flatten"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",160,[[["flatten"],["pin",["flatten"]],["item"]],["result"]]],[11,"poll_flush","","",160,[[["context"],["flatten"],["pin",["flatten"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",160,[[["context"],["flatten"],["pin",["flatten"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::sink","",141,[[["context"],["pin",["fanout"]],["fanout"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",141,[[["item"],["pin",["fanout"]],["fanout"]],["result"]]],[11,"poll_flush","","",141,[[["context"],["pin",["fanout"]],["fanout"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",141,[[["context"],["pin",["fanout"]],["fanout"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",158,[[["context"],["pin",["filter"]],["filter"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",158,[[["pin",["filter"]],["filter"],["item"]],["result"]]],[11,"poll_flush","","",158,[[["context"],["pin",["filter"]],["filter"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",158,[[["context"],["pin",["filter"]],["filter"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",179,[[["context"],["andthen"],["pin",["andthen"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",179,[[["andthen"],["pin",["andthen"]],["item"]],["result"]]],[11,"poll_flush","","",179,[[["context"],["andthen"],["pin",["andthen"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",179,[[["context"],["andthen"],["pin",["andthen"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::sink","",139,[[["sinkmaperr"],["context"],["pin",["sinkmaperr"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",139,[[["sinkmaperr"],["item"],["pin",["sinkmaperr"]]],["result"]]],[11,"poll_flush","","",139,[[["sinkmaperr"],["context"],["pin",["sinkmaperr"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",139,[[["sinkmaperr"],["context"],["pin",["sinkmaperr"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",183,[[["pin",["orelse"]],["orelse"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",183,[[["pin",["orelse"]],["orelse"],["item"]],["result"]]],[11,"poll_flush","","",183,[[["pin",["orelse"]],["orelse"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",183,[[["pin",["orelse"]],["orelse"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",166,[[["context"],["pin",["inspect"]],["inspect"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",166,[[["item"],["pin",["inspect"]],["inspect"]],["result"]]],[11,"poll_flush","","",166,[[["context"],["pin",["inspect"]],["inspect"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",166,[[["context"],["pin",["inspect"]],["inspect"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",210,[[["context"],["pin",["trybufferunordered"]],["trybufferunordered"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",210,[[["item"],["pin",["trybufferunordered"]],["trybufferunordered"]],["result"]]],[11,"poll_flush","","",210,[[["context"],["pin",["trybufferunordered"]],["trybufferunordered"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",210,[[["context"],["pin",["trybufferunordered"]],["trybufferunordered"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",176,[[["context"],["pin",["takewhile"]],["takewhile"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",176,[[["pin",["takewhile"]],["item"],["takewhile"]],["result"]]],[11,"poll_flush","","",176,[[["context"],["pin",["takewhile"]],["takewhile"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",176,[[["context"],["pin",["takewhile"]],["takewhile"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::future","",84,[[["context"],["tryflattenstream"],["pin",["tryflattenstream"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",84,[[["tryflattenstream"],["item"],["pin",["tryflattenstream"]]],["result"]]],[11,"poll_flush","","",84,[[["context"],["tryflattenstream"],["pin",["tryflattenstream"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",84,[[["context"],["tryflattenstream"],["pin",["tryflattenstream"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",164,[[["context"],["pin",["fuse"]],["fuse"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",164,[[["pin",["fuse"]],["fuse"],["item"]],["result"]]],[11,"poll_flush","","",164,[[["context"],["pin",["fuse"]],["fuse"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",164,[[["context"],["pin",["fuse"]],["fuse"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",203,[[["context"],["bufferunordered"],["pin",["bufferunordered"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",203,[[["bufferunordered"],["pin",["bufferunordered"]],["item"]],["result"]]],[11,"poll_flush","","",203,[[["context"],["bufferunordered"],["pin",["bufferunordered"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",203,[[["context"],["bufferunordered"],["pin",["bufferunordered"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",181,[[["context"],["mapok"],["pin",["mapok"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",181,[[["item"],["mapok"],["pin",["mapok"]]],["result"]]],[11,"poll_flush","","",181,[[["context"],["mapok"],["pin",["mapok"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",181,[[["context"],["mapok"],["pin",["mapok"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::sink","",142,[[["context"],["drain"],["pin",["drain"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",142,[[["drain"],["t"],["pin",["drain"]]],["result"]]],[11,"poll_flush","","",142,[[["context"],["drain"],["pin",["drain"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",142,[[["context"],["drain"],["pin",["drain"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",177,[[["pin",["then"]],["context"],["then"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",177,[[["pin",["then"]],["item"],["then"]],["result"]]],[11,"poll_flush","","",177,[[["pin",["then"]],["context"],["then"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",177,[[["pin",["then"]],["context"],["then"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",157,[[["pin",["enumerate"]],["enumerate"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",157,[[["pin",["enumerate"]],["enumerate"],["item"]],["result"]]],[11,"poll_flush","","",157,[[["pin",["enumerate"]],["enumerate"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",157,[[["pin",["enumerate"]],["enumerate"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::sink","",144,[[["pin",["buffer"]],["context"],["buffer"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",144,[[["pin",["buffer"]],["item"],["buffer"]],["result"]]],[11,"poll_flush","","",144,[[["pin",["buffer"]],["context"],["buffer"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",144,[[["pin",["buffer"]],["context"],["buffer"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",140,[[["with"],["context"],["pin",["with"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",140,[[["with"],["u"],["pin",["with"]]],["result"]]],[11,"poll_flush","","",140,[[["with"],["context"],["pin",["with"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",140,[[["with"],["context"],["pin",["with"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",180,[[["errinto"],["pin",["errinto"]],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",180,[[["errinto"],["pin",["errinto"]],["item"]],["result"]]],[11,"poll_flush","","",180,[[["errinto"],["pin",["errinto"]],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",180,[[["errinto"],["pin",["errinto"]],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::sink","",138,[[["context"],["pin",["sinkerrinto"]],["sinkerrinto"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",138,[[["item"],["pin",["sinkerrinto"]],["sinkerrinto"]],["result"]]],[11,"poll_flush","","",138,[[["context"],["pin",["sinkerrinto"]],["sinkerrinto"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",138,[[["context"],["pin",["sinkerrinto"]],["sinkerrinto"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",174,[[["skipwhile"],["context"],["pin",["skipwhile"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",174,[[["skipwhile"],["item"],["pin",["skipwhile"]]],["result"]]],[11,"poll_flush","","",174,[[["skipwhile"],["context"],["pin",["skipwhile"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",174,[[["skipwhile"],["context"],["pin",["skipwhile"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",189,[[["pin",["tryfiltermap"]],["tryfiltermap"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",189,[[["pin",["tryfiltermap"]],["tryfiltermap"],["item"]],["result"]]],[11,"poll_flush","","",189,[[["pin",["tryfiltermap"]],["tryfiltermap"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",189,[[["pin",["tryfiltermap"]],["tryfiltermap"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::io","",111,[[["intosink"],["context"],["pin",["intosink"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",111,[[["intosink"],["item"],["pin",["intosink"]]],["result"]]],[11,"poll_flush","","",111,[[["intosink"],["context"],["pin",["intosink"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",111,[[["intosink"],["context"],["pin",["intosink"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",207,[[["splitsink"],["pin",["splitsink"]],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",207,[[["splitsink"],["pin",["splitsink"]],["item"]],["result"]]],[11,"poll_flush","","",207,[[["splitsink"],["pin",["splitsink"]],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",207,[[["splitsink"],["pin",["splitsink"]],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::future","",77,[[["context"],["flattensink"],["pin",["flattensink"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",77,[[["flattensink"],["pin",["flattensink"]],["item"]],["result"]]],[11,"poll_flush","","",77,[[["context"],["flattensink"],["pin",["flattensink"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",77,[[["context"],["flattensink"],["pin",["flattensink"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",167,[[["context"],["pin",["map"]],["map"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",167,[[["item"],["pin",["map"]],["map"]],["result"]]],[11,"poll_flush","","",167,[[["context"],["pin",["map"]],["map"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",167,[[["context"],["pin",["map"]],["map"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",190,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",190,[[["pin",["tryflatten"]],["item"],["tryflatten"]],["result"]]],[11,"poll_flush","","",190,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",190,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",188,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",188,[[["tryfilter"],["item"],["pin",["tryfilter"]]],["result"]]],[11,"poll_flush","","",188,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",188,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",204,[[["pin",["buffered"]],["context"],["buffered"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",204,[[["pin",["buffered"]],["item"],["buffered"]],["result"]]],[11,"poll_flush","","",204,[[["pin",["buffered"]],["context"],["buffered"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",204,[[["pin",["buffered"]],["context"],["buffered"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",185,[[["context"],["inspecterr"],["pin",["inspecterr"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",185,[[["inspecterr"],["pin",["inspecterr"]],["item"]],["result"]]],[11,"poll_flush","","",185,[[["context"],["inspecterr"],["pin",["inspecterr"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",185,[[["context"],["inspecterr"],["pin",["inspecterr"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::sink","",143,[[["context"],["withflatmap"],["pin",["withflatmap"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",143,[[["u"],["withflatmap"],["pin",["withflatmap"]]],["result"]]],[11,"poll_flush","","",143,[[["context"],["withflatmap"],["pin",["withflatmap"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",143,[[["context"],["withflatmap"],["pin",["withflatmap"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",196,[[["context"],["chunks"],["pin",["chunks"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",196,[[["chunks"],["item"],["pin",["chunks"]]],["result"]]],[11,"poll_flush","","",196,[[["context"],["chunks"],["pin",["chunks"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",196,[[["context"],["chunks"],["pin",["chunks"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",194,[[["context"],["pin",["tryskipwhile"]],["tryskipwhile"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",194,[[["item"],["pin",["tryskipwhile"]],["tryskipwhile"]],["result"]]],[11,"poll_flush","","",194,[[["context"],["pin",["tryskipwhile"]],["tryskipwhile"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",194,[[["context"],["pin",["tryskipwhile"]],["tryskipwhile"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",184,[[["pin",["inspectok"]],["inspectok"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",184,[[["pin",["inspectok"]],["inspectok"],["item"]],["result"]]],[11,"poll_flush","","",184,[[["pin",["inspectok"]],["inspectok"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",184,[[["pin",["inspectok"]],["inspectok"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",182,[[["pin",["maperr"]],["maperr"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",182,[[["pin",["maperr"]],["maperr"],["item"]],["result"]]],[11,"poll_flush","","",182,[[["pin",["maperr"]],["maperr"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",182,[[["pin",["maperr"]],["maperr"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",172,[[["context"],["pin",["scan"]],["scan"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",172,[[["pin",["scan"]],["item"],["scan"]],["result"]]],[11,"poll_flush","","",172,[[["context"],["pin",["scan"]],["scan"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",172,[[["context"],["pin",["scan"]],["scan"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",173,[[["pin",["skip"]],["context"],["skip"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",173,[[["pin",["skip"]],["item"],["skip"]],["result"]]],[11,"poll_flush","","",173,[[["pin",["skip"]],["context"],["skip"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",173,[[["pin",["skip"]],["context"],["skip"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",175,[[["context"],["pin",["take"]],["take"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",175,[[["pin",["take"]],["item"],["take"]],["result"]]],[11,"poll_flush","","",175,[[["context"],["pin",["take"]],["take"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",175,[[["context"],["pin",["take"]],["take"]],[["poll",["result"]],["result"]]]],[11,"poll_write","futures::io","",101,[[["allowstdio"],["pin",["allowstdio"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",101,[[["allowstdio"],["pin",["allowstdio"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",101,[[["pin",["allowstdio"]],["context"],["allowstdio"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",101,[[["pin",["allowstdio"]],["context"],["allowstdio"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::future","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",5,[[["context"],["pin",["either"]],["either"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",5,[[["context"],["pin",["either"]],["either"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::io","",104,[[["pin",["cursor"]],["cursor"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",104,[[["pin",["cursor"]],["cursor"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",104,[[["context"],["pin",["cursor"]],["cursor"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",104,[[["context"],["pin",["cursor"]],["cursor"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",123,[[["pin",["sink"]],["sink"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",123,[[["pin",["sink"]],["sink"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",123,[[["pin",["sink"]],["sink"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",123,[[["pin",["sink"]],["sink"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::stream","",212,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",212,[[["context"],["pin",["intoasyncread"]],["intoasyncread"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",212,[[["context"],["pin",["intoasyncread"]],["intoasyncread"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::io","",128,[[["pin",["writehalf"]],["writehalf"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",128,[[["pin",["writehalf"]],["writehalf"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",128,[[["context"],["pin",["writehalf"]],["writehalf"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",128,[[["context"],["pin",["writehalf"]],["writehalf"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",102,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",102,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",102,[[["pin",["bufreader"]],["bufreader"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",102,[[["pin",["bufreader"]],["bufreader"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",104,[[["pin",["cursor"]],["context"],["cursor"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",104,[[["pin",["cursor"]],["context"],["cursor"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",104,[[["context"],["pin",["cursor"]],["cursor"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",104,[[["context"],["pin",["cursor"]],["cursor"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",104,[[["cursor"],["pin",["cursor"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",104,[[["cursor"],["pin",["cursor"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",104,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",104,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",104,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",104,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",104,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",104,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_next","futures::sink","",138,[[["context"],["sinkerrinto"],["pin",["sinkerrinto"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",138,[[["self"]]]],[11,"poll_next","futures::stream","",188,[[["pin",["tryfilter"]],["context"],["tryfilter"]],[["option",["result"]],["poll",["option"]]]]],[11,"size_hint","","",188,[[["self"]]]],[11,"poll_next","futures::future","",5,[[["context"],["pin",["either"]],["either"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",204,[[["context"],["pin",["buffered"]],["buffered"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",204,[[["self"]]]],[11,"poll_next","","",153,[[["context"],["tryunfold"],["pin",["tryunfold"]]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_next","","",181,[[["pin",["mapok"]],["context"],["mapok"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",181,[[["self"]]]],[11,"poll_next","","",146,[[["context"],["pin",["repeat"]],["repeat"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",146,[[["self"]]]],[11,"poll_next","","",209,[[["pin",["catchunwind"]],["context"],["catchunwind"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",209,[[["self"]]]],[11,"poll_next","","",164,[[["context"],["pin",["fuse"]],["fuse"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",164,[[["self"]]]],[11,"poll_next","futures::sink","",140,[[["context"],["with"],["pin",["with"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",140,[[["self"]]]],[11,"poll_next","futures::stream","",182,[[["pin",["maperr"]],["context"],["maperr"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",182,[[["self"]]]],[11,"poll_next","","",173,[[["context"],["pin",["skip"]],["skip"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",173,[[["self"]]]],[11,"poll_next","futures::sink","",144,[[["context"],["buffer"],["pin",["buffer"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",144,[[["self"]]]],[11,"poll_next","futures::stream","",189,[[["context"],["pin",["tryfiltermap"]],["tryfiltermap"]],[["poll",["option"]],["option",["result"]]]]],[11,"size_hint","","",189,[[["self"]]]],[11,"poll_next","","",172,[[["context"],["scan"],["pin",["scan"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",172,[[["self"]]]],[11,"poll_next","futures::future","",70,[[["pin",["intostream"]],["context"],["intostream"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",70,[[["self"]]]],[11,"poll_next","futures::stream","",174,[[["context"],["pin",["skipwhile"]],["skipwhile"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",174,[[["self"]]]],[11,"poll_next","","",208,[[["selectall"],["pin",["selectall"]],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",166,[[["context"],["pin",["inspect"]],["inspect"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",166,[[["self"]]]],[11,"poll_next","","",203,[[["pin",["bufferunordered"]],["context"],["bufferunordered"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",203,[[["self"]]]],[11,"poll_next","","",190,[[["context"],["tryflatten"],["pin",["tryflatten"]]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",194,[[["pin",["tryskipwhile"]],["tryskipwhile"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",194,[[["self"]]]],[11,"poll_next","","",157,[[["pin",["enumerate"]],["context"],["enumerate"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",157,[[["self"]]]],[11,"poll_next","","",154,[[["pin",["chain"]],["chain"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",154,[[["self"]]]],[11,"poll_next","","",159,[[["context"],["pin",["filtermap"]],["filtermap"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",159,[[["self"]]]],[11,"poll_next","futures::future","",77,[[["context"],["pin",["flattensink"]],["flattensink"]],[["option"],["poll",["option"]]]]],[11,"poll_next","futures::stream","",179,[[["context"],["pin",["andthen"]],["andthen"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",179,[[["self"]]]],[11,"poll_next","","",145,[[["context"],["pin",["iter"]],["iter"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",145,[[["self"]]]],[11,"poll_next","","",152,[[["pin",["unfold"]],["context"],["unfold"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",180,[[["errinto"],["pin",["errinto"]],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",180,[[["self"]]]],[11,"poll_next","","",178,[[["pin",["zip"]],["context"],["zip"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",178,[[["self"]]]],[11,"poll_next","","",160,[[["context"],["flatten"],["pin",["flatten"]]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",167,[[["pin",["map"]],["map"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",167,[[["self"]]]],[11,"poll_next","","",149,[[["pin",["once"]],["context"],["once"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",149,[[["self"]]]],[11,"poll_next","","",184,[[["context"],["pin",["inspectok"]],["inspectok"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",184,[[["self"]]]],[11,"poll_next","","",158,[[["context"],["pin",["filter"]],["filter"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",158,[[["self"]]]],[11,"poll_next","futures::future","",66,[[["context"],["flattenstream"],["pin",["flattenstream"]]],[["option"],["poll",["option"]]]]],[11,"poll_next","futures::stream","",197,[[["futuresordered"],["pin",["futuresordered"]],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",197,[[["self"]]]],[11,"poll_next","","",176,[[["pin",["takewhile"]],["takewhile"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",176,[[["self"]]]],[11,"poll_next","futures::io","",112,[[["pin",["lines"]],["context"],["lines"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",171,[[["context"],["pin",["peekable"]],["peekable"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",171,[[["self"]]]],[11,"poll_next","","",148,[[["pin",["pending"]],["pending"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",148,[[["self"]]]],[11,"poll_next","","",206,[[["pin",["splitstream"]],["splitstream"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::sink","",143,[[["context"],["pin",["withflatmap"]],["withflatmap"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",143,[[["self"]]]],[11,"poll_next","futures::stream","",177,[[["pin",["then"]],["then"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",177,[[["self"]]]],[11,"poll_next","","",175,[[["context"],["pin",["take"]],["take"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",175,[[["self"]]]],[11,"poll_next","","",151,[[["context"],["pin",["select"]],["select"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",196,[[["context"],["pin",["chunks"]],["chunks"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",196,[[["self"]]]],[11,"poll_next","","",195,[[["context"],["pin",["intostream"]],["intostream"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",195,[[["self"]]]],[11,"poll_next","","",185,[[["pin",["inspecterr"]],["context"],["inspecterr"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",185,[[["self"]]]],[11,"poll_next","futures::sink","",139,[[["context"],["sinkmaperr"],["pin",["sinkmaperr"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",139,[[["self"]]]],[11,"poll_next","futures::future","",84,[[["context"],["tryflattenstream"],["pin",["tryflattenstream"]]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",198,[[["futuresunordered"],["pin",["futuresunordered"]],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",198,[[["self"]]]],[11,"poll_next","","",147,[[["empty"],["context"],["pin",["empty"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",147,[[["self"]]]],[11,"poll_next","","",210,[[["trybufferunordered"],["context"],["pin",["trybufferunordered"]]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",183,[[["orelse"],["context"],["pin",["orelse"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",183,[[["self"]]]],[11,"poll_next","","",150,[[["pin",["pollfn"]],["pollfn"],["context"]],[["option"],["poll",["option"]]]]],[11,"spawn_local_obj","","",198,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"deref","futures::lock","",133,[[["self"]],["t"]]],[11,"deref","","",130,[[["self"]],["u"]]],[11,"as_ref","futures::io","",125,[[["self"]]]],[11,"write","","",101,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"write_vectored","","",101,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"flush","","",101,[[["self"]],[["error"],["result",["error"]]]]],[11,"write_all","","",101,[[["self"]],[["error"],["result",["error"]]]]],[11,"write_fmt","","",101,[[["self"],["arguments"]],[["error"],["result",["error"]]]]],[11,"default","futures::stream","",197,[[],["futuresordered"]]],[11,"default","futures::lock","",131,[[],["mutex"]]],[11,"default","futures::stream","",208,[[],["selectall"]]],[11,"default","","",198,[[],["futuresunordered"]]],[11,"default","futures::io","",104,[[],["cursor"]]],[11,"from","futures::future","",65,[[["option"]],["optionfuture"]]],[11,"from","futures::lock","",131,[[["t"]],["mutex"]]],[11,"is_terminated","futures::stream","",151,[[["self"]],["bool"]]],[11,"is_terminated","","",146,[[["self"]],["bool"]]],[11,"is_terminated","futures::sink","",138,[[["self"]],["bool"]]],[11,"is_terminated","","",144,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",203,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures::sink","",143,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",190,[[["self"]],["bool"]]],[11,"is_terminated","","",185,[[["self"]],["bool"]]],[11,"is_terminated","","",209,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",66,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",189,[[["self"]],["bool"]]],[11,"is_terminated","","",184,[[["self"]],["bool"]]],[11,"is_terminated","","",179,[[["self"]],["bool"]]],[11,"is_terminated","","",178,[[["self"]],["bool"]]],[11,"is_terminated","","",194,[[["self"]],["bool"]]],[11,"is_terminated","","",198,[[["self"]],["bool"]]],[11,"is_terminated","","",147,[[["self"]],["bool"]]],[11,"is_terminated","","",182,[[["self"]],["bool"]]],[11,"is_terminated","","",174,[[["self"]],["bool"]]],[11,"is_terminated","","",148,[[["self"]],["bool"]]],[11,"is_terminated","","",196,[[["self"]],["bool"]]],[11,"is_terminated","","",183,[[["self"]],["bool"]]],[11,"is_terminated","futures::sink","",139,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",171,[[["self"]],["bool"]]],[11,"is_terminated","","",164,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",70,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",167,[[["self"]],["bool"]]],[11,"is_terminated","","",175,[[["self"]],["bool"]]],[11,"is_terminated","","",180,[[["self"]],["bool"]]],[11,"is_terminated","","",149,[[["self"]],["bool"]]],[11,"is_terminated","","",195,[[["self"]],["bool"]]],[11,"is_terminated","","",154,[[["self"]],["bool"]]],[11,"is_terminated","","",181,[[["self"]],["bool"]]],[11,"is_terminated","","",188,[[["self"]],["bool"]]],[11,"is_terminated","","",158,[[["self"]],["bool"]]],[11,"is_terminated","","",176,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",77,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",177,[[["self"]],["bool"]]],[11,"is_terminated","","",166,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",84,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",159,[[["self"]],["bool"]]],[11,"is_terminated","","",173,[[["self"]],["bool"]]],[11,"is_terminated","","",208,[[["self"]],["bool"]]],[11,"is_terminated","","",152,[[["self"]],["bool"]]],[11,"is_terminated","","",172,[[["self"]],["bool"]]],[11,"is_terminated","","",160,[[["self"]],["bool"]]],[11,"is_terminated","","",157,[[["self"]],["bool"]]],[11,"from_iter","futures::future","",86,[[["t"]],["joinall"]]],[11,"from_iter","futures::stream","",198,[[["i"]],["futuresunordered"]]],[11,"from_iter","futures::future","",89,[[["t"]],["selectok"]]],[11,"from_iter","","",88,[[["t"]],["tryjoinall"]]],[11,"from_iter","futures::stream","",208,[[["t"]],["selectall"]]],[11,"from_iter","","",197,[[["t"]],["futuresordered"]]],[11,"from_iter","futures::future","",87,[[["t"]],["selectall"]]],[11,"poll_fill_buf","futures::io","",101,[[["pin",["allowstdio"]],["context"],["allowstdio"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",101,[[["pin",["allowstdio"]],["usize"],["allowstdio"]]]],[11,"poll_fill_buf","","",103,[[["pin",["bufwriter"]],["context"],["bufwriter"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",103,[[["pin",["bufwriter"]],["usize"],["bufwriter"]]]],[11,"poll_fill_buf","futures::stream","",212,[[["context"],["pin",["intoasyncread"]],["intoasyncread"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",212,[[["pin",["intoasyncread"]],["usize"],["intoasyncread"]]]],[11,"poll_fill_buf","futures::io","",105,[[["pin",["chain"]],["context"],["chain"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",105,[[["pin",["chain"]],["usize"],["chain"]]]],[11,"poll_fill_buf","","",104,[[["context"],["pin",["cursor"]],["cursor"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",104,[[["pin",["cursor"]],["cursor"],["usize"]]]],[11,"poll_fill_buf","","",109,[[["context"],["pin",["empty"]],["empty"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",109,[[["pin",["empty"]],["empty"],["usize"]]]],[11,"poll_fill_buf","futures::future","",5,[[["context"],["pin",["either"]],["either"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",5,[[["usize"],["pin",["either"]],["either"]]]],[11,"poll_fill_buf","futures::io","",102,[[["pin",["bufreader"]],["bufreader"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",102,[[["pin",["bufreader"]],["bufreader"],["usize"]]]],[11,"poll_fill_buf","","",124,[[["pin",["take"]],["take"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",124,[[["pin",["take"]],["take"],["usize"]]]],[11,"hash","","",101,[[["self"],["__h"]]]],[11,"from","futures::task","",50,[[["futureobj"]],["localfutureobj"]]],[11,"from","","",50,[[["box",["future"]],["future"]],["localfutureobj"]]],[11,"from","","",50,[[["box"]],["localfutureobj"]]],[11,"from","","",49,[[["box"]],["futureobj"]]],[11,"from","","",49,[[["pin",["box"]],["box"]],["futureobj"]]],[11,"from","","",49,[[["pin",["box"]],["box",["future"]]],["futureobj"]]],[11,"from","","",49,[[["box",["future"]],["future"]],["futureobj"]]],[11,"from","","",50,[[["box",["future"]],["pin",["box"]]],["localfutureobj"]]],[11,"from","","",50,[[["pin",["box"]],["box"]],["localfutureobj"]]],[11,"fmt","","",217,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",218,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",217,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","","",49,[[["context"],["pin",["futureobj"]],["futureobj"]],["poll"]]],[11,"poll","","",50,[[["pin",["localfutureobj"]],["context"],["localfutureobj"]],["poll"]]],[11,"drop","","",50,[[["self"]]]],[11,"deref","","",218,[[["self"]],["waker"]]],[11,"eq","futures::channel::oneshot","",34,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::channel::mpsc","",39,[[["senderror"],["self"]],["bool"]]],[11,"ne","","",39,[[["senderror"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",40,[[["self"],["trysenderror"]],["bool"]]],[11,"clone","","",35,[[["self"]],["sender"]]],[11,"clone","futures::channel::oneshot","",34,[[["self"]],["canceled"]]],[11,"clone","futures::channel::mpsc","",36,[[["self"]],["unboundedsender"]]],[11,"clone","","",40,[[["self"]],["trysenderror"]]],[11,"clone","","",39,[[["self"]],["senderror"]]],[11,"poll_ready","","",36,[[["context"],["pin",["unboundedsender"]],["unboundedsender"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",36,[[["pin",["unboundedsender"]],["unboundedsender"],["t"]],["result"]]],[11,"poll_flush","","",36,[[["context"],["pin",["unboundedsender"]],["unboundedsender"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",36,[[["context"],["pin",["unboundedsender"]],["unboundedsender"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",35,[[["pin",["sender"]],["context"],["sender"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",35,[[["pin",["sender"]],["sender"],["t"]],["result"]]],[11,"poll_flush","","",35,[[["pin",["sender"]],["context"],["sender"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",35,[[["pin",["sender"]],["context"],["sender"]],[["result"],["poll",["result"]]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::oneshot","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::oneshot","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::oneshot","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_next","","",38,[[["pin",["unboundedreceiver"]],["unboundedreceiver"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",37,[[["context"],["pin",["receiver"]],["receiver"]],[["option"],["poll",["option"]]]]],[11,"is_terminated","","",37,[[["self"]],["bool"]]],[11,"is_terminated","","",38,[[["self"]],["bool"]]],[11,"fmt","futures::channel::oneshot","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","futures::channel::oneshot","",32,[[["pin",["receiver"]],["receiver"],["context"]],[["result",["canceled"]],["poll",["result"]]]]],[11,"drop","futures::channel::mpsc","",37,[[["self"]]]],[11,"drop","futures::channel::oneshot","",33,[[["self"]]]],[11,"drop","futures::channel::mpsc","",38,[[["self"]]]],[11,"drop","futures::channel::oneshot","",32,[[["self"]]]],[11,"clone","futures::executor","",47,[[["self"]],["threadpool"]]],[11,"clone","","",45,[[["self"]],["localspawner"]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"spawn_obj","","",47,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"spawn_obj","","",45,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status","","",45,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"deref","","",42,[[["self"]]]],[11,"default","","",46,[[],["localpool"]]],[11,"default","","",48,[[],["threadpoolbuilder"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"spawn_local_obj","","",45,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","",45,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"drop","","",47,[[["self"]]]],[11,"drop","","",43,[[["self"]]]],[11,"deref_mut","","",42,[[["self"]]]],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent…",32,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",32,[[["self"]],[["canceled"],["result",["option","canceled"]],["option"]]]],[11,"send","","Completes this oneshot with a successful result.",33,[[["t"]],["result"]]],[11,"poll_canceled","","Polls this `Sender` half to detect whether its associated…",33,[[["context"],["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",33,[[["self"]],["bool"]]],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this `Sender`, returning the…",35,[[["self"],["t"]],[["result",["trysenderror"]],["trysenderror"]]]],[11,"start_send","","Send a message on the channel.",35,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed…",35,[[["context"],["self"]],[["result",["senderror"]],["poll",["result"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",35,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",35,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",35,[[["self"]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",35,[[["self"],["sender"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",35,[[["self"],["h"]]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",36,[[["context"],["self"]],[["result",["senderror"]],["poll",["result"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",36,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",36,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",36,[[["self"]]]],[11,"start_send","","Send a message on the channel.",36,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"unbounded_send","","Sends a message along this channel.",36,[[["self"],["t"]],[["result",["trysenderror"]],["trysenderror"]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",36,[[["self"],["unboundedsender"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",36,[[["self"],["h"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",37,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",37,[[["self"]],[["tryrecverror"],["option"],["result",["option","tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",38,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",38,[[["self"]],[["tryrecverror"],["option"],["result",["option","tryrecverror"]]]]],[11,"is_full","","Returns true if this error is a result of the channel…",39,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",39,[[["self"]],["bool"]]],[11,"is_full","","Returns true if this error is a result of the channel…",40,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",40,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",40,[[],["t"]]],[11,"into_send_error","","Drops the message and converts into a `SendError`.",40,[[],["senderror"]]],[11,"into_inner","futures::executor","Convert this `BlockingStream` into the inner `Stream` type.",42,[[],["s"]]],[11,"new","","Create a new, empty pool of tasks.",46,[[],["localpool"]]],[11,"spawner","","Get a clonable handle to the pool as a [`Spawn`].",46,[[["self"]],["localspawner"]]],[11,"run","","Run all tasks in the pool to completion.",46,[[["self"]]]],[11,"run_until","","Runs all the tasks in the pool until the given future…",46,[[["self"],["f"]]]],[11,"try_run_one","","Runs all tasks and returns after completing one future or…",46,[[["self"]],["bool"]]],[11,"run_until_stalled","","Runs all tasks in the pool and returns if no more progress…",46,[[["self"]]]],[11,"new","","Creates a new thread pool with the default configuration.",47,[[],[["threadpool"],["result",["threadpool","error"]],["error"]]]],[11,"builder","","Create a default thread pool configuration, which can then…",47,[[],["threadpoolbuilder"]]],[11,"spawn_obj_ok","","Spawns a future that will be run to completion.",47,[[["futureobj"],["self"]]]],[11,"spawn_ok","","Spawns a task that polls the given future with output `()`…",47,[[["self"],["fut"]]]],[11,"new","","Create a default thread pool configuration.",48,[[],["threadpoolbuilder"]]],[11,"pool_size","","Set size of a future ThreadPool",48,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"stack_size","","Set stack size of threads in the pool.",48,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"name_prefix","","Set thread name prefix of a future ThreadPool.",48,[[["self"],["s"]],["threadpoolbuilder"]]],[11,"after_start","","Execute the closure `f` immediately after each worker…",48,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"before_stop","","Execute closure `f` just prior to shutting down each…",48,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"create","","Create a `ThreadPool` with the given configuration.",48,[[["self"]],[["threadpool"],["result",["threadpool","error"]],["error"]]]],[11,"new","futures::task","Create a `FutureObj` from a custom trait object…",49,[[["f"]],["futureobj"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object…",50,[[["f"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj`.",50,[[],["futureobj"]]],[11,"output_mut","futures::future","Returns an [`Option`] containing a mutable reference to…",4,[[["maybedone"],["pin",["maybedone"]]],["option"]]],[11,"take_output","","Attempt to take the output of a `MaybeDone` without…",4,[[["maybedone"],["pin",["maybedone"]]],["option"]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",54,[[],["t"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",5,[[],["t"]]],[11,"terminated","","Creates a new `Fuse`-wrapped future which is already…",68,[[],["fuse"]]],[11,"new","","Creates a new `Abortable` future using an existing…",90,[[["abortregistration"],["fut"]],["abortable"]]],[11,"new_pair","","Creates an (`AbortHandle`, `AbortRegistration`) pair which…",91,[[]]],[11,"abort","","Abort the `Abortable` future associated with this handle.",91,[[["self"]]]],[11,"forget","","Drops this handle without canceling the underlying future.",95,[[]]],[11,"peek","","Returns [`Some`] containing a reference to this…",97,[[["self"]],["option"]]],[11,"new","futures::io","Creates a new I/O error from a known kind of error as well…",98,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",98,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",98,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",98,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",98,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",98,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",98,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",98,[[["self"]],["errorkind"]]],[11,"new","","Creates a new `IoSlice` wrapping a byte slice.",99,[[],["ioslice"]]],[11,"advance","","Advance the internal cursor of the slice.",99,[[["usize"]]]],[11,"new","","Creates a new `IoSliceMut` wrapping a byte slice.",100,[[],["ioslicemut"]]],[11,"advance","","Advance the internal cursor of the slice.",100,[[["usize"]]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",101,[[["t"]],["allowstdio"]]],[11,"get_ref","","Returns a reference to the contained IO object.",101,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",101,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",101,[[],["t"]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",102,[[["r"]],["bufreader"]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",102,[[["usize"],["r"]],["bufreader"]]],[11,"get_ref","","Gets a reference to the underlying reader.",102,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",102,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",102,[[["pin",["bufreader"]],["bufreader"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying reader.",102,[[],["r"]]],[11,"buffer","","Returns a reference to the internally buffered data.",102,[[["self"]]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",103,[[["w"]],["bufwriter"]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",103,[[["w"],["usize"]],["bufwriter"]]],[11,"get_ref","","Gets a reference to the underlying writer.",103,[[["self"]],["w"]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",103,[[["self"]],["w"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",103,[[["pin",["bufwriter"]],["bufwriter"]],[["w"],["pin"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",103,[[],["w"]]],[11,"buffer","","Returns a reference to the internally buffered data.",103,[[["self"]]]],[11,"new","","Creates a new cursor wrapping the provided underlying…",104,[[["t"]],["cursor"]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",104,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",104,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",104,[[["self"]],["t"]]],[11,"position","","Returns the current position of this cursor.",104,[[["self"]],["u64"]]],[11,"set_position","","Sets the position of this cursor.",104,[[["self"],["u64"]]]],[11,"get_ref","","Gets references to the underlying readers in this `Chain`.",105,[[["self"]]]],[11,"get_mut","","Gets mutable references to the underlying readers in this…",105,[[["self"]]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers…",105,[[["pin",["chain"]],["chain"]]]],[11,"into_inner","","Consumes the `Chain`, returning the wrapped readers.",105,[[]]],[11,"limit","","Returns the remaining number of bytes that can be read…",124,[[["self"]],["u64"]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",124,[[["self"],["u64"]]]],[11,"get_ref","","Gets a reference to the underlying reader.",124,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",124,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",124,[[["pin",["take"]],["take"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",124,[[],["r"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",125,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",125,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",125,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",125,[[],["t"]]],[11,"start","","Returns the starting index of this window into the…",125,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",125,[[["self"]],["usize"]]],[11,"set","","Changes the range of this window to the range specified.",125,[[["self"],["r"]]]],[11,"map","futures::lock","Returns a locked view over a portion of the locked data.",130,[[["mappedmutexguard"],["f"]],["mappedmutexguard"]]],[11,"new","","Creates a new futures-aware mutex.",131,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",131,[[],["t"]]],[11,"try_lock","","Attempt to acquire the lock immediately.",131,[[["self"]],[["mutexguard"],["option",["mutexguard"]]]]],[11,"lock","","Acquire the lock asynchronously.",131,[[["self"]],["mutexlockfuture"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",131,[[["self"]],["t"]]],[11,"map","","Returns a locked view over a portion of the locked data.",133,[[["mutexguard"],["f"]],["mappedmutexguard"]]],[11,"get_ref","futures::sink","Get a shared reference to the inner sink.",138,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",138,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",138,[[["pin",["sinkerrinto"]],["sinkerrinto"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",138,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",139,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",139,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",139,[[["sinkmaperr"],["pin",["sinkmaperr"]]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",139,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",140,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",140,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",140,[[["with"],["pin",["with"]]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",140,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sinks.",141,[[["self"]]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",141,[[["self"]]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",141,[[["pin",["fanout"]],["fanout"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",141,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",143,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",143,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",143,[[["withflatmap"],["pin",["withflatmap"]]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",143,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",144,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",144,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",144,[[["pin",["buffer"]],["buffer"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",144,[[],["si"]]],[11,"get_ref","futures::stream","Acquires a reference to the underlying streams that this…",151,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",151,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",151,[[["pin",["select"]],["select"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",151,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",157,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",157,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",157,[[["pin",["enumerate"]],["enumerate"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",157,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",158,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",158,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",158,[[["pin",["filter"]],["filter"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",158,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",159,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",159,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",159,[[["pin",["filtermap"]],["filtermap"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",159,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",160,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",160,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",160,[[["flatten"],["pin",["flatten"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",160,[[],["st"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",164,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",164,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",164,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",164,[[["pin",["fuse"]],["fuse"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",164,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",165,[[["self"]],[["option"],["st"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",165,[[["self"]],[["st"],["option"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",165,[[["streamfuture"],["pin",["streamfuture"]]],[["option",["pin"]],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",165,[[],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",166,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",166,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",166,[[["pin",["inspect"]],["inspect"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",166,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",167,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",167,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",167,[[["pin",["map"]],["map"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",167,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",171,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",171,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",171,[[["pin",["peekable"]],["peekable"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",171,[[],["st"]]],[11,"peek","","Produces a `Peek` future which retrieves a reference to…",171,[[["pin",["peekable"]],["peekable"]],["peek"]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",171,[[["context"],["pin",["peekable"]],["peekable"]],[["poll",["option"]],["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",172,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",172,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",172,[[["scan"],["pin",["scan"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",172,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",173,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",173,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",173,[[["pin",["skip"]],["skip"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",173,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",174,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",174,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",174,[[["pin",["skipwhile"]],["skipwhile"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",174,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",175,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",175,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",175,[[["pin",["take"]],["take"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",175,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",176,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",176,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",176,[[["pin",["takewhile"]],["takewhile"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",176,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",177,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",177,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",177,[[["pin",["then"]],["then"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",177,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying streams that this…",178,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",178,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",178,[[["pin",["zip"]],["zip"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",178,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",179,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",179,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",179,[[["pin",["andthen"]],["andthen"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",179,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",180,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",180,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",180,[[["errinto"],["pin",["errinto"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",180,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",181,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",181,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",181,[[["pin",["mapok"]],["mapok"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",181,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",182,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",182,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",182,[[["pin",["maperr"]],["maperr"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",182,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",183,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",183,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",183,[[["orelse"],["pin",["orelse"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",183,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",184,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",184,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",184,[[["pin",["inspectok"]],["inspectok"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",184,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",185,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",185,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",185,[[["pin",["inspecterr"]],["inspecterr"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",185,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",188,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",188,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",188,[[["pin",["tryfilter"]],["tryfilter"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",188,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",189,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",189,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",189,[[["pin",["tryfiltermap"]],["tryfiltermap"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",189,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",190,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",190,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",190,[[["tryflatten"],["pin",["tryflatten"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",190,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",194,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",194,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",194,[[["pin",["tryskipwhile"]],["tryskipwhile"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",194,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",195,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",195,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",195,[[["pin",["intostream"]],["intostream"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",195,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",196,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",196,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",196,[[["pin",["chunks"]],["chunks"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",196,[[],["st"]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",197,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",197,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",197,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",197,[[["self"],["fut"]]]],[11,"new","","Constructs a new, empty [`FuturesUnordered`].",198,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",198,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures.",198,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",198,[[["self"],["fut"]]]],[11,"iter","","Returns an iterator that allows inspecting each future in…",198,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",198,[[["self"]],["itermut"]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in…",198,[[["futuresunordered"],["pin",["futuresunordered"]]],["iterpinmut"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",203,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",203,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",203,[[["pin",["bufferunordered"]],["bufferunordered"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",203,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",204,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",204,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",204,[[["pin",["buffered"]],["buffered"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",204,[[],["st"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",206,[[["splitsink"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",207,[[["splitstream"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"new","","Constructs a new, empty `SelectAll`",208,[[],["selectall"]]],[11,"len","","Returns the number of streams contained in the set.",208,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no streams",208,[[["self"]],["bool"]]],[11,"push","","Push a stream into the set.",208,[[["self"],["st"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",210,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",210,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",210,[[["trybufferunordered"],["pin",["trybufferunordered"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",210,[[],["st"]]],[11,"from_waker","futures::task","Create a new `Context` from a `&Waker`.",213,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",213,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",26,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",26,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",26,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",26,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",26,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",26,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",26,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",214,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",214,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",214,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",214,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",215,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",216,[[],["rawwakervtable"]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",217,[[],["spawnerror"]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut…",217,[[["self"]],["bool"]]],[11,"new","","Create a new [`WakerRef`] from a [`Waker`] reference.",218,[[["waker"]],["wakerref"]]],[11,"new_unowned","","Create a new [`WakerRef`] from a [`Waker`] that must not…",218,[[["waker"],["manuallydrop",["waker"]]],["wakerref"]]],[11,"new","","Create an `AtomicWaker`.",219,[[],["atomicwaker"]]],[11,"register","","Registers the waker to be notified on calls to `wake`.",219,[[["waker"],["self"]]]],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",219,[[["self"]]]],[11,"take","","Returns the last `Waker` passed to `register`, so that the…",219,[[["self"]],[["waker"],["option",["waker"]]]]]],"p":[[8,"Future"],[8,"TryFuture"],[8,"FusedFuture"],[8,"UnsafeFutureObj"],[4,"MaybeDone"],[4,"Either"],[8,"FutureExt"],[8,"TryFutureExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[8,"Stream"],[8,"TryStream"],[8,"Sink"],[8,"SinkExt"],[8,"FusedStream"],[8,"StreamExt"],[8,"TryStreamExt"],[3,"ReuniteError"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"ArcWake"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"BlockingStream"],[3,"Enter"],[3,"EnterError"],[3,"LocalSpawner"],[3,"LocalPool"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Lazy"],[3,"Pending"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"OptionFuture"],[3,"FlattenStream"],[3,"Flatten"],[3,"Fuse"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"Then"],[3,"UnitError"],[3,"NeverError"],[3,"AndThen"],[3,"ErrInto"],[3,"FlattenSink"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"InspectOk"],[3,"InspectErr"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"JoinAll"],[3,"SelectAll"],[3,"TryJoinAll"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortHandle"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Remote"],[3,"RemoteHandle"],[3,"CatchUnwind"],[3,"Shared"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"AllowStdIo"],[3,"BufReader"],[3,"BufWriter"],[3,"Cursor"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Empty"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadExact"],[3,"ReadHalf"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"ReadVectored"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"Take"],[3,"Window"],[3,"Write"],[3,"WriteAll"],[3,"WriteHalf"],[3,"WriteVectored"],[3,"MappedMutexGuard"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"Close"],[3,"Flush"],[3,"Send"],[3,"SendAll"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"With"],[3,"Fanout"],[3,"Drain"],[3,"WithFlatMap"],[3,"Buffer"],[3,"Iter"],[3,"Repeat"],[3,"Empty"],[3,"Pending"],[3,"Once"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"TryUnfold"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peek"],[3,"Peekable"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Zip"],[3,"AndThen"],[3,"ErrInto"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"InspectOk"],[3,"InspectErr"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TrySkipWhile"],[3,"IntoStream"],[3,"Chunks"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"SelectAll"],[3,"CatchUnwind"],[3,"TryBufferUnordered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"]]};
searchIndex["futures_channel"] = {"doc":"Asynchronous channels.","i":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",null,null],[3,"TrySendError","","The error type returned from `try_send`.",null,null],[3,"TryRecvError","","The error type returned from `try_next`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[11,"is_full","","Returns true if this error is a result of the channel…",0,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",0,[[["self"]],["bool"]]],[11,"is_full","","Returns true if this error is a result of the channel…",1,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",1,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",1,[[],["t"]]],[11,"into_send_error","","Drops the message and converts into a `SendError`.",1,[[],["senderror"]]],[11,"try_send","","Attempts to send a message on this `Sender`, returning the…",2,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"start_send","","Send a message on the channel.",2,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed…",2,[[["self"],["context"]],[["poll",["result"]],["result",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",2,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",2,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",2,[[["self"]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",2,[[["self"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",2,[[["self"],["h"]]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",3,[[["context"],["self"]],[["poll",["result"]],["result",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",3,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",3,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",3,[[["self"]]]],[11,"start_send","","Send a message on the channel.",3,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"unbounded_send","","Sends a message along this channel.",3,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",3,[[["self"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",3,[[["self"],["h"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",4,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",4,[[["self"]],[["option"],["tryrecverror"],["result",["option","tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",5,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",5,[[["self"]],[["option"],["tryrecverror"],["result",["option","tryrecverror"]]]]],[0,"oneshot","futures_channel","A channel for sending a single message between…",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another…",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[3,"Canceled","","Error returned from a `Receiver` when the corresponding…",null,null],[5,"channel","","Creates a new one-shot channel for sending values across…",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",6,[[["t"]],["result"]]],[11,"poll_canceled","","Polls this `Sender` half to detect whether its associated…",6,[[["self"],["context"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",6,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing any subsequent…",7,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",7,[[["self"]],[["option"],["canceled"],["result",["option","canceled"]]]]],[11,"from","futures_channel::mpsc","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll_next","","",4,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","futures_channel::oneshot","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"drop","futures_channel::mpsc","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","futures_channel::oneshot","",6,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"clone","futures_channel::mpsc","",0,[[["self"]],["senderror"]]],[11,"clone","","",1,[[["self"]],["trysenderror"]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"clone","","",3,[[["self"]],["unboundedsender"]]],[11,"clone","futures_channel::oneshot","",9,[[["self"]],["canceled"]]],[11,"eq","futures_channel::mpsc","",0,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",0,[[["self"],["senderror"]],["bool"]]],[11,"eq","","",1,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",1,[[["self"],["trysenderror"]],["bool"]]],[11,"eq","futures_channel::oneshot","",9,[[["canceled"],["self"]],["bool"]]],[11,"fmt","futures_channel::mpsc","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_channel::oneshot","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_channel::mpsc","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_channel::oneshot","",9,[[["formatter"],["self"]],["result"]]],[11,"poll","","",7,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["canceled"]]]]],[11,"poll_next","futures_channel::mpsc","",4,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",5,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"is_terminated","","",4,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"poll_ready","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",2,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",3,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]]],"p":[[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Receiver"],[3,"TryRecvError"],[3,"Canceled"]]};
searchIndex["futures_core"] = {"doc":"Core traits and types for asynchronous operations in Rust.","i":[[0,"future","futures_core","Futures.",null,null],[8,"Future","futures_core::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value,…",0,[[["pin"],["self"],["context"]],["poll"]]],[6,"BoxFuture","","An owned dynamically typed [`Future`] for use in cases…",null,null],[6,"LocalBoxFuture","","`BoxFuture`, but without the `Send` requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns `true` if the underlying future should no longer…",1,[[["self"]],["bool"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[0,"stream","futures_core","Asynchronous streams.",null,null],[6,"BoxStream","futures_core::stream","An owned dynamically typed [`Stream`] for use in cases…",null,null],[6,"LocalBoxStream","","`BoxStream`, but without the `Send` requirement.",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",3,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",3,[[["self"]]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns `true` if the stream should no longer be polled.",4,[[["self"]],["bool"]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",5,null],[16,"Error","","The type of failures yielded by this future",5,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",5,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[0,"task","futures_core","Task notification.",null,null],[3,"Context","futures_core::task","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",6,null],[13,"Pending","","Represents that a value is not ready yet.",6,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[14,"ready","futures_core","Extracts the successful type of a `Poll<T>`.",null,null],[11,"from","futures_core::task","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"from","","",6,[[],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"clone","","",8,[[["self"]],["waker"]]],[11,"clone","","",10,[[["self"]],["rawwakervtable"]]],[11,"clone","","",6,[[["self"]],["poll"]]],[11,"drop","","",8,[[["self"]]]],[11,"eq","","",10,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",10,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",9,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",9,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",6,[[["poll"],["self"]],["bool"]]],[11,"ne","","",6,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",6,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from","","",6,[[["t"]],["poll"]]],[11,"partial_cmp","","",6,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["poll"],["self"]],["bool"]]],[11,"le","","",6,[[["poll"],["self"]],["bool"]]],[11,"gt","","",6,[[["poll"],["self"]],["bool"]]],[11,"ge","","",6,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",6,[[],["result"]]],[11,"from_error","","",6,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",6,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",6,[[],["result"]]],[11,"from_error","","",6,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",6,[[],[["result"],["poll",["result"]]]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",7,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",7,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",6,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",6,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",6,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",6,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",6,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",6,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",6,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",8,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",8,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",8,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",8,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",9,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",10,[[],["rawwakervtable"]]]],"p":[[8,"Future"],[8,"FusedFuture"],[8,"TryFuture"],[8,"Stream"],[8,"FusedStream"],[8,"TryStream"],[4,"Poll"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]};
searchIndex["futures_executor"] = {"doc":"Built-in executors and related tools.","i":[[3,"BlockingStream","futures_executor","An iterator which blocks on values from a stream until…",null,null],[3,"LocalPool","","A single-threaded task pool for polling futures to…",null,null],[3,"LocalSpawner","","A handle to a `LocalPool` that implements `Spawn`.",null,null],[3,"ThreadPool","","A general-purpose thread pool for scheduling tasks that…",null,null],[3,"ThreadPoolBuilder","","Thread pool configuration object.",null,null],[3,"Enter","","Represents an executor context.",null,null],[3,"EnterError","","An error returned by `enter` if an execution scope has…",null,null],[5,"block_on","","Run a future to completion on the current thread.",null,[[["future"]]]],[5,"block_on_stream","","Turn a stream into a blocking iterator.",null,[[["stream"],["unpin"]],[["unpin"],["stream"],["blockingstream"]]]],[5,"enter","","Marks the current thread as being within the dynamic…",null,[[],[["enter"],["entererror"],["result",["enter","entererror"]]]]],[11,"new","","Create a new, empty pool of tasks.",0,[[],["localpool"]]],[11,"spawner","","Get a clonable handle to the pool as a [`Spawn`].",0,[[["self"]],["localspawner"]]],[11,"run","","Run all tasks in the pool to completion.",0,[[["self"]]]],[11,"run_until","","Runs all the tasks in the pool until the given future…",0,[[["self"],["future"]]]],[11,"try_run_one","","Runs all tasks and returns after completing one future or…",0,[[["self"]],["bool"]]],[11,"run_until_stalled","","Runs all tasks in the pool and returns if no more progress…",0,[[["self"]]]],[11,"into_inner","","Convert this `BlockingStream` into the inner `Stream` type.",1,[[],["s"]]],[11,"new","","Creates a new thread pool with the default configuration.",2,[[],[["error"],["result",["threadpool","error"]],["threadpool"]]]],[11,"builder","","Create a default thread pool configuration, which can then…",2,[[],["threadpoolbuilder"]]],[11,"spawn_obj_ok","","Spawns a future that will be run to completion.",2,[[["futureobj"],["self"]]]],[11,"spawn_ok","","Spawns a task that polls the given future with output `()`…",2,[[["self"],["fut"]]]],[11,"new","","Create a default thread pool configuration.",3,[[],["self"]]],[11,"pool_size","","Set size of a future ThreadPool",3,[[["self"],["usize"]],["self"]]],[11,"stack_size","","Set stack size of threads in the pool.",3,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set thread name prefix of a future ThreadPool.",3,[[["into",["string"]],["self"],["string"]],["self"]]],[11,"after_start","","Execute the closure `f` immediately after each worker…",3,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute closure `f` just prior to shutting down each…",3,[[["self"],["f"]],["self"]]],[11,"create","","Create a `ThreadPool` with the given configuration.",3,[[["self"]],[["error"],["result",["threadpool","error"]],["threadpool"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"clone","","",4,[[["self"]],["localspawner"]]],[11,"clone","","",2,[[["self"]],["threadpool"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"spawn_obj","","",4,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status","","",4,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"spawn_obj","","",2,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"spawn_local_obj","","",4,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","",4,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]]],"p":[[3,"LocalPool"],[3,"BlockingStream"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"LocalSpawner"],[3,"Enter"],[3,"EnterError"]]};
searchIndex["futures_io"] = {"doc":"Asynchronous I/O","i":[[3,"Error","futures_io","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",0,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",0,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",0,null],[13,"ConnectionReset","","The connection was reset by the remote server.",0,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",0,null],[13,"NotConnected","","The network operation failed because it was not connected…",0,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",0,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",0,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",0,null],[13,"AlreadyExists","","An entity already exists, often a file.",0,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",0,null],[13,"InvalidInput","","A parameter was incorrect.",0,null],[13,"InvalidData","","Data not valid for the operation were encountered.",0,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",0,null],[13,"WriteZero","","An error returned when an operation could not be completed…",0,null],[13,"Interrupted","","This operation was interrupted.",0,null],[13,"Other","","Any I/O error not part of this list.",0,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",0,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[3,"IoSlice","","A buffer type used with `Write::write_vectored`.",null,null],[3,"IoSliceMut","","A buffer type used with `Read::read_vectored`.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O…",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",1,null],[13,"End","","Sets the offset to the size of this object plus the…",1,null],[13,"Current","","Sets the offset to the current position plus the specified…",1,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",2,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",2,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",3,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",3,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"poll_close","","Attempt to close the object.",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",4,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",5,[[["pin"],["self"],["usize"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["errorkind"],["self"]],["ordering"]]],[11,"deref_mut","","",8,[[["self"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",8,[[["self"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",6,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",6,[[["nulerror"]],["error"]]],[11,"from","","",6,[[["intoinnererror"]],["error"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cause","","",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",1,[[["self"]],["seekfrom"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",0,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",1,[[["seekfrom"],["self"]],["bool"]]],[11,"ne","","",1,[[["seekfrom"],["self"]],["bool"]]],[11,"eq","","",0,[[["errorkind"],["self"]],["bool"]]],[11,"new","","Creates a new I/O error from a known kind of error as well…",6,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",6,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",6,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",6,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",6,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",6,[[["self"]],["errorkind"]]],[11,"new","","Creates a new `IoSlice` wrapping a byte slice.",7,[[],["ioslice"]]],[11,"advance","","Advance the internal cursor of the slice.",7,[[["usize"]]]],[11,"new","","Creates a new `IoSliceMut` wrapping a byte slice.",8,[[],["ioslicemut"]]],[11,"advance","","Advance the internal cursor of the slice.",8,[[["usize"]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",2,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",3,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]]],"p":[[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"]]};
searchIndex["futures_macro"] = {"doc":"The futures-rs procedural macro implementations.","i":[[24,"proc_macro_hack_join","futures_macro","The `join!` macro.",null,null],[24,"proc_macro_hack_try_join","","The `try_join!` macro.",null,null],[24,"proc_macro_hack_select","","The `select!` macro.",null,null],[24,"proc_macro_hack_select_biased","","The `select_biased!` macro.",null,null]],"p":[]};
searchIndex["futures_sink"] = {"doc":"Asynchronous sinks","i":[[8,"Sink","futures_sink","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",0,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",0,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]]],"p":[[8,"Sink"]]};
searchIndex["futures_task"] = {"doc":"Tools for working with tasks.","i":[[3,"Context","futures_task","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"Pending","","Represents that a value is not ready yet.",0,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"WakerRef","","A [`Waker`] that is only valid for a given lifetime.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[5,"waker","","Creates a [`Waker`] from an `Arc<impl ArcWake>`.",null,[[["arc"]],["waker"]]],[5,"waker_ref","","Creates a reference to a [`Waker`] from a reference to…",null,[[["arc"]],["wakerref"]]],[5,"noop_waker","","Create a new [`Waker`] which does nothing when `wake()` is…",null,[[],["waker"]]],[5,"noop_waker_ref","","Get a static reference to a [`Waker`] which does nothing…",null,[[],["waker"]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",1,[[],["self"]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut…",1,[[["self"]],["bool"]]],[11,"new","","Create a new [`WakerRef`] from a [`Waker`] reference.",2,[[["waker"]],["self"]]],[11,"new_unowned","","Create a new [`WakerRef`] from a [`Waker`] that must not…",2,[[["manuallydrop",["waker"]],["waker"]],["self"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object…",3,[[["unsafefutureobj"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj`.",3,[[],["futureobj"]]],[11,"new","","Create a `FutureObj` from a custom trait object…",4,[[["send"],["unsafefutureobj"]],["futureobj"]]],[8,"Spawn","","The `Spawn` trait allows for pushing futures onto an…",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",5,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",5,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[8,"LocalSpawn","","The `LocalSpawn` is similar to [`Spawn`], but allows…",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",6,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",6,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make…",7,[[["arc"]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make…",7,[[["arc"]]]],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",8,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",8,[[]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",10,[[["self"]],["waker"]]],[11,"clone","","",12,[[["self"]],["rawwakervtable"]]],[11,"clone","","",0,[[["self"]],["poll"]]],[11,"drop","","",10,[[["self"]]]],[11,"eq","","",12,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",12,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",11,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",11,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",0,[[["poll"],["self"]],["bool"]]],[11,"ne","","",0,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",0,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"from","","",0,[[["t"]],["poll"]]],[11,"partial_cmp","","",0,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["poll"],["self"]],["bool"]]],[11,"le","","",0,[[["poll"],["self"]],["bool"]]],[11,"gt","","",0,[[["poll"],["self"]],["bool"]]],[11,"ge","","",0,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",0,[[],["result"]]],[11,"from_error","","",0,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",0,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",0,[[],["result"]]],[11,"from_error","","",0,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",0,[[],[["result"],["poll",["result"]]]]],[11,"drop","","",3,[[["self"]]]],[11,"from","","",3,[[["futureobj"]],["localfutureobj"]]],[11,"from","","",4,[[["box"]],["self"]]],[11,"from","","",4,[[["box",["future"]],["future"]],["self"]]],[11,"from","","",4,[[["pin",["box"]],["box"]],["self"]]],[11,"from","","",4,[[["pin",["box"]],["box",["future"]]],["self"]]],[11,"from","","",3,[[["box"]],["self"]]],[11,"from","","",3,[[["future"],["box",["future"]]],["self"]]],[11,"from","","",3,[[["pin",["box"]],["box"]],["self"]]],[11,"from","","",3,[[["pin",["box"]],["box",["future"]]],["self"]]],[11,"deref","","",2,[[["self"]],["waker"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"poll","","",3,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",4,[[["pin"],["self"],["context"]],["poll"]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",9,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",9,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",0,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",0,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",0,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",0,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",0,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",0,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",0,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",10,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",10,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",10,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",10,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",11,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",12,[[],["rawwakervtable"]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",5,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",6,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"wake","","Indicates that the associated task is ready to make…",7,[[["arc"]]]]],"p":[[4,"Poll"],[3,"SpawnError"],[3,"WakerRef"],[3,"LocalFutureObj"],[3,"FutureObj"],[8,"Spawn"],[8,"LocalSpawn"],[8,"ArcWake"],[8,"UnsafeFutureObj"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]};
searchIndex["futures_util"] = {"doc":"Combinators and utilities for working with `Future`s,…","i":[[14,"ready","futures_util","Extracts the successful type of a `Poll<T>`.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[0,"future","","Futures",null,null],[6,"BoxFuture","futures_util::future","An owned dynamically typed [`Future`] for use in cases…",null,null],[6,"LocalBoxFuture","","`BoxFuture`, but without the `Send` requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns `true` if the underlying future should no longer…",0,[[["self"]],["bool"]]],[8,"Future","","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value,…",1,[[["pin"],["self"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",2,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the `flatten` method.",null,null],[3,"FlattenStream","","Stream for the `flatten_stream` method.",null,null],[3,"Fuse","","Future for the `fuse` method.",null,null],[3,"Inspect","","Future for the `inspect` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"Map","","Future for the `map` method.",null,null],[3,"NeverError","","Future for the `never_error` combinator.",null,null],[3,"Then","","Future for the `then` method.",null,null],[3,"UnitError","","Future for the `unit_error` combinator.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` method.",null,null],[3,"Remote","","A future which sends its output to the corresponding…",null,null],[3,"RemoteHandle","","The handle to a remote future returned by `remote_handle`.…",null,null],[3,"Shared","","Future for the `shared` method.",null,null],[3,"AndThen","","Future for the `and_then` method.",null,null],[3,"ErrInto","","Future for the `err_into` method.",null,null],[3,"InspectErr","","Future for the `inspect_err` method.",null,null],[3,"InspectOk","","Future for the `inspect_ok` method.",null,null],[3,"IntoFuture","","Future for the `into_future` method.",null,null],[3,"MapErr","","Future for the `map_err` method.",null,null],[3,"MapOk","","Future for the `map_ok` method.",null,null],[3,"OrElse","","Future for the `or_else` method.",null,null],[3,"TryFlattenStream","","Stream for the `try_flatten_stream` method.",null,null],[3,"UnwrapOrElse","","Future for the `unwrap_or_else` method.",null,null],[3,"FlattenSink","","Sink for the `flatten_sink` method.",null,null],[3,"Lazy","","Future for the [`lazy`] function.",null,null],[3,"Pending","","Future for the [`pending()`] function.",null,null],[3,"OptionFuture","","A future representing a value which may or may not be…",null,null],[3,"PollFn","","Future for the [`poll_fn`] function.",null,null],[3,"Ready","","Future for the `ready` function.",null,null],[3,"Join","","Future for the `join` function.",null,null],[3,"Join3","","Future for the [`join3`] function.",null,null],[3,"Join4","","Future for the [`join4`] function.",null,null],[3,"Join5","","Future for the [`join5`] function.",null,null],[3,"JoinAll","","Future for the [`join_all`] function.",null,null],[3,"Select","","Future for the [`select()`] function.",null,null],[3,"SelectAll","","Future for the [`select_all`] function.",null,null],[3,"TryJoin","","Future for the `try_join` function.",null,null],[3,"TryJoin3","","Future for the [`try_join3`] function.",null,null],[3,"TryJoin4","","Future for the [`try_join4`] function.",null,null],[3,"TryJoin5","","Future for the [`try_join5`] function.",null,null],[3,"TryJoinAll","","Future for the [`try_join_all`] function.",null,null],[3,"TrySelect","","Future for the [`try_select()`] function.",null,null],[3,"SelectOk","","Future for the [`select_ok`] function.",null,null],[3,"Abortable","","A future which can be remotely short-circuited using an…",null,null],[3,"AbortHandle","","A handle to a `Abortable` future.",null,null],[3,"AbortRegistration","","A registration handle for a `Abortable` future. Values of…",null,null],[3,"Aborted","","Indicator that the `Abortable` future was aborted.",null,null],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",4,null],[13,"Done","","The output of the completed future",4,null],[13,"Gone","","The empty variant after the result of a [`MaybeDone`] has…",4,null],[4,"Either","","Combines two different futures, streams, or sinks having…",null,null],[13,"Left","","First branch of the type",5,null],[13,"Right","","Second branch of the type",5,null],[5,"lazy","","Creates a new future that allows delayed execution of a…",null,[[["f"]],["lazy"]]],[5,"pending","","Creates a future which never resolves, representing a…",null,[[],["pending"]]],[5,"maybe_done","","Wraps a future into a `MaybeDone`",null,[[["future"]],[["maybedone"],["future"]]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",null,[[["f"]],["pollfn"]]],[5,"err","","Create a future that is immediately ready with an error…",null,[[["e"]],[["result"],["ready",["result"]]]]],[5,"ok","","Create a future that is immediately ready with a success…",null,[[["t"]],[["result"],["ready",["result"]]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[["t"]],["ready"]]],[5,"join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["join"]]],[5,"join3","","Same as `join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["join3"]]],[5,"join4","","Same as `join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["join4"]]],[5,"join5","","Same as `join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["join5"]]],[5,"join_all","","Creates a future which represents a collection of the…",null,[[["i"]],["joinall"]]],[5,"select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["select"]]],[5,"select_all","","Creates a new future which will select over a list of…",null,[[["i"]],["selectall"]]],[5,"try_join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["tryjoin"]]],[5,"try_join3","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["tryjoin3"]]],[5,"try_join4","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["tryjoin4"]]],[5,"try_join5","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["tryjoin5"]]],[5,"try_join_all","","Creates a future which represents either a collection of…",null,[[["i"]],["tryjoinall"]]],[5,"try_select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["tryselect"]]],[5,"select_ok","","Creates a new future which will select the first…",null,[[["i"]],["selectok"]]],[5,"abortable","","Creates a new `Abortable` future and a `AbortHandle` which…",null,[[["fut"]]]],[11,"terminated","","Creates a new `Fuse`-wrapped future which is already…",6,[[],["fuse"]]],[11,"forget","","Drops this handle without canceling the underlying future.",7,[[]]],[11,"peek","","Returns [`Some`] containing a reference to this…",8,[[["self"]],["option"]]],[11,"output_mut","","Returns an [`Option`] containing a mutable reference to…",4,[[["pin"],["self"]],["option"]]],[11,"take_output","","Attempt to take the output of a `MaybeDone` without…",4,[[["pin"],["self"]],["option"]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",9,[[],["t"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",5,[[],["t"]]],[11,"new","","Creates a new `Abortable` future using an existing…",10,[[["abortregistration"],["fut"]],["self"]]],[11,"new_pair","","Creates an (`AbortHandle`, `AbortRegistration`) pair which…",11,[[]]],[11,"abort","","Abort the `Abortable` future associated with this handle.",11,[[["self"]]]],[8,"FutureExt","","An extension trait for `Future`s that provides a variety…",null,null],[11,"map","","Map this future's output to a different type, returning a…",12,[[["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing…",12,[[["f"]],["then"]]],[11,"left_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"right_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"into_stream","","Convert this future into a single element stream.",12,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the output of…",12,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",12,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",12,[[],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it…",12,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",12,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",12,[[],["shared"]]],[11,"remote_handle","","Turn this future into a future that yields `()` on…",12,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",12,[[],["boxfuture"]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",12,[[],["localboxfuture"]]],[11,"unit_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["uniterror"]]],[11,"never_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["nevererror"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future…",12,[[["self"],["context"]],["poll"]]],[11,"now_or_never","","Evaluates and consumes the future, returning the resulting…",12,[[],["option"]]],[8,"TryFutureExt","","Adapters specific to [`Result`]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful…",13,[[],["flattensink"]]],[11,"map_ok","","Maps this future's success value to a different value.",13,[[["f"]],["mapok"]]],[11,"map_ok_or_else","","Maps this future's success value to a different value, and…",13,[[["f"],["e"]],["mapokorelse"]]],[11,"map_err","","Maps this future's error value to a different value.",13,[[["f"]],["maperr"]]],[11,"err_into","","Maps this future's `Error` to a new error type using the…",13,[[],["errinto"]]],[11,"and_then","","Executes another future after this one resolves…",13,[[["f"]],["andthen"]]],[11,"or_else","","Executes another future if this one resolves to an error.…",13,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of a future before…",13,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of a future before…",13,[[["f"]],["inspecterr"]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful…",13,[[],["tryflattenstream"]]],[11,"unwrap_or_else","","Unwraps this future's ouput, producing a future with this…",13,[[["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a [`TryFuture`] into a type that implements `Future`.",13,[[],["intofuture"]]],[11,"try_poll_unpin","","A convenience method for calling [`TryFuture::try_poll`]…",13,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[0,"stream","futures_util","Streams",null,null],[6,"BoxStream","futures_util::stream","An owned dynamically typed [`Stream`] for use in cases…",null,null],[6,"LocalBoxStream","","`BoxStream`, but without the `Send` requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns `true` if the stream should no longer be polled.",14,[[["self"]],["bool"]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",15,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",15,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",15,[[["self"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",16,null],[16,"Error","","The type of failures yielded by this future",16,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",16,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[3,"Chain","","Stream for the `chain` method.",null,null],[3,"Collect","","Future for the `collect` method.",null,null],[3,"Concat","","Future for the `concat` method.",null,null],[3,"Enumerate","","Stream for the `enumerate` method.",null,null],[3,"Filter","","Stream for the `filter` method.",null,null],[3,"FilterMap","","Stream for the `filter_map` method.",null,null],[3,"Flatten","","Stream for the `flatten` method.",null,null],[3,"Fold","","Future for the `fold` method.",null,null],[3,"ForEach","","Future for the `for_each` method.",null,null],[3,"Fuse","","Stream for the `fuse` method.",null,null],[3,"Inspect","","Stream for the `inspect` method.",null,null],[3,"Map","","Stream for the `map` method.",null,null],[3,"Next","","Future for the `next` method.",null,null],[3,"Peek","","Future for the `Peekable::peek()` function from [`Peekable`]",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Scan","","Stream for the `scan` method.",null,null],[3,"SelectNextSome","","Future for the `select_next_some` method.",null,null],[3,"Skip","","Stream for the `skip` method.",null,null],[3,"SkipWhile","","Stream for the `skip_while` method.",null,null],[3,"StreamFuture","","Future for the `into_future` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"TakeWhile","","Stream for the `take_while` method.",null,null],[3,"Then","","Stream for the `then` method.",null,null],[3,"Zip","","Stream for the `zip` method.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` method.",null,null],[3,"Chunks","","Stream for the `chunks` method.",null,null],[3,"Forward","","Future for the `forward` method.",null,null],[3,"BufferUnordered","","Stream for the `buffer_unordered` method.",null,null],[3,"Buffered","","Stream for the `buffered` method.",null,null],[3,"ForEachConcurrent","","Future for the `for_each_concurrent` method.",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",null,null],[12,"0","","",17,null],[12,"1","","",17,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"AndThen","","Stream for the `and_then` method.",null,null],[3,"ErrInto","","Stream for the `err_into` method.",null,null],[3,"InspectErr","","Stream for the `inspect_err` method.",null,null],[3,"InspectOk","","Stream for the `inspect_ok` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"MapErr","","Stream for the `map_err` method.",null,null],[3,"MapOk","","Stream for the `map_ok` method.",null,null],[3,"OrElse","","Stream for the `or_else` method.",null,null],[3,"TryCollect","","Future for the `try_collect` method.",null,null],[3,"TryConcat","","Future for the `try_concat` method.",null,null],[3,"TryFilter","","Stream for the `try_filter` method.",null,null],[3,"TryFilterMap","","Stream for the `try_filter_map` method.",null,null],[3,"TryFlatten","","Stream for the `try_flatten` method.",null,null],[3,"TryFold","","Future for the `try_fold` method.",null,null],[3,"TryForEach","","Future for the `try_for_each` method.",null,null],[3,"TryNext","","Future for the `try_next` method.",null,null],[3,"TrySkipWhile","","Stream for the `try_skip_while` method.",null,null],[3,"TryUnfold","","Stream for the [`try_unfold`] function.",null,null],[3,"IntoAsyncRead","","Reader for the `into_async_read` method.",null,null],[3,"TryBufferUnordered","","Stream for the `try_buffer_unordered` method.",null,null],[3,"TryForEachConcurrent","","Future for the `try_for_each_concurrent` method.",null,null],[3,"Iter","","Stream for the [`iter`] function.",null,null],[3,"Repeat","","Stream for the [`repeat`] function.",null,null],[3,"Empty","","Stream for the [`empty`] function.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"Pending","","Stream for the [`pending()`] function.",null,null],[3,"PollFn","","Stream for the [`poll_fn`] function.",null,null],[3,"Select","","Stream for the [`select()`] function.",null,null],[3,"Unfold","","Stream for the [`unfold`] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[3,"SelectAll","","An unbounded set of streams",null,null],[5,"try_unfold","","Creates a `TryStream` from a seed and a closure returning…",null,[[["t"],["f"]],["tryunfold"]]],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iter"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty"]]],[5,"once","","Creates a stream of a single element.",null,[[["future"]],[["once"],["future"]]]],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending"]]],[5,"poll_fn","","Creates a new stream wrapping a function returning…",null,[[["f"]],["pollfn"]]],[5,"select","","This function will attempt to pull items from both…",null,[[["st1"],["st2"]],["select"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",null,[[["t"],["f"]],["unfold"]]],[5,"select_all","","Convert a list of streams into a `Stream` of results from…",null,[[["i"]],["selectall"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",18,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",19,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",20,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",21,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[],["st"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",22,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",22,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],[["st"],["option"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],[["st"],["option"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",23,[[["pin"],["self"]],[["option",["pin"]],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",24,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",25,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",25,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",25,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",25,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",26,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[],["st"]]],[11,"peek","","Produces a `Peek` future which retrieves a reference to…",26,[[["pin"],["self"]],["peek"]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",26,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",27,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",28,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",29,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",30,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",30,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",30,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",30,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",31,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying streams that this…",32,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",32,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",32,[[["pin"],["self"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",32,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",33,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",34,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",35,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",35,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",35,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",35,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",36,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",36,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",36,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",36,[[],["st"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",37,[[["splitsink"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",38,[[["splitstream"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",39,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",39,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",39,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",39,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",40,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",40,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",40,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",40,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",41,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",41,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",41,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",41,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",42,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",42,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",42,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",42,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",43,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",43,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",43,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",43,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",44,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",44,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",44,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",44,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",45,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",45,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",45,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",45,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",46,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",46,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",46,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",46,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",47,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",47,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",47,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",47,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",48,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",48,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",48,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",48,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",49,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",49,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",49,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",49,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",50,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",50,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",50,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",50,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",51,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",51,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",51,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying streams that this…",52,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",52,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",52,[[["pin"],["self"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",52,[[]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",53,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",53,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",53,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",53,[[["self"],["fut"]]]],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"Iter","futures_util::stream::futures_unordered","Immutable iterator over all the futures in the unordered…",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[11,"new","","Constructs a new, empty [`FuturesUnordered`].",54,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",54,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures.",54,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",54,[[["self"],["fut"]]]],[11,"iter","","Returns an iterator that allows inspecting each future in…",54,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",54,[[["self"]],["itermut"]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in…",54,[[["pin"],["self"]],["iterpinmut"]]],[11,"new","futures_util::stream","Constructs a new, empty `SelectAll`",55,[[],["selectall"]]],[11,"len","","Returns the number of streams contained in the set.",55,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no streams",55,[[["self"]],["bool"]]],[11,"push","","Push a stream into the set.",55,[[["self"],["st"]]]],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Creates a future that resolves to the next item in the…",56,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a future of `(next_item,…",56,[[],["streamfuture"]]],[11,"map","","Maps this stream's items to a different type, returning a…",56,[[["f"]],["map"]]],[11,"enumerate","","Creates a stream which gives the current iteration count…",56,[[],["enumerate"]]],[11,"filter","","Filters the values produced by this stream according to…",56,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",56,[[["f"]],["filtermap"]]],[11,"then","","Computes from this stream's items new items of a different…",56,[[["f"]],["then"]]],[11,"collect","","Transforms a stream into a collection, returning a future…",56,[[],[["extend"],["default"],["collect"]]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",56,[[],["concat"]]],[11,"fold","","Execute an accumulating asynchronous computation over a…",56,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",56,[[],["flatten"]]],[11,"scan","","Combinator similar to [`StreamExt::fold`] that holds…",56,[[["s"],["f"]],["scan"]]],[11,"skip_while","","Skip elements on this stream while the provided…",56,[[["f"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the provided…",56,[[["f"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreach"]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreachconcurrent"]]],[11,"take","","Creates a new stream of at most `n` items of the…",56,[[["usize"]],["take"]]],[11,"skip","","Creates a new stream which skips `n` items of the…",56,[[["usize"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be…",56,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",56,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",56,[[],["catchunwind"]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",56,[[],["boxstream"]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",56,[[],["localboxstream"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",56,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",56,[[["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",56,[[["st"]],["zip"]]],[11,"chain","","Adapter for chaining two streams.",56,[[["st"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",56,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",56,[[["usize"]],["chunks"]]],[11,"forward","","A future that completes after the given stream has been…",56,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",56,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",56,[[["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"poll_next_unpin","","A convenience method for calling [`Stream::poll_next`] on…",56,[[["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"select_next_some","","Returns a [`Future`] that resolves when the next item in…",56,[[["self"]],["selectnextsome"]]],[8,"TryStreamExt","","Adapters specific to `Result`-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts…",57,[[],["errinto"]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["mapok"]]],[11,"map_err","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["maperr"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",57,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",57,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of this stream,…",57,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of this stream,…",57,[[["f"]],["inspecterr"]]],[11,"into_stream","","Wraps a [`TryStream`] into a type that implements `Stream`",57,[[],["intostream"]]],[11,"try_next","","Creates a future that attempts to resolve the next item in…",57,[[["self"]],["trynext"]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeach"]]],[11,"try_skip_while","","Skip elements on this stream while the provided…",57,[[["f"]],["tryskipwhile"]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeachconcurrent"]]],[11,"try_collect","","Attempt to transform a stream into a collection, returning…",57,[[],[["default"],["extend"],["trycollect"]]]],[11,"try_filter","","Attempt to filter the values produced by this stream…",57,[[["f"]],["tryfilter"]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",57,[[["f"]],["tryfiltermap"]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous…",57,[[],["tryflatten"]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous…",57,[[["t"],["f"]],["tryfold"]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",57,[[],["tryconcat"]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream…",57,[[["usize"]],["trybufferunordered"]]],[11,"try_poll_next_unpin","","A convenience method for calling…",57,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"into_async_read","","Adapter that converts this stream into an `AsyncRead`.",57,[[],["intoasyncread"]]],[0,"sink","futures_util","Sinks",null,null],[8,"Sink","futures_util::sink","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",58,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",58,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",58,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",58,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",58,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[3,"Close","","Future for the `close` method.",null,null],[3,"Drain","","Sink for the [`drain`] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"SinkErrInto","","Sink for the `sink_err_into` method.",null,null],[3,"SinkMapErr","","Sink for the `sink_map_err` method.",null,null],[3,"Send","","Future for the `send` method.",null,null],[3,"SendAll","","Future for the `send_all` method.",null,null],[3,"With","","Sink for the `with` method.",null,null],[3,"WithFlatMap","","Sink for the `with_flat_map` method.",null,null],[3,"Buffer","","Sink for the `buffer` method.",null,null],[5,"drain","","Create a sink that will just discard all items given to it.",null,[[],["drain"]]],[11,"get_ref","","Get a shared reference to the inner sinks.",59,[[["self"]]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",59,[[["self"]]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",59,[[["pin"],["self"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",59,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",60,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",60,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",60,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",60,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",61,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",61,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",61,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",61,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",62,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",62,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",62,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",62,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",63,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",63,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",63,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",63,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",64,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",64,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",64,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",64,[[],["si"]]],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of…",null,null],[11,"with","","Composes a function in front of the sink.",65,[[["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",65,[[["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",65,[[["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the…",65,[[],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",65,[[["usize"]],["buffer"]]],[11,"close","","Close the sink.",65,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",65,[[["si"]],["fanout"]]],[11,"flush","","Flush the sink, processing all pending items.",65,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",65,[[["self"],["item"]],["send"]]],[11,"send_all","","A future that completes after the given stream has been…",65,[[["st"],["self"]],[["sendall"],["sized"]]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the…",65,[[],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the…",65,[[],["either"]]],[0,"task","futures_util","Task notification",null,null],[8,"ArcWake","futures_util::task","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make…",66,[[["arc"]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make…",66,[[["arc"]]]],[5,"waker","","Creates a [`Waker`] from an `Arc<impl ArcWake>`.",null,[[["arc"]],["waker"]]],[5,"waker_ref","","Creates a reference to a [`Waker`] from a reference to…",null,[[["arc"]],["wakerref"]]],[3,"WakerRef","","A [`Waker`] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[3,"Context","","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",67,null],[13,"Pending","","Represents that a value is not ready yet.",67,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[8,"Spawn","","The `Spawn` trait allows for pushing futures onto an…",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",68,[[["self"],["futureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",68,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[8,"LocalSpawn","","The `LocalSpawn` is similar to [`Spawn`], but allows…",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",69,[[["self"],["localfutureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",69,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [`Waker`] which does nothing when `wake()` is…",null,[[],["waker"]]],[5,"noop_waker_ref","","Get a static reference to a [`Waker`] which does nothing…",null,[[],["waker"]]],[8,"SpawnExt","","Extension trait for `Spawn`.",null,null],[11,"spawn","","Spawns a task that polls the given future with output `()`…",70,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion…",70,[[["self"],["fut"]],[["spawnerror"],["result",["remotehandle","spawnerror"]],["remotehandle"]]]],[8,"LocalSpawnExt","","Extension trait for `LocalSpawn`.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output `()`…",71,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion…",71,[[["self"],["fut"]],[["spawnerror"],["result",["remotehandle","spawnerror"]],["remotehandle"]]]],[0,"never","futures_util","Definition of the `Never` type, a stand-in for the `!`…",null,null],[6,"Never","futures_util::never","A type with no possible values.",null,null],[0,"io","futures_util","IO",null,null],[8,"AsyncRead","futures_util::io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",72,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",72,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",73,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",73,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",73,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_close","","Attempt to close the object.",73,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",74,[[["pin"],["seekfrom"],["context"],["self"]],[["poll",["result"]],["result",["u64","error"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",75,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",75,[[["pin"],["self"],["usize"]]]],[3,"Error","","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",76,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",76,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",76,null],[13,"ConnectionReset","","The connection was reset by the remote server.",76,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",76,null],[13,"NotConnected","","The network operation failed because it was not connected…",76,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",76,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",76,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",76,null],[13,"AlreadyExists","","An entity already exists, often a file.",76,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",76,null],[13,"InvalidInput","","A parameter was incorrect.",76,null],[13,"InvalidData","","Data not valid for the operation were encountered.",76,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",76,null],[13,"WriteZero","","An error returned when an operation could not be completed…",76,null],[13,"Interrupted","","This operation was interrupted.",76,null],[13,"Other","","Any I/O error not part of this list.",76,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",76,null],[3,"IoSlice","","A buffer type used with `Write::write_vectored`.",null,null],[3,"IoSliceMut","","A buffer type used with `Read::read_vectored`.",null,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O…",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",77,null],[13,"End","","Sets the offset to the size of this object plus the…",77,null],[13,"Current","","Sets the offset to the current position plus the specified…",77,null],[3,"AllowStdIo","","A simple wrapper type which allows types which implement…",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Chain","","Reader for the `chain` method.",null,null],[3,"Close","","Future for the `close` method.",null,null],[3,"Copy","","Future for the [`copy()`] function.",null,null],[3,"CopyBuf","","Future for the [`copy_buf()`] function.",null,null],[3,"Cursor","","A `Cursor` wraps an in-memory buffer and provides it with…",null,null],[3,"Empty","","Reader for the [`empty()`] function.",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"IntoSink","","Sink for the `into_sink` method.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Read","","Future for the `read` method.",null,null],[3,"ReadVectored","","Future for the `read_vectored` method.",null,null],[3,"ReadExact","","Future for the `read_exact` method.",null,null],[3,"ReadLine","","Future for the `read_line` method.",null,null],[3,"ReadToEnd","","Future for the `read_to_end` method.",null,null],[3,"ReadToString","","Future for the `read_to_string` method.",null,null],[3,"ReadUntil","","Future for the `read_until` method.",null,null],[3,"Repeat","","Reader for the [`repeat()`] function.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[3,"Sink","","Writer for the [`sink()`] function.",null,null],[3,"ReadHalf","","The readable half of an object returned from…",null,null],[3,"WriteHalf","","The writable half of an object returned from…",null,null],[3,"Take","","Reader for the `take` method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the `write` method.",null,null],[3,"WriteVectored","","Future for the `write_vectored` method.",null,null],[3,"WriteAll","","Future for the `write_all` method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],[["copy"],["sized"]]]],[5,"copy_buf","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],[["copybuf"],["sized"]]]],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty"]]],[5,"repeat","","Creates an instance of a reader that infinitely repeats…",null,[[["u8"]],["repeat"]]],[5,"sink","","Creates an instance of a writer which will successfully…",null,[[],["sink"]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",78,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",78,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",78,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",78,[[],["t"]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",79,[[["r"]],["self"]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",79,[[["usize"],["r"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying reader.",79,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",79,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",79,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying reader.",79,[[],["r"]]],[11,"buffer","","Returns a reference to the internally buffered data.",79,[[["self"]]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",80,[[["w"]],["self"]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",80,[[["w"],["usize"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying writer.",80,[[["self"]],["w"]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",80,[[["self"]],["w"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",80,[[["pin"],["self"]],[["w"],["pin"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",80,[[],["w"]]],[11,"buffer","","Returns a reference to the internally buffered data.",80,[[["self"]]]],[11,"get_ref","","Gets references to the underlying readers in this `Chain`.",81,[[["self"]]]],[11,"get_mut","","Gets mutable references to the underlying readers in this…",81,[[["self"]]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers…",81,[[["pin"],["self"]]]],[11,"into_inner","","Consumes the `Chain`, returning the wrapped readers.",81,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying…",82,[[["t"]],["cursor"]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",82,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",82,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",82,[[["self"]],["t"]]],[11,"position","","Returns the current position of this cursor.",82,[[["self"]],["u64"]]],[11,"set_position","","Sets the position of this cursor.",82,[[["self"],["u64"]]]],[11,"limit","","Returns the remaining number of bytes that can be read…",83,[[["self"]],["u64"]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",83,[[["self"],["u64"]]]],[11,"get_ref","","Gets a reference to the underlying reader.",83,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",83,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",83,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",83,[[],["r"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",84,[[["t"]],["self"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",84,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",84,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",84,[[],["t"]]],[11,"start","","Returns the starting index of this window into the…",84,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",84,[[["self"]],["usize"]]],[11,"set","","Changes the range of this window to the range specified.",84,[[["self"],["rangebounds",["usize"]],["usize"]]]],[8,"AsyncReadExt","","An extension trait which adds utility methods to…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with…",85,[[["r"]],["chain"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in…",85,[[["self"]],["read"]]],[11,"read_vectored","","Creates a future which will read from the `AsyncRead` into…",85,[[["self"]],["readvectored"]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to…",85,[[["self"]],["readexact"]]],[11,"read_to_end","","Creates a future which will read all the bytes from this…",85,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Creates a future which will read all the bytes from this…",85,[[["self"],["string"]],["readtostring"]]],[11,"split","","Helper method for splitting this read/write object into…",85,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most…",85,[[["u64"]],["take"]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to…",null,null],[11,"flush","","Creates a future which will entirely flush this…",86,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this…",86,[[["self"]],["close"]]],[11,"write","","Creates a future which will write bytes from `buf` into…",86,[[["self"]],["write"]]],[11,"write_vectored","","Creates a future which will write bytes from `bufs` into…",86,[[["self"]],["writevectored"]]],[11,"write_all","","Write data into this object.",86,[[["self"]],["writeall"]]],[11,"into_sink","","Allow using an [`AsyncWrite`] as a `Sink``<Item:…",86,[[],[["asref"],["intosink"]]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",87,[[["seekfrom"],["self"]],["seek"]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Creates a future which will read all the bytes associated…",88,[[["vec"],["self"],["u8"]],["readuntil"]]],[11,"read_line","","Creates a future which will read all the bytes associated…",88,[[["self"],["string"]],["readline"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",88,[[],["lines"]]],[0,"lock","futures_util","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures_util::lock","An RAII guard returned by the `MutexGuard::map` and…",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been…",null,null],[3,"MutexGuard","","An RAII guard returned by the `lock` and `try_lock`…",null,null],[11,"new","","Creates a new futures-aware mutex.",89,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",89,[[],["t"]]],[11,"try_lock","","Attempt to acquire the lock immediately.",89,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"lock","","Acquire the lock asynchronously.",89,[[["self"]],["mutexlockfuture"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",89,[[["self"]],["t"]]],[11,"map","","Returns a locked view over a portion of the locked data.",90,[[["f"]],[["mappedmutexguard"],["sized"]]]],[11,"map","","Returns a locked view over a portion of the locked data.",91,[[["f"]],[["mappedmutexguard"],["sized"]]]],[14,"poll","futures_util","A macro which returns the result of polling a future once…",null,null],[14,"pending","","A macro which yields to the event loop once.",null,null],[14,"join","","Polls multiple futures simultaneously, returning a tuple…",null,null],[14,"try_join","","Polls multiple futures simultaneously, resolving to a…",null,null],[14,"select","","Polls multiple futures and streams simultaneously,…",null,null],[14,"select_biased","","Polls multiple futures and streams simultaneously,…",null,null],[11,"from","futures_util::task","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"try_poll","","",92,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"try_poll","","",93,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures_util::future","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"try_poll","","",94,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"try_poll_next","","",95,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"try_poll","","",6,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"try_poll","","",96,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"try_poll_next","","",97,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"try_poll","","",98,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"try_poll","","",99,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"try_poll","","",100,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"try_poll","","",101,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"try_poll","","",102,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_poll","","",8,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"try_poll","","",104,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"try_poll","","",105,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"try_poll","","",106,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"try_poll","","",107,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"try_poll","","",108,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"try_poll","","",109,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"try_poll","","",110,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"try_poll","","",111,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"try_poll_next","","",112,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"try_poll","","",113,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"try_poll_next","","",114,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"try_poll","","",115,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"try_poll","","",116,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"try_poll","","",118,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"try_poll","","",9,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"try_poll","","",126,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"try_poll","","",127,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"try_poll","","",128,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"try_poll","","",129,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"try_poll","","",130,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"try_poll","","",131,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"try_poll","","",132,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"try_poll","","",10,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"to_string","","",134,[[["self"]],["string"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"try_poll_next","","",135,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"try_poll","","",137,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"try_poll_next","","",19,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"try_poll_next","","",20,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"try_poll_next","","",21,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"try_poll","","",138,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"try_poll_next","","",22,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"try_poll_next","","",24,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"try_poll_next","","",25,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"try_poll_next","","",26,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"try_poll_next","","",34,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"try_poll","","",142,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"try_poll_next","","",27,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"try_poll_next","","",28,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"try_poll_next","","",29,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"try_poll_next","","",30,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"try_poll_next","","",31,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"try_poll_next","","",143,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"try_poll","","",144,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"try_poll_next","","",35,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"try_poll_next","","",36,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"try_poll_next","","",37,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"try_poll_next","","",39,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"try_poll_next","","",40,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"try_poll_next","","",42,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"try_poll_next","","",41,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"try_poll_next","","",43,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"try_poll_next","","",45,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"try_poll_next","","",44,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"try_poll_next","","",46,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"try_poll","","",146,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"try_poll","","",147,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"try_poll_next","","",47,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"try_poll_next","","",48,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"try_poll_next","","",49,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"try_poll","","",148,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"try_poll","","",149,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"try_poll","","",150,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"try_poll_next","","",50,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"try_poll_next","","",151,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"try_poll_next","","",51,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"try_poll","","",153,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"try_poll_next","","",154,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"try_poll_next","","",155,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"try_poll_next","","",156,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"try_poll_next","","",157,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"try_poll_next","","",158,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"try_poll_next","","",159,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"try_poll_next","","",52,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"try_poll_next","","",160,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"try_poll_next","","",53,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream::futures_unordered","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"try_poll_next","","",54,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"try_poll_next","","",55,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream::futures_unordered","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"into_iter","","",161,[[],["i"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"into_iter","","",162,[[],["i"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"into_iter","","",163,[[],["i"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"into_iter","","",164,[[],["i"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","futures_util::sink","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"try_poll","","",165,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"try_poll","","",167,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"try_poll_next","","",60,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"try_poll_next","","",61,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"try_poll","","",168,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"try_poll","","",169,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"try_poll_next","","",62,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"try_poll_next","","",63,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"try_poll_next","","",64,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::task","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"from","","",67,[[],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_string","","",176,[[["self"]],["string"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","futures_util::io","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_string","","",177,[[["self"]],["string"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"try_poll","","",180,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"try_poll","","",181,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"try_poll","","",182,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"try_poll","","",184,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"try_poll_next","","",186,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"try_poll","","",187,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"try_poll","","",188,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"try_poll","","",189,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"try_poll","","",190,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"try_poll","","",191,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"try_poll","","",192,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"try_poll","","",193,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"try_poll","","",195,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"try_poll","","",199,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"try_poll","","",200,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"try_poll","","",201,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures_util::lock","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"from","","",89,[[],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"cmp","futures_util::io","",76,[[["errorkind"],["self"]],["ordering"]]],[11,"deref_mut","","",179,[[["self"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"deref","","",178,[[["self"]]]],[11,"deref","","",179,[[["self"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",177,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",177,[[["nulerror"]],["error"]]],[11,"from","","",177,[[["intoinnererror"]],["error"]]],[11,"description","","",177,[[["self"]],["str"]]],[11,"cause","","",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",179,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",178,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",77,[[["self"]],["seekfrom"]]],[11,"clone","","",76,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",76,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",77,[[["seekfrom"],["self"]],["bool"]]],[11,"ne","","",77,[[["seekfrom"],["self"]],["bool"]]],[11,"eq","","",76,[[["errorkind"],["self"]],["bool"]]],[11,"clone","futures_util::task","",173,[[["self"]],["waker"]]],[11,"clone","","",175,[[["self"]],["rawwakervtable"]]],[11,"clone","","",67,[[["self"]],["poll"]]],[11,"drop","","",173,[[["self"]]]],[11,"eq","","",175,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",175,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",174,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",174,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",67,[[["poll"],["self"]],["bool"]]],[11,"ne","","",67,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",67,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",174,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",175,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",172,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",173,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",67,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"from","","",67,[[["t"]],["poll"]]],[11,"partial_cmp","","",67,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",67,[[["poll"],["self"]],["bool"]]],[11,"le","","",67,[[["poll"],["self"]],["bool"]]],[11,"gt","","",67,[[["poll"],["self"]],["bool"]]],[11,"ge","","",67,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",67,[[],["result"]]],[11,"from_error","","",67,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",67,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",67,[[],["result"]]],[11,"from_error","","",67,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",67,[[],[["result"],["poll",["result"]]]]],[11,"default","","",171,[[],["atomicwaker"]]],[11,"fmt","","",171,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",93,[[["futureobj"]],["localfutureobj"]]],[11,"from","","",93,[[["box",["future"]],["future"]],["localfutureobj"]]],[11,"from","","",93,[[["box"]],["localfutureobj"]]],[11,"from","","",92,[[["box"]],["futureobj"]]],[11,"from","","",92,[[["pin",["box"]],["box"]],["futureobj"]]],[11,"from","","",92,[[["pin",["box"]],["box",["future"]]],["futureobj"]]],[11,"from","","",92,[[["box",["future"]],["future"]],["futureobj"]]],[11,"from","","",93,[[["box",["future"]],["pin",["box"]]],["localfutureobj"]]],[11,"from","","",93,[[["pin",["box"]],["box"]],["localfutureobj"]]],[11,"fmt","","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","","",92,[[["pin",["futureobj"]],["context"],["futureobj"]],["poll"]]],[11,"poll","","",93,[[["pin",["localfutureobj"]],["localfutureobj"],["context"]],["poll"]]],[11,"drop","","",93,[[["self"]]]],[11,"deref","","",170,[[["self"]],["waker"]]],[11,"drop","futures_util::future","",8,[[["self"]]]],[11,"drop","futures_util::stream::futures_unordered","",54,[[["self"]]]],[11,"drop","futures_util::lock","",202,[[["self"]]]],[11,"drop","","",90,[[["self"]]]],[11,"drop","","",91,[[["self"]]]],[11,"as_mut","futures_util::io","",84,[[["self"]]]],[11,"as_ref","","",84,[[["self"]]]],[11,"from","futures_util::future","",117,[[["option"]],["self"]]],[11,"from","futures_util::lock","",89,[[["t"]],["self"]]],[11,"next","futures_util::stream::futures_unordered","",163,[[["self"]],[["pin"],["option",["pin"]]]]],[11,"size_hint","","",163,[[["self"]]]],[11,"next","","",162,[[["self"]],[["option"],["fut"]]]],[11,"size_hint","","",162,[[["self"]]]],[11,"next","","",164,[[["self"]],[["option",["pin"]],["pin"]]]],[11,"size_hint","","",164,[[["self"]]]],[11,"next","","",161,[[["self"]],[["fut"],["option"]]]],[11,"size_hint","","",161,[[["self"]]]],[11,"clone","futures_util::future","",8,[[["self"]],["self"]]],[11,"clone","","",116,[[["self"]],["self"]]],[11,"clone","","",117,[[["self"]],["optionfuture"]]],[11,"clone","","",9,[[["self"]],["ready"]]],[11,"clone","","",5,[[["self"]],["either"]]],[11,"clone","","",10,[[["self"]],["abortable"]]],[11,"clone","","",11,[[["self"]],["aborthandle"]]],[11,"clone","","",134,[[["self"]],["aborted"]]],[11,"clone","futures_util::sink","",61,[[["self"]],["sinkmaperr"]]],[11,"clone","futures_util::io","",78,[[["self"]],["allowstdio"]]],[11,"clone","","",82,[[["self"]],["cursor"]]],[11,"default","futures_util::stream","",53,[[],["futuresordered"]]],[11,"default","futures_util::stream::futures_unordered","",54,[[],["futuresunordered"]]],[11,"default","futures_util::stream","",55,[[],["selectall"]]],[11,"default","futures_util::io","",82,[[],["cursor"]]],[11,"default","futures_util::lock","",89,[[],["mutex"]]],[11,"cmp","futures_util::io","",78,[[["self"],["allowstdio"]],["ordering"]]],[11,"eq","futures_util::future","",134,[[["self"],["aborted"]],["bool"]]],[11,"eq","futures_util::io","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"partial_cmp","","",78,[[["self"],["allowstdio"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"deref","futures_util::lock","",90,[[["self"]],["t"]]],[11,"deref","","",91,[[["self"]],["u"]]],[11,"deref_mut","","",90,[[["self"]],["t"]]],[11,"deref_mut","","",91,[[["self"]],["u"]]],[11,"fmt","futures_util::future","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream::futures_unordered","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::sink","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::io","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::lock","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::future","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream","",17,[[["formatter"],["self"]],["result"]]],[11,"hash","futures_util::io","",78,[[["self"],["__h"]]]],[11,"from_iter","futures_util::future","",123,[[["intoiterator"]],["self"]]],[11,"from_iter","","",125,[[["intoiterator"]],["self"]]],[11,"from_iter","","",130,[[["intoiterator"]],["self"]]],[11,"from_iter","","",132,[[["intoiterator"]],["self"]]],[11,"from_iter","futures_util::stream","",53,[[["t"]],["self"]]],[11,"from_iter","futures_util::stream::futures_unordered","",54,[[["i"]],["self"]]],[11,"from_iter","futures_util::stream","",55,[[["intoiterator"]],["self"]]],[11,"fill_buf","futures_util::io","",78,[[["self"]],["result"]]],[11,"consume","","",78,[[["self"],["usize"]]]],[11,"read","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_vectored","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_to_end","","",78,[[["self"],["vec"]],[["result",["usize"]],["usize"]]]],[11,"read_to_string","","",78,[[["self"],["string"]],[["result",["usize"]],["usize"]]]],[11,"read_exact","","",78,[[["self"]],["result"]]],[11,"seek","","",78,[[["seekfrom"],["self"]],[["result",["u64"]],["u64"]]]],[11,"write","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_vectored","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",78,[[["self"]],["result"]]],[11,"write_all","","",78,[[["self"]],["result"]]],[11,"write_fmt","","",78,[[["arguments"],["self"]],["result"]]],[11,"poll","futures_util::future","",94,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",6,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",98,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",100,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",96,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",101,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll","","",99,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",102,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",7,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",103,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",8,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",104,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",105,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",107,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",106,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",108,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",109,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",110,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",111,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",113,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",115,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",116,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",4,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",117,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",118,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",9,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",119,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",120,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",121,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",122,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",123,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",124,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",125,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",126,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",127,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",128,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",129,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",130,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",131,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",132,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",10,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","futures_util::stream","",136,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",137,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",138,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",144,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",139,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",23,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",140,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",142,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",141,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",145,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",150,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",149,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",146,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",147,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",148,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",153,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","futures_util::sink","",165,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",167,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",168,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",169,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","futures_util::io","",180,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",181,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",182,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",184,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",187,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",188,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",189,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",190,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",191,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",192,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",193,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",195,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",199,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",200,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",201,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll","futures_util::lock","",202,[[["pin"],["self"],["context"]],["poll"]]],[11,"is_terminated","futures_util::future","",94,[[["self"]],["bool"]]],[11,"is_terminated","","",6,[[["self"]],["bool"]]],[11,"is_terminated","","",98,[[["self"]],["bool"]]],[11,"is_terminated","","",100,[[["self"]],["bool"]]],[11,"is_terminated","","",96,[[["self"]],["bool"]]],[11,"is_terminated","","",101,[[["self"]],["bool"]]],[11,"is_terminated","","",99,[[["self"]],["bool"]]],[11,"is_terminated","","",8,[[["self"]],["bool"]]],[11,"is_terminated","","",104,[[["self"]],["bool"]]],[11,"is_terminated","","",105,[[["self"]],["bool"]]],[11,"is_terminated","","",107,[[["self"]],["bool"]]],[11,"is_terminated","","",106,[[["self"]],["bool"]]],[11,"is_terminated","","",108,[[["self"]],["bool"]]],[11,"is_terminated","","",109,[[["self"]],["bool"]]],[11,"is_terminated","","",110,[[["self"]],["bool"]]],[11,"is_terminated","","",111,[[["self"]],["bool"]]],[11,"is_terminated","","",113,[[["self"]],["bool"]]],[11,"is_terminated","","",115,[[["self"]],["bool"]]],[11,"is_terminated","","",116,[[["self"]],["bool"]]],[11,"is_terminated","","",4,[[["self"]],["bool"]]],[11,"is_terminated","","",117,[[["self"]],["bool"]]],[11,"is_terminated","","",9,[[["self"]],["bool"]]],[11,"is_terminated","","",119,[[["self"]],["bool"]]],[11,"is_terminated","","",120,[[["self"]],["bool"]]],[11,"is_terminated","","",121,[[["self"]],["bool"]]],[11,"is_terminated","","",122,[[["self"]],["bool"]]],[11,"is_terminated","","",124,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream","",136,[[["self"]],["bool"]]],[11,"is_terminated","","",137,[[["self"]],["bool"]]],[11,"is_terminated","","",138,[[["self"]],["bool"]]],[11,"is_terminated","","",144,[[["self"]],["bool"]]],[11,"is_terminated","","",139,[[["self"]],["bool"]]],[11,"is_terminated","","",23,[[["self"]],["bool"]]],[11,"is_terminated","","",140,[[["self"]],["bool"]]],[11,"is_terminated","","",142,[[["self"]],["bool"]]],[11,"is_terminated","","",141,[[["self"]],["bool"]]],[11,"is_terminated","","",145,[[["self"]],["bool"]]],[11,"is_terminated","","",150,[[["self"]],["bool"]]],[11,"is_terminated","","",146,[[["self"]],["bool"]]],[11,"is_terminated","","",148,[[["self"]],["bool"]]],[11,"is_terminated","","",153,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::lock","",202,[[["self"]],["bool"]]],[11,"poll_next","futures_util::future","",95,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",97,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",97,[[["self"]]]],[11,"poll_next","","",114,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",112,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",5,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","futures_util::stream","",135,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",135,[[["self"]]]],[11,"poll_next","","",18,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",18,[[["self"]]]],[11,"poll_next","","",19,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",19,[[["self"]]]],[11,"poll_next","","",20,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",20,[[["self"]]]],[11,"poll_next","","",21,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",22,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"poll_next","","",24,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"poll_next","","",25,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",25,[[["self"]]]],[11,"poll_next","","",26,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",26,[[["self"]]]],[11,"poll_next","","",27,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",27,[[["self"]]]],[11,"poll_next","","",28,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",28,[[["self"]]]],[11,"poll_next","","",29,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",29,[[["self"]]]],[11,"poll_next","","",30,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",30,[[["self"]]]],[11,"poll_next","","",31,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",31,[[["self"]]]],[11,"poll_next","","",32,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",32,[[["self"]]]],[11,"poll_next","","",33,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",33,[[["self"]]]],[11,"poll_next","","",34,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"poll_next","","",35,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",35,[[["self"]]]],[11,"poll_next","","",36,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",36,[[["self"]]]],[11,"poll_next","","",37,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",143,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",143,[[["self"]]]],[11,"poll_next","","",39,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",39,[[["self"]]]],[11,"poll_next","","",40,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",40,[[["self"]]]],[11,"poll_next","","",41,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",41,[[["self"]]]],[11,"poll_next","","",42,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",42,[[["self"]]]],[11,"poll_next","","",43,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",43,[[["self"]]]],[11,"poll_next","","",44,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",44,[[["self"]]]],[11,"poll_next","","",45,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",45,[[["self"]]]],[11,"poll_next","","",46,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",46,[[["self"]]]],[11,"poll_next","","",47,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"size_hint","","",47,[[["self"]]]],[11,"poll_next","","",48,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"size_hint","","",48,[[["self"]]]],[11,"poll_next","","",49,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",151,[[["pin"],["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"poll_next","","",50,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",50,[[["self"]]]],[11,"poll_next","","",51,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",154,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",154,[[["self"]]]],[11,"poll_next","","",155,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",155,[[["self"]]]],[11,"poll_next","","",156,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",156,[[["self"]]]],[11,"poll_next","","",157,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",157,[[["self"]]]],[11,"poll_next","","",158,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",158,[[["self"]]]],[11,"poll_next","","",159,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",52,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",160,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",53,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",53,[[["self"]]]],[11,"poll_next","futures_util::stream::futures_unordered","",54,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",54,[[["self"]]]],[11,"poll_next","futures_util::stream","",55,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures_util::sink","",60,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",60,[[["self"]]]],[11,"poll_next","","",61,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",61,[[["self"]]]],[11,"poll_next","","",62,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",62,[[["self"]]]],[11,"poll_next","","",63,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",63,[[["self"]]]],[11,"poll_next","","",64,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",64,[[["self"]]]],[11,"poll_next","futures_util::io","",186,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"is_terminated","futures_util::future","",95,[[["self"]],["bool"]]],[11,"is_terminated","","",97,[[["self"]],["bool"]]],[11,"is_terminated","","",114,[[["self"]],["bool"]]],[11,"is_terminated","","",112,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream","",135,[[["self"]],["bool"]]],[11,"is_terminated","","",18,[[["self"]],["bool"]]],[11,"is_terminated","","",19,[[["self"]],["bool"]]],[11,"is_terminated","","",20,[[["self"]],["bool"]]],[11,"is_terminated","","",21,[[["self"]],["bool"]]],[11,"is_terminated","","",22,[[["self"]],["bool"]]],[11,"is_terminated","","",24,[[["self"]],["bool"]]],[11,"is_terminated","","",25,[[["self"]],["bool"]]],[11,"is_terminated","","",26,[[["self"]],["bool"]]],[11,"is_terminated","","",27,[[["self"]],["bool"]]],[11,"is_terminated","","",28,[[["self"]],["bool"]]],[11,"is_terminated","","",29,[[["self"]],["bool"]]],[11,"is_terminated","","",30,[[["self"]],["bool"]]],[11,"is_terminated","","",31,[[["self"]],["bool"]]],[11,"is_terminated","","",32,[[["self"]],["bool"]]],[11,"is_terminated","","",33,[[["self"]],["bool"]]],[11,"is_terminated","","",34,[[["self"]],["bool"]]],[11,"is_terminated","","",35,[[["self"]],["bool"]]],[11,"is_terminated","","",143,[[["self"]],["bool"]]],[11,"is_terminated","","",39,[[["self"]],["bool"]]],[11,"is_terminated","","",40,[[["self"]],["bool"]]],[11,"is_terminated","","",41,[[["self"]],["bool"]]],[11,"is_terminated","","",42,[[["self"]],["bool"]]],[11,"is_terminated","","",43,[[["self"]],["bool"]]],[11,"is_terminated","","",44,[[["self"]],["bool"]]],[11,"is_terminated","","",45,[[["self"]],["bool"]]],[11,"is_terminated","","",46,[[["self"]],["bool"]]],[11,"is_terminated","","",47,[[["self"]],["bool"]]],[11,"is_terminated","","",48,[[["self"]],["bool"]]],[11,"is_terminated","","",49,[[["self"]],["bool"]]],[11,"is_terminated","","",50,[[["self"]],["bool"]]],[11,"is_terminated","","",155,[[["self"]],["bool"]]],[11,"is_terminated","","",156,[[["self"]],["bool"]]],[11,"is_terminated","","",157,[[["self"]],["bool"]]],[11,"is_terminated","","",158,[[["self"]],["bool"]]],[11,"is_terminated","","",52,[[["self"]],["bool"]]],[11,"is_terminated","","",160,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream::futures_unordered","",54,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream","",55,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::sink","",60,[[["self"]],["bool"]]],[11,"is_terminated","","",61,[[["self"]],["bool"]]],[11,"is_terminated","","",63,[[["self"]],["bool"]]],[11,"is_terminated","","",64,[[["self"]],["bool"]]],[11,"spawn_obj","futures_util::stream::futures_unordered","",54,[[["self"],["futureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_obj","","",54,[[["self"],["localfutureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"poll_ready","futures_util::future","",114,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",114,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",114,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",114,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",112,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",112,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",112,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",112,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",5,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures_util::stream","",18,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",18,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",18,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",18,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",19,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",19,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",19,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",19,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",20,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",20,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",20,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",20,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",21,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",22,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",22,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",22,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",22,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",24,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",24,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",24,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",24,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",25,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",25,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",25,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",25,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",26,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",26,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",26,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",26,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",27,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",27,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",27,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",27,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",28,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",28,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",28,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",28,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",29,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",29,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",29,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",29,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",30,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",30,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",30,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",30,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",31,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",31,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",31,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",31,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",33,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",33,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",33,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",33,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",34,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",34,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",34,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",34,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",35,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",35,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",35,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",35,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",36,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",36,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",36,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",36,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",38,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",38,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",38,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",38,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",39,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",39,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",39,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",39,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",40,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",40,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",40,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",40,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",41,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",41,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",41,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",41,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",42,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",42,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",42,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",42,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",43,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",43,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",43,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",43,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",44,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",44,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",44,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",44,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",45,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",45,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",45,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",45,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",46,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",46,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",46,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",46,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",47,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",47,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",47,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",47,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",48,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",48,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",48,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",48,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",49,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",49,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",49,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",49,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",50,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",50,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",50,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",50,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",51,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",51,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",51,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",51,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures_util::sink","",166,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",166,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",166,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",166,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",59,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",59,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",59,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",59,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",60,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",60,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",60,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",60,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",61,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",61,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",61,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",61,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",62,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",62,[[["u"],["pin"],["self"]],["result"]]],[11,"poll_flush","","",62,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",62,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",63,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",63,[[["u"],["pin"],["self"]],["result"]]],[11,"poll_flush","","",63,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",63,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",64,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",64,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",64,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",64,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures_util::io","",185,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",185,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",185,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",185,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_read","futures_util::future","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_vectored","","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","futures_util::stream","",152,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","futures_util::io","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",81,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",81,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",183,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",194,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",194,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",197,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",197,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",83,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write","futures_util::future","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_vectored","","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","futures_util::stream","",152,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",152,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",152,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","futures_util::io","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_seek","futures_util::future","",5,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","futures_util::io","",78,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",79,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",80,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","","",82,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_fill_buf","futures_util::future","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",5,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","futures_util::stream","",152,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",152,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","futures_util::io","",78,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",78,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",79,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",79,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",80,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",80,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",81,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",81,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",82,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",82,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",183,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",183,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",83,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",83,[[["pin"],["self"],["usize"]]]],[11,"new","futures_util::task","Create a `FutureObj` from a custom trait object…",92,[[["f"]],["futureobj"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object…",93,[[["f"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj`.",93,[[],["futureobj"]]],[11,"map","futures_util::future","Map this future's output to a different type, returning a…",12,[[["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing…",12,[[["f"]],["then"]]],[11,"left_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"right_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"into_stream","","Convert this future into a single element stream.",12,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the output of…",12,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",12,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",12,[[],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it…",12,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",12,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",12,[[],["shared"]]],[11,"remote_handle","","Turn this future into a future that yields `()` on…",12,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",12,[[],["boxfuture"]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",12,[[],["localboxfuture"]]],[11,"unit_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["uniterror"]]],[11,"never_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["nevererror"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future…",12,[[["self"],["context"]],["poll"]]],[11,"now_or_never","","Evaluates and consumes the future, returning the resulting…",12,[[],["option"]]],[11,"flatten_sink","","Flattens the execution of this future when the successful…",13,[[],["flattensink"]]],[11,"map_ok","","Maps this future's success value to a different value.",13,[[["f"]],["mapok"]]],[11,"map_ok_or_else","","Maps this future's success value to a different value, and…",13,[[["f"],["e"]],["mapokorelse"]]],[11,"map_err","","Maps this future's error value to a different value.",13,[[["f"]],["maperr"]]],[11,"err_into","","Maps this future's `Error` to a new error type using the…",13,[[],["errinto"]]],[11,"and_then","","Executes another future after this one resolves…",13,[[["f"]],["andthen"]]],[11,"or_else","","Executes another future if this one resolves to an error.…",13,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of a future before…",13,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of a future before…",13,[[["f"]],["inspecterr"]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful…",13,[[],["tryflattenstream"]]],[11,"unwrap_or_else","","Unwraps this future's ouput, producing a future with this…",13,[[["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a [`TryFuture`] into a type that implements `Future`.",13,[[],["intofuture"]]],[11,"try_poll_unpin","","A convenience method for calling [`TryFuture::try_poll`]…",13,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"next","futures_util::stream","Creates a future that resolves to the next item in the…",56,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a future of `(next_item,…",56,[[],["streamfuture"]]],[11,"map","","Maps this stream's items to a different type, returning a…",56,[[["f"]],["map"]]],[11,"enumerate","","Creates a stream which gives the current iteration count…",56,[[],["enumerate"]]],[11,"filter","","Filters the values produced by this stream according to…",56,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",56,[[["f"]],["filtermap"]]],[11,"then","","Computes from this stream's items new items of a different…",56,[[["f"]],["then"]]],[11,"collect","","Transforms a stream into a collection, returning a future…",56,[[],[["extend"],["default"],["collect"]]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",56,[[],["concat"]]],[11,"fold","","Execute an accumulating asynchronous computation over a…",56,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",56,[[],["flatten"]]],[11,"scan","","Combinator similar to [`StreamExt::fold`] that holds…",56,[[["s"],["f"]],["scan"]]],[11,"skip_while","","Skip elements on this stream while the provided…",56,[[["f"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the provided…",56,[[["f"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreach"]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreachconcurrent"]]],[11,"take","","Creates a new stream of at most `n` items of the…",56,[[["usize"]],["take"]]],[11,"skip","","Creates a new stream which skips `n` items of the…",56,[[["usize"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be…",56,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",56,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",56,[[],["catchunwind"]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",56,[[],["boxstream"]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",56,[[],["localboxstream"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",56,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",56,[[["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",56,[[["st"]],["zip"]]],[11,"chain","","Adapter for chaining two streams.",56,[[["st"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",56,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",56,[[["usize"]],["chunks"]]],[11,"forward","","A future that completes after the given stream has been…",56,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",56,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",56,[[["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"poll_next_unpin","","A convenience method for calling [`Stream::poll_next`] on…",56,[[["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"select_next_some","","Returns a [`Future`] that resolves when the next item in…",56,[[["self"]],["selectnextsome"]]],[11,"err_into","","Wraps the current stream in a new stream which converts…",57,[[],["errinto"]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["mapok"]]],[11,"map_err","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["maperr"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",57,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",57,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of this stream,…",57,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of this stream,…",57,[[["f"]],["inspecterr"]]],[11,"into_stream","","Wraps a [`TryStream`] into a type that implements `Stream`",57,[[],["intostream"]]],[11,"try_next","","Creates a future that attempts to resolve the next item in…",57,[[["self"]],["trynext"]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeach"]]],[11,"try_skip_while","","Skip elements on this stream while the provided…",57,[[["f"]],["tryskipwhile"]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeachconcurrent"]]],[11,"try_collect","","Attempt to transform a stream into a collection, returning…",57,[[],[["default"],["extend"],["trycollect"]]]],[11,"try_filter","","Attempt to filter the values produced by this stream…",57,[[["f"]],["tryfilter"]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",57,[[["f"]],["tryfiltermap"]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous…",57,[[],["tryflatten"]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous…",57,[[["t"],["f"]],["tryfold"]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",57,[[],["tryconcat"]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream…",57,[[["usize"]],["trybufferunordered"]]],[11,"try_poll_next_unpin","","A convenience method for calling…",57,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"into_async_read","","Adapter that converts this stream into an `AsyncRead`.",57,[[],["intoasyncread"]]],[11,"new","futures_util::task","Create a new [`WakerRef`] from a [`Waker`] reference.",170,[[["waker"]],["wakerref"]]],[11,"new_unowned","","Create a new [`WakerRef`] from a [`Waker`] that must not…",170,[[["waker"],["manuallydrop",["waker"]]],["wakerref"]]],[11,"new","","Create an `AtomicWaker`.",171,[[],["atomicwaker"]]],[11,"register","","Registers the waker to be notified on calls to `wake`.",171,[[["waker"],["self"]]]],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",171,[[["self"]]]],[11,"take","","Returns the last `Waker` passed to `register`, so that the…",171,[[["self"]],[["waker"],["option",["waker"]]]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",172,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",172,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",67,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",67,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",67,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",67,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",67,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",67,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",67,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",173,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",173,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",173,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",173,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",174,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",175,[[],["rawwakervtable"]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",176,[[],["spawnerror"]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut…",176,[[["self"]],["bool"]]],[11,"spawn","","Spawns a task that polls the given future with output `()`…",70,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion…",70,[[["self"],["fut"]],[["spawnerror"],["result",["remotehandle","spawnerror"]],["remotehandle"]]]],[11,"spawn_local","","Spawns a task that polls the given future with output `()`…",71,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion…",71,[[["self"],["fut"]],[["spawnerror"],["result",["remotehandle","spawnerror"]],["remotehandle"]]]],[11,"new","futures_util::io","Creates a new I/O error from a known kind of error as well…",177,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",177,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",177,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",177,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",177,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",177,[[["self"]],["errorkind"]]],[11,"new","","Creates a new `IoSlice` wrapping a byte slice.",178,[[],["ioslice"]]],[11,"advance","","Advance the internal cursor of the slice.",178,[[["usize"]]]],[11,"new","","Creates a new `IoSliceMut` wrapping a byte slice.",179,[[],["ioslicemut"]]],[11,"advance","","Advance the internal cursor of the slice.",179,[[["usize"]]]]],"p":[[8,"FusedFuture"],[8,"Future"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[4,"MaybeDone"],[4,"Either"],[3,"Fuse"],[3,"RemoteHandle"],[3,"Shared"],[3,"Ready"],[3,"Abortable"],[3,"AbortHandle"],[8,"FutureExt"],[8,"TryFutureExt"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[3,"ReuniteError"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"SplitStream"],[3,"SplitSink"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"IntoStream"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TrySkipWhile"],[3,"TryBufferUnordered"],[3,"Select"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"SelectAll"],[8,"StreamExt"],[8,"TryStreamExt"],[8,"Sink"],[3,"Fanout"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[8,"SinkExt"],[8,"ArcWake"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[4,"ErrorKind"],[4,"SeekFrom"],[3,"AllowStdIo"],[3,"BufReader"],[3,"BufWriter"],[3,"Chain"],[3,"Cursor"],[3,"Take"],[3,"Window"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Flatten"],[3,"FlattenStream"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"NeverError"],[3,"Then"],[3,"UnitError"],[3,"CatchUnwind"],[3,"Remote"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectErr"],[3,"InspectOk"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"FlattenSink"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Fold"],[3,"ForEach"],[3,"Next"],[3,"Peek"],[3,"SelectNextSome"],[3,"CatchUnwind"],[3,"Forward"],[3,"ForEachConcurrent"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TryForEach"],[3,"TryNext"],[3,"TryUnfold"],[3,"IntoAsyncRead"],[3,"TryForEachConcurrent"],[3,"Iter"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Unfold"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"Close"],[3,"Drain"],[3,"Flush"],[3,"Send"],[3,"SendAll"],[3,"WakerRef"],[3,"AtomicWaker"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Empty"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[3,"MutexLockFuture"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["option",["i32"]],["i32"]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["grpcio"] = {"doc":"[grpcio] is a Rust implementation of [gRPC], which is a…","i":[[4,"RpcStatusCode","grpcio","Result of a remote procedure call.",null,null],[13,"Ok","","Not an error; returned on success.",0,null],[13,"Cancelled","","The operation was cancelled (typically by the caller).",0,null],[13,"Unknown","","Unknown error. An example of where this error may be…",0,null],[13,"InvalidArgument","","Client specified an invalid argument. Note that this…",0,null],[13,"DeadlineExceeded","","Deadline expired before operation could complete. For…",0,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",0,null],[13,"AlreadyExists","","Some entity that we attempted to create (e.g., file or…",0,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",0,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",0,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",0,null],[13,"FailedPrecondition","","Operation was rejected because the system is not in a…",0,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",0,null],[13,"OutOfRange","","Operation was attempted past the valid range. E.g.,…",0,null],[13,"Unimplemented","","Operation is not implemented or not supported/enabled in…",0,null],[13,"Internal","","Internal errors. Means some invariants expected by…",0,null],[13,"Unavailable","","The service is currently unavailable. This is a most…",0,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",0,null],[4,"CompressionAlgorithms","","Various compression algorithms supported by gRPC.",null,null],[13,"None","","",1,null],[13,"Deflate","","",1,null],[13,"Gzip","","",1,null],[4,"CompressionLevel","","Compression levels supported by gRPC.",null,null],[13,"None","","No compression.",2,null],[13,"Low","","Low compression.",2,null],[13,"Med","","Medium compression.",2,null],[13,"High","","High compression.",2,null],[3,"CallOption","","Options for calls made by client.",null,null],[3,"ClientCStreamReceiver","","A receiver for client streaming call.",null,null],[3,"ClientDuplexReceiver","","A response receiver for duplex call.",null,null],[3,"ClientSStreamReceiver","","A receiver for server streaming call.",null,null],[3,"ClientUnaryReceiver","","A receiver for unary request.",null,null],[3,"StreamingCallSink","","A sink for client streaming call and duplex streaming…",null,null],[3,"ClientStreamingSink","","A sink for client streaming call.",null,null],[3,"ClientStreamingSinkResult","","",null,null],[3,"Deadline","","",null,null],[3,"DuplexSink","","A sink for duplex streaming call.",null,null],[3,"DuplexSinkFailure","","",null,null],[3,"RequestStream","","A stream for client a streaming call and a duplex…",null,null],[3,"RpcContext","","A context for rpc handling.",null,null],[3,"ServerStreamingSink","","A sink for server streaming call.",null,null],[3,"ServerStreamingSinkFailure","","",null,null],[3,"UnarySink","","A sink for unary call.",null,null],[3,"UnarySinkResult","","",null,null],[3,"Method","","A description of a remote method.",null,null],[12,"ty","","Type of method.",3,null],[12,"name","","Full qualified name of the method.",3,null],[12,"req_mar","","The marshaller used for request messages.",3,null],[12,"resp_mar","","The marshaller used for response messages.",3,null],[3,"RpcStatus","","RPC result returned from the server.",null,null],[12,"status","","gRPC status code. `Ok` indicates success, all other values…",4,null],[12,"details","","Optional detail string.",4,null],[3,"WriteFlags","","Flags for write operations.",null,null],[3,"Channel","","A gRPC channel.",null,null],[3,"ChannelBuilder","","[`Channel`] factory in order to configure the properties.",null,null],[3,"Client","","A generic client for making RPC calls.",null,null],[3,"Marshaller","","Defines how to serialize and deserialize between the…",null,null],[12,"ser","","The serialize function.",5,null],[12,"de","","The deserialize function.",5,null],[3,"ChannelCredentials","","Client-side SSL credentials.",null,null],[3,"ChannelCredentialsBuilder","","[`ChannelCredentials`] factory in order to configure the…",null,null],[3,"ServerCredentials","","Server-side SSL credentials.",null,null],[3,"ServerCredentialsBuilder","","[`ServerCredentials`] factory in order to configure the…",null,null],[3,"EnvBuilder","","[`Environment`] factory in order to configure the…",null,null],[3,"Environment","","An object that used to control concurrency and start gRPC…",null,null],[3,"Metadata","","A collection of metadata entries that can be exchanged…",null,null],[3,"MetadataBuilder","","Builder for immutable Metadata.",null,null],[3,"MetadataIter","","Immutable metadata iterator",null,null],[3,"ResourceQuota","","ResourceQuota represents a bound on memory and thread…",null,null],[3,"Server","","A gRPC server.",null,null],[3,"ServerBuilder","","[`Server`] factory in order to configure the properties.",null,null],[3,"Service","","A gRPC service.",null,null],[3,"ServiceBuilder","","[`Service`] factory in order to configure the properties.",null,null],[3,"ShutdownFuture","","A `Future` that will resolve when shutdown completes.",null,null],[4,"MethodType","","Method types supported by gRPC.",null,null],[13,"Unary","","Single request sent from client, single response received…",6,null],[13,"ClientStreaming","","Stream of requests sent from client, single response…",6,null],[13,"ServerStreaming","","Single request sent from client, stream of responses…",6,null],[13,"Duplex","","Both server and client can stream arbitrary number of…",6,null],[4,"LbPolicy","","",null,null],[13,"PickFirst","","",7,null],[13,"RoundRobin","","",7,null],[4,"OptTarget","","The optimization target for a [`Channel`].",null,null],[13,"Latency","","Minimize latency at the cost of throughput.",8,null],[13,"Blend","","Balance latency and throughput.",8,null],[13,"Throughput","","Maximize throughput at the expense of latency.",8,null],[4,"Error","","Errors generated from this library.",null,null],[13,"Codec","","Codec error.",9,null],[13,"CallFailure","","Failed to start an internal async call.",9,null],[13,"RpcFailure","","Rpc request fail.",9,null],[13,"RpcFinished","","Try to write to a finished rpc call.",9,null],[13,"RemoteStopped","","Remote is stopped.",9,null],[13,"ShutdownFailed","","Failed to shutdown.",9,null],[13,"BindFail","","Failed to bind.",9,null],[13,"QueueShutdown","","gRPC completion queue is shutdown.",9,null],[13,"GoogleAuthenticationFailed","","Failed to create Google default credentials.",9,null],[13,"InvalidMetadata","","Invalid format of metadata.",9,null],[5,"pb_de","","",null,[[],[["message"],["result"]]]],[5,"pb_ser","","",null,[[["vec"],["t"]]]],[5,"redirect_log","","Redirect grpc log to rust's log implementation.",null,[[]]],[11,"idempotent","","Signal that the call is idempotent.",10,[[["bool"]],["calloption"]]],[11,"wait_for_ready","","Signal that the call should not return UNAVAILABLE before…",10,[[["bool"]],["calloption"]]],[11,"cacheable","","Signal that the call is cacheable. gRPC is free to use GET…",10,[[["bool"]],["calloption"]]],[11,"write_flags","","Set write flags.",10,[[["writeflags"]],["calloption"]]],[11,"timeout","","Set a timeout.",10,[[["duration"]],["calloption"]]],[11,"get_timeout","","Get the timeout.",10,[[["self"]],[["option",["duration"]],["duration"]]]],[11,"headers","","Set the headers to be sent with the call.",10,[[["metadata"]],["calloption"]]],[11,"get_headers","","Get headers to be sent with the call.",10,[[["self"]],[["option",["metadata"]],["metadata"]]]],[11,"cancel","","Cancel the call.",11,[[["self"]]]],[11,"cancel","","Cancel the call.",12,[[["self"]]]],[11,"cancel","","",13,[[["self"]]]],[11,"cancel","","",14,[[["self"]]]],[11,"cancel","","",15,[[["self"]]]],[11,"exceeded","","",16,[[["self"]],["bool"]]],[11,"success","","",17,[[["t"]],["unarysinkresult"]]],[11,"fail","","",17,[[["rpcstatus"]],["unarysinkresult"]]],[11,"success","","",18,[[["t"]],["clientstreamingsinkresult"]]],[11,"fail","","",18,[[["rpcstatus"]],["clientstreamingsinkresult"]]],[11,"set_status","","",19,[[["self"],["rpcstatus"]]]],[11,"fail","","",19,[[["rpcstatus"]],["serverstreamingsinkfailure"]]],[11,"set_status","","",20,[[["self"],["rpcstatus"]]]],[11,"fail","","",20,[[["rpcstatus"]],["duplexsinkfailure"]]],[11,"method","","",21,[[["self"]]]],[11,"host","","",21,[[["self"]]]],[11,"deadline","","",21,[[["self"]],["deadline"]]],[11,"request_headers","","Get the initial metadata sent by client.",21,[[["self"]],["metadata"]]],[11,"peer","","",21,[[["self"]],["string"]]],[11,"spawn","","Spawn the future into current gRPC poll thread.",21,[[["self"],["f"]]]],[11,"req_ser","","Get the request serializer.",3,[[["self"]]]],[11,"req_de","","Get the request deserializer.",3,[[["self"]]]],[11,"resp_ser","","Get the response serializer.",3,[[["self"]]]],[11,"resp_de","","Get the response deserializer.",3,[[["self"]]]],[11,"new","","Create a new [`RpcStatus`].",4,[[["option",["string"]],["rpcstatuscode"],["string"]],["rpcstatus"]]],[11,"ok","","Create a new [`RpcStatus`] that status code is Ok.",4,[[],["rpcstatus"]]],[11,"buffer_hint","","Hint that the write may be buffered and need not go out on…",22,[[["bool"]],["writeflags"]]],[11,"force_no_compress","","Force compression to be disabled.",22,[[["bool"]],["writeflags"]]],[11,"get_buffer_hint","","Get whether buffer hint is enabled.",22,[[],["bool"]]],[11,"get_force_no_compress","","Get whether compression is disabled.",22,[[],["bool"]]],[11,"secure_connect","","Build a secure [`Channel`] that connects to a specific…",23,[[["str"],["channelcredentials"]],["channel"]]],[11,"new","","Initialize a new [`ChannelBuilder`].",23,[[["environment"],["arc",["environment"]]],["channelbuilder"]]],[11,"default_authority","","Set default authority to pass if none specified on call…",23,[[["into",["vec"]],["vec",["u8"]]],["channelbuilder"]]],[11,"resource_quota","","Set resource quota by consuming a ResourceQuota",23,[[["resourcequota"]],["channelbuilder"]]],[11,"max_concurrent_stream","","Set maximum number of concurrent incoming streams to allow…",23,[[["i32"]],["channelbuilder"]]],[11,"max_receive_message_len","","Set maximum message length that the channel can receive.…",23,[[["i32"]],["channelbuilder"]]],[11,"max_send_message_len","","Set maximum message length that the channel can send. `-1`…",23,[[["i32"]],["channelbuilder"]]],[11,"max_reconnect_backoff","","Set maximum time between subsequent connection attempts.",23,[[["duration"]],["channelbuilder"]]],[11,"initial_reconnect_backoff","","Set time between the first and second connection attempts.",23,[[["duration"]],["channelbuilder"]]],[11,"https_initial_seq_number","","Set initial sequence number for HTTP/2 transports.",23,[[["i32"]],["channelbuilder"]]],[11,"stream_initial_window_size","","Set amount to read ahead on individual streams. Defaults…",23,[[["i32"]],["channelbuilder"]]],[11,"primary_user_agent","","Set primary user agent, which goes at the start of the…",23,[[["str"]],["channelbuilder"]]],[11,"reuse_port","","Set whether to allow the use of `SO_REUSEPORT` if…",23,[[["bool"]],["channelbuilder"]]],[11,"tcp_read_chunk_size","","Set the size of slice to try and read from the wire each…",23,[[["i32"]],["channelbuilder"]]],[11,"tcp_min_read_chunk_size","","Set the minimum size of slice to try and read from the…",23,[[["i32"]],["channelbuilder"]]],[11,"tcp_max_read_chunk_size","","Set the maximum size of slice to try and read from the…",23,[[["i32"]],["channelbuilder"]]],[11,"http2_write_buffer_size","","How much data are we willing to queue up per stream if…",23,[[["i32"]],["channelbuilder"]]],[11,"http2_max_frame_size","","How big a frame are we willing to receive via HTTP/2. Min…",23,[[["i32"]],["channelbuilder"]]],[11,"http2_bdp_probe","","Set whether to enable BDP probing.",23,[[["bool"]],["channelbuilder"]]],[11,"http2_min_sent_ping_interval_without_data","","Minimum time between sending successive ping frames…",23,[[["duration"]],["channelbuilder"]]],[11,"http2_min_recv_ping_interval_without_data","","Minimum allowed time between receiving successive ping…",23,[[["duration"]],["channelbuilder"]]],[11,"http2_max_pings_without_data","","How many pings can we send before needing to send a data…",23,[[["i32"]],["channelbuilder"]]],[11,"http2_max_ping_strikes","","How many misbehaving pings the server can bear before…",23,[[["i32"]],["channelbuilder"]]],[11,"default_compression_algorithm","","Set default compression algorithm for the channel.",23,[[["compressionalgorithms"]],["channelbuilder"]]],[11,"default_compression_level","","Set default compression level for the channel.",23,[[["compressionlevel"]],["channelbuilder"]]],[11,"keepalive_time","","After a duration of this time the client/server pings its…",23,[[["duration"]],["channelbuilder"]]],[11,"keepalive_timeout","","After waiting for a duration of this time, if the…",23,[[["duration"]],["channelbuilder"]]],[11,"keepalive_permit_without_calls","","Is it permissible to send keepalive pings without any…",23,[[["bool"]],["channelbuilder"]]],[11,"optimize_for","","Set optimization target for the channel. See [`OptTarget`]…",23,[[["opttarget"]],["channelbuilder"]]],[11,"load_balancing_policy","","Set LbPolicy for channel",23,[[["lbpolicy"]],["channelbuilder"]]],[11,"connect","","Build an insecure [`Channel`] that connects to a specific…",23,[[["str"]],["channel"]]],[11,"new","","Initialize a new [`Client`].",24,[[["channel"]],["client"]]],[11,"unary_call","","Create a synchronized unary RPC call.",24,[[["method"],["req"],["self"],["calloption"]],["result"]]],[11,"unary_call_async","","Create an asynchronized unary RPC call.",24,[[["method"],["req"],["self"],["calloption"]],[["result",["clientunaryreceiver"]],["clientunaryreceiver"]]]],[11,"client_streaming","","Create an asynchronized client streaming call.",24,[[["calloption"],["self"],["method"]],["result"]]],[11,"server_streaming","","Create an asynchronized server streaming call.",24,[[["method"],["req"],["self"],["calloption"]],[["result",["clientsstreamreceiver"]],["clientsstreamreceiver"]]]],[11,"duplex_streaming","","Create an asynchronized duplex streaming call.",24,[[["calloption"],["self"],["method"]],["result"]]],[11,"spawn","","Spawn the future into current gRPC poll thread.",24,[[["self"],["f"]]]],[11,"new","","Initialize a new [`ServerCredentialsBuilder`].",25,[[],["servercredentialsbuilder"]]],[11,"root_cert","","Set the PEM encoded client root certificate to verify…",25,[[["bool"],["into",["vec"]],["vec",["u8"]]],["servercredentialsbuilder"]]],[11,"add_cert","","Add a PEM encoded server side certificate and key.",25,[[["vec",["u8"]],["u8"]],["servercredentialsbuilder"]]],[11,"build","","Finalize the [`ServerCredentialsBuilder`] and build the…",25,[[],["servercredentials"]]],[11,"as_mut_ptr","","",26,[[["self"]]]],[11,"new","","Initialize a new [`ChannelCredentialsBuilder`].",27,[[],["channelcredentialsbuilder"]]],[11,"root_cert","","Set the PEM encoded server root certificate to verify…",27,[[["vec",["u8"]],["u8"]],["channelcredentialsbuilder"]]],[11,"cert","","Set the PEM encoded client side certificate and key.",27,[[["vec",["u8"]],["u8"]],["channelcredentialsbuilder"]]],[11,"build","","Finalize the [`ChannelCredentialsBuilder`] and build the…",27,[[],["channelcredentials"]]],[11,"as_mut_ptr","","",28,[[["self"]]]],[11,"google_default_credentials","","Try to build a [`ChannelCredentials`] to authenticate with…",28,[[],[["result",["channelcredentials"]],["channelcredentials"]]]],[11,"new","","Initialize a new [`EnvBuilder`].",29,[[],["envbuilder"]]],[11,"cq_count","","Set the number of completion queues and polling threads.…",29,[[["usize"]],["envbuilder"]]],[11,"name_prefix","","Set the thread name prefix of each polling thread.",29,[[["into",["string"]],["string"]],["envbuilder"]]],[11,"build","","Finalize the [`EnvBuilder`], build the [`Environment`] and…",29,[[],["environment"]]],[11,"new","","Initialize gRPC and create a thread pool to poll…",30,[[["usize"]],["environment"]]],[11,"completion_queues","","Get all the created completion queues.",30,[[["self"]]]],[11,"pick_cq","","Pick an arbitrary completion queue.",30,[[["self"]],["completionqueue"]]],[11,"new","","Create a builder with empty initial capacity.",31,[[],["metadatabuilder"]]],[11,"with_capacity","","Create a builder with the given value.",31,[[["usize"]],["metadatabuilder"]]],[11,"add_str","","Add a metadata holding an ASCII value.",31,[[["str"],["self"]],[["result",["metadatabuilder"]],["metadatabuilder"]]]],[11,"add_bytes","","Add a metadata holding a binary value.",31,[[["str"],["self"]],[["result",["metadatabuilder"]],["metadatabuilder"]]]],[11,"build","","Create `Metadata` with configured entries.",31,[[],["metadata"]]],[11,"len","","Returns the count of metadata entries.",32,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if there is no metadata entries.",32,[[["self"]],["bool"]]],[11,"get","","Returns the metadata entry at the `index`.",32,[[["self"],["usize"]],["option"]]],[11,"iter","","Returns an iterator over the metadata entries.",32,[[["self"]],["metadataiter"]]],[11,"new","","Create a control block for resource quota. If a name is…",33,[[["option",["str"]],["str"]],["resourcequota"]]],[11,"resize_memory","","Resize this ResourceQuota to a new memory size.",33,[[["usize"]],["resourcequota"]]],[11,"bind_secure","","Bind to an address for secure connection.",34,[[["string"],["servercredentials"],["into",["string"]],["u16"]],["serverbuilder"]]],[11,"new","","Initialize a new [`ServiceBuilder`].",35,[[],["servicebuilder"]]],[11,"add_unary_handler","","Add a unary RPC call handler.",35,[[["f"],["method"]],["servicebuilder"]]],[11,"add_client_streaming_handler","","Add a client streaming RPC call handler.",35,[[["f"],["method"]],["servicebuilder"]]],[11,"add_server_streaming_handler","","Add a server streaming RPC call handler.",35,[[["f"],["method"]],["servicebuilder"]]],[11,"add_duplex_streaming_handler","","Add a duplex streaming RPC call handler.",35,[[["f"],["method"]],["servicebuilder"]]],[11,"build","","Finalize the [`ServiceBuilder`] and build the [`Service`].",35,[[],["service"]]],[11,"new","","Initialize a new [`ServerBuilder`].",34,[[["environment"],["arc",["environment"]]],["serverbuilder"]]],[11,"bind","","Bind to an address.",34,[[["into",["string"]],["u16"],["string"]],["serverbuilder"]]],[11,"requests_slot_per_cq","","Set how many requests a completion queue can handle.",34,[[["usize"]],["serverbuilder"]]],[11,"register_service","","Register a service.",34,[[["service"]],["serverbuilder"]]],[11,"build","","Finalize the [`ServerBuilder`] and build the [`Server`].",34,[[],[["server"],["result",["server"]]]]],[11,"shutdown","","Shutdown the server asynchronously.",36,[[["self"]],["shutdownfuture"]]],[11,"cancel_all_calls","","Cancel all in-progress calls.",36,[[["self"]]]],[11,"start","","Start the server.",36,[[["self"]]]],[11,"bind_addrs","","Get binded addresses.",36,[[["self"]]]],[6,"ClientCStreamSender","","A sink for client streaming call.",null,null],[6,"ClientDuplexSender","","A sink for duplex streaming call.",null,null],[6,"Result","","Type alias to use this library's [`Error`] type in a…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_future","","",12,[[],["f"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[],["f"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_future","","",37,[[],["f"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_future","","",38,[[],["f"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_future","","",40,[[],["f"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_future","","",41,[[],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_future","","",45,[[],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"eq","","",0,[[["grpcstatuscode"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["grpcstatuscode"]]],[11,"from","","",0,[[["i32"]],["grpcstatuscode"]]],[11,"drop","","The corresponding RPC will be canceled if the receiver did…",12,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the sink did not…",13,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the receiver did…",15,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the stream did…",39,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the sink did not…",17,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the sink did not…",18,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the sink did not…",19,[[["self"]]]],[11,"drop","","The corresponding RPC will be canceled if the sink did not…",20,[[["self"]]]],[11,"drop","","",25,[[["self"]]]],[11,"drop","","",26,[[["self"]]]],[11,"drop","","",27,[[["self"]]]],[11,"drop","","",28,[[["self"]]]],[11,"drop","","",30,[[["self"]]]],[11,"drop","","",32,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","","",36,[[["self"]]]],[11,"from","","",9,[[["protobuferror"]],["error"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"clone","","",10,[[["self"]],["calloption"]]],[11,"clone","","",6,[[["self"]],["methodtype"]]],[11,"clone","","",4,[[["self"]],["rpcstatus"]]],[11,"clone","","",22,[[["self"]],["writeflags"]]],[11,"clone","","",8,[[["self"]],["opttarget"]]],[11,"clone","","",7,[[["self"]],["lbpolicy"]]],[11,"clone","","",42,[[["self"]],["channel"]]],[11,"clone","","",24,[[["self"]],["client"]]],[11,"clone","","",32,[[["self"]],["metadata"]]],[11,"default","","",10,[[],["calloption"]]],[11,"default","","",22,[[],["writeflags"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"cause","","",9,[[["self"]],[["error"],["option",["error"]]]]],[11,"poll","","",11,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",12,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",41,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",37,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",40,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",38,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",45,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",14,[[["self"]],[["error"],["option"],["poll",["option","error"]]]]],[11,"poll","","",15,[[["self"]],[["error"],["option"],["poll",["option","error"]]]]],[11,"poll","","",39,[[["self"]],[["option"],["error"],["poll",["option","error"]]]]],[11,"start_send","","",13,[[["self"]],[["startsend",["error"]],["error"]]]],[11,"poll_complete","","",13,[[["self"]],[["poll",["error"]],["error"]]]],[11,"close","","",13,[[["self"]],[["poll",["error"]],["error"]]]],[11,"start_send","","",19,[[["self"]],[["startsend",["error"]],["error"]]]],[11,"poll_complete","","",19,[[["self"]],[["poll",["error"]],["error"]]]],[11,"close","","",19,[[["self"]],[["poll",["error"]],["error"]]]],[11,"start_send","","",20,[[["self"]],[["startsend",["error"]],["error"]]]],[11,"poll_complete","","",20,[[["self"]],[["poll",["error"]],["error"]]]],[11,"close","","",20,[[["self"]],[["poll",["error"]],["error"]]]]],"p":[[4,"RpcStatusCode"],[4,"CompressionAlgorithms"],[4,"CompressionLevel"],[3,"Method"],[3,"RpcStatus"],[3,"Marshaller"],[4,"MethodType"],[4,"LbPolicy"],[4,"OptTarget"],[4,"Error"],[3,"CallOption"],[3,"ClientUnaryReceiver"],[3,"ClientCStreamReceiver"],[3,"StreamingCallSink"],[3,"ClientSStreamReceiver"],[3,"ClientDuplexReceiver"],[3,"Deadline"],[3,"UnarySink"],[3,"ClientStreamingSink"],[3,"ServerStreamingSink"],[3,"DuplexSink"],[3,"RpcContext"],[3,"WriteFlags"],[3,"ChannelBuilder"],[3,"Client"],[3,"ServerCredentialsBuilder"],[3,"ServerCredentials"],[3,"ChannelCredentialsBuilder"],[3,"ChannelCredentials"],[3,"EnvBuilder"],[3,"Environment"],[3,"MetadataBuilder"],[3,"Metadata"],[3,"ResourceQuota"],[3,"ServerBuilder"],[3,"ServiceBuilder"],[3,"Server"],[3,"ClientStreamingSinkResult"],[3,"DuplexSinkFailure"],[3,"RequestStream"],[3,"ServerStreamingSinkFailure"],[3,"UnarySinkResult"],[3,"Channel"],[3,"MetadataIter"],[3,"Service"],[3,"ShutdownFuture"]]};
searchIndex["grpcio_sys"] = {"doc":"","i":[[3,"GprTimespec","grpcio_sys","Analogous to struct `timespec`. On some machines, absolute…",null,null],[12,"tv_sec","","",0,null],[12,"tv_nsec","","",0,null],[12,"clock_type","","Against which clock was this time measured? (or…",0,null],[3,"GrpcEvent","","The result of an operation.",null,null],[12,"event_type","","",1,null],[12,"success","","",1,null],[12,"tag","","",1,null],[3,"GprLogFuncArgs","","",null,null],[12,"file","","",2,null],[12,"line","","",2,null],[12,"severity","","",2,null],[12,"message","","",2,null],[3,"GrpcMetadataArray","","",null,null],[12,"count","","",3,null],[12,"capacity","","",3,null],[12,"metadata","","",3,null],[4,"GprClockType","","The clocks gRPC supports.",null,null],[13,"Monotonic","","Monotonic clock. Epoch undefined. Always moves forward.",4,null],[13,"Realtime","","Realtime clock. May jump forwards or backwards. Settable…",4,null],[13,"Precise","","CPU cycle time obtained by rdtsc instruction on x86…",4,null],[13,"Timespan","","Unmeasurable clock type: no base, created by taking the…",4,null],[4,"GrpcStatusCode","","Result of a remote procedure call.",null,null],[13,"Ok","","Not an error; returned on success.",5,null],[13,"Cancelled","","The operation was cancelled (typically by the caller).",5,null],[13,"Unknown","","Unknown error. An example of where this error may be…",5,null],[13,"InvalidArgument","","Client specified an invalid argument. Note that this…",5,null],[13,"DeadlineExceeded","","Deadline expired before operation could complete. For…",5,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",5,null],[13,"AlreadyExists","","Some entity that we attempted to create (e.g., file or…",5,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",5,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",5,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",5,null],[13,"FailedPrecondition","","Operation was rejected because the system is not in a…",5,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",5,null],[13,"OutOfRange","","Operation was attempted past the valid range. E.g.,…",5,null],[13,"Unimplemented","","Operation is not implemented or not supported/enabled in…",5,null],[13,"Internal","","Internal errors. Means some invariants expected by…",5,null],[13,"Unavailable","","The service is currently unavailable. This is a most…",5,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",5,null],[4,"GrpcCallStatus","","Result of a gRPC call.",null,null],[13,"Ok","","Everything went ok.",6,null],[13,"Error","","Something failed, we don't know what.",6,null],[13,"ErrorNotOnServer","","This method is not available on the server.",6,null],[13,"ErrorNotOnClient","","This method is not available on the client.",6,null],[13,"ErrorAlreadyAccepted","","This method must be called before server_accept.",6,null],[13,"ErrorAlreadyInvoked","","This method must be called before invoke.",6,null],[13,"ErrorNotInvoked","","This method must be called after invoke.",6,null],[13,"ErrorAlreadyFinished","","This call is already finished (writes_done or write_status…",6,null],[13,"ErrorTooManyOperations","","There is already an outstanding read/write operation on…",6,null],[13,"ErrorInvalidFlags","","The flags value was illegal for this call.",6,null],[13,"ErrorInvalidMetadata","","Invalid metadata was passed to this call.",6,null],[13,"ErrorInvalidMessage","","Invalid message was passed to this call.",6,null],[13,"ErrorNotServerCompletionQueue","","Completion queue for notification has not been registered…",6,null],[13,"ErrorBatchTooBig","","This batch of operations leads to more operations than…",6,null],[13,"ErrorPayloadTypeMismatch","","Payload type requested is not the type registered.",6,null],[13,"ErrorCompletionQueueShutdown","","Completion queue has been shut down.",6,null],[4,"GrpcCompletionType","","The type of completion.",null,null],[13,"QueueShutdown","","Shutting down.",7,null],[13,"QueueTimeout","","No event before timeout.",7,null],[13,"OpComplete","","Operation completion.",7,null],[4,"GrpcChannelArgs","","",null,null],[4,"GrpcConnectivityState","","Connectivity state of a channel.",null,null],[13,"Init","","Channel has just been initialized.",8,null],[13,"Idle","","Channel is idle.",8,null],[13,"Connecting","","Channel is connecting.",8,null],[13,"Ready","","Channel is ready for work.",8,null],[13,"TransientFailure","","Channel has seen a failure but expects to recover.",8,null],[13,"Shutdown","","Channel has seen a failure that it cannot recover from.",8,null],[4,"GrpcCompressionLevel","","Compression levels supported by gRPC.",null,null],[13,"None","","No compression.",9,null],[13,"Low","","Low compression.",9,null],[13,"Med","","Medium compression.",9,null],[13,"High","","High compression.",9,null],[4,"GrpcCompressionAlgorithms","","Various compression algorithms supported by gRPC.",null,null],[13,"None","","",10,null],[13,"Deflate","","",10,null],[13,"Gzip","","",10,null],[4,"GrpcServerRegisterMethodPayloadHandling","","How to handle payloads for a registered method.",null,null],[13,"None","","Don't try to read the payload.",11,null],[13,"ReadInitialByteBuffer","","Read the initial payload as a byte buffer.",11,null],[4,"GprLogSeverity","","",null,null],[13,"Debug","","",12,null],[13,"Info","","",12,null],[13,"Error","","",12,null],[4,"GrpcMetadata","","",null,null],[4,"GrpcSlice","","",null,null],[4,"GrpcCallDetails","","",null,null],[4,"GrpcCompletionQueue","","",null,null],[4,"GrpcChannel","","",null,null],[4,"GrpcCall","","",null,null],[4,"GrpcByteBuffer","","",null,null],[4,"GrpcBatchContext","","",null,null],[4,"GrpcServer","","",null,null],[4,"GrpcRequestCallContext","","",null,null],[4,"GrpcResourceQuota","","",null,null],[4,"GrpcArgPointerVtable","","",null,null],[4,"GrpcChannelCredentials","","",null,null],[4,"GrpcServerCredentials","","",null,null],[5,"grpc_init","","",null,null],[5,"grpc_shutdown","","",null,null],[5,"grpc_version_string","","",null,null],[5,"grpc_call_details_init","","",null,null],[5,"grpc_call_details_destroy","","",null,null],[5,"grpc_register_plugin","","",null,null],[5,"gpr_inf_future","","",null,null],[5,"gpr_now","","",null,null],[5,"gpr_time_cmp","","",null,null],[5,"gpr_convert_clock_type","","",null,null],[5,"gpr_set_log_verbosity","","",null,null],[5,"gpr_set_log_function","","",null,null],[5,"gpr_cpu_num_cores","","",null,null],[5,"grpc_completion_queue_create_for_next","","",null,null],[5,"grpc_completion_queue_next","","",null,null],[5,"grpc_completion_queue_pluck","","",null,null],[5,"grpc_completion_queue_shutdown","","",null,null],[5,"grpc_completion_queue_destroy","","",null,null],[5,"grpcwrap_channel_args_create","","",null,null],[5,"grpcwrap_channel_args_set_string","","",null,null],[5,"grpcwrap_channel_args_set_integer","","",null,null],[5,"grpcwrap_channel_args_set_pointer_vtable","","",null,null],[5,"grpcwrap_channel_args_destroy","","",null,null],[5,"grpc_channel_check_connectivity_state","","",null,null],[5,"grpcwrap_channel_create_call","","",null,null],[5,"grpc_channel_get_target","","",null,null],[5,"grpc_insecure_channel_create","","",null,null],[5,"grpc_channel_destroy","","",null,null],[5,"grpcwrap_batch_context_create","","",null,null],[5,"grpcwrap_batch_context_destroy","","",null,null],[5,"grpcwrap_batch_context_recv_initial_metadata","","",null,null],[5,"grpcwrap_batch_context_recv_message_length","","",null,null],[5,"grpcwrap_batch_context_recv_message_to_buffer","","",null,null],[5,"grpcwrap_batch_context_recv_status_on_client_status","","",null,null],[5,"grpcwrap_batch_context_recv_status_on_client_details","","",null,null],[5,"grpcwrap_batch_context_recv_status_on_client_trailing_metadata","","",null,null],[5,"grpcwrap_batch_context_recv_close_on_server_cancelled","","",null,null],[5,"grpcwrap_call_kick_completion_queue","","",null,null],[5,"grpcwrap_call_start_unary","","",null,null],[5,"grpcwrap_call_start_client_streaming","","",null,null],[5,"grpcwrap_call_start_server_streaming","","",null,null],[5,"grpcwrap_call_start_duplex_streaming","","",null,null],[5,"grpcwrap_call_recv_initial_metadata","","",null,null],[5,"grpcwrap_call_send_message","","",null,null],[5,"grpcwrap_call_send_close_from_client","","",null,null],[5,"grpcwrap_call_send_status_from_server","","",null,null],[5,"grpcwrap_call_recv_message","","",null,null],[5,"grpcwrap_call_start_serverside","","",null,null],[5,"grpcwrap_call_send_initial_metadata","","",null,null],[5,"grpc_call_get_peer","","",null,null],[5,"grpc_call_get_target","","",null,null],[5,"grpc_call_cancel","","",null,null],[5,"grpc_call_cancel_with_status","","",null,null],[5,"grpc_call_ref","","",null,null],[5,"grpc_call_unref","","",null,null],[5,"grpc_server_register_method","","",null,null],[5,"grpc_server_create","","",null,null],[5,"grpc_server_register_completion_queue","","",null,null],[5,"grpc_server_add_insecure_http2_port","","",null,null],[5,"grpc_server_start","","",null,null],[5,"grpc_server_shutdown_and_notify","","",null,null],[5,"grpc_server_cancel_all_calls","","",null,null],[5,"grpc_server_destroy","","",null,null],[5,"grpcwrap_request_call_context_create","","",null,null],[5,"grpcwrap_request_call_context_destroy","","",null,null],[5,"grpcwrap_request_call_context_get_call","","",null,null],[5,"grpcwrap_request_call_context_ref_call","","",null,null],[5,"grpcwrap_request_call_context_method","","",null,null],[5,"grpcwrap_request_call_context_host","","",null,null],[5,"grpcwrap_request_call_context_deadline","","",null,null],[5,"grpcwrap_request_call_context_metadata_array","","",null,null],[5,"grpcwrap_server_request_call","","",null,null],[5,"grpcwrap_metadata_array_init","","",null,null],[5,"grpcwrap_metadata_array_add","","",null,null],[5,"grpcwrap_metadata_array_get_key","","",null,null],[5,"grpcwrap_metadata_array_get_value","","",null,null],[5,"grpcwrap_metadata_array_shrink_to_fit","","",null,null],[5,"grpcwrap_metadata_array_cleanup","","",null,null],[5,"gpr_free","","",null,null],[5,"grpc_resource_quota_create","","",null,null],[5,"grpc_resource_quota_ref","","",null,null],[5,"grpc_resource_quota_unref","","",null,null],[5,"grpc_resource_quota_resize","","",null,null],[5,"grpc_resource_quota_set_max_threads","","",null,null],[5,"grpc_resource_quota_arg_vtable","","",null,null],[5,"grpcwrap_ssl_credentials_create","","",null,null],[5,"grpc_secure_channel_create","","",null,null],[5,"grpc_google_default_credentials_create","","",null,null],[5,"grpc_server_add_secure_http2_port","","",null,null],[5,"grpcwrap_override_default_ssl_roots","","",null,null],[5,"grpc_channel_credentials_release","","",null,null],[5,"grpcwrap_ssl_server_credentials_create","","",null,null],[5,"grpc_server_credentials_release","","",null,null],[17,"GRPC_INITIAL_METADATA_IDEMPOTENT_REQUEST","","",null,null],[17,"GRPC_INITIAL_METADATA_WAIT_FOR_READY","","",null,null],[17,"GRPC_INITIAL_METADATA_CACHEABLE_REQUEST","","",null,null],[17,"GRPC_WRITE_BUFFER_HINT","","",null,null],[17,"GRPC_WRITE_NO_COMPRESS","","",null,null],[17,"GRPC_MAX_COMPLETION_QUEUE_PLUCKERS","","",null,null],[11,"inf_future","","",0,[[],["gprtimespec"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["duration"]],["gprtimespec"]]],[11,"from","","",5,[[["i32"]],["grpcstatuscode"]]],[11,"clone","","",4,[[["self"]],["gprclocktype"]]],[11,"clone","","",0,[[["self"]],["gprtimespec"]]],[11,"clone","","",5,[[["self"]],["grpcstatuscode"]]],[11,"clone","","",12,[[["self"]],["gprlogseverity"]]],[11,"eq","","",5,[[["self"],["grpcstatuscode"]],["bool"]]],[11,"eq","","",6,[[["grpccallstatus"],["self"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]]],"p":[[3,"GprTimespec"],[3,"GrpcEvent"],[3,"GprLogFuncArgs"],[3,"GrpcMetadataArray"],[4,"GprClockType"],[4,"GrpcStatusCode"],[4,"GrpcCallStatus"],[4,"GrpcCompletionType"],[4,"GrpcConnectivityState"],[4,"GrpcCompressionLevel"],[4,"GrpcCompressionAlgorithms"],[4,"GrpcServerRegisterMethodPayloadHandling"],[4,"GprLogSeverity"],[4,"GrpcChannelArgs"],[4,"GrpcMetadata"],[4,"GrpcSlice"],[4,"GrpcCallDetails"],[4,"GrpcCompletionQueue"],[4,"GrpcChannel"],[4,"GrpcCall"],[4,"GrpcByteBuffer"],[4,"GrpcBatchContext"],[4,"GrpcServer"],[4,"GrpcRequestCallContext"],[4,"GrpcResourceQuota"],[4,"GrpcArgPointerVtable"],[4,"GrpcChannelCredentials"],[4,"GrpcServerCredentials"]]};
searchIndex["h2"] = {"doc":"An asynchronous, HTTP/2.0 server and client implementation.","i":[[3,"Error","h2","Represents HTTP/2.0 operation errors.",null,null],[3,"Reason","","HTTP/2.0 error codes.",null,null],[3,"FlowControl","","A handle to release window capacity to a remote stream.",null,null],[3,"Ping","","Sent via [`PingPong`][] to send a PING frame to a peer.",null,null],[3,"PingPong","","A handle to send and receive PING frames with the peer.",null,null],[3,"Pong","","Received via [`PingPong`][] when a peer acknowledges a…",null,null],[3,"RecvStream","","Receives the body stream and trailers from the remote peer.",null,null],[3,"SendStream","","Sends the body stream and trailers to the remote peer.",null,null],[3,"StreamId","","A stream identifier, as described in [Section 5.1.1] of…",null,null],[11,"reason","","If the error was caused by the remote peer, the error…",0,[[["self"]],[["reason"],["option",["reason"]]]]],[11,"is_io","","Returns the true if the error is an io::Error",0,[[["self"]],["bool"]]],[11,"get_io","","Returns the error if the error is an io::Error",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_io","","Returns the error if the error is an io::Error",0,[[],[["option",["error"]],["error"]]]],[18,"NO_ERROR","","The associated condition is not a result of an error.",1,null],[18,"PROTOCOL_ERROR","","The endpoint detected an unspecific protocol error.",1,null],[18,"INTERNAL_ERROR","","The endpoint encountered an unexpected internal error.",1,null],[18,"FLOW_CONTROL_ERROR","","The endpoint detected that its peer violated the…",1,null],[18,"SETTINGS_TIMEOUT","","The endpoint sent a SETTINGS frame but did not receive a…",1,null],[18,"STREAM_CLOSED","","The endpoint received a frame after a stream was…",1,null],[18,"FRAME_SIZE_ERROR","","The endpoint received a frame with an invalid size.",1,null],[18,"REFUSED_STREAM","","The endpoint refused the stream prior to performing any…",1,null],[18,"CANCEL","","Used by the endpoint to indicate that the stream is no…",1,null],[18,"COMPRESSION_ERROR","","The endpoint is unable to maintain the header compression…",1,null],[18,"CONNECT_ERROR","","The connection established in response to a CONNECT…",1,null],[18,"ENHANCE_YOUR_CALM","","The endpoint detected that its peer is exhibiting a…",1,null],[18,"INADEQUATE_SECURITY","","The underlying transport has properties that do not meet…",1,null],[18,"HTTP_1_1_REQUIRED","","The endpoint requires that HTTP/1.1 be used instead of…",1,null],[11,"description","","Get a string description of the error code.",1,[[["self"]],["str"]]],[0,"client","","Client implementation of the HTTP/2.0 protocol.",null,null],[3,"SendRequest","h2::client","Initializes new HTTP/2.0 streams on a connection by…",null,null],[3,"ReadySendRequest","","Returns a `SendRequest` instance once it is ready to send…",null,null],[3,"Connection","","Manages all state associated with an HTTP/2.0 client…",null,null],[3,"ResponseFuture","","A future of an HTTP response.",null,null],[3,"PushedResponseFuture","","A future of a pushed HTTP response.",null,null],[3,"PushPromise","","A pushed response and corresponding request headers",null,null],[3,"PushPromises","","A stream of pushed responses and corresponding promised…",null,null],[3,"Builder","","Builds client connections with custom configuration values.",null,null],[5,"handshake","","Creates a new configured HTTP/2.0 client with default…",null,[[["t"]]]],[11,"poll_ready","","Returns `Ready` when the connection can initialize a new…",2,[[["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"ready","","Consumes `self`, returning a future that returns `self`…",2,[[],["readysendrequest"]]],[11,"send_request","","Sends a HTTP/2.0 request to the server.",2,[[["request"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"new","","Returns a new client builder instance initialized with…",3,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",3,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",3,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",3,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",3,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",3,[[["self"],["u32"]],["self"]]],[11,"initial_max_send_streams","","Sets the initial maximum of locally initiated (send)…",3,[[["self"],["usize"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",3,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the duration to remember locally reset streams.",3,[[["self"],["duration"]],["self"]]],[11,"enable_push","","Enables or disables server push promises.",3,[[["self"],["bool"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 client backed by `io`.",3,[[["self"],["t"]]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",4,[[["self"],["u32"]]]],[11,"set_initial_window_size","","Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for…",4,[[["self"],["u32"]],[["error"],["result",["error"]]]]],[11,"ping_pong","","Takes a `PingPong` instance from the connection.",4,[[["self"]],[["option",["pingpong"]],["pingpong"]]]],[11,"stream_id","","Returns the stream ID of the response stream.",5,[[["self"]],["streamid"]]],[11,"push_promises","","Returns a stream of PushPromises",5,[[["self"]],["pushpromises"]]],[11,"push_promise","","Get the next `PushPromise`.",6,[[["self"]]]],[11,"request","","Returns a reference to the push promise's request headers.",7,[[["self"]],["request"]]],[11,"request_mut","","Returns a mutable reference to the push promise's request…",7,[[["self"]],["request"]]],[11,"into_parts","","Consumes `self`, returning the push promise's request…",7,[[]]],[11,"stream_id","","Returns the stream ID of the response stream.",8,[[["self"]],["streamid"]]],[0,"server","h2","Server implementation of the HTTP/2.0 protocol.",null,null],[3,"Handshake","h2::server","In progress HTTP/2.0 connection handshake future.",null,null],[3,"Connection","","Accepts inbound HTTP/2.0 streams on a connection.",null,null],[3,"Builder","","Builds server connections with custom configuration values.",null,null],[3,"SendResponse","","Send a response back to the client",null,null],[3,"SendPushedResponse","","Send a response to a promised request",null,null],[5,"handshake","","Creates a new configured HTTP/2.0 server with default…",null,[[["t"]],[["bytes"],["handshake",["bytes"]]]]],[11,"accept","","Accept the next incoming request on this connection.",9,[[["self"]]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",9,[[["self"],["u32"]]]],[11,"set_initial_window_size","","Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for…",9,[[["self"],["u32"]],[["error"],["result",["error"]]]]],[11,"poll_closed","","Returns `Ready` when the underlying connection has closed.",9,[[["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"abrupt_shutdown","","Sets the connection to a GOAWAY state.",9,[[["self"],["reason"]]]],[11,"graceful_shutdown","","Starts a [graceful shutdown][1] process.",9,[[["self"]]]],[11,"ping_pong","","Takes a `PingPong` instance from the connection.",9,[[["self"]],[["option",["pingpong"]],["pingpong"]]]],[11,"new","","Returns a new server builder instance initialized with…",10,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",10,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",10,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",10,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",10,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",10,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",10,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the maximum number of concurrent locally reset streams.",10,[[["self"],["duration"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 server backed by `io`.",10,[[["self"],["t"]],["handshake"]]],[11,"send_response","","Send a response to a client request.",11,[[["self"],["response"],["bool"]],[["sendstream"],["error"],["result",["sendstream","error"]]]]],[11,"push_request","","Push a request and response to the client",11,[[["self"],["request"]],[["result",["sendpushedresponse","error"]],["sendpushedresponse"],["error"]]]],[11,"send_reset","","Send a stream reset to the peer.",11,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",11,[[["self"],["context"]],[["poll",["result"]],["result",["reason","error"]]]]],[11,"stream_id","","Returns the stream ID of the response stream.",11,[[["self"]],["streamid"]]],[11,"send_response","","Send a response to a promised request.",12,[[["self"],["response"],["bool"]],[["sendstream"],["error"],["result",["sendstream","error"]]]]],[11,"send_reset","","Send a stream reset to the peer.",12,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",12,[[["self"],["context"]],[["poll",["result"]],["result",["reason","error"]]]]],[11,"stream_id","","Returns the stream ID of the response stream.",12,[[["self"]],["streamid"]]],[11,"reserve_capacity","h2","Requests capacity to send data.",13,[[["self"],["usize"]]]],[11,"capacity","","Returns the stream's current send capacity.",13,[[["self"]],["usize"]]],[11,"poll_capacity","","Requests to be notified when the stream's capacity…",13,[[["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"send_data","","Sends a single data frame to the remote peer.",13,[[["self"],["b"],["bool"]],[["error"],["result",["error"]]]]],[11,"send_trailers","","Sends trailers to the remote peer.",13,[[["headermap"],["self"]],[["error"],["result",["error"]]]]],[11,"send_reset","","Resets the stream.",13,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",13,[[["self"],["context"]],[["poll",["result"]],["result",["reason","error"]]]]],[11,"stream_id","","Returns the stream ID of this `SendStream`.",13,[[["self"]],["streamid"]]],[11,"data","","Get the next data frame.",14,[[["self"]]]],[11,"trailers","","Get optional trailers for this stream.",14,[[["self"]]]],[11,"is_end_stream","","Returns true if the receive half has reached the end of…",14,[[["self"]],["bool"]]],[11,"flow_control","","Get a mutable reference to this stream's `FlowControl`.",14,[[["self"]],["flowcontrol"]]],[11,"stream_id","","Returns the stream ID of this stream.",14,[[["self"]],["streamid"]]],[11,"stream_id","","Returns the stream ID of the stream whose capacity will be…",15,[[["self"]],["streamid"]]],[11,"available_capacity","","Get the current available capacity of data this stream…",15,[[["self"]],["isize"]]],[11,"used_capacity","","Get the currently used capacity for this stream.",15,[[["self"]],["usize"]]],[11,"release_capacity","","Release window capacity back to remote stream.",15,[[["self"],["usize"]],[["error"],["result",["error"]]]]],[11,"ping","","Send a PING frame and wait for the peer to send the pong.",16,[[["ping"],["self"]]]],[11,"opaque","","Creates a new opaque `Ping` to be sent via a [`PingPong`][].",17,[[],["ping"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"equivalent","","",19,[[["k"],["self"]],["bool"]]],[11,"from","h2::client","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"try_poll","","",20,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll","","",4,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_poll","","",8,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","h2::server","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"try_poll","","",21,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"drop","h2","",14,[[["self"]]]],[11,"from","","",0,[[["reason"]],["error"]]],[11,"from","","",1,[[["u32"]],["reason"]]],[11,"clone","","",1,[[["self"]],["reason"]]],[11,"clone","h2::client","",3,[[["self"]],["builder"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","h2::server","",10,[[["self"]],["builder"]]],[11,"clone","h2","",19,[[["self"]],["streamid"]]],[11,"clone","","",15,[[["self"]],["flowcontrol"]]],[11,"default","h2::client","",3,[[],["builder"]]],[11,"default","h2::server","",10,[[],["builder"]]],[11,"eq","h2","",1,[[["self"],["reason"]],["bool"]]],[11,"ne","","",1,[[["self"],["reason"]],["bool"]]],[11,"eq","","",19,[[["self"],["streamid"]],["bool"]]],[11,"ne","","",19,[[["self"],["streamid"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","h2::client","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","h2::server","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","h2","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"poll","h2::client","",20,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",4,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",8,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","h2::server","",21,[[["pin"],["self"],["context"]],["poll"]]]],"p":[[3,"Error"],[3,"Reason"],[3,"SendRequest"],[3,"Builder"],[3,"Connection"],[3,"ResponseFuture"],[3,"PushPromises"],[3,"PushPromise"],[3,"PushedResponseFuture"],[3,"Connection"],[3,"Builder"],[3,"SendResponse"],[3,"SendPushedResponse"],[3,"SendStream"],[3,"RecvStream"],[3,"FlowControl"],[3,"PingPong"],[3,"Ping"],[3,"Pong"],[3,"StreamId"],[3,"ReadySendRequest"],[3,"Handshake"]]};
searchIndex["hex"] = {"doc":"Encoding and decoding hex strings.","i":[[4,"FromHexError","hex","The error type for decoding a hex string into `Vec<u8>` or…",null,null],[13,"InvalidHexCharacter","","An invalid character was found. Valid ones are: `0...9`,…",0,null],[12,"c","hex::FromHexError","",0,null],[12,"index","","",0,null],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,null],[13,"InvalidStringLength","","If the hex string is decoded into a fixed sized container,…",0,null],[5,"encode","","Encodes `data` as hex string using lowercase characters.",null,[[["asref"]],["string"]]],[5,"encode_upper","","Encodes `data` as hex string using uppercase characters.",null,[[["asref"]],["string"]]],[5,"decode","","Decodes a hex string into raw bytes.",null,[[["asref"]],[["vec",["u8"]],["fromhexerror"],["result",["vec","fromhexerror"]]]]],[5,"decode_to_slice","","Decode a hex string into a mutable bytes slice.",null,[[["asref"]],[["fromhexerror"],["result",["fromhexerror"]]]]],[5,"encode_to_slice","","Encodes some bytes into a mutable slice of bytes.",null,[[["asref"]],[["fromhexerror"],["result",["fromhexerror"]]]]],[8,"ToHex","","Encoding values as hex string.",null,null],[10,"encode_hex","","Encode the hex strict representing `self` into the…",1,[[["self"]],[["fromiterator",["char"]],["char"]]]],[10,"encode_hex_upper","","Encode the hex strict representing `self` into the…",1,[[["self"]],[["fromiterator",["char"]],["char"]]]],[8,"FromHex","","Types that can be decoded from a hex string.",null,null],[16,"Error","","",2,null],[10,"from_hex","","Creates an instance of type `Self` from the given hex…",2,[[["asref"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["fromhexerror"]]],[11,"eq","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["http"] = {"doc":"A general purpose library of common HTTP types","i":[[3,"Error","http","A generic \"error\" for HTTP connections",null,null],[3,"Extensions","","A type map of protocol extensions.",null,null],[0,"header","","HTTP header types",null,null],[3,"Drain","http::header","A drain iterator for `HeaderMap`.",null,null],[3,"GetAll","","A view to all values stored in a single entry.",null,null],[3,"HeaderMap","","A set of HTTP headers",null,null],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",null,null],[3,"Iter","","`HeaderMap` entry iterator.",null,null],[3,"IterMut","","`HeaderMap` mutable entry iterator",null,null],[3,"Keys","","An iterator over `HeaderMap` keys.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",null,null],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",null,null],[3,"ValueDrain","","An drain iterator of all values associated with a single…",null,null],[3,"ValueIter","","An iterator of all values associated with a single header…",null,null],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",null,null],[3,"Values","","`HeaderMap` value iterator.",null,null],[3,"ValuesMut","","`HeaderMap` mutable value iterator",null,null],[3,"HeaderName","","Represents an HTTP header field name",null,null],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",null,null],[3,"HeaderValue","","Represents an HTTP header field value.",null,null],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",null,null],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",null,null],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",null,null],[13,"Occupied","","An occupied entry",0,null],[13,"Vacant","","A vacant entry",0,null],[11,"new","","Create an empty `HeaderMap`.",1,[[],["self"]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",1,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",1,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",1,[[["self"]]]],[11,"capacity","","Returns the number of headers the map can hold without…",1,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",1,[[["self"],["usize"]]]],[11,"get","","Returns a reference to the value associated with the key.",1,[[["self"],["k"]],[["t"],["option"]]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",1,[[["self"],["k"]],[["option"],["t"]]]],[11,"get_all","","Returns a view of all values associated with a key.",1,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",1,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",1,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",1,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",1,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",1,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",1,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["entry"]]],[11,"try_entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],[["result",["entry","invalidheadername"]],["entry"],["invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",1,[[["self"],["k"]],["option"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"key","","Returns a reference to the entry's key",2,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",2,[[],["headername"]]],[11,"insert","","Insert the value into the entry.",2,[[["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",2,[[["t"]],["occupiedentry"]]],[11,"iter","","Returns an iterator visiting all values associated with…",3,[[["self"]],["valueiter"]]],[11,"key","","Returns a reference to the entry's key.",4,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",4,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",4,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",4,[[],["t"]]],[11,"insert","","Sets the value of the entry.",4,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",4,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",4,[[["self"],["t"]]]],[11,"remove","","Remove the entry from the map.",4,[[],["t"]]],[11,"remove_entry","","Remove the entry from the map.",4,[[]]],[11,"remove_entry_mult","","Remove the entry from the map.",4,[[]]],[11,"iter","","Returns an iterator visiting all values associated with…",4,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",4,[[["self"]],["valueitermut"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",5,[[],[["headername"],["invalidheadername"],["result",["headername","invalidheadername"]]]]],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",5,[[],[["headername"],["invalidheadername"],["result",["headername","invalidheadername"]]]]],[11,"from_static","","Converts a static string to a HTTP header name.",5,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",5,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",6,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",6,[[["str"]],[["result",["headervalue","invalidheadervalue"]],["headervalue"],["invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",6,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",6,[[],[["result",["headervalue","invalidheadervalue"]],["headervalue"],["invalidheadervalue"]]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",6,[[["t"]],[["result",["headervalue","invalidheadervalue"]],["headervalue"],["invalidheadervalue"]]]],[11,"from_maybe_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",6,[[["t"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",6,[[["self"]],[["result",["str","tostrerror"]],["str"],["tostrerror"]]]],[11,"len","","Returns the length of `self`.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",6,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",6,[[["self"]]]],[11,"set_sensitive","","Mark that the header value represents sensitive information.",6,[[["self"],["bool"]]]],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",6,[[["self"]],["bool"]]],[17,"ACCEPT","","Advertises which content types the client is able to…",null,null],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",null,null],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",null,null],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",null,null],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",null,null],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",null,null],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",null,null],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",null,null],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",null,null],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",null,null],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",null,null],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",null,null],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",null,null],[17,"AGE","","Indicates the time in seconds the object has been in a…",null,null],[17,"ALLOW","","Lists the set of methods support by a resource.",null,null],[17,"ALT_SVC","","Advertises the availability of alternate services to…",null,null],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",null,null],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",null,null],[17,"CONNECTION","","Controls whether or not the network connection stays open…",null,null],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",null,null],[17,"CONTENT_ENCODING","","Used to compress the media-type.",null,null],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",null,null],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",null,null],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",null,null],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",null,null],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",null,null],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their…",null,null],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",null,null],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",null,null],[17,"DNT","","Indicates the client's tracking preference.",null,null],[17,"DATE","","Contains the date and time at which the message was…",null,null],[17,"ETAG","","Identifier for a specific version of a resource.",null,null],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",null,null],[17,"EXPIRES","","Contains the date/time after which the response is…",null,null],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",null,null],[17,"FROM","","Contains an Internet email address for a human user who…",null,null],[17,"HOST","","Specifies the domain name of the server and (optionally)…",null,null],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",null,null],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_RANGE","","Makes a request conditional based on range.",null,null],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",null,null],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",null,null],[17,"LINK","","Allows the server to point an interested client to another…",null,null],[17,"LOCATION","","Indicates the URL to redirect a page to.",null,null],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",null,null],[17,"ORIGIN","","Indicates where a fetch originates from.",null,null],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",null,null],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",null,null],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",null,null],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",null,null],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",null,null],[17,"RANGE","","Indicates the part of a document that the server should…",null,null],[17,"REFERER","","Contains the address of the previous web page from which a…",null,null],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",null,null],[17,"REFRESH","","Informs the web browser that the current page or frame…",null,null],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",null,null],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",null,null],[17,"SERVER","","Contains information about the software used by the origin…",null,null],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",null,null],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",null,null],[17,"TE","","Informs the server of transfer encodings willing to be…",null,null],[17,"TRAILER","","Allows the sender to include additional fields at the end…",null,null],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",null,null],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",null,null],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",null,null],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",null,null],[17,"VARY","","Determines how to match future requests with cached…",null,null],[17,"VIA","","Added by proxies to track routing.",null,null],[17,"WARNING","","General HTTP header contains information about possible…",null,null],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",null,null],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",null,null],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",null,null],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",null,null],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",null,null],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",null,null],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",null,null],[0,"method","http","The HTTP request method",null,null],[3,"Method","http::method","The Request Method (VERB)",null,null],[3,"InvalidMethod","","A possible error value when converting `Method` from bytes.",null,null],[18,"GET","","GET",7,null],[18,"POST","","POST",7,null],[18,"PUT","","PUT",7,null],[18,"DELETE","","DELETE",7,null],[18,"HEAD","","HEAD",7,null],[18,"OPTIONS","","OPTIONS",7,null],[18,"CONNECT","","CONNECT",7,null],[18,"PATCH","","PATCH",7,null],[18,"TRACE","","TRACE",7,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",7,[[],[["result",["method","invalidmethod"]],["invalidmethod"],["method"]]]],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",7,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",7,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",7,[[["self"]],["str"]]],[0,"request","http","HTTP request types.",null,null],[3,"Request","http::request","Represents an HTTP request.",null,null],[3,"Parts","","Component parts of an HTTP `Request`",null,null],[12,"method","","The request's method",8,null],[12,"uri","","The request's URI",8,null],[12,"version","","The request's version",8,null],[12,"headers","","The request's headers",8,null],[12,"extensions","","The request's extensions",8,null],[3,"Builder","","An HTTP request builder",null,null],[11,"builder","","Creates a new builder-style object to manufacture a…",9,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and…",9,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and…",9,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and…",9,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method…",9,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method…",9,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and…",9,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method…",9,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method…",9,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method…",9,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",9,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts…",9,[[["parts"],["t"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",9,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",9,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",9,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",9,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",9,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",9,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",9,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",9,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",9,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",9,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",9,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",9,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",9,[[],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",9,[[]]],[11,"map","","Consumes the request returning a new request with body…",9,[[["f"]],["request"]]],[11,"new","","Creates a new default instance of `Builder` to construct a…",10,[[],["builder"]]],[11,"method","","Set the HTTP method for this request.",10,[[["t"]],["builder"]]],[11,"method_ref","","Get the HTTP Method for this request.",10,[[["self"]],[["option",["method"]],["method"]]]],[11,"uri","","Set the URI for this request.",10,[[["t"]],["builder"]]],[11,"uri_ref","","Get the URI for this request",10,[[["self"]],[["uri"],["option",["uri"]]]]],[11,"version","","Set the HTTP version for this request.",10,[[["version"]],["builder"]]],[11,"header","","Appends a header to this request builder.",10,[[["k"],["v"]],["builder"]]],[11,"headers_ref","","Get header on this request builder. when builder has error…",10,[[["self"]],[["option",["headermap"]],["headermap"]]]],[11,"headers_mut","","Get headers on this request builder.",10,[[["self"]],[["headermap"],["option",["headermap"]]]]],[11,"extension","","Adds an extension to this builder",10,[[["t"]],["builder"]]],[11,"extensions_ref","","Get a reference to the extensions for this request builder.",10,[[["self"]],[["option",["extensions"]],["extensions"]]]],[11,"extensions_mut","","Get a mutable reference to the extensions for this request…",10,[[["self"]],[["option",["extensions"]],["extensions"]]]],[11,"body","","\"Consumes\" this builder, using the provided `body` to…",10,[[["t"]],[["result",["request"]],["request"]]]],[0,"response","http","HTTP response types.",null,null],[3,"Response","http::response","Represents an HTTP response",null,null],[3,"Parts","","Component parts of an HTTP `Response`",null,null],[12,"status","","The response's status",11,null],[12,"version","","The response's version",11,null],[12,"headers","","The response's headers",11,null],[12,"extensions","","The response's extensions",11,null],[3,"Builder","","An HTTP response builder",null,null],[11,"builder","","Creates a new builder-style object to manufacture a…",12,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",12,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",12,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",12,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",12,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",12,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",12,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",12,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",12,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",12,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",12,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",12,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",12,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",12,[[],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",12,[[]]],[11,"map","","Consumes the response returning a new response with body…",12,[[["f"]],["response"]]],[11,"new","","Creates a new default instance of `Builder` to construct…",13,[[],["builder"]]],[11,"status","","Set the HTTP status for this response.",13,[[["t"]],["builder"]]],[11,"version","","Set the HTTP version for this response.",13,[[["version"]],["builder"]]],[11,"header","","Appends a header to this response builder.",13,[[["k"],["v"]],["builder"]]],[11,"headers_ref","","Get header on this response builder.",13,[[["self"]],[["option",["headermap"]],["headermap"]]]],[11,"headers_mut","","Get header on this response builder. when builder has…",13,[[["self"]],[["headermap"],["option",["headermap"]]]]],[11,"extension","","Adds an extension to this builder",13,[[["t"]],["builder"]]],[11,"extensions_ref","","Get a reference to the extensions for this response builder.",13,[[["self"]],[["option",["extensions"]],["extensions"]]]],[11,"extensions_mut","","Get a mutable reference to the extensions for this…",13,[[["self"]],[["option",["extensions"]],["extensions"]]]],[11,"body","","\"Consumes\" this builder, using the provided `body` to…",13,[[["t"]],[["response"],["result",["response"]]]]],[0,"status","http","HTTP status codes",null,null],[3,"StatusCode","http::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[3,"InvalidStatusCode","","A possible error value when converting a `StatusCode` from…",null,null],[11,"from_u16","","Converts a u16 to a status code.",14,[[["u16"]],[["result",["statuscode","invalidstatuscode"]],["statuscode"],["invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",14,[[],[["result",["statuscode","invalidstatuscode"]],["statuscode"],["invalidstatuscode"]]]],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",14,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",14,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",14,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_informational","","Check if status is within 100-199.",14,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",14,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",14,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",14,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",14,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",14,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",14,null],[18,"PROCESSING","","102 Processing [RFC2518]",14,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",14,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",14,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",14,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",14,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",14,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",14,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",14,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",14,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",14,null],[18,"IM_USED","","226 IM Used [RFC3229]",14,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",14,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",14,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",14,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",14,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",14,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",14,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",14,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",14,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",14,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",14,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",14,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",14,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",14,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",14,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",14,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",14,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",14,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",14,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",14,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",14,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",14,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",14,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",14,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",14,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",14,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",14,null],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",14,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",14,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",14,null],[18,"LOCKED","","423 Locked [RFC4918]",14,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",14,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",14,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",14,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",14,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",14,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",14,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",14,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",14,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",14,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",14,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",14,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",14,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",14,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",14,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",14,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",14,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",14,null],[0,"uri","http","URI component of request and response lines",null,null],[3,"Authority","http::uri","Represents the authority component of a URI.",null,null],[3,"Builder","","A builder for `Uri`s.",null,null],[3,"PathAndQuery","","Represents the path component of a URI",null,null],[3,"Port","","The port component of a URI.",null,null],[3,"Scheme","","Represents the scheme component of a URI",null,null],[3,"Uri","","The URI component of a request.",null,null],[3,"Parts","","The various parts of a URI.",null,null],[12,"scheme","","The scheme component of a URI",15,null],[12,"authority","","The authority component of a URI",15,null],[12,"path_and_query","","The origin-form component of a URI",15,null],[3,"InvalidUri","","An error resulting from a failed attempt to construct a URI.",null,null],[3,"InvalidUriParts","","An error resulting from a failed attempt to construct a URI.",null,null],[11,"from_static","","Attempt to convert an `Authority` from a static string.",16,[[["str"]],["self"]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `Authority`.",16,[[["t"]],[["result",["invaliduri"]],["invaliduri"]]]],[11,"host","","Get the host of this `Authority`.",16,[[["self"]],["str"]]],[11,"port","","Get the port part of this `Authority`.",16,[[["self"]],[["port",["str"]],["option",["port"]]]]],[11,"port_u16","","Get the port of this `Authority` as a `u16`.",16,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"as_str","","Return a str representation of the authority",16,[[["self"]],["str"]]],[11,"new","","Creates a new default instance of `Builder` to construct a…",17,[[],["builder"]]],[11,"scheme","","Set the `Scheme` for this URI.",17,[[["t"]],["self"]]],[11,"authority","","Set the `Authority` for this URI.",17,[[["t"]],["self"]]],[11,"path_and_query","","Set the `PathAndQuery` for this URI.",17,[[["t"]],["self"]]],[11,"build","","Consumes this builder, and tries to construct a valid…",17,[[],[["error"],["result",["uri","error"]],["uri"]]]],[11,"from_static","","Convert a `PathAndQuery` from a static string.",18,[[["str"]],["self"]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `PathAndQuery`.",18,[[["t"]],[["result",["invaliduri"]],["invaliduri"]]]],[11,"path","","Returns the path component",18,[[["self"]],["str"]]],[11,"query","","Returns the query string component",18,[[["self"]],[["str"],["option",["str"]]]]],[11,"as_str","","Returns the path and query as a string component.",18,[[["self"]],["str"]]],[11,"as_u16","","Returns the port number as a `u16`.",19,[[["self"]],["u16"]]],[11,"as_str","","Returns the port number as a `str`.",19,[[["self"]],["str"]]],[18,"HTTP","","HTTP protocol scheme",20,null],[18,"HTTPS","","HTTP protocol over TLS.",20,null],[11,"as_str","","Return a str representation of the scheme",20,[[["self"]],["str"]]],[11,"builder","","Creates a new builder-style object to manufacture a `Uri`.",21,[[],["builder"]]],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",21,[[["parts"]],[["invaliduriparts"],["uri"],["result",["uri","invaliduriparts"]]]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `Uri`.",21,[[["t"]],[["result",["invaliduri"]],["invaliduri"]]]],[11,"from_static","","Convert a `Uri` from a static string.",21,[[["str"]],["self"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",21,[[],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",21,[[["self"]],[["option",["pathandquery"]],["pathandquery"]]]],[11,"path","","Get the path of this `Uri`.",21,[[["self"]],["str"]]],[11,"scheme","","Get the scheme of this `Uri`.",21,[[["self"]],[["option",["scheme"]],["scheme"]]]],[11,"scheme_str","","Get the scheme of this `Uri` as a `&str`.",21,[[["self"]],[["str"],["option",["str"]]]]],[11,"authority","","Get the authority of this `Uri`.",21,[[["self"]],[["authority"],["option",["authority"]]]]],[11,"host","","Get the host of this `Uri`.",21,[[["self"]],[["str"],["option",["str"]]]]],[11,"port","","Get the port part of this `Uri`.",21,[[["self"]],[["port",["str"]],["option",["port"]]]]],[11,"port_u16","","Get the port of this `Uri` as a `u16`.",21,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",21,[[["self"]],[["str"],["option",["str"]]]]],[0,"version","http","HTTP version",null,null],[3,"Version","http::version","Represents a version of the HTTP spec.",null,null],[18,"HTTP_09","","`HTTP/0.9`",22,null],[18,"HTTP_10","","`HTTP/1.0`",22,null],[18,"HTTP_11","","`HTTP/1.1`",22,null],[18,"HTTP_2","","`HTTP/2.0`",22,null],[18,"HTTP_3","","`HTTP/3.0`",22,null],[11,"is","http","Return true if the underlying error has the same type as T.",23,[[["self"]],["bool"]]],[11,"get_ref","","Return a reference to the lower level, inner error.",23,[[["self"]],["error"]]],[11,"new","","Create an empty `Extensions`.",24,[[],["extensions"]]],[11,"insert","","Insert a type into this `Extensions`.",24,[[["send"],["self"],["sync"]],[["send"],["option"],["sync"]]]],[11,"get","","Get a reference to a type previously inserted on this…",24,[[["self"]],[["t"],["option"]]]],[11,"get_mut","","Get a mutable reference to a type previously inserted on…",24,[[["self"]],[["option"],["t"]]]],[11,"remove","","Remove a type from this `Extensions`.",24,[[["self"]],[["send"],["option"],["sync"]]]],[11,"clear","","Clear the `Extensions` of all inserted extensions.",24,[[["self"]]]],[6,"Result","","A `Result` typedef to use with the `http::Error` type",null,null],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","http::header","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","http::method","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","http::request","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","http::response","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","http::status","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","http::uri","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","http::version","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"drop","http::header","",25,[[["self"]]]],[11,"drop","","",26,[[["self"]]]],[11,"drop","","",30,[[["self"]]]],[11,"as_ref","","",5,[[["self"]],["str"]]],[11,"as_ref","","",5,[[["self"]]]],[11,"as_ref","","",6,[[["self"]]]],[11,"as_ref","http::method","",7,[[["self"]],["str"]]],[11,"as_ref","http::uri","",16,[[["self"]],["str"]]],[11,"as_ref","","",19,[[["self"]],["str"]]],[11,"as_ref","","",20,[[["self"]],["str"]]],[11,"from","http::header","",5,[[["headername"]],["headername"]]],[11,"from","","",6,[[["headername"]],["headervalue"]]],[11,"from","","",6,[[["u16"]],["headervalue"]]],[11,"from","","",6,[[["i16"]],["headervalue"]]],[11,"from","","",6,[[["u32"]],["headervalue"]]],[11,"from","","",6,[[["i32"]],["headervalue"]]],[11,"from","","",6,[[["u64"]],["headervalue"]]],[11,"from","","",6,[[["i64"]],["headervalue"]]],[11,"from","","",6,[[["usize"]],["headervalue"]]],[11,"from","","",6,[[["isize"]],["headervalue"]]],[11,"from","","",6,[[["headervalue"]],["self"]]],[11,"from","http::method","",7,[[["method"]],["self"]]],[11,"from","http::status","",14,[[["statuscode"]],["self"]]],[11,"from","http::uri","",15,[[["uri"]],["self"]]],[11,"from","http","",23,[[["invalidstatuscode"]],["error"]]],[11,"from","","",23,[[["invalidmethod"]],["error"]]],[11,"from","","",23,[[["invaliduri"]],["error"]]],[11,"from","","",23,[[["invaliduriparts"]],["error"]]],[11,"from","","",23,[[["invalidheadername"]],["error"]]],[11,"from","","",23,[[["invalidheadervalue"]],["error"]]],[11,"from","","",23,[[["infallible"]],["error"]]],[11,"next_back","http::header","",31,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"extend","","Extend a `HeaderMap` with the contents of another…",1,[[["self"],["intoiterator"]]]],[11,"extend","","",1,[[["self"],["intoiterator"]]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves keys…",1,[[],["intoiter"]]],[11,"into_iter","","",3,[[],["valueiter"]]],[11,"into_iter","","",4,[[],["valueitermut"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,[[["self"]]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,[[["self"]]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,[[["self"]]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,[[["self"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,[[["self"]]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,[[["self"]]]],[11,"clone","","",1,[[["self"]],["headermap"]]],[11,"clone","","",5,[[["self"]],["headername"]]],[11,"clone","","",6,[[["self"]],["headervalue"]]],[11,"clone","http::method","",7,[[["self"]],["method"]]],[11,"clone","http::status","",14,[[["self"]],["statuscode"]]],[11,"clone","http::uri","",16,[[["self"]],["authority"]]],[11,"clone","","",18,[[["self"]],["pathandquery"]]],[11,"clone","","",20,[[["self"]],["scheme"]]],[11,"clone","","",21,[[["self"]],["uri"]]],[11,"clone","http::version","",22,[[["self"]],["version"]]],[11,"default","http::header","",1,[[],["self"]]],[11,"default","http::method","",7,[[],["method"]]],[11,"default","http::request","",9,[[],["request"]]],[11,"default","","",10,[[],["builder"]]],[11,"default","http::response","",12,[[],["response"]]],[11,"default","","",13,[[],["builder"]]],[11,"default","http::status","",14,[[],["statuscode"]]],[11,"default","http::uri","",17,[[],["builder"]]],[11,"default","","",15,[[],["parts"]]],[11,"default","","",21,[[],["uri"]]],[11,"default","http::version","",22,[[],["version"]]],[11,"default","http","",24,[[],["extensions"]]],[11,"cmp","http::header","",6,[[["self"]],["ordering"]]],[11,"cmp","http::status","",14,[[["statuscode"],["self"]],["ordering"]]],[11,"cmp","http::version","",22,[[["self"],["version"]],["ordering"]]],[11,"eq","http::header","",1,[[["headermap"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["headername"]],["bool"]]],[11,"ne","","",5,[[["self"],["headername"]],["bool"]]],[11,"eq","","",5,[[["headername"],["self"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",5,[[["str"],["self"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",5,[[["str"],["self"]],["bool"]]],[11,"eq","","",6,[[["headervalue"],["self"]],["bool"]]],[11,"eq","","",6,[[["str"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"]],["bool"]]],[11,"eq","","",6,[[["string"],["self"]],["bool"]]],[11,"eq","","",6,[[["t"],["self"]],["bool"]]],[11,"eq","http::method","",7,[[["method"],["self"]],["bool"]]],[11,"ne","","",7,[[["method"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["method"]],["bool"]]],[11,"eq","","",7,[[["str"],["self"]],["bool"]]],[11,"eq","","",7,[[["str"],["self"]],["bool"]]],[11,"eq","http::status","",14,[[["statuscode"],["self"]],["bool"]]],[11,"ne","","",14,[[["statuscode"],["self"]],["bool"]]],[11,"eq","","",14,[[["u16"],["self"]],["bool"]]],[11,"eq","http::uri","",16,[[["authority"],["self"]],["bool"]]],[11,"eq","","",16,[[["str"],["self"]],["bool"]]],[11,"eq","","",16,[[["str"],["self"]],["bool"]]],[11,"eq","","",16,[[["string"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["pathandquery"]],["bool"]]],[11,"eq","","",18,[[["str"],["self"]],["bool"]]],[11,"eq","","",18,[[["str"],["self"]],["bool"]]],[11,"eq","","",18,[[["string"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["port"]],["bool"]]],[11,"eq","","",19,[[["u16"],["self"]],["bool"]]],[11,"eq","","",20,[[["scheme"],["self"]],["bool"]]],[11,"eq","","",20,[[["str"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["uri"]],["bool"]]],[11,"eq","","",21,[[["str"],["self"]],["bool"]]],[11,"eq","","",21,[[["str"],["self"]],["bool"]]],[11,"eq","http::version","",22,[[["self"],["version"]],["bool"]]],[11,"ne","","",22,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","http::header","",6,[[["headervalue"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",6,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",6,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",6,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",6,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","http::status","",14,[[["statuscode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",14,[[["statuscode"],["self"]],["bool"]]],[11,"le","","",14,[[["statuscode"],["self"]],["bool"]]],[11,"gt","","",14,[[["statuscode"],["self"]],["bool"]]],[11,"ge","","",14,[[["statuscode"],["self"]],["bool"]]],[11,"partial_cmp","http::uri","",16,[[["authority"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",16,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",16,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",16,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",18,[[["self"],["pathandquery"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",18,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",18,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",18,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","http::version","",22,[[["self"],["version"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",22,[[["self"],["version"]],["bool"]]],[11,"le","","",22,[[["self"],["version"]],["bool"]]],[11,"gt","","",22,[[["self"],["version"]],["bool"]]],[11,"ge","","",22,[[["self"],["version"]],["bool"]]],[11,"fmt","http::header","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::method","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::request","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::response","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::status","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::uri","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::version","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","http","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::header","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::method","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::status","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","http::uri","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","http","",23,[[["formatter"],["self"]],["result"]]],[11,"index","http::header","Panics Using the index operator will cause a panic if the…",1,[[["self"],["k"]],["t"]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","http::method","",7,[[["self"],["__h"]]]],[11,"hash","http::status","",14,[[["self"],["__h"]]]],[11,"hash","http::uri","",16,[[["self"],["h"]]]],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",21,[[["self"],["h"]]]],[11,"hash","http::version","",22,[[["self"],["__h"]]]],[11,"from_iter","http::header","",1,[[["i"]],["self"]]],[11,"try_from","","",1,[[["hashmap"]],["result"]]],[11,"try_from","","",5,[[["str"]],["result"]]],[11,"try_from","","",5,[[["string"]],["result"]]],[11,"try_from","","",5,[[],["result"]]],[11,"try_from","","",6,[[["str"]],["result"]]],[11,"try_from","","",6,[[["string"]],["result"]]],[11,"try_from","","",6,[[],["result"]]],[11,"try_from","","",6,[[["string"]],["result"]]],[11,"try_from","","",6,[[["vec",["u8"]],["u8"]],["result"]]],[11,"try_from","http::method","",7,[[],["result"]]],[11,"try_from","","",7,[[["str"]],["result"]]],[11,"try_from","http::status","",14,[[],["result"]]],[11,"try_from","","",14,[[["str"]],["result"]]],[11,"try_from","","",14,[[["u16"]],["result"]]],[11,"try_from","http::uri","",16,[[],["result"]]],[11,"try_from","","",16,[[["str"]],["result"]]],[11,"try_from","","",18,[[],["result"]]],[11,"try_from","","",18,[[["str"]],["result"]]],[11,"try_from","","",20,[[],["result"]]],[11,"try_from","","",20,[[["str"]],["result"]]],[11,"try_from","","",21,[[],["result"]]],[11,"try_from","","",21,[[["str"]],["result"]]],[11,"try_from","","",21,[[["string"]],["result"]]],[11,"try_from","","",21,[[["string"]],["result"]]],[11,"try_from","","",21,[[["parts"]],["result"]]],[11,"try_from","","",21,[[["uri"]],["result"]]],[11,"from_str","http::header","",5,[[["str"]],[["headername"],["invalidheadername"],["result",["headername","invalidheadername"]]]]],[11,"from_str","","",6,[[["str"]],[["headervalue"],["result",["headervalue"]]]]],[11,"from_str","http::method","",7,[[["str"]],["result"]]],[11,"from_str","http::status","",14,[[["str"]],[["result",["statuscode","invalidstatuscode"]],["statuscode"],["invalidstatuscode"]]]],[11,"from_str","http::uri","",16,[[["str"]],[["result",["invaliduri"]],["invaliduri"]]]],[11,"from_str","","",18,[[["str"]],[["result",["invaliduri"]],["invaliduri"]]]],[11,"from_str","","",20,[[["str"]],["result"]]],[11,"from_str","","",21,[[["str"]],[["result",["uri","invaliduri"]],["uri"],["invaliduri"]]]],[11,"borrow","http::header","",5,[[["self"]],["str"]]],[11,"source","http","",23,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,"Entry"],[3,"HeaderMap"],[3,"VacantEntry"],[3,"GetAll"],[3,"OccupiedEntry"],[3,"HeaderName"],[3,"HeaderValue"],[3,"Method"],[3,"Parts"],[3,"Request"],[3,"Builder"],[3,"Parts"],[3,"Response"],[3,"Builder"],[3,"StatusCode"],[3,"Parts"],[3,"Authority"],[3,"Builder"],[3,"PathAndQuery"],[3,"Port"],[3,"Scheme"],[3,"Uri"],[3,"Version"],[3,"Error"],[3,"Extensions"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"ValueDrain"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"Values"],[3,"ValuesMut"],[3,"InvalidHeaderName"],[3,"InvalidHeaderValue"],[3,"ToStrError"],[3,"InvalidMethod"],[3,"InvalidStatusCode"],[3,"InvalidUri"],[3,"InvalidUriParts"]]};
searchIndex["http_body"] = {"doc":"Asynchronous HTTP request or response body.","i":[[3,"Data","http_body","Future that resolves to the next data chunk from `Body`",null,null],[3,"Trailers","","Future that resolves to the optional trailers from `Body`",null,null],[3,"SizeHint","","A `Body` size hint",null,null],[11,"new","","Returns a new `SizeHint` with default values",0,[[],["sizehint"]]],[11,"with_exact","","Returns a new `SizeHint` with both upper and lower bounds…",0,[[["u64"]],["sizehint"]]],[11,"lower","","Returns the lower bound of data that the `Body` will yield…",0,[[["self"]],["u64"]]],[11,"set_lower","","Set the value of the `lower` hint.",0,[[["self"],["u64"]]]],[11,"upper","","Returns the upper bound of data the `Body` will yield…",0,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"set_upper","","Set the value of the `upper` hint value.",0,[[["self"],["u64"]]]],[11,"exact","","Returns the exact size of data that will be yielded if the…",0,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"set_exact","","Set the value of the `lower` and `upper` bounds to exactly…",0,[[["self"],["u64"]]]],[8,"Body","","Trait representing a streaming body of a Request or…",null,null],[16,"Data","","Values yielded by the `Body`.",1,null],[16,"Error","","The error type this `Body` might generate.",1,null],[10,"poll_data","","Attempt to pull out the next data buffer of this stream.",1,[[["pin"],["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[10,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["option"]]]]],[11,"is_end_stream","","Returns `true` when the end of stream has been reached.",1,[[["self"]],["bool"]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",1,[[["self"]],["sizehint"]]],[11,"data","","Returns future that resolves to next data chunk, if any.",1,[[["self"]],["data"]]],[11,"trailers","","Returns future that resolves to trailers, if any.",1,[[["self"]],["trailers"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["sizehint"]]],[11,"default","","",0,[[],["sizehint"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"poll","","",2,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",3,[[["pin"],["self"],["context"]],["poll"]]]],"p":[[3,"SizeHint"],[8,"Body"],[3,"Data"],[3,"Trailers"]]};
searchIndex["httparse"] = {"doc":"httparse","i":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,[[],["result"]]],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,[[],[["status"],["invalidchunksize"],["result",["status","invalidchunksize"]]]]],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array…",null,null],[11,"is_complete","","Convenience method to check if status is complete.",4,[[["self"]],["bool"]]],[11,"is_partial","","Convenience method to check if status is partial.",4,[[["self"]],["bool"]]],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if…",4,[[],["t"]]],[11,"new","","Creates a new Request, using a slice of headers you…",0,[[],["request"]]],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"new","","Creates a new `Response` using a slice of `Header`s you…",1,[[],["response"]]],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["status"]]],[11,"clone","","",2,[[["self"]],["header"]]],[11,"eq","","",3,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["invalidchunksize"],["self"]],["bool"]]],[11,"eq","","",4,[[["status"],["self"]],["bool"]]],[11,"ne","","",4,[[["status"],["self"]],["bool"]]],[11,"eq","","",0,[[["request"],["self"]],["bool"]]],[11,"ne","","",0,[[["request"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["response"]],["bool"]]],[11,"ne","","",1,[[["self"],["response"]],["bool"]]],[11,"eq","","",2,[[["header"],["self"]],["bool"]]],[11,"ne","","",2,[[["header"],["self"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]]],"p":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["hyper"] = {"doc":"hyper","i":[[0,"header","hyper","HTTP header types",null,null],[8,"AsHeaderName","hyper::header","A marker trait used to identify values that can be used as…",null,null],[3,"Drain","","A drain iterator for `HeaderMap`.",null,null],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",null,null],[13,"Occupied","","An occupied entry",0,null],[13,"Vacant","","A vacant entry",0,null],[3,"GetAll","","A view to all values stored in a single entry.",null,null],[3,"HeaderMap","","A set of HTTP headers",null,null],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",null,null],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",null,null],[3,"Iter","","`HeaderMap` entry iterator.",null,null],[3,"IterMut","","`HeaderMap` mutable entry iterator",null,null],[3,"Keys","","An iterator over `HeaderMap` keys.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",null,null],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",null,null],[3,"ValueDrain","","An drain iterator of all values associated with a single…",null,null],[3,"ValueIter","","An iterator of all values associated with a single header…",null,null],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",null,null],[3,"Values","","`HeaderMap` value iterator.",null,null],[3,"ValuesMut","","`HeaderMap` mutable value iterator",null,null],[3,"HeaderName","","Represents an HTTP header field name",null,null],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",null,null],[3,"HeaderValue","","Represents an HTTP header field value.",null,null],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",null,null],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",null,null],[17,"ACCEPT","","Advertises which content types the client is able to…",null,null],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",null,null],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",null,null],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",null,null],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",null,null],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",null,null],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",null,null],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",null,null],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",null,null],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",null,null],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",null,null],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",null,null],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",null,null],[17,"AGE","","Indicates the time in seconds the object has been in a…",null,null],[17,"ALLOW","","Lists the set of methods support by a resource.",null,null],[17,"ALT_SVC","","Advertises the availability of alternate services to…",null,null],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",null,null],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",null,null],[17,"CONNECTION","","Controls whether or not the network connection stays open…",null,null],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",null,null],[17,"CONTENT_ENCODING","","Used to compress the media-type.",null,null],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",null,null],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",null,null],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",null,null],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",null,null],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",null,null],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their…",null,null],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",null,null],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",null,null],[17,"DNT","","Indicates the client's tracking preference.",null,null],[17,"DATE","","Contains the date and time at which the message was…",null,null],[17,"ETAG","","Identifier for a specific version of a resource.",null,null],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",null,null],[17,"EXPIRES","","Contains the date/time after which the response is…",null,null],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",null,null],[17,"FROM","","Contains an Internet email address for a human user who…",null,null],[17,"HOST","","Specifies the domain name of the server and (optionally)…",null,null],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",null,null],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_RANGE","","Makes a request conditional based on range.",null,null],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",null,null],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",null,null],[17,"LINK","","Allows the server to point an interested client to another…",null,null],[17,"LOCATION","","Indicates the URL to redirect a page to.",null,null],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",null,null],[17,"ORIGIN","","Indicates where a fetch originates from.",null,null],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",null,null],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",null,null],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",null,null],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",null,null],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",null,null],[17,"RANGE","","Indicates the part of a document that the server should…",null,null],[17,"REFERER","","Contains the address of the previous web page from which a…",null,null],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",null,null],[17,"REFRESH","","Informs the web browser that the current page or frame…",null,null],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",null,null],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",null,null],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",null,null],[17,"SERVER","","Contains information about the software used by the origin…",null,null],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",null,null],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",null,null],[17,"TE","","Informs the server of transfer encodings willing to be…",null,null],[17,"TRAILER","","Allows the sender to include additional fields at the end…",null,null],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",null,null],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",null,null],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",null,null],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",null,null],[17,"VARY","","Determines how to match future requests with cached…",null,null],[17,"VIA","","Added by proxies to track routing.",null,null],[17,"WARNING","","General HTTP header contains information about possible…",null,null],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",null,null],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",null,null],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",null,null],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",null,null],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",null,null],[3,"HeaderMap","hyper","A set of HTTP headers",null,null],[3,"Method","","The Request Method (VERB)",null,null],[3,"Request","","Represents an HTTP request.",null,null],[3,"Response","","Represents an HTTP response",null,null],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[3,"Uri","","The URI component of a request.",null,null],[3,"Version","","Represents a version of the HTTP spec.",null,null],[3,"Body","","A stream of `Bytes`, used when receiving bodies.",null,null],[3,"Error","","Represents errors that can occur handling HTTP streams.",null,null],[0,"body","","Streaming bodies for Requests and Responses",null,null],[8,"Buf","hyper::body","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",1,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",1,[[["self"]]]],[11,"bytes_vectored","","Fills `dst` with potentially multiple slices starting at…",1,[[["self"]],["usize"]]],[10,"advance","","Advance the internal cursor of the Buf",1,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",1,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",1,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",1,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",1,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",1,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",1,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",1,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",1,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",1,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",1,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",1,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",1,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",1,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",1,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",1,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",1,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",1,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",1,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",1,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",1,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",1,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",1,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",1,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",1,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",1,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",1,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",1,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",1,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",1,[[["self"]],["bytes"]]],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[8,"HttpBody","","Trait representing a streaming body of a Request or…",null,null],[16,"Data","","Values yielded by the `Body`.",2,null],[16,"Error","","The error type this `Body` might generate.",2,null],[10,"poll_data","","Attempt to pull out the next data buffer of this stream.",2,[[["pin"],["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[10,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["option"]]]]],[11,"is_end_stream","","Returns `true` when the end of stream has been reached.",2,[[["self"]],["bool"]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",2,[[["self"]],["sizehint"]]],[11,"data","","Returns future that resolves to next data chunk, if any.",2,[[["self"]],["data"]]],[11,"trailers","","Returns future that resolves to trailers, if any.",2,[[["self"]],["trailers"]]],[3,"Body","","A stream of `Bytes`, used when receiving bodies.",null,null],[3,"Sender","","A sender half used with `Body::channel()`.",null,null],[5,"aggregate","","Aggregate the data buffers from a body asynchronously.",null,[[["t"]]]],[5,"to_bytes","","Concatenate the buffers from a body into a single `Bytes`…",null,[[["t"]]]],[11,"empty","hyper","Create an empty `Body` stream.",3,[[],["body"]]],[11,"channel","","Create a `Body` stream with an associated sender half.",3,[[]]],[11,"wrap_stream","","Wrap a futures `Stream` in a box inside `Body`.",3,[[["s"]],["body"]]],[11,"on_upgrade","","Converts this `Body` into a `Future` of a pending HTTP…",3,[[],["onupgrade"]]],[11,"poll_ready","hyper::body","Check to see if this `Sender` can send more data.",4,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"send_data","","Send data on this channel when it is ready.",4,[[["bytes"],["self"]]]],[11,"try_send_data","","Try to send data on this channel.",4,[[["self"],["bytes"]],[["result",["bytes"]],["bytes"]]]],[11,"abort","","Aborts the body in an abnormal fashion.",4,[[]]],[0,"client","hyper","HTTP Client",null,null],[3,"HttpConnector","hyper::client","A connector for the `http` scheme.",null,null],[3,"Client","","A Client to make outgoing HTTP requests.",null,null],[3,"ResponseFuture","","A `Future` that will resolve to an HTTP Response.",null,null],[3,"Builder","","A builder to configure a new `Client`.",null,null],[0,"conn","","Lower-level client connection API.",null,null],[3,"SendRequest","hyper::client::conn","The sender side of an established connection.",null,null],[3,"Connection","","A future that processes all HTTP state for the IO object.",null,null],[3,"Builder","","A builder to configure an HTTP connection.",null,null],[3,"ResponseFuture","","A future returned by `SendRequest::send_request`.",null,null],[3,"Parts","","Deconstructed parts of a `Connection`.",null,null],[12,"io","","The original IO object used in the handshake.",5,null],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",5,null],[5,"handshake","","Returns a handshake future over some IO.",null,[[["t"]]]],[11,"poll_ready","","Polls to determine whether this sender can be used yet for…",6,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"send_request","","Sends a `Request` on the associated connection.",6,[[["self"],["request"]],["responsefuture"]]],[11,"into_parts","","Return the inner IO object, and additional information.",7,[[],["parts"]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling…",7,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"without_shutdown","","Prevent shutdown of the underlying IO object at the end of…",7,[[]]],[11,"new","","Creates a new connection builder.",8,[[],["builder"]]],[11,"executor","","Provide an executor to execute background HTTP2 tasks.",8,[[["self"],["e"]],["builder"]]],[11,"http2_only","","Sets whether HTTP2 is required.",8,[[["self"],["bool"]],["builder"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",8,[[["self"]],["self"]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",8,[[["self"]],["self"]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",8,[[["self"],["bool"]],["self"]]],[11,"http2_keep_alive_interval","","Sets an interval for HTTP2 Ping frames should be sent to…",8,[[["self"]],["self"]]],[11,"http2_keep_alive_timeout","","Sets a timeout for receiving an acknowledgement of the…",8,[[["self"],["duration"]],["self"]]],[11,"http2_keep_alive_while_idle","","Sets whether HTTP2 keep-alive should apply while the…",8,[[["self"],["bool"]],["self"]]],[11,"handshake","","Constructs a connection with the configured options and IO.",8,[[["self"],["t"]]]],[0,"connect","hyper::client","Connectors used by the `Client`.",null,null],[3,"HttpConnector","hyper::client::connect","A connector for the `http` scheme.",null,null],[3,"HttpInfo","","Extra information about the transport when an…",null,null],[3,"Connected","","Extra information about the connected transport.",null,null],[0,"dns","","DNS Resolution used by the `HttpConnector`.",null,null],[3,"Name","hyper::client::connect::dns","A domain name to resolve into IP addresses.",null,null],[3,"GaiResolver","","A resolver using blocking `getaddrinfo` calls in a…",null,null],[3,"GaiAddrs","","An iterator of IP addresses returned from `getaddrinfo`.",null,null],[3,"GaiFuture","","A future to resolve a name returned by `GaiResolver`.",null,null],[3,"InvalidNameError","","Error indicating a given string was not a valid domain name.",null,null],[11,"as_str","","View the hostname as a string slice.",9,[[["self"]],["str"]]],[11,"new","","Construct a new `GaiResolver`.",10,[[],["self"]]],[11,"new","hyper::client","Construct a new HttpConnector.",11,[[],["httpconnector"]]],[11,"new_with_resolver","","Construct a new HttpConnector.",11,[[["r"]],["httpconnector"]]],[11,"enforce_http","","Option to enforce all `Uri`s have the `http` scheme.",11,[[["self"],["bool"]]]],[11,"set_keepalive","","Set that all sockets have `SO_KEEPALIVE` set with the…",11,[[["self"],["option",["duration"]],["duration"]]]],[11,"set_nodelay","","Set that all sockets have `SO_NODELAY` set to the supplied…",11,[[["self"],["bool"]]]],[11,"set_send_buffer_size","","Sets the value of the SO_SNDBUF option on the socket.",11,[[["self"],["option",["usize"]],["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the SO_RCVBUF option on the socket.",11,[[["self"],["option",["usize"]],["usize"]]]],[11,"set_local_address","","Set that all sockets are bound to the configured address…",11,[[["ipaddr"],["self"],["option",["ipaddr"]]]]],[11,"set_connect_timeout","","Set the connect timeout.",11,[[["self"],["option",["duration"]],["duration"]]]],[11,"set_happy_eyeballs_timeout","","Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555]…",11,[[["self"],["option",["duration"]],["duration"]]]],[11,"set_reuse_address","","Set that all socket have `SO_REUSEADDR` set to the…",11,[[["self"],["bool"]],["self"]]],[11,"remote_addr","hyper::client::connect","Get the remote address of the transport used.",12,[[["self"]],["socketaddr"]]],[8,"Connect","","Connect to a destination, returning an IO transport.",null,null],[8,"Connection","","Describes a type returned by a connector.",null,null],[10,"connected","","Return metadata describing the connection.",13,[[["self"]],["connected"]]],[11,"new","","Create new `Connected` type with empty metadata.",14,[[],["connected"]]],[11,"proxy","","Set whether the connected transport is to an HTTP proxy.",14,[[["bool"]],["connected"]]],[11,"extra","","Set extra connection information to be set in the…",14,[[["send"],["clone"],["sync"]],["connected"]]],[11,"negotiated_h2","","Set that the connected transport negotiated HTTP/2 as it's…",14,[[],["connected"]]],[0,"service","hyper::client","Utilities used to interact with the Tower ecosystem.",null,null],[3,"Connect","hyper::client::service","Creates a connection via `SendRequest`.",null,null],[11,"new","","Create a new `Connect` with some inner connector `C` and a…",15,[[["c"],["builder"]],["self"]]],[11,"new","hyper::client","Create a new Client with the default config.",16,[[],[["client",["httpconnector","body"]],["httpconnector"],["body"]]]],[11,"builder","","Create a builder to configure a new `Client`.",16,[[],["builder"]]],[11,"get","","Send a `GET` request to the supplied `Uri`.",16,[[["uri"],["self"]],["responsefuture"]]],[11,"request","","Send a constructed `Request` using this `Client`.",16,[[["self"],["request"]],["responsefuture"]]],[11,"pool_idle_timeout","","Set an optional timeout for idle sockets being kept-alive.",17,[[["self"],["d"]],["self"]]],[11,"pool_max_idle_per_host","","Sets the maximum idle connection per host allowed in the…",17,[[["self"],["usize"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",17,[[["self"],["bool"]],["self"]]],[11,"http1_read_buf_exact_size","","Sets the exact size of the read buffer to always use.",17,[[["self"],["usize"]],["self"]]],[11,"http1_max_buf_size","","Set the maximum buffer size for the connection.",17,[[["self"],["usize"]],["self"]]],[11,"http1_title_case_headers","","Set whether HTTP/1 connections will write header names as…",17,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Set whether the connection must use HTTP/2.",17,[[["self"],["bool"]],["self"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",17,[[["self"]],["self"]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",17,[[["self"]],["self"]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",17,[[["self"],["bool"]],["self"]]],[11,"http2_keep_alive_interval","","Sets an interval for HTTP2 Ping frames should be sent to…",17,[[["self"]],["self"]]],[11,"http2_keep_alive_timeout","","Sets a timeout for receiving an acknowledgement of the…",17,[[["self"],["duration"]],["self"]]],[11,"http2_keep_alive_while_idle","","Sets whether HTTP2 keep-alive should apply while the…",17,[[["self"],["bool"]],["self"]]],[11,"retry_canceled_requests","","Set whether to retry requests that get disrupted before…",17,[[["self"],["bool"]],["self"]]],[11,"set_host","","Set whether to automatically add the `Host` header to…",17,[[["self"],["bool"]],["self"]]],[11,"executor","","Provide an executor to execute background `Connection`…",17,[[["self"],["e"]],["self"]]],[11,"build_http","","Builder a client with this configuration and the default…",17,[[["self"]],[["client",["httpconnector"]],["httpconnector"]]]],[11,"build","","Combine the configuration of this builder with a connector…",17,[[["c"],["self"]],["client"]]],[11,"is_parse","hyper","Returns true if this was an HTTP parse error.",18,[[["self"]],["bool"]]],[11,"is_user","","Returns true if this error was caused by user code.",18,[[["self"]],["bool"]]],[11,"is_canceled","","Returns true if this was about a `Request` that was…",18,[[["self"]],["bool"]]],[11,"is_closed","","Returns true if a sender's channel is closed.",18,[[["self"]],["bool"]]],[11,"is_connect","","Returns true if this was an error from `Connect`.",18,[[["self"]],["bool"]]],[11,"is_incomplete_message","","Returns true if the connection closed before a message…",18,[[["self"]],["bool"]]],[11,"is_body_write_aborted","","Returns true if the body write was aborted.",18,[[["self"]],["bool"]]],[11,"is_timeout","","Returns true if the error was caused by a timeout.",18,[[["self"]],["bool"]]],[11,"into_cause","","Consumes the error, returning its cause.",18,[[],[["option",["box"]],["box",["stderror"]]]]],[0,"rt","","Runtime components",null,null],[8,"Executor","hyper::rt","An executor of futures.",null,null],[10,"execute","","Place the future into the executor to be run.",19,[[["self"],["fut"]]]],[0,"server","hyper","HTTP Server",null,null],[3,"Server","hyper::server","A listening HTTP server that accepts connections in both…",null,null],[3,"Builder","","A builder for a `Server`.",null,null],[0,"accept","","The `Accept` trait and supporting types.",null,null],[5,"poll_fn","hyper::server::accept","Create an `Accept` with a polling function.",null,[[["f"]]]],[5,"from_stream","","Adapt a `Stream` of incoming connections into an `Accept`.",null,[[["s"]]]],[8,"Accept","","Asynchronously accept incoming connections.",null,null],[16,"Conn","","The connection type that can be accepted.",20,null],[16,"Error","","The error type that can occur when accepting a connection.",20,null],[10,"poll_accept","","Poll to accept the next connection.",20,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[0,"conn","hyper::server","Lower-level Server connection API.",null,null],[3,"AddrIncoming","hyper::server::conn","A stream of connections from binding to an address.",null,null],[3,"AddrStream","","A transport returned yieled by `AddrIncoming`.",null,null],[3,"Http","","A lower-level configuration of the HTTP protocol.",null,null],[3,"Connecting","","A future building a new `Service` to a `Connection`.",null,null],[3,"Connection","","A future binding a connection with a Service.",null,null],[3,"Parts","","Deconstructed parts of a `Connection`.",null,null],[12,"io","","The original IO object used in the handshake.",21,null],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",21,null],[12,"service","","The `Service` used to serve this connection.",21,null],[11,"new","","Creates a new instance of the HTTP protocol, ready to…",22,[[],["http"]]],[11,"http1_only","","Sets whether HTTP1 is required.",22,[[["self"],["bool"]],["self"]]],[11,"http1_half_close","","Set whether HTTP/1 connections should support half-closures.",22,[[["self"],["bool"]],["self"]]],[11,"http1_keep_alive","","Enables or disables HTTP/1 keep-alive.",22,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",22,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP2 is required.",22,[[["self"],["bool"]],["self"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",22,[[["self"]],["self"]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2.",22,[[["self"]],["self"]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",22,[[["self"],["bool"]],["self"]]],[11,"http2_max_concurrent_streams","","Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option…",22,[[["self"]],["self"]]],[11,"http2_keep_alive_interval","","Sets an interval for HTTP2 Ping frames should be sent to…",22,[[["self"]],["self"]]],[11,"http2_keep_alive_timeout","","Sets a timeout for receiving an acknowledgement of the…",22,[[["self"],["duration"]],["self"]]],[11,"max_buf_size","","Set the maximum buffer size for the connection.",22,[[["self"],["usize"]],["self"]]],[11,"pipeline_flush","","Aggregates flushes to better support pipelined responses.",22,[[["self"],["bool"]],["self"]]],[11,"with_executor","","Set the executor used to spawn background tasks.",22,[[["e2"]],["http"]]],[11,"serve_connection","","Bind a connection together with a `Service`.",22,[[["i"],["self"],["s"]],["connection"]]],[11,"graceful_shutdown","","Start a graceful shutdown process for this connection.",23,[[["pin"],["self"]]]],[11,"into_parts","","Return the inner IO object, and additional information.",23,[[],["parts"]]],[11,"try_into_parts","","Return the inner IO object, and additional information, if…",23,[[],[["option",["parts"]],["parts"]]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling…",23,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"without_shutdown","","Prevent shutdown of the underlying IO object at the end of…",23,[[]]],[11,"with_upgrades","","Enable this connection to support higher-level HTTP…",23,[[],["upgradeableconnection"]]],[11,"remote_addr","","Returns the remote (peer) address of this connection.",24,[[["self"]],["socketaddr"]]],[11,"into_inner","","Consumes the AddrStream and returns the underlying IO object",24,[[],["tcpstream"]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",24,[[["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"bind","","Creates a new `AddrIncoming` binding to provided socket…",25,[[["socketaddr"]],["result"]]],[11,"local_addr","","Get the local address bound to this listener.",25,[[["self"]],["socketaddr"]]],[11,"set_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",25,[[["self"],["option",["duration"]],["duration"]],["self"]]],[11,"set_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",25,[[["self"],["bool"]],["self"]]],[11,"set_sleep_on_errors","","Set whether to sleep on accept errors.",25,[[["self"],["bool"]]]],[11,"builder","hyper::server","Starts a `Builder` with the provided incoming stream.",26,[[["i"]],["builder"]]],[11,"bind","","Binds to the provided address, and returns a `Builder`.",26,[[["socketaddr"]],[["addrincoming"],["builder",["addrincoming"]]]]],[11,"try_bind","","Tries to bind to the provided address, and returns a…",26,[[["socketaddr"]],[["result",["builder"]],["builder",["addrincoming"]]]]],[11,"from_tcp","","Create a new instance from a `std::net::TcpListener`…",26,[[["stdtcplistener"]],[["error"],["result",["builder","error"]],["builder",["addrincoming"]]]]],[11,"local_addr","","Returns the local address that this server is bound to.",26,[[["self"]],["socketaddr"]]],[11,"with_graceful_shutdown","","Prepares a server to handle graceful shutdown when the…",26,[[["f"]],["graceful"]]],[11,"new","","Start a new builder, wrapping an incoming stream and…",27,[[["i"],["http_"]],["self"]]],[11,"http1_keepalive","","Sets whether to use keep-alive for HTTP/1 connections.",27,[[["bool"]],["self"]]],[11,"http1_half_close","","Set whether HTTP/1 connections should support half-closures.",27,[[["bool"]],["self"]]],[11,"http1_max_buf_size","","Set the maximum buffer size.",27,[[["usize"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",27,[[["bool"]],["self"]]],[11,"http1_only","","Sets whether HTTP/1 is required.",27,[[["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP/2 is required.",27,[[["bool"]],["self"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",27,[[],["self"]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",27,[[],["self"]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",27,[[["bool"]],["self"]]],[11,"http2_max_concurrent_streams","","Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option…",27,[[],["self"]]],[11,"http2_keep_alive_interval","","Sets an interval for HTTP2 Ping frames should be sent to…",27,[[],["self"]]],[11,"http2_keep_alive_timeout","","Sets a timeout for receiving an acknowledgement of the…",27,[[["duration"]],["self"]]],[11,"executor","","Sets the `Executor` to deal with connection tasks.",27,[[["e2"]],["builder"]]],[11,"serve","","Consume this `Builder`, creating a `Server`.",27,[[["s"]],["server"]]],[11,"tcp_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",27,[[["option",["duration"]],["duration"]],["self"]]],[11,"tcp_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",27,[[["bool"]],["self"]]],[11,"tcp_sleep_on_accept_errors","","Set whether to sleep on accept errors.",27,[[["bool"]],["self"]]],[0,"service","hyper","Asynchronous Services",null,null],[8,"Service","hyper::service","An asynchronous function from a `Request` to a `Response`.",null,null],[16,"Response","","Responses given by the service.",28,null],[16,"Error","","Errors produced by the service.",28,null],[16,"Future","","The future response value.",28,null],[10,"poll_ready","","Returns `Poll::Ready(Ok(()))` when the service is able to…",28,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[10,"call","","Process the request and return the response asynchronously.",28,[[["self"],["request"]]]],[5,"make_service_fn","","Create a `MakeService` from a function.",null,[[["f"]],["makeservicefn"]]],[5,"service_fn","","Create a `Service` from a function.",null,[[["f"]],["servicefn"]]],[0,"upgrade","hyper","HTTP Upgrades",null,null],[3,"Upgraded","hyper::upgrade","An upgraded HTTP connection.",null,null],[3,"OnUpgrade","","A future for a possible HTTP upgrade.",null,null],[3,"Parts","","The deconstructed parts of an `Upgraded` type.",null,null],[12,"io","","The original IO object used before the upgrade.",29,null],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",29,null],[11,"downcast","","Tries to downcast the internal trait object to the type…",30,[[],[["parts"],["result",["parts"]]]]],[6,"Result","hyper","Result type often returned from methods that can have…",null,null],[11,"from","hyper::header","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","hyper","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"equivalent","","",33,[[["k"],["self"]],["bool"]]],[11,"from","hyper::header","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"equivalent","","",45,[[["k"],["self"]],["bool"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"equivalent","","",47,[[["k"],["self"]],["bool"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","hyper","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"equivalent","","",50,[[["k"],["self"]],["bool"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"equivalent","","",53,[[["k"],["self"]],["bool"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"equivalent","","",54,[[["k"],["self"]],["bool"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"equivalent","","",55,[[["k"],["self"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll_next","","",3,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","hyper::body","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"equivalent","","",56,[[["k"],["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","hyper::client","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"try_poll","","",57,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","hyper::client::conn","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"try_poll","","",58,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","hyper::client::connect","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","hyper::client::connect::dns","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"equivalent","","",9,[[["k"],["self"]],["bool"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"try_poll","","",60,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","hyper::client::service","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","hyper::server","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"try_poll","","",26,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","hyper::server::conn","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"try_poll","","",62,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"try_poll","","",23,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","hyper::upgrade","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"try_poll","","",63,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"next_back","hyper::header","",42,[[["self"]],["option"]]],[11,"next_back","","",41,[[["self"]],["option"]]],[11,"from_str","hyper","",50,[[["str"]],[["result",["method"]],["method"]]]],[11,"from_str","","",54,[[["str"]],[["result",["uri","invaliduri"]],["invaliduri"],["uri"]]]],[11,"from_str","hyper::header","",47,[[["str"]],[["headervalue"],["result",["headervalue"]]]]],[11,"from_str","hyper","",53,[[["str"]],[["statuscode"],["result",["statuscode","invalidstatuscode"]],["invalidstatuscode"]]]],[11,"from_str","hyper::header","",45,[[["str"]],[["result",["headername","invalidheadername"]],["headername"],["invalidheadername"]]]],[11,"borrow","","",45,[[["self"]],["str"]]],[11,"partial_cmp","hyper","",55,[[["version"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",55,[[["version"],["self"]],["bool"]]],[11,"le","","",55,[[["version"],["self"]],["bool"]]],[11,"gt","","",55,[[["version"],["self"]],["bool"]]],[11,"ge","","",55,[[["version"],["self"]],["bool"]]],[11,"partial_cmp","hyper::header","",47,[[["self"],["headervalue"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","hyper","",53,[[["self"],["statuscode"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",53,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",53,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",53,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","hyper::header","",47,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",47,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",47,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",47,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"extend","hyper","",33,[[["self"],["i"]]]],[11,"extend","","Extend a `HeaderMap` with the contents of another…",33,[[["self"],["i"]]]],[11,"into_iter","hyper::header","",32,[[],["valueiter"]]],[11,"into_iter","","",38,[[],["valueitermut"]]],[11,"into_iter","hyper","Creates a consuming iterator, that is, one that moves keys…",33,[[],["intoiter"]]],[11,"next","hyper::header","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,[[["self"]]]],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,[[["self"]]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,[[["self"]]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,[[["self"]]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,[[["self"]]]],[11,"fmt","hyper","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"drop","","",34,[[["self"]]]],[11,"drop","","",40,[[["self"]]]],[11,"drop","","",31,[[["self"]]]],[11,"eq","hyper","",50,[[["str"],["self"]],["bool"]]],[11,"eq","hyper::header","",45,[[["self"],["headername"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",45,[[["str"],["self"]],["bool"]]],[11,"eq","","",32,[[["getall"],["self"]],["bool"]]],[11,"eq","hyper","",54,[[["str"],["self"]],["bool"]]],[11,"eq","","",50,[[["str"],["self"]],["bool"]]],[11,"eq","hyper::header","",47,[[["self"]],["bool"]]],[11,"eq","hyper","",50,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",47,[[["self"],["string"]],["bool"]]],[11,"eq","","",47,[[["self"],["headervalue"]],["bool"]]],[11,"eq","hyper","",53,[[["u16"],["self"]],["bool"]]],[11,"eq","hyper::header","",47,[[["str"],["self"]],["bool"]]],[11,"eq","","",47,[[["t"],["self"]],["bool"]]],[11,"eq","hyper","",53,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",53,[[["self"],["statuscode"]],["bool"]]],[11,"eq","","",33,[[["self"],["headermap"]],["bool"]]],[11,"eq","hyper::header","",45,[[["self"],["headername"]],["bool"]]],[11,"ne","","",45,[[["self"],["headername"]],["bool"]]],[11,"eq","hyper","",50,[[["method"],["self"]],["bool"]]],[11,"ne","","",50,[[["method"],["self"]],["bool"]]],[11,"eq","","",54,[[["str"],["self"]],["bool"]]],[11,"eq","","",54,[[["uri"],["self"]],["bool"]]],[11,"eq","","",55,[[["version"],["self"]],["bool"]]],[11,"ne","","",55,[[["version"],["self"]],["bool"]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string…",45,[[["str"],["self"]],["bool"]]],[11,"try_from","hyper","",50,[[],[["method"],["result",["method"]]]]],[11,"try_from","hyper::header","",47,[[["string"]],[["headervalue"],["result",["headervalue"]]]]],[11,"try_from","","",45,[[],[["headername"],["result",["headername"]]]]],[11,"try_from","hyper","",53,[[],[["result",["statuscode"]],["statuscode"]]]],[11,"try_from","","",54,[[["string"]],[["result",["uri"]],["uri"]]]],[11,"try_from","hyper::header","",47,[[],[["headervalue"],["result",["headervalue"]]]]],[11,"try_from","hyper","",54,[[["uri"]],[["result",["uri"]],["uri"]]]],[11,"try_from","","",54,[[],[["uri"],["result",["uri"]]]]],[11,"try_from","","",50,[[["str"]],[["result",["method"]],["method"]]]],[11,"try_from","","",33,[[["hashmap"]],[["result",["headermap"]],["headermap"]]]],[11,"try_from","","",54,[[["string"]],[["uri"],["result",["uri"]]]]],[11,"try_from","hyper::header","",45,[[["str"]],[["result",["headername"]],["headername"]]]],[11,"try_from","","",47,[[["str"]],[["result",["headervalue"]],["headervalue"]]]],[11,"try_from","","",47,[[["string"]],[["headervalue"],["result",["headervalue"]]]]],[11,"try_from","hyper","",53,[[["u16"]],[["statuscode"],["result",["statuscode"]]]]],[11,"try_from","","",54,[[["parts"]],[["result",["uri"]],["uri"]]]],[11,"try_from","","",53,[[["str"]],[["statuscode"],["result",["statuscode"]]]]],[11,"try_from","hyper::header","",47,[[["vec",["u8"]],["u8"]],[["result",["headervalue"]],["headervalue"]]]],[11,"try_from","","",45,[[["string"]],[["headername"],["result",["headername"]]]]],[11,"try_from","hyper","",54,[[["str"]],[["result",["uri"]],["uri"]]]],[11,"cmp","","",53,[[["self"],["statuscode"]],["ordering"]]],[11,"cmp","","",55,[[["version"],["self"]],["ordering"]]],[11,"cmp","hyper::header","",47,[[["self"],["headervalue"]],["ordering"]]],[11,"clone","","",47,[[["self"]],["headervalue"]]],[11,"clone","hyper","",53,[[["self"]],["statuscode"]]],[11,"clone","","",50,[[["self"]],["method"]]],[11,"clone","hyper::header","",45,[[["self"]],["headername"]]],[11,"clone","hyper","",54,[[["self"]],["uri"]]],[11,"clone","","",33,[[["self"]],["headermap"]]],[11,"clone","","",55,[[["self"]],["version"]]],[11,"fmt","hyper::header","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper::header","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","hyper","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"as_ref","","",50,[[["self"]],["str"]]],[11,"as_ref","hyper::header","",45,[[["self"]],["str"]]],[11,"as_ref","","",47,[[["self"]]]],[11,"as_ref","","",45,[[["self"]]]],[11,"default","hyper","",51,[[],["request"]]],[11,"default","","",53,[[],["statuscode"]]],[11,"default","","",50,[[],["method"]]],[11,"default","","",52,[[],["response"]]],[11,"default","","",55,[[],["version"]]],[11,"default","","",54,[[],["uri"]]],[11,"default","","",33,[[],["headermap"]]],[11,"from","hyper::header","",47,[[["u32"]],["headervalue"]]],[11,"from","hyper::body","",56,[[["custom"]],["bytes"]]],[11,"from","hyper::header","",47,[[["i64"]],["headervalue"]]],[11,"from","","",47,[[["usize"]],["headervalue"]]],[11,"from","","",47,[[["headername"]],["headervalue"]]],[11,"from","hyper","",53,[[["statuscode"]],["statuscode"]]],[11,"from","hyper::header","",47,[[["u64"]],["headervalue"]]],[11,"from","","",47,[[["i16"]],["headervalue"]]],[11,"from","","",47,[[["i32"]],["headervalue"]]],[11,"from","hyper::body","",56,[[["bytestr"]],["bytes"]]],[11,"from","hyper::header","",45,[[["headername"]],["headername"]]],[11,"from","","",47,[[["u16"]],["headervalue"]]],[11,"from","","",47,[[["isize"]],["headervalue"]]],[11,"from","hyper","",50,[[["method"]],["method"]]],[11,"from","hyper::header","",47,[[["headervalue"]],["headervalue"]]],[11,"index","hyper","Panics Using the index operator will cause a panic if the…",33,[[["self"],["k"]],["t"]]],[11,"from_iter","","",33,[[["i"]],["headermap"]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["h"]]]],[11,"hash","hyper::header","",45,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"into_iter","hyper::body","",56,[[]]],[11,"hash","","",56,[[["self"],["h"]]]],[11,"borrow","","",56,[[["self"]]]],[11,"default","","",56,[[],["bytes"]]],[11,"remaining","","",56,[[["self"]],["usize"]]],[11,"bytes","","",56,[[["self"]]]],[11,"advance","","",56,[[["self"],["usize"]]]],[11,"to_bytes","","",56,[[["self"]],["bytes"]]],[11,"deref","","",56,[[["self"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"as_ref","","",56,[[["self"]]]],[11,"from_iter","","",56,[[["t"]],["bytes"]]],[11,"from","","",56,[[],["bytes"]]],[11,"from","","",56,[[["string"]],["bytes"]]],[11,"from","","",56,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from","","",56,[[["str"]],["bytes"]]],[11,"from","","",56,[[["bytesmut"]],["bytes"]]],[11,"drop","","",56,[[["self"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",56,[[["bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",56,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",56,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",56,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",56,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",56,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"clone","","",56,[[["self"]],["bytes"]]],[11,"cmp","","",56,[[["bytes"],["self"]],["ordering"]]],[11,"eq","","",56,[[["bytes"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["vec"]],["bool"]]],[11,"eq","","",56,[[["self"],["string"]],["bool"]]],[11,"eq","","",56,[[["str"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"]],["bool"]]],[11,"eq","","",56,[[["t"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["bytesmut"]],["bool"]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_data","hyper","",52,[[["response"],["context"],["pin",["response"]]],[["poll",["option"]],["option",["result"]]]]],[11,"poll_trailers","","",52,[[["response"],["context"],["pin",["response"]]],[["result",["option"]],["poll",["result"]]]]],[11,"is_end_stream","","",52,[[["self"]],["bool"]]],[11,"size_hint","","",52,[[["self"]],["sizehint"]]],[11,"poll_data","","",51,[[["request"],["pin",["request"]],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"poll_trailers","","",51,[[["request"],["pin",["request"]],["context"]],[["poll",["result"]],["result",["option"]]]]],[11,"is_end_stream","","",51,[[["self"]],["bool"]]],[11,"size_hint","","",51,[[["self"]],["sizehint"]]],[11,"poll_accept","hyper::server::conn","",25,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","hyper","",3,[[["stream"],["box",["stream"]]],["body"]]],[11,"from","","",3,[[["bytes"]],["body"]]],[11,"from","","",3,[[["vec",["u8"]],["u8"]],["body"]]],[11,"from","","",3,[[],["body"]]],[11,"from","","",3,[[["cow"]],["body"]]],[11,"from","","",3,[[["string"]],["body"]]],[11,"from","","",3,[[["str"]],["body"]]],[11,"from","","",3,[[["str"],["cow",["str"]]],["body"]]],[11,"next","hyper::client::connect::dns","",59,[[["self"]],["option"]]],[11,"clone","hyper::client::conn","",8,[[["self"]],["builder"]]],[11,"clone","hyper::client::connect::dns","",9,[[["self"]],["name"]]],[11,"clone","","",10,[[["self"]],["gairesolver"]]],[11,"clone","hyper::client","",11,[[["self"]],["httpconnector"]]],[11,"clone","hyper::client::connect","",12,[[["self"]],["httpinfo"]]],[11,"clone","hyper::client","",16,[[["self"]],["client"]]],[11,"clone","","",17,[[["self"]],["builder"]]],[11,"clone","hyper::server::conn","",22,[[["self"]],["http"]]],[11,"default","hyper","Returns `Body::empty()`.",3,[[],["body"]]],[11,"default","hyper::client","",16,[[],[["client",["httpconnector","body"]],["httpconnector"],["body"]]]],[11,"default","","",17,[[],["self"]]],[11,"eq","hyper::client::connect::dns","",9,[[["name"],["self"]],["bool"]]],[11,"ne","","",9,[[["name"],["self"]],["bool"]]],[11,"fmt","hyper","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::body","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client::conn","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client::connect::dns","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client::connect","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client::connect","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client::service","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::server::conn","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::server","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::upgrade","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper::client::connect::dns","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","hyper","",18,[[["formatter"],["self"]],["result"]]],[11,"hash","hyper::client::connect::dns","",9,[[["self"],["__h"]]]],[11,"from_str","","",9,[[["str"]],["result"]]],[11,"source","hyper","",18,[[["self"]],[["option",["stderror"]],["stderror"]]]],[11,"poll","hyper::client::conn","",7,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",58,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","hyper::client::connect::dns","",60,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","hyper::client","",57,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","hyper::server::conn","",23,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",62,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","hyper::server","",26,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","hyper::upgrade","",63,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","hyper::server::conn","",62,[[["self"],["pin"]]]],[11,"drop","","",23,[[["self"],["pin"]]]],[11,"drop","hyper::server","",26,[[["self"],["pin"]]]],[11,"prepare_uninitialized_buffer","hyper::server::conn","",24,[[["self"]],["bool"]]],[11,"poll_read","","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","","",24,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","hyper::upgrade","",30,[[["self"]],["bool"]]],[11,"poll_read","","",30,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write","hyper::server::conn","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","",24,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","hyper::upgrade","",30,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","",30,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",30,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",30,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_next","hyper","",3,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_data","","",3,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_trailers","","",3,[[["pin"],["self"],["context"]],[["result",["option"]],["poll",["result"]]]]],[11,"is_end_stream","","",3,[[["self"]],["bool"]]],[11,"size_hint","","",3,[[["self"]],["sizehint"]]],[11,"poll_ready","hyper::client::conn","",6,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",6,[[["self"],["request"]]]],[11,"poll_ready","hyper::client::connect::dns","",10,[[["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"call","","",10,[[["self"],["name"]]]],[11,"poll_ready","hyper::client","",11,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",11,[[["uri"],["self"]]]],[11,"poll_ready","hyper::client::service","",15,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",15,[[["self"],["t"]]]],[11,"poll_ready","hyper::client","",16,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",16,[[["self"],["request"]]]],[11,"or_insert","hyper::header","Ensures a value is in the entry by inserting the default…",0,[[["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"iter","","Returns an iterator visiting all values associated with…",32,[[["self"]],["valueiter"]]],[11,"new","hyper","Create an empty `HeaderMap`.",33,[[],[["headervalue"],["headermap",["headervalue"]]]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",33,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",33,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",33,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",33,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",33,[[["self"]]]],[11,"capacity","","Returns the number of headers the map can hold without…",33,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",33,[[["self"],["usize"]]]],[11,"get","","Returns a reference to the value associated with the key.",33,[[["self"],["k"]],[["t"],["option"]]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",33,[[["self"],["k"]],[["option"],["t"]]]],[11,"get_all","","Returns a view of all values associated with a key.",33,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",33,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",33,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",33,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",33,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",33,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",33,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",33,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",33,[[["self"],["k"]],["entry"]]],[11,"try_entry","","Gets the given key's corresponding entry in the map for…",33,[[["self"],["k"]],[["entry"],["result",["entry","invalidheadername"]],["invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",33,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",33,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",33,[[["self"],["k"]],["option"]]],[11,"key","hyper::header","Returns a reference to the entry's key.",38,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",38,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",38,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",38,[[],["t"]]],[11,"insert","","Sets the value of the entry.",38,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",38,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",38,[[["self"],["t"]]]],[11,"remove","","Remove the entry from the map.",38,[[],["t"]]],[11,"remove_entry","","Remove the entry from the map.",38,[[]]],[11,"remove_entry_mult","","Remove the entry from the map.",38,[[]]],[11,"iter","","Returns an iterator visiting all values associated with…",38,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",38,[[["self"]],["valueitermut"]]],[11,"key","","Returns a reference to the entry's key",39,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",39,[[],["headername"]]],[11,"insert","","Insert the value into the entry.",39,[[["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",39,[[["t"]],["occupiedentry"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",45,[[],[["result",["headername","invalidheadername"]],["headername"],["invalidheadername"]]]],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",45,[[],[["result",["headername","invalidheadername"]],["headername"],["invalidheadername"]]]],[11,"from_static","","Converts a static string to a HTTP header name.",45,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",45,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",47,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",47,[[["str"]],[["result",["headervalue","invalidheadervalue"]],["headervalue"],["invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",47,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",47,[[],[["result",["headervalue","invalidheadervalue"]],["headervalue"],["invalidheadervalue"]]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",47,[[["t"]],[["result",["headervalue","invalidheadervalue"]],["headervalue"],["invalidheadervalue"]]]],[11,"from_maybe_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",47,[[["t"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",47,[[["self"]],[["result",["str","tostrerror"]],["str"],["tostrerror"]]]],[11,"len","","Returns the length of `self`.",47,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",47,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",47,[[["self"]]]],[11,"set_sensitive","","Mark that the header value represents sensitive information.",47,[[["self"],["bool"]]]],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",47,[[["self"]],["bool"]]],[18,"GET","hyper","GET",50,null],[18,"POST","","POST",50,null],[18,"PUT","","PUT",50,null],[18,"DELETE","","DELETE",50,null],[18,"HEAD","","HEAD",50,null],[18,"OPTIONS","","OPTIONS",50,null],[18,"CONNECT","","CONNECT",50,null],[18,"PATCH","","PATCH",50,null],[18,"TRACE","","TRACE",50,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",50,[[],[["result",["method","invalidmethod"]],["method"],["invalidmethod"]]]],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",50,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",50,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",50,[[["self"]],["str"]]],[11,"builder","","Creates a new builder-style object to manufacture a…",51,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and…",51,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and…",51,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and…",51,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method…",51,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method…",51,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and…",51,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method…",51,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method…",51,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method…",51,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",51,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts…",51,[[["t"],["parts"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",51,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",51,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",51,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",51,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",51,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",51,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",51,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",51,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",51,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",51,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",51,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",51,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",51,[[],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",51,[[]]],[11,"map","","Consumes the request returning a new request with body…",51,[[["f"]],["request"]]],[11,"builder","","Creates a new builder-style object to manufacture a…",52,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",52,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",52,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",52,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",52,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",52,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",52,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",52,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",52,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",52,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",52,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",52,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",52,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",52,[[],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",52,[[]]],[11,"map","","Consumes the response returning a new response with body…",52,[[["f"]],["response"]]],[11,"from_u16","","Converts a u16 to a status code.",53,[[["u16"]],[["statuscode"],["result",["statuscode","invalidstatuscode"]],["invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",53,[[],[["statuscode"],["result",["statuscode","invalidstatuscode"]],["invalidstatuscode"]]]],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",53,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",53,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",53,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_informational","","Check if status is within 100-199.",53,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",53,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",53,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",53,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",53,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",53,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",53,null],[18,"PROCESSING","","102 Processing [RFC2518]",53,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",53,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",53,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",53,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",53,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",53,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",53,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",53,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",53,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",53,null],[18,"IM_USED","","226 IM Used [RFC3229]",53,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",53,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",53,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",53,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",53,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",53,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",53,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",53,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",53,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",53,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",53,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",53,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",53,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",53,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",53,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",53,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",53,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",53,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",53,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",53,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",53,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",53,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",53,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",53,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",53,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",53,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",53,null],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",53,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",53,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",53,null],[18,"LOCKED","","423 Locked [RFC4918]",53,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",53,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",53,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",53,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",53,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",53,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",53,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",53,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",53,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",53,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",53,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",53,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",53,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",53,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",53,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",53,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",53,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",53,null],[11,"builder","","Creates a new builder-style object to manufacture a `Uri`.",54,[[],["builder"]]],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",54,[[["parts"]],[["uri"],["invaliduriparts"],["result",["uri","invaliduriparts"]]]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `Uri`.",54,[[["t"]],[["result",["uri","invaliduri"]],["invaliduri"],["uri"]]]],[11,"from_static","","Convert a `Uri` from a static string.",54,[[["str"]],["uri"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",54,[[],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",54,[[["self"]],[["pathandquery"],["option",["pathandquery"]]]]],[11,"path","","Get the path of this `Uri`.",54,[[["self"]],["str"]]],[11,"scheme","","Get the scheme of this `Uri`.",54,[[["self"]],[["option",["scheme"]],["scheme"]]]],[11,"scheme_str","","Get the scheme of this `Uri` as a `&str`.",54,[[["self"]],[["str"],["option",["str"]]]]],[11,"authority","","Get the authority of this `Uri`.",54,[[["self"]],[["authority"],["option",["authority"]]]]],[11,"host","","Get the host of this `Uri`.",54,[[["self"]],[["str"],["option",["str"]]]]],[11,"port","","Get the port part of this `Uri`.",54,[[["self"]],[["port",["str"]],["option",["port"]]]]],[11,"port_u16","","Get the port of this `Uri` as a `u16`.",54,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",54,[[["self"]],[["str"],["option",["str"]]]]],[18,"HTTP_09","","`HTTP/0.9`",55,null],[18,"HTTP_10","","`HTTP/1.0`",55,null],[18,"HTTP_11","","`HTTP/1.1`",55,null],[18,"HTTP_2","","`HTTP/2.0`",55,null],[18,"HTTP_3","","`HTTP/3.0`",55,null],[11,"new","hyper::body","Creates a new empty `Bytes`.",56,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",56,[[],["bytes"]]],[11,"len","","Returns the number of bytes contained in this `Bytes`.",56,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",56,[[["self"]],["bool"]]],[11,"copy_from_slice","","Creates `Bytes` instance from slice, by copying it.",56,[[],["bytes"]]],[11,"slice","","Returns a slice of self for the provided range.",56,[[["self"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",56,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",56,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",56,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",56,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",56,[[["self"]]]]],"p":[[4,"Entry"],[8,"Buf"],[8,"HttpBody"],[3,"Body"],[3,"Sender"],[3,"Parts"],[3,"SendRequest"],[3,"Connection"],[3,"Builder"],[3,"Name"],[3,"GaiResolver"],[3,"HttpConnector"],[3,"HttpInfo"],[8,"Connection"],[3,"Connected"],[3,"Connect"],[3,"Client"],[3,"Builder"],[3,"Error"],[8,"Executor"],[8,"Accept"],[3,"Parts"],[3,"Http"],[3,"Connection"],[3,"AddrStream"],[3,"AddrIncoming"],[3,"Server"],[3,"Builder"],[8,"Service"],[3,"Parts"],[3,"Upgraded"],[3,"Drain"],[3,"GetAll"],[3,"HeaderMap"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"ValueDrain"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"Values"],[3,"ValuesMut"],[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"HeaderValue"],[3,"InvalidHeaderValue"],[3,"ToStrError"],[3,"Method"],[3,"Request"],[3,"Response"],[3,"StatusCode"],[3,"Uri"],[3,"Version"],[3,"Bytes"],[3,"ResponseFuture"],[3,"ResponseFuture"],[3,"GaiAddrs"],[3,"GaiFuture"],[3,"InvalidNameError"],[3,"Connecting"],[3,"OnUpgrade"]]};
searchIndex["hyper_rustls"] = {"doc":"hyper-rustls","i":[[3,"HttpsConnector","hyper_rustls","A Connector for the `https` scheme.",null,null],[4,"MaybeHttpsStream","","A stream that might be protected with TLS.",null,null],[13,"Http","","A stream over plain text.",0,null],[13,"Https","","A stream protected with TLS.",0,null],[11,"new","","Construct a new `HttpsConnector`.",1,[[],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"connect","","",1,[[["uri"],["internal"]],[["uri"],["oneshot",["uri"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[],["self"]]],[11,"from","","",1,[[],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"clone","","",1,[[["self"]],["httpsconnector"]]],[11,"default","","",1,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"prepare_uninitialized_buffer","","",0,[[["self"]],["bool"]]],[11,"poll_read","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_ready","","",1,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",1,[[["self"],["uri"]]]],[11,"connected","","",0,[[["self"]],["connected"]]]],"p":[[4,"MaybeHttpsStream"],[3,"HttpsConnector"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","i":[[3,"Config","idna","",null,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"domain_to_ascii","","The domain to ASCII algorithm.",null,[[["str"]],[["string"],["errors"],["result",["string","errors"]]]]],[5,"domain_to_ascii_strict","","The domain to ASCII algorithm, with the `beStrict` flag set.",null,[[["str"]],[["string"],["errors"],["result",["string","errors"]]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,[[["str"]]]],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,[[["str"]],[["string"],["option",["string"]]]]],[5,"decode","","Convert Punycode to Unicode.",null,[[["str"]],[["option",["vec"]],["vec",["char"]]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,[[["str"]],[["string"],["option",["string"]]]]],[5,"encode","","Convert Unicode to Punycode.",null,[[],[["string"],["option",["string"]]]]],[11,"use_std3_ascii_rules","idna","",0,[[["bool"]],["self"]]],[11,"transitional_processing","","",0,[[["bool"]],["self"]]],[11,"verify_dns_length","","",0,[[["bool"]],["self"]]],[11,"check_hyphens","","",0,[[["bool"]],["self"]]],[11,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",0,[[["str"]],[["string"],["result",["string","errors"]],["errors"]]]],[11,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",0,[[["str"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Config"],[3,"Errors"]]};
searchIndex["indexmap"] = {"doc":"[`IndexMap`] is a hash table where the iteration order of…","i":[[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",null,null],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `IndexMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `IndexMap`. It is part of…",null,null],[3,"Keys","","An iterator over the keys of a `IndexMap`.",null,null],[3,"Values","","An iterator over the values of a `IndexMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `IndexMap`.",null,null],[3,"Iter","","An iterator over the entries of a `IndexMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `IndexMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `IndexMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `IndexMap`.",null,null],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",null,null],[13,"Occupied","","Existing slot with equivalent key.",0,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,null],[8,"MutableKeys","","Opt-in mutable access to keys.",null,null],[16,"Key","","",1,null],[16,"Value","","",1,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",1,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",1,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",1,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",2,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",2,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",2,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",2,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",2,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",2,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"and_modify","","Modifies the entry if it is occupied.",0,[[["f"]],["self"]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",0,[[],["v"]]],[11,"key","","",3,[[["self"]],["k"]]],[11,"get","","",3,[[["self"]],["v"]]],[11,"get_mut","","",3,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",3,[[["self"]],["usize"]]],[11,"into_mut","","",3,[[],["v"]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"into_key","","",4,[[],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",4,[[["self"]],["usize"]]],[11,"insert","","",4,[[["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",2,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",2,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",2,[[["self"],["k"],["v"]],["option"]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[["self"],["k"],["v"]]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",2,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",2,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",2,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",2,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",2,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",2,[[["self"],["q"]],[["v"],["option"]]]],[11,"get_full","","Return item index, key and value",2,[[["self"],["q"]],["option"]]],[11,"get_mut","","",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_full_mut","","",2,[[["self"],["q"]],["option"]]],[11,"remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",2,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",2,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",2,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",2,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",2,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[0,"set","indexmap","A hash set implemented using `IndexMap`",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",null,null],[3,"IntoIter","","An owning iterator over the items of a `IndexSet`.",null,null],[3,"Iter","","An iterator over the items of a `IndexSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `IndexSet`.",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"new","","Create a new set. (Does not allocate.)",5,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",5,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",5,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of elements in the set.",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",5,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",5,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",5,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",5,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",5,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",5,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",5,[[["self"],["t"]],["bool"]]],[11,"insert_full","","Insert the value into the set, and get its index.",5,[[["self"],["t"]]]],[11,"iter","","Return an iterator over the values of the set, in their…",5,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",5,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",5,[[["self"],["indexset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",5,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",5,[[["self"],["indexset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",5,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",5,[[["self"],["q"]],[["t"],["option"]]]],[11,"get_full","","Return item index and value",5,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",5,[[["self"],["t"]],["option"]]],[11,"remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"shift_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",5,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",5,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",5,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",5,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",5,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",5,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",5,[[["self"],["usize"]],[["t"],["option"]]]],[11,"swap_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["k"],["self"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",null,null],[14,"indexset","","Create an `IndexSet` from a list of values",null,null],[11,"from","indexmap::map","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","indexmap::set","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","indexmap::map","",2,[[["self"],["q"]],["option"]]],[11,"retain2","","",2,[[["self"],["f"]]]],[11,"__private_marker","","",2,[[["self"]],["privatemarker"]]],[11,"next_back","","",7,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"len","indexmap::map","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","indexmap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator"],["self"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator"],["self"]]]],[11,"extend","indexmap::set","",5,[[["self"],["intoiterator"]]]],[11,"extend","","",5,[[["self"],["intoiterator"]]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",5,[[]]],[11,"next","indexmap::map","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"count","","",7,[[],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[],["option"]]],[11,"collect","","",7,[[],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"count","","",8,[[],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[],["option"]]],[11,"collect","","",8,[[],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"count","","",9,[[],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[],["option"]]],[11,"collect","","",9,[[],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"count","","",10,[[],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[],["option"]]],[11,"collect","","",10,[[],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"count","","",11,[[],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[],["option"]]],[11,"collect","","",11,[[],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"count","","",12,[[],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[],["option"]]],[11,"collect","","",12,[[],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"count","","",13,[[],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[],["option"]]],[11,"collect","","",13,[[],["c"]]],[11,"next","indexmap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"count","","",14,[[],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[],["option"]]],[11,"collect","","",14,[[],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"count","","",15,[[],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[],["option"]]],[11,"collect","","",15,[[],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"count","","",16,[[],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[],["option"]]],[11,"collect","","",16,[[],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["b"],["f"]],["b"]]],[11,"clone","indexmap::map","",2,[[["self"]],["indexmap"]]],[11,"clone","","",7,[[["self"]],["keys"]]],[11,"clone","","",8,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["iter"]]],[11,"clone","indexmap::set","",5,[[["self"]],["indexset"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",2,[[],["self"]]],[11,"default","indexmap::set","Return an empty `IndexSet`",5,[[],["self"]]],[11,"eq","indexmap::map","",2,[[["self"],["indexmap"]],["bool"]]],[11,"eq","indexmap::set","",5,[[["indexset"],["self"]],["bool"]]],[11,"fmt","indexmap::map","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","indexmap::set","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"index","indexmap::map","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"from_iter","","Create an `IndexMap` from the sequence of key-value pairs…",2,[[["intoiterator"]],["self"]]],[11,"from_iter","indexmap::set","",5,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IndexSet"],[8,"Equivalent"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O…","i":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,[[]]],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",null,[[]]],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"from_bytes","","",0,[[],[["option",["iovec"]],["iovec"]]]],[11,"from_bytes_mut","","",0,[[],[["iovec"],["option",["iovec"]]]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]]],"p":[[3,"IoVec"]]};
searchIndex["itertools"] = {"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator's elements into one element by…",null,[[["i"]]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[["j"],["i"],["f"]],[["diff"],["option",["diff"]]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[["f"],["st"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[["f"],["st"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[["j"],["i"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[["j"],["i"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[["j"],["i"],["f"]],["mergejoinby"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[["j"],["i"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",null,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",null,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[["str"],["i"]],["string"]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[["i"]],["intoiter"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[["j"],["i"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[["j"],["i"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[11,"with_value","","put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[["self"]],["bool"]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option"]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option"]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option"]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],["a"],["eitherorboth"]]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["a"],["eitherorboth"],["b"]]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth"]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[["f"],["g"]],["eitherorboth"]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[["f"]],["t"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option"]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[["self"]],["option"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],["option"]]],[8,"Itertools","","An [`Iterator`] blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse"]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[["j"],["f"]],["mergejoinby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["j"]],["product"]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup"]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[["cmp"]],["dedupby"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[["usize"]],["combinations"]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[["usize"]],["combinationswithreplacement"]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[["usize"]],["permutations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],["padusing"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option"]]],[11,"find_position","","Find the position and value of the first element…",13,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[["j"],["self"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[["str"],["self"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option"]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option"]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter"]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",["vec"]],["vec"]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["result",["exactlyoneerror"]],["exactlyoneerror"]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","itertools::structs","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"into_iter","","",51,[[],["i"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"into_iter","","",52,[[],["i"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"into_iter","","",53,[[],["i"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"as_mut","itertools","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"deref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"into","","",0,[[],["result"]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"peeking_next","itertools::structs","",9,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",8,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",10,[[["self"],["f"]],["option"]]],[11,"drop","","",40,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"into","itertools","",4,[[],[["either"],["option",["either"]]]]],[11,"next_back","itertools::structs","",19,[[["self"]],["option"]]],[11,"next_back","","",26,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",45,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",49,[[["self"]],["option"]]],[11,"next_back","","",59,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"count","","",29,[[],["usize"]]],[11,"size_hint","","",29,[[["self"]]]],[11,"last","","",29,[[],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"all","","",8,[[["self"],["g"]],["bool"]]],[11,"fold","","",8,[[["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"fold","","",17,[[["acc"],["g"]],["acc"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"fold","","",14,[[["acc"],["g"]],["acc"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,[[["self"]]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["acc"],["fold"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["acc"],["fold"]],["acc"]]],[11,"collect","","",20,[[],["c"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,[[["self"]]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["g"]],["acc"]]],[11,"collect","","",27,[[],["c"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"fold","","",42,[[["b"],["f"]],["b"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"count","","",47,[[],["usize"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,[[["self"]]]],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,[[["self"]]]],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,[[["self"]]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"size_hint","","",53,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"count","","",56,[[],["usize"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,[[["self"]]]],[11,"count","","",55,[[],["usize"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,[[["self"]]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"clone","","",29,[[["self"]],["multiproduct"]]],[11,"clone","","",15,[[["self"]],["interleave"]]],[11,"clone","","",16,[[["self"]],["interleaveshortest"]]],[11,"clone","","",8,[[["self"]],["putback"]]],[11,"clone","","",17,[[["self"]],["product"]]],[11,"clone","","",18,[[["self"]],["batching"]]],[11,"clone","","",28,[[["self"]],["step"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",23,[[["self"]],["whilesome"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",32,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["combinationswithreplacement"]]],[11,"clone","","",33,[[["self"]],["exactlyoneerror"]]],[11,"clone","","",34,[[["self"]],["format"]]],[11,"clone","","",42,[[["self"]],["intersperse"]]],[11,"clone","","",43,[[["self"]],["kmergeby"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",9,[[["self"]],["multipeek"]]],[11,"clone","","",45,[[["self"]],["padusing"]]],[11,"clone","","",10,[[["self"]],["putbackn"]]],[11,"clone","","",6,[[["self"]],["rciter"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"clone","","",51,[[["self"]],["iterate"]]],[11,"clone","","",56,[[["self"]],["uniqueby"]]],[11,"clone","","",55,[[["self"]],["unique"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",58,[[["self"]],["zipeq"]]],[11,"clone","","",59,[[["self"]],["ziplongest"]]],[11,"clone","","",60,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"eq","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"ne","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"eq","","",5,[[["foldwhile"],["self"]],["bool"]]],[11,"ne","","",5,[[["foldwhile"],["self"]],["bool"]]],[11,"fmt","itertools::structs","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["itoa"] = {"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"write","","Write integer to an `io::Write`.",null,[[["write"],["integer"]],[["result",["usize"]],["usize"]]]],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write"],["integer"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["self"],["integer"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["buffer"]]]],"p":[[3,"Buffer"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",35,null],[12,"ee_origin","","",35,null],[12,"ee_type","","",35,null],[12,"ee_code","","",35,null],[12,"ee_pad","","",35,null],[12,"ee_info","","",35,null],[12,"ee_data","","",35,null],[3,"epoll_event","","",null,null],[12,"events","","",36,null],[12,"u64","","",36,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",37,null],[12,"sun_path","","",37,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",38,null],[3,"utsname","","",null,null],[12,"sysname","","",39,null],[12,"nodename","","",39,null],[12,"release","","",39,null],[12,"version","","",39,null],[12,"machine","","",39,null],[12,"domainname","","",39,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",40,null],[12,"sigev_signo","","",40,null],[12,"sigev_notify","","",40,null],[12,"sigev_notify_thread_id","","",40,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",41,null],[12,"rlim_max","","",41,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",42,null],[12,"gl_pathv","","",42,null],[12,"gl_offs","","",42,null],[12,"gl_flags","","",42,null],[3,"passwd","","",null,null],[12,"pw_name","","",43,null],[12,"pw_passwd","","",43,null],[12,"pw_uid","","",43,null],[12,"pw_gid","","",43,null],[12,"pw_gecos","","",43,null],[12,"pw_dir","","",43,null],[12,"pw_shell","","",43,null],[3,"spwd","","",null,null],[12,"sp_namp","","",44,null],[12,"sp_pwdp","","",44,null],[12,"sp_lstchg","","",44,null],[12,"sp_min","","",44,null],[12,"sp_max","","",44,null],[12,"sp_warn","","",44,null],[12,"sp_inact","","",44,null],[12,"sp_expire","","",44,null],[12,"sp_flag","","",44,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",45,null],[12,"dqb_bsoftlimit","","",45,null],[12,"dqb_curspace","","",45,null],[12,"dqb_ihardlimit","","",45,null],[12,"dqb_isoftlimit","","",45,null],[12,"dqb_curinodes","","",45,null],[12,"dqb_btime","","",45,null],[12,"dqb_itime","","",45,null],[12,"dqb_valid","","",45,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",46,null],[12,"ssi_errno","","",46,null],[12,"ssi_code","","",46,null],[12,"ssi_pid","","",46,null],[12,"ssi_uid","","",46,null],[12,"ssi_fd","","",46,null],[12,"ssi_tid","","",46,null],[12,"ssi_band","","",46,null],[12,"ssi_overrun","","",46,null],[12,"ssi_trapno","","",46,null],[12,"ssi_status","","",46,null],[12,"ssi_int","","",46,null],[12,"ssi_ptr","","",46,null],[12,"ssi_utime","","",46,null],[12,"ssi_stime","","",46,null],[12,"ssi_addr","","",46,null],[12,"ssi_addr_lsb","","",46,null],[12,"ssi_syscall","","",46,null],[12,"ssi_call_addr","","",46,null],[12,"ssi_arch","","",46,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",47,null],[12,"it_value","","",47,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",48,null],[12,"mr_type","","",48,null],[12,"mr_alen","","",48,null],[12,"mr_address","","",48,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",49,null],[12,"if_name","","",49,null],[3,"msginfo","","",null,null],[12,"msgpool","","",50,null],[12,"msgmap","","",50,null],[12,"msgmax","","",50,null],[12,"msgmnb","","",50,null],[12,"msgmni","","",50,null],[12,"msgssz","","",50,null],[12,"msgtql","","",50,null],[12,"msgseg","","",50,null],[3,"sembuf","","",null,null],[12,"sem_num","","",51,null],[12,"sem_op","","",51,null],[12,"sem_flg","","",51,null],[3,"input_event","","",null,null],[12,"time","","",52,null],[12,"type_","","",52,null],[12,"code","","",52,null],[12,"value","","",52,null],[3,"input_id","","",null,null],[12,"bustype","","",53,null],[12,"vendor","","",53,null],[12,"product","","",53,null],[12,"version","","",53,null],[3,"input_absinfo","","",null,null],[12,"value","","",54,null],[12,"minimum","","",54,null],[12,"maximum","","",54,null],[12,"fuzz","","",54,null],[12,"flat","","",54,null],[12,"resolution","","",54,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",55,null],[12,"len","","",55,null],[12,"index","","",55,null],[12,"keycode","","",55,null],[12,"scancode","","",55,null],[3,"input_mask","","",null,null],[12,"type_","","",56,null],[12,"codes_size","","",56,null],[12,"codes_ptr","","",56,null],[3,"ff_replay","","",null,null],[12,"length","","",57,null],[12,"delay","","",57,null],[3,"ff_trigger","","",null,null],[12,"button","","",58,null],[12,"interval","","",58,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",59,null],[12,"attack_level","","",59,null],[12,"fade_length","","",59,null],[12,"fade_level","","",59,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",60,null],[12,"envelope","","",60,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",61,null],[12,"end_level","","",61,null],[12,"envelope","","",61,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",62,null],[12,"left_saturation","","",62,null],[12,"right_coeff","","",62,null],[12,"left_coeff","","",62,null],[12,"deadband","","",62,null],[12,"center","","",62,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",63,null],[12,"period","","",63,null],[12,"magnitude","","",63,null],[12,"offset","","",63,null],[12,"phase","","",63,null],[12,"envelope","","",63,null],[12,"custom_len","","",63,null],[12,"custom_data","","",63,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",64,null],[12,"weak_magnitude","","",64,null],[3,"ff_effect","","",null,null],[12,"type_","","",65,null],[12,"id","","",65,null],[12,"direction","","",65,null],[12,"trigger","","",65,null],[12,"replay","","",65,null],[12,"u","","",65,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",66,null],[12,"dlpi_name","","",66,null],[12,"dlpi_phdr","","",66,null],[12,"dlpi_phnum","","",66,null],[12,"dlpi_adds","","",66,null],[12,"dlpi_subs","","",66,null],[12,"dlpi_tls_modid","","",66,null],[12,"dlpi_tls_data","","",66,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",68,null],[12,"e_type","","",68,null],[12,"e_machine","","",68,null],[12,"e_version","","",68,null],[12,"e_entry","","",68,null],[12,"e_phoff","","",68,null],[12,"e_shoff","","",68,null],[12,"e_flags","","",68,null],[12,"e_ehsize","","",68,null],[12,"e_phentsize","","",68,null],[12,"e_phnum","","",68,null],[12,"e_shentsize","","",68,null],[12,"e_shnum","","",68,null],[12,"e_shstrndx","","",68,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",70,null],[12,"st_info","","",70,null],[12,"st_other","","",70,null],[12,"st_shndx","","",70,null],[12,"st_value","","",70,null],[12,"st_size","","",70,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_flags","","",71,null],[12,"p_align","","",71,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",72,null],[12,"p_flags","","",72,null],[12,"p_offset","","",72,null],[12,"p_vaddr","","",72,null],[12,"p_paddr","","",72,null],[12,"p_filesz","","",72,null],[12,"p_memsz","","",72,null],[12,"p_align","","",72,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",74,null],[12,"sh_type","","",74,null],[12,"sh_flags","","",74,null],[12,"sh_addr","","",74,null],[12,"sh_offset","","",74,null],[12,"sh_size","","",74,null],[12,"sh_link","","",74,null],[12,"sh_info","","",74,null],[12,"sh_addralign","","",74,null],[12,"sh_entsize","","",74,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",76,null],[12,"ch_reserved","","",76,null],[12,"ch_size","","",76,null],[12,"ch_addralign","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",84,null],[12,"nl_pid","","",84,null],[12,"nl_groups","","",84,null],[3,"dirent","","",null,null],[12,"d_ino","","",85,null],[12,"d_off","","",85,null],[12,"d_reclen","","",85,null],[12,"d_type","","",85,null],[12,"d_name","","",85,null],[3,"dirent64","","",null,null],[12,"d_ino","","",86,null],[12,"d_off","","",86,null],[12,"d_reclen","","",86,null],[12,"d_type","","",86,null],[12,"d_name","","",86,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",87,null],[12,"salg_type","","",87,null],[12,"salg_feat","","",87,null],[12,"salg_mask","","",87,null],[12,"salg_name","","",87,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",88,null],[12,"iv","","",88,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",89,null],[12,"mq_maxmsg","","",89,null],[12,"mq_msgsize","","",89,null],[12,"mq_curmsgs","","",89,null],[3,"statx","","",null,null],[12,"stx_mask","","",90,null],[12,"stx_blksize","","",90,null],[12,"stx_attributes","","",90,null],[12,"stx_nlink","","",90,null],[12,"stx_uid","","",90,null],[12,"stx_gid","","",90,null],[12,"stx_mode","","",90,null],[12,"__statx_pad1","","",90,null],[12,"stx_ino","","",90,null],[12,"stx_size","","",90,null],[12,"stx_blocks","","",90,null],[12,"stx_attributes_mask","","",90,null],[12,"stx_atime","","",90,null],[12,"stx_btime","","",90,null],[12,"stx_ctime","","",90,null],[12,"stx_mtime","","",90,null],[12,"stx_rdev_major","","",90,null],[12,"stx_rdev_minor","","",90,null],[12,"stx_dev_major","","",90,null],[12,"stx_dev_minor","","",90,null],[12,"__statx_pad2","","",90,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",91,null],[12,"tv_nsec","","",91,null],[12,"__statx_timestamp_pad1","","",91,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",92,null],[12,"aio_lio_opcode","","",92,null],[12,"aio_reqprio","","",92,null],[12,"aio_buf","","",92,null],[12,"aio_nbytes","","",92,null],[12,"aio_sigevent","","",92,null],[12,"aio_offset","","",92,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",93,null],[12,"e_exit","","",93,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",94,null],[12,"tv_usec","","",94,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",95,null],[12,"gl_pathv","","",95,null],[12,"gl_offs","","",95,null],[12,"gl_flags","","",95,null],[3,"msghdr","","",null,null],[12,"msg_name","","",96,null],[12,"msg_namelen","","",96,null],[12,"msg_iov","","",96,null],[12,"msg_iovlen","","",96,null],[12,"msg_control","","",96,null],[12,"msg_controllen","","",96,null],[12,"msg_flags","","",96,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",97,null],[12,"cmsg_level","","",97,null],[12,"cmsg_type","","",97,null],[3,"termios","","",null,null],[12,"c_iflag","","",98,null],[12,"c_oflag","","",98,null],[12,"c_cflag","","",98,null],[12,"c_lflag","","",98,null],[12,"c_line","","",98,null],[12,"c_cc","","",98,null],[12,"c_ispeed","","",98,null],[12,"c_ospeed","","",98,null],[3,"mallinfo","","",null,null],[12,"arena","","",99,null],[12,"ordblks","","",99,null],[12,"smblks","","",99,null],[12,"hblks","","",99,null],[12,"hblkhd","","",99,null],[12,"usmblks","","",99,null],[12,"fsmblks","","",99,null],[12,"uordblks","","",99,null],[12,"fordblks","","",99,null],[12,"keepcost","","",99,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",100,null],[12,"nlmsg_type","","",100,null],[12,"nlmsg_flags","","",100,null],[12,"nlmsg_seq","","",100,null],[12,"nlmsg_pid","","",100,null],[3,"nlmsgerr","","",null,null],[12,"error","","",101,null],[12,"msg","","",101,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",102,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",103,null],[12,"nm_block_nr","","",103,null],[12,"nm_frame_size","","",103,null],[12,"nm_frame_nr","","",103,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",104,null],[12,"nm_len","","",104,null],[12,"nm_group","","",104,null],[12,"nm_pid","","",104,null],[12,"nm_uid","","",104,null],[12,"nm_gid","","",104,null],[3,"nlattr","","",null,null],[12,"nla_len","","",105,null],[12,"nla_type","","",105,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",106,null],[12,"rt_dst","","",106,null],[12,"rt_gateway","","",106,null],[12,"rt_genmask","","",106,null],[12,"rt_flags","","",106,null],[12,"rt_pad2","","",106,null],[12,"rt_pad3","","",106,null],[12,"rt_tos","","",106,null],[12,"rt_class","","",106,null],[12,"rt_pad4","","",106,null],[12,"rt_metric","","",106,null],[12,"rt_dev","","",106,null],[12,"rt_mtu","","",106,null],[12,"rt_window","","",106,null],[12,"rt_irtt","","",106,null],[3,"timex","","",null,null],[12,"modes","","",107,null],[12,"offset","","",107,null],[12,"freq","","",107,null],[12,"maxerror","","",107,null],[12,"esterror","","",107,null],[12,"status","","",107,null],[12,"constant","","",107,null],[12,"precision","","",107,null],[12,"tolerance","","",107,null],[12,"time","","",107,null],[12,"tick","","",107,null],[12,"ppsfreq","","",107,null],[12,"jitter","","",107,null],[12,"shift","","",107,null],[12,"stabil","","",107,null],[12,"jitcnt","","",107,null],[12,"calcnt","","",107,null],[12,"errcnt","","",107,null],[12,"stbcnt","","",107,null],[12,"tai","","",107,null],[12,"__unused1","","",107,null],[12,"__unused2","","",107,null],[12,"__unused3","","",107,null],[12,"__unused4","","",107,null],[12,"__unused5","","",107,null],[12,"__unused6","","",107,null],[12,"__unused7","","",107,null],[12,"__unused8","","",107,null],[12,"__unused9","","",107,null],[12,"__unused10","","",107,null],[12,"__unused11","","",107,null],[3,"ntptimeval","","",null,null],[12,"time","","",108,null],[12,"maxerror","","",108,null],[12,"esterror","","",108,null],[12,"tai","","",108,null],[12,"__glibc_reserved1","","",108,null],[12,"__glibc_reserved2","","",108,null],[12,"__glibc_reserved3","","",108,null],[12,"__glibc_reserved4","","",108,null],[3,"utmpx","","",null,null],[12,"ut_type","","",109,null],[12,"ut_pid","","",109,null],[12,"ut_line","","",109,null],[12,"ut_id","","",109,null],[12,"ut_user","","",109,null],[12,"ut_host","","",109,null],[12,"ut_exit","","",109,null],[12,"ut_session","","",109,null],[12,"ut_tv","","",109,null],[12,"ut_addr_v6","","",109,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",110,null],[12,"loads","","",110,null],[12,"totalram","","",110,null],[12,"freeram","","",110,null],[12,"sharedram","","",110,null],[12,"bufferram","","",110,null],[12,"totalswap","","",110,null],[12,"freeswap","","",110,null],[12,"procs","","",110,null],[12,"pad","","",110,null],[12,"totalhigh","","",110,null],[12,"freehigh","","",110,null],[12,"mem_unit","","",110,null],[12,"_f","","",110,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",111,null],[12,"msg_stime","","",111,null],[12,"msg_rtime","","",111,null],[12,"msg_ctime","","",111,null],[12,"msg_qnum","","",111,null],[12,"msg_qbytes","","",111,null],[12,"msg_lspid","","",111,null],[12,"msg_lrpid","","",111,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",112,null],[12,"sa_mask","","",112,null],[12,"sa_flags","","",112,null],[12,"sa_restorer","","",112,null],[3,"statfs","","",null,null],[12,"f_type","","",113,null],[12,"f_bsize","","",113,null],[12,"f_blocks","","",113,null],[12,"f_bfree","","",113,null],[12,"f_bavail","","",113,null],[12,"f_files","","",113,null],[12,"f_ffree","","",113,null],[12,"f_fsid","","",113,null],[12,"f_namelen","","",113,null],[12,"f_frsize","","",113,null],[3,"flock","","",null,null],[12,"l_type","","",114,null],[12,"l_whence","","",114,null],[12,"l_start","","",114,null],[12,"l_len","","",114,null],[12,"l_pid","","",114,null],[3,"flock64","","",null,null],[12,"l_type","","",115,null],[12,"l_whence","","",115,null],[12,"l_start","","",115,null],[12,"l_len","","",115,null],[12,"l_pid","","",115,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",116,null],[12,"si_errno","","",116,null],[12,"si_code","","",116,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",117,null],[12,"ss_flags","","",117,null],[12,"ss_size","","",117,null],[3,"stat","","",null,null],[12,"st_dev","","",118,null],[12,"st_ino","","",118,null],[12,"st_nlink","","",118,null],[12,"st_mode","","",118,null],[12,"st_uid","","",118,null],[12,"st_gid","","",118,null],[12,"st_rdev","","",118,null],[12,"st_size","","",118,null],[12,"st_blksize","","",118,null],[12,"st_blocks","","",118,null],[12,"st_atime","","",118,null],[12,"st_atime_nsec","","",118,null],[12,"st_mtime","","",118,null],[12,"st_mtime_nsec","","",118,null],[12,"st_ctime","","",118,null],[12,"st_ctime_nsec","","",118,null],[3,"stat64","","",null,null],[12,"st_dev","","",119,null],[12,"st_ino","","",119,null],[12,"st_nlink","","",119,null],[12,"st_mode","","",119,null],[12,"st_uid","","",119,null],[12,"st_gid","","",119,null],[12,"st_rdev","","",119,null],[12,"st_size","","",119,null],[12,"st_blksize","","",119,null],[12,"st_blocks","","",119,null],[12,"st_atime","","",119,null],[12,"st_atime_nsec","","",119,null],[12,"st_mtime","","",119,null],[12,"st_mtime_nsec","","",119,null],[12,"st_ctime","","",119,null],[12,"st_ctime_nsec","","",119,null],[3,"statfs64","","",null,null],[12,"f_type","","",120,null],[12,"f_bsize","","",120,null],[12,"f_blocks","","",120,null],[12,"f_bfree","","",120,null],[12,"f_bavail","","",120,null],[12,"f_files","","",120,null],[12,"f_ffree","","",120,null],[12,"f_fsid","","",120,null],[12,"f_namelen","","",120,null],[12,"f_frsize","","",120,null],[12,"f_flags","","",120,null],[12,"f_spare","","",120,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",121,null],[12,"f_frsize","","",121,null],[12,"f_blocks","","",121,null],[12,"f_bfree","","",121,null],[12,"f_bavail","","",121,null],[12,"f_files","","",121,null],[12,"f_ffree","","",121,null],[12,"f_favail","","",121,null],[12,"f_fsid","","",121,null],[12,"f_flag","","",121,null],[12,"f_namemax","","",121,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",122,null],[12,"exponent","","",122,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",123,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",124,null],[12,"swd","","",124,null],[12,"ftw","","",124,null],[12,"fop","","",124,null],[12,"rip","","",124,null],[12,"rdp","","",124,null],[12,"mxcsr","","",124,null],[12,"mxcr_mask","","",124,null],[12,"_st","","",124,null],[12,"_xmm","","",124,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",125,null],[12,"r14","","",125,null],[12,"r13","","",125,null],[12,"r12","","",125,null],[12,"rbp","","",125,null],[12,"rbx","","",125,null],[12,"r11","","",125,null],[12,"r10","","",125,null],[12,"r9","","",125,null],[12,"r8","","",125,null],[12,"rax","","",125,null],[12,"rcx","","",125,null],[12,"rdx","","",125,null],[12,"rsi","","",125,null],[12,"rdi","","",125,null],[12,"orig_rax","","",125,null],[12,"rip","","",125,null],[12,"cs","","",125,null],[12,"eflags","","",125,null],[12,"rsp","","",125,null],[12,"ss","","",125,null],[12,"fs_base","","",125,null],[12,"gs_base","","",125,null],[12,"ds","","",125,null],[12,"es","","",125,null],[12,"fs","","",125,null],[12,"gs","","",125,null],[3,"user","","",null,null],[12,"regs","","",126,null],[12,"u_fpvalid","","",126,null],[12,"i387","","",126,null],[12,"u_tsize","","",126,null],[12,"u_dsize","","",126,null],[12,"u_ssize","","",126,null],[12,"start_code","","",126,null],[12,"start_stack","","",126,null],[12,"signal","","",126,null],[12,"u_ar0","","",126,null],[12,"u_fpstate","","",126,null],[12,"magic","","",126,null],[12,"u_comm","","",126,null],[12,"u_debugreg","","",126,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",127,null],[12,"fpregs","","",127,null],[3,"ipc_perm","","",null,null],[12,"__key","","",128,null],[12,"uid","","",128,null],[12,"gid","","",128,null],[12,"cuid","","",128,null],[12,"cgid","","",128,null],[12,"mode","","",128,null],[12,"__seq","","",128,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",129,null],[12,"shm_segsz","","",129,null],[12,"shm_atime","","",129,null],[12,"shm_dtime","","",129,null],[12,"shm_ctime","","",129,null],[12,"shm_cpid","","",129,null],[12,"shm_lpid","","",129,null],[12,"shm_nattch","","",129,null],[3,"termios2","","",null,null],[12,"c_iflag","","",130,null],[12,"c_oflag","","",130,null],[12,"c_cflag","","",130,null],[12,"c_lflag","","",130,null],[12,"c_line","","",130,null],[12,"c_cc","","",130,null],[12,"c_ispeed","","",130,null],[12,"c_ospeed","","",130,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",131,null],[12,"imr_address","","",131,null],[12,"imr_ifindex","","",131,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",132,null],[12,"swd","","",132,null],[12,"ftw","","",132,null],[12,"fop","","",132,null],[12,"rip","","",132,null],[12,"rdp","","",132,null],[12,"mxcsr","","",132,null],[12,"mxcr_mask","","",132,null],[12,"st_space","","",132,null],[12,"xmm_space","","",132,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",133,null],[12,"uc_link","","",133,null],[12,"uc_stack","","",133,null],[12,"uc_mcontext","","",133,null],[12,"uc_sigmask","","",133,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",134,null],[12,"f_frsize","","",134,null],[12,"f_blocks","","",134,null],[12,"f_bfree","","",134,null],[12,"f_bavail","","",134,null],[12,"f_files","","",134,null],[12,"f_ffree","","",134,null],[12,"f_favail","","",134,null],[12,"f_fsid","","",134,null],[12,"f_flag","","",134,null],[12,"f_namemax","","",134,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",135,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t"],["usize"]],["bool"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",116,[[["self"]]]],[11,"si_value","","",116,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"fmt","","",136,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","","",153,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",154,[[["self"]],["file"]]],[11,"clone","","",155,[[["self"]],["fpos_t"]]],[11,"clone","","",156,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",137,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",138,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["sock_extended_err"]]],[11,"clone","","",36,[[["self"]],["epoll_event"]]],[11,"clone","","",37,[[["self"]],["sockaddr_un"]]],[11,"clone","","",38,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",39,[[["self"]],["utsname"]]],[11,"clone","","",40,[[["self"]],["sigevent"]]],[11,"clone","","",157,[[["self"]],["fpos64_t"]]],[11,"clone","","",41,[[["self"]],["rlimit64"]]],[11,"clone","","",42,[[["self"]],["glob_t"]]],[11,"clone","","",43,[[["self"]],["passwd"]]],[11,"clone","","",44,[[["self"]],["spwd"]]],[11,"clone","","",45,[[["self"]],["dqblk"]]],[11,"clone","","",46,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",47,[[["self"]],["itimerspec"]]],[11,"clone","","",139,[[["self"]],["fsid_t"]]],[11,"clone","","",48,[[["self"]],["packet_mreq"]]],[11,"clone","","",140,[[["self"]],["cpu_set_t"]]],[11,"clone","","",49,[[["self"]],["if_nameindex"]]],[11,"clone","","",50,[[["self"]],["msginfo"]]],[11,"clone","","",51,[[["self"]],["sembuf"]]],[11,"clone","","",52,[[["self"]],["input_event"]]],[11,"clone","","",53,[[["self"]],["input_id"]]],[11,"clone","","",54,[[["self"]],["input_absinfo"]]],[11,"clone","","",55,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",56,[[["self"]],["input_mask"]]],[11,"clone","","",57,[[["self"]],["ff_replay"]]],[11,"clone","","",58,[[["self"]],["ff_trigger"]]],[11,"clone","","",59,[[["self"]],["ff_envelope"]]],[11,"clone","","",60,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",61,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",62,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",63,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",64,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",65,[[["self"]],["ff_effect"]]],[11,"clone","","",66,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",67,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",69,[[["self"]],["elf32_sym"]]],[11,"clone","","",70,[[["self"]],["elf64_sym"]]],[11,"clone","","",71,[[["self"]],["elf32_phdr"]]],[11,"clone","","",72,[[["self"]],["elf64_phdr"]]],[11,"clone","","",73,[[["self"]],["elf32_shdr"]]],[11,"clone","","",74,[[["self"]],["elf64_shdr"]]],[11,"clone","","",75,[[["self"]],["elf32_chdr"]]],[11,"clone","","",76,[[["self"]],["elf64_chdr"]]],[11,"clone","","",77,[[["self"]],["ucred"]]],[11,"clone","","",78,[[["self"]],["mntent"]]],[11,"clone","","",141,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",142,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",79,[[["self"]],["genlmsghdr"]]],[11,"clone","","",80,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",81,[[["self"]],["arpd_request"]]],[11,"clone","","",82,[[["self"]],["inotify_event"]]],[11,"clone","","",83,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",84,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",85,[[["self"]],["dirent"]]],[11,"clone","","",86,[[["self"]],["dirent64"]]],[11,"clone","","",87,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",88,[[["self"]],["af_alg_iv"]]],[11,"clone","","",89,[[["self"]],["mq_attr"]]],[11,"clone","","",90,[[["self"]],["statx"]]],[11,"clone","","",91,[[["self"]],["statx_timestamp"]]],[11,"clone","","",92,[[["self"]],["aiocb"]]],[11,"clone","","",93,[[["self"]],["__exit_status"]]],[11,"clone","","",94,[[["self"]],["__timeval"]]],[11,"clone","","",95,[[["self"]],["glob64_t"]]],[11,"clone","","",96,[[["self"]],["msghdr"]]],[11,"clone","","",97,[[["self"]],["cmsghdr"]]],[11,"clone","","",98,[[["self"]],["termios"]]],[11,"clone","","",99,[[["self"]],["mallinfo"]]],[11,"clone","","",100,[[["self"]],["nlmsghdr"]]],[11,"clone","","",101,[[["self"]],["nlmsgerr"]]],[11,"clone","","",102,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",104,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",105,[[["self"]],["nlattr"]]],[11,"clone","","",106,[[["self"]],["rtentry"]]],[11,"clone","","",107,[[["self"]],["timex"]]],[11,"clone","","",108,[[["self"]],["ntptimeval"]]],[11,"clone","","",109,[[["self"]],["utmpx"]]],[11,"clone","","",143,[[["self"]],["sigset_t"]]],[11,"clone","","",110,[[["self"]],["sysinfo"]]],[11,"clone","","",111,[[["self"]],["msqid_ds"]]],[11,"clone","","",112,[[["self"]],["sigaction"]]],[11,"clone","","",113,[[["self"]],["statfs"]]],[11,"clone","","",114,[[["self"]],["flock"]]],[11,"clone","","",115,[[["self"]],["flock64"]]],[11,"clone","","",116,[[["self"]],["siginfo_t"]]],[11,"clone","","",117,[[["self"]],["stack_t"]]],[11,"clone","","",118,[[["self"]],["stat"]]],[11,"clone","","",119,[[["self"]],["stat64"]]],[11,"clone","","",120,[[["self"]],["statfs64"]]],[11,"clone","","",121,[[["self"]],["statvfs64"]]],[11,"clone","","",144,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",122,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",123,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",124,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",125,[[["self"]],["user_regs_struct"]]],[11,"clone","","",126,[[["self"]],["user"]]],[11,"clone","","",127,[[["self"]],["mcontext_t"]]],[11,"clone","","",128,[[["self"]],["ipc_perm"]]],[11,"clone","","",129,[[["self"]],["shmid_ds"]]],[11,"clone","","",130,[[["self"]],["termios2"]]],[11,"clone","","",131,[[["self"]],["ip_mreqn"]]],[11,"clone","","",132,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",133,[[["self"]],["ucontext_t"]]],[11,"clone","","",134,[[["self"]],["statvfs"]]],[11,"clone","","",145,[[["self"]],["max_align_t"]]],[11,"clone","","",146,[[["self"]],["sem_t"]]],[11,"clone","","",147,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",148,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",149,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",150,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",151,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",152,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",135,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"sock_extended_err"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["lock_api"] = {"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock…",null,null],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock…",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",null,null],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",null,null],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",null,null],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",null,null],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",null,null],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",null,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",1,[[["f"]],[["sized"],["mappedmutexguard"]]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",1,[[["f"]],[["mappedmutexguard"],["result",["mappedmutexguard"]]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",1,[[["self"]]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",2,[[["f"]],[["sized"],["mappedmutexguard"]]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",2,[[["f"]],[["mappedmutexguard"],["result",["mappedmutexguard"]]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",3,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],[["option",["reentrantmutexguard"]],["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",3,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",3,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,[[["self"]],[["option",["reentrantmutexguard"]],["reentrantmutexguard"]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,[[["self"]],[["option",["reentrantmutexguard"]],["reentrantmutexguard"]]]],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],["reentrantmutex"]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",4,[[["f"]],[["mappedreentrantmutexguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",4,[[["f"]],[["result",["mappedreentrantmutexguard"]],["mappedreentrantmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",4,[[["self"]]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",5,[[["f"]],[["mappedreentrantmutexguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",5,[[["f"]],[["result",["mappedreentrantmutexguard"]],["mappedreentrantmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,[[],["t"]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],[["rwlockwriteguard"],["option",["rwlockwriteguard"]]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["t"]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write…",6,[[["self"]],[["rwlockwriteguard"],["option",["rwlockwriteguard"]]]]],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write…",6,[[["self"]],[["rwlockwriteguard"],["option",["rwlockwriteguard"]]]]],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],["rwlockupgradablereadguard"]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],[["option",["rwlockupgradablereadguard"]],["rwlockupgradablereadguard"]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],[["option",["rwlockupgradablereadguard"]],["rwlockupgradablereadguard"]]]],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],[["option",["rwlockupgradablereadguard"]],["rwlockupgradablereadguard"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",7,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",7,[[["f"]],[["mappedrwlockreadguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",7,[[["f"]],[["result",["mappedrwlockreadguard"]],["mappedrwlockreadguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",7,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",8,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",8,[[["f"]],[["mappedrwlockwriteguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",8,[[["f"]],[["mappedrwlockwriteguard"],["result",["mappedrwlockwriteguard"]]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",8,[[],["rwlockreadguard"]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read…",8,[[],["rwlockupgradablereadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",8,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",9,[[["self"]],["rwlock"]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a…",9,[[],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a…",9,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",9,[[["self"]]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a…",9,[[],["rwlockreadguard"]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a…",9,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a…",9,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",10,[[["f"]],[["mappedrwlockreadguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",10,[[["f"]],[["result",["mappedrwlockreadguard"]],["mappedrwlockreadguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",11,[[["f"]],[["mappedrwlockwriteguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",11,[[["f"]],[["mappedrwlockwriteguard"],["result",["mappedrwlockwriteguard"]]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",11,[[],["mappedrwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[]]],[8,"RawMutex","","Basic operations for a mutex.",null,null],[18,"INIT","","Initial value for an unlocked mutex.",12,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",12,null],[10,"lock","","Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock","","Unlocks this mutex.",12,[[["self"]]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",null,null],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with…",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",14,null],[16,"Instant","","Instant type used for `try_lock_until`.",14,null],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,[[["self"]],["bool"]]],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,[[["self"]],["bool"]]],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",null,null],[18,"INIT","","Initial value.",15,null],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current…",15,[[["self"]],["nonzerousize"]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",null,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",16,null],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_shared","","Releases a shared lock.",16,[[["self"]]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_exclusive","","Releases an exclusive lock.",16,[[["self"]]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",null,null],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically…",null,null],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with…",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",19,null],[16,"Instant","","Instant type used for `try_lock_until`.",19,null],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is…",19,[[["self"]],["bool"]]],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is…",19,[[["self"]],["bool"]]],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is…",19,[[["self"]],["bool"]]],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is…",19,[[["self"]],["bool"]]],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive…",null,null],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive…",null,null],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is…",21,[[["self"]],["bool"]]],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is…",21,[[["self"]],["bool"]]],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically…",null,null],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,"unlock_upgradable","","Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive…",22,[[["self"]],["bool"]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable…",null,null],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable…",null,null],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable…",null,null],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is…",25,[[["self"]],["bool"]]],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is…",25,[[["self"]],["bool"]]],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive…",25,[[["self"]],["bool"]]],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive…",25,[[["self"]],["bool"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"from","","",3,[[],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"from","","",6,[[],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref","","",9,[[["self"]],["t"]]],[11,"deref","","",10,[[["self"]],["t"]]],[11,"deref","","",11,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",8,[[["self"]],["t"]]],[11,"deref_mut","","",11,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["mutex"]]],[11,"from","","",3,[[["t"]],["reentrantmutex"]]],[11,"from","","",6,[[["t"]],["rwlock"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",3,[[],["reentrantmutex"]]],[11,"default","","",6,[[],["rwlock"]]],[18,"INIT","","Initial value for an unlocked mutex.",12,null],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[18,"INIT","","Initial value.",15,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,null],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]]],"p":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"GuardSend"],[3,"GuardNoSend"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["box",["log"]],["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["option",["level"]],["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["arguments"],["self"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["option",["u32"]],["self"],["u32"]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["levelfilter"],["self"]],["ordering"]]],[11,"cmp","","",5,[[["metadata"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["metadatabuilder"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ne","","",5,[[["metadata"],["self"]],["bool"]]],[11,"eq","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ne","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["levelfilter"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["levelfilter"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["metadata"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"le","","",5,[[["metadata"],["self"]],["bool"]]],[11,"gt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ge","","",5,[[["metadata"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["metadatabuilder"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"le","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"gt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ge","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["level"]],["level"]]]],[11,"from_str","","",1,[[["str"]],[["levelfilter"],["result",["levelfilter"]]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["matches"] = {"doc":"","i":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",null,null]],"p":[]};
searchIndex["maybe_uninit"] = {"doc":"","i":[[19,"MaybeUninit","maybe_uninit","A wrapper type to construct uninitialized instances of `T`.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",0,[[["self"]],["maybeuninit"]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",0,[[["t"]],["maybeuninit"]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",0,[[],["maybeuninit"]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",0,[[]]],[18,"UNINIT","","A promotable constant, equivalent to `uninit()`.",0,null],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",0,[[],["maybeuninit"]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",0,[[["self"]]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",0,[[["self"]]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",0,[[],["t"]]],[11,"read","","Reads the value from the `MaybeUninit<T>` container. The…",0,[[["self"]],["t"]]],[11,"get_ref","","Gets a shared reference to the contained value.",0,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable (unique) reference to the contained value.",0,[[["self"]],["t"]]],[11,"slice_get_ref","","Assuming all the elements are initialized, get a slice to…",0,[[]]],[11,"slice_get_mut","","Assuming all the elements are initialized, get a mutable…",0,[[]]],[11,"first_ptr","","Gets a pointer to the first element of the array.",0,[[]]],[11,"first_ptr_mut","","Gets a mutable pointer to the first element of the array.",0,[[]]]],"p":[[19,"MaybeUninit"]]};
searchIndex["memchr"] = {"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],["memchr"]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr2"]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr3"]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr3"],["rev",["memchr3"]]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[["u8"]],["memchr"]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[["u8"]],["memchr2"]]],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",0,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on…","i":[[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space `Poll` registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated…",null,null],[3,"PollOpt","","Options supplied when registering an `Evented` handle with…",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",0,null],[3,"Events","","A collection of readiness events.",null,null],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["pollopt"],["self"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["into"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["into"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["into"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize`…",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"new","","Return a new `Poll` handle.",3,[[],[["result",["poll"]],["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",3,[[["e"],["ready"],["pollopt"],["token"],["self"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",3,[[["e"],["ready"],["pollopt"],["token"],["self"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",3,[[["events"],["duration"],["option",["duration"]],["self"]],[["result",["usize"]],["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",3,[[["events"],["duration"],["option",["duration"]],["self"]],[["result",["usize"]],["usize"]]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity`…",4,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2","","Create and return a new `Registration` and the associated…",5,[[]]],[11,"readiness","","Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",6,[[["self"],["ready"]],["result"]]],[0,"net","","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a…",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[11,"connect","","Create a new TCP stream and issue a non-blocking connect…",7,[[["socketaddr"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside…",7,[[["socketaddr"],["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",7,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",7,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",7,[[["self"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",7,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",7,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["u32"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_bufs","","Read in a list of buffers all at once.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_bufs","","Write a list of buffers all at once.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"bind","","Convenience method to bind a new TCP listener to the…",8,[[["socketaddr"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a…",8,[[["tcplistener"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",8,[[["self"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["u32"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and…",9,[[["udpsocket"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created…",9,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",9,[[["self"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",9,[[["socketaddr"],["self"]],[["result",["usize"]],["usize"]]]],[11,"recv_from","","Receives data from the socket. On success, returns the…",9,[[["self"]],["result"]]],[11,"send","","Sends data on the socket to the address previously bound…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"recv","","Receives data from the socket previously bound with…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"connect","","Connects the UDP socket setting the default destination…",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["u32"],["self"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["u32"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"recv_bufs","","Receives a single datagram message socket previously bound…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"send_bufs","","Sends data on the socket to the address previously bound…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","[`Events`] iterator.",null,null],[3,"Event","","An readiness event returned by [`Poll::poll`].",null,null],[8,"Evented","","A value that may be registered with `Poll`",null,null],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["poll"],["self"]],["result"]]],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for [`RawFd`] providing an [`Evented`]…",null,null],[12,"0","","",11,null],[3,"UnixReady","","Unix specific extensions to `Ready`",null,null],[11,"from","mio","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","mio::event","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","mio::unix","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","mio::net","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"register","mio","",5,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",5,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",5,[[["poll"],["self"]],["result"]]],[11,"register","mio::unix","",11,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",11,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",11,[[["poll"],["self"]],["result"]]],[11,"register","mio::net","",7,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",7,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",7,[[["poll"],["self"]],["result"]]],[11,"register","","",8,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",8,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",8,[[["poll"],["self"]],["result"]]],[11,"register","","",9,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",9,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",9,[[["poll"],["self"]],["result"]]],[11,"drop","mio","",5,[[["self"]]]],[11,"from","mio::unix","",14,[[["ready"]],["unixready"]]],[11,"from","mio","",2,[[["unixready"]],["ready"]]],[11,"from","","",0,[[["usize"]],["token"]]],[11,"into_iter","","",4,[[]]],[11,"next","mio::event","",13,[[["self"]],[["event"],["option",["event"]]]]],[11,"clone","mio","",1,[[["self"]],["pollopt"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"clone","mio::event","",12,[[["self"]],["event"]]],[11,"clone","mio","",6,[[["self"]],["setreadiness"]]],[11,"clone","mio::event","",13,[[["self"]],["iter"]]],[11,"clone","mio::unix","",14,[[["self"]],["unixready"]]],[11,"clone","mio","",0,[[["self"]],["token"]]],[11,"cmp","","",1,[[["pollopt"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["ready"],["self"]],["ordering"]]],[11,"cmp","mio::unix","",14,[[["self"],["unixready"]],["ordering"]]],[11,"cmp","mio","",0,[[["self"],["token"]],["ordering"]]],[11,"eq","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"ne","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"eq","","",2,[[["ready"],["self"]],["bool"]]],[11,"ne","","",2,[[["ready"],["self"]],["bool"]]],[11,"eq","mio::event","",12,[[["event"],["self"]],["bool"]]],[11,"ne","","",12,[[["event"],["self"]],["bool"]]],[11,"eq","mio::unix","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"eq","mio","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"partial_cmp","","",1,[[["pollopt"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"le","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"gt","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"ge","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["ready"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["ready"],["self"]],["bool"]]],[11,"le","","",2,[[["ready"],["self"]],["bool"]]],[11,"gt","","",2,[[["ready"],["self"]],["bool"]]],[11,"ge","","",2,[[["ready"],["self"]],["bool"]]],[11,"partial_cmp","mio::unix","",14,[[["self"],["unixready"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"partial_cmp","mio","",0,[[["self"],["token"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"deref","mio::unix","",14,[[["self"]],["ready"]]],[11,"deref_mut","","",14,[[["self"]],["ready"]]],[11,"fmt","mio","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::event","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::event","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::unix","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::net","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"sub","mio","",1,[[["pollopt"]],["pollopt"]]],[11,"sub","","",2,[[["t"]],["ready"]]],[11,"sub","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"sub_assign","mio","",2,[[["self"],["t"]]]],[11,"bitand","","",1,[[["pollopt"]],["pollopt"]]],[11,"bitand","","",2,[[["t"]],["ready"]]],[11,"bitand","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"bitor","mio","",1,[[["pollopt"]],["pollopt"]]],[11,"bitor","","",2,[[["t"]],["ready"]]],[11,"bitor","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"bitxor","mio","",1,[[["pollopt"]],["pollopt"]]],[11,"bitxor","","",2,[[["t"]],["ready"]]],[11,"bitxor","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"bitand_assign","mio","",2,[[["self"],["t"]]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"read","mio::net","",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",7,[[["self"]],["result"]]],[11,"as_raw_fd","mio","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","mio::net","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[11,"into_raw_fd","","",7,[[],["rawfd"]]],[11,"into_raw_fd","","",8,[[],["rawfd"]]],[11,"into_raw_fd","","",9,[[],["rawfd"]]],[11,"new","mio::event","Creates a new `Event` containing `readiness` and `token`",12,[[["token"],["ready"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"error","mio::unix","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"priority","","Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],["unixready"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority","","Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"p":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"SetReadiness"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_uds"] = {"doc":"MIO bindings for Unix Domain Sockets","i":[[3,"UnixStream","mio_uds","A Unix stream socket.",null,null],[3,"UnixListener","","A structure representing a Unix domain socket server.",null,null],[3,"UnixDatagram","","A Unix datagram socket.",null,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",0,[[["path"],["asref",["path"]]],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"from_datagram","","Consumes a standard library `UnixDatagram` and returns a…",0,[[["unixdatagram"]],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"pair","","Create an unnamed pair of connected sockets.",0,[[],["result"]]],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any…",0,[[],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"connect","","Connects the socket to the specified address.",0,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",0,[[["self"]],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"local_addr","","Returns the address of this socket.",0,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_addr","","Returns the address of this socket's peer.",0,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"recv_from","","Receives data from the socket.",0,[[["self"]],["result"]]],[11,"recv","","Receives data from the socket.",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"send_to","","Sends data on the socket to the specified address.",0,[[["asref",["path"]],["path"],["self"]],[["result",["usize"]],["usize"]]]],[11,"send","","Sends data on the socket to the socket's peer.",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",0,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"shutdown","","Shut down the read, write, or both halves of this…",0,[[["shutdown"],["self"]],["result"]]],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",1,[[["path"],["asref",["path"]]],[["result",["unixlistener"]],["unixlistener"]]]],[11,"from_listener","","Consumes a standard library `UnixListener` and returns a…",1,[[["unixlistener"]],[["result",["unixlistener"]],["unixlistener"]]]],[11,"accept","","Accepts a new incoming connection to this listener.",1,[[["self"]],[["option"],["result",["option"]]]]],[11,"accept_std","","Accepts a new incoming connection to this listener.",1,[[["self"]],[["result",["option"]],["option"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",1,[[["self"]],[["result",["unixlistener"]],["unixlistener"]]]],[11,"local_addr","","Returns the local socket address of this listener.",1,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",1,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"connect","","Connects to the socket named by `path`.",2,[[["path"],["asref",["path"]]],[["result",["unixstream"]],["unixstream"]]]],[11,"from_stream","","Consumes a standard library `UnixStream` and returns a…",2,[[["unixstream"]],[["result",["unixstream"]],["unixstream"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",2,[[],["result"]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",2,[[["self"]],[["result",["unixstream"]],["unixstream"]]]],[11,"local_addr","","Returns the socket address of the local half of this…",2,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",2,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",2,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",2,[[["shutdown"],["self"]],["result"]]],[11,"read_bufs","","Read in a list of buffers all at once.",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_bufs","","Write a list of buffers all at once.",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"read","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",2,[[["self"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["i32"]]],[11,"as_raw_fd","","",1,[[["self"]],["i32"]]],[11,"as_raw_fd","","",2,[[["self"]],["i32"]]],[11,"from_raw_fd","","",0,[[["i32"]],["unixdatagram"]]],[11,"from_raw_fd","","",1,[[["i32"]],["unixlistener"]]],[11,"from_raw_fd","","",2,[[["i32"]],["unixstream"]]],[11,"into_raw_fd","","",0,[[],["i32"]]],[11,"into_raw_fd","","",1,[[],["i32"]]],[11,"into_raw_fd","","",2,[[],["i32"]]],[11,"register","","",0,[[["poll"],["pollopt"],["ready"],["token"],["self"]],["result"]]],[11,"reregister","","",0,[[["poll"],["pollopt"],["ready"],["token"],["self"]],["result"]]],[11,"deregister","","",0,[[["self"],["poll"]],["result"]]],[11,"register","","",1,[[["poll"],["pollopt"],["ready"],["token"],["self"]],["result"]]],[11,"reregister","","",1,[[["poll"],["pollopt"],["ready"],["token"],["self"]],["result"]]],[11,"deregister","","",1,[[["self"],["poll"]],["result"]]],[11,"register","","",2,[[["poll"],["pollopt"],["ready"],["token"],["self"]],["result"]]],[11,"reregister","","",2,[[["poll"],["pollopt"],["ready"],["token"],["self"]],["result"]]],[11,"deregister","","",2,[[["self"],["poll"]],["result"]]]],"p":[[3,"UnixDatagram"],[3,"UnixListener"],[3,"UnixStream"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","i":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",null,null],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been…",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],[["result",["tcpbuilder"]],["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],[["result",["tcpbuilder"]],["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],[["tcpbuilder"],["result",["tcpbuilder"]]]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],[["tcplistener"],["result",["tcplistener"]]]]],[11,"connect","","Initiate a connection on this socket to the specified…",0,[[["self"],["t"]],[["result",["tcpstream"]],["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],[["result",["tcpstream"]],["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],[["tcplistener"],["result",["tcplistener"]]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],[["udpbuilder"],["result",["udpbuilder"]]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],[["udpbuilder"],["result",["udpbuilder"]]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["u32"],["self"]],[["result"],["self"]]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],[["result"],["self"]]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["u32"],["self"]],[["result"],["self"]]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],[["result"],["self"]]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],[["result",["option"]],["option",["error"]]]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],[["result"],["self"]]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],[["result",["bool"]],["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this…",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],[["result"],["self"]]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],[["result",["bool"]],["bool"]]]],[8,"TcpStreamExt","net2","Extension methods for the standard [`TcpStream`…",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on…",4,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["u32"],["self"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket,…",4,[[["self"],["tosocketaddrs"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],[["result",["option"]],["option",["error"]]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener`…",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["u32"],["self"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],[["result",["option"]],["option",["error"]]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",5,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",5,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket`…",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["u32"],["self"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["u32"],["self"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],[["ipv4addr"],["result",["ipv4addr"]]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["u32"],["self"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["u32"],["self"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["u32"],["self"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["u32"],["self"],["ipv6addr"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["u32"],["self"],["ipv6addr"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],[["result",["option"]],["option",["error"]]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the…",6,[[["self"],["tosocketaddrs"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it…",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"recv","","Receives data on the socket from the remote address to…",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"reuse_port","","",0,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_port","","",0,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_port","","",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]]],"p":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots"]],["roots"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["u32"],["roots"]],["roots"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots"]],["roots"]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer"]]]],[5,"div_floor","","Floored integer division",null,[[["integer"]],["integer"]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer"]],["integer"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer"]],["integer"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer"]],["integer"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer"]],["integer"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer"]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["clone"],["integer"]],[["clone"],["integer"]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["clone"],["integer"]]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["numcast"],["option"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",17,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",23,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",23,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",26,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",28,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["usize"],["one"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["usize"],["one"],["clone"],["checkedmul"]],[["option"],["one"],["clone"],["checkedmul"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",29,null],[10,"pow","","Returns `self` to the power `rhs`.",29,[[["rhs"]]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",30,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",30,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",31,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["openssl_probe"] = {"doc":"","i":[[3,"ProbeResult","openssl_probe","",null,null],[12,"cert_file","","",0,null],[12,"cert_dir","","",0,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA…",null,[[],[["pathbuf"],["vec",["pathbuf"]]]]],[5,"init_ssl_cert_env_vars","","",null,[[]]],[5,"probe","","",null,[[],["proberesult"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"ProbeResult"]]};
searchIndex["opentelemetry"] = {"doc":"OpenTelemetry Overview","i":[[0,"api","opentelemetry","OpenTelemetry API: What applications use and SDKs implement.",null,null],[0,"core","opentelemetry::api","OpenTelemetry shared core date types",null,null],[3,"Key","opentelemetry::api::core","Key used for metric `LabelSet`s and trace `Span` attributes.",null,null],[3,"KeyValue","","`KeyValue` pairs are used by `LabelSet`s and `Span`…",null,null],[12,"key","","Dimension or event key",0,null],[12,"value","","Dimension or event value",0,null],[3,"Unit","","Units denote underlying data units tracked by `Meter`s.",null,null],[4,"Value","","Value types for use in `KeyValue` pairs.",null,null],[13,"Bool","","bool values",1,null],[13,"I64","","i64 values",1,null],[13,"U64","","u64 values",1,null],[13,"F64","","f64 values",1,null],[13,"String","","String values",1,null],[13,"Bytes","","Byte array values",1,null],[11,"new","","Create a new `Key`.",2,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,"bool","","Create a `KeyValue` pair for `bool` values.",2,[[["self"],["bool"]],["keyvalue"]]],[11,"i64","","Create a `KeyValue` pair for `i64` values.",2,[[["i64"],["self"]],["keyvalue"]]],[11,"u64","","Create a `KeyValue` pair for `u64` values.",2,[[["self"],["u64"]],["keyvalue"]]],[11,"f64","","Create a `KeyValue` pair for `f64` values.",2,[[["f64"],["self"]],["keyvalue"]]],[11,"string","","Create a `KeyValue` pair for `Into<String>` values.",2,[[["into",["string"]],["string"],["self"]],["keyvalue"]]],[11,"bytes","","Create a `KeyValue` pair for byte arrays.",2,[[["vec",["u8"]],["self"],["u8"]],["keyvalue"]]],[11,"inner","","Returns a reference to the key's `Cow` type for use in…",2,[[["self"]],["cow"]]],[11,"into_inner","","Returns the inner `Cow` type.",2,[[],[["str"],["cow",["str"]]]]],[11,"new","","Create a new `KeyValue` pair.",0,[[["k"],["v"]],["self"]]],[11,"new","","Create a new `Unit` from an `Into<String>`",3,[[["into",["string"]],["string"]],["self"]]],[11,"as_str","","View unit as &str",3,[[["self"]],["str"]]],[0,"metrics","opentelemetry::api","OpenTelemetry Metrics API",null,null],[3,"MetricOptions","opentelemetry::api::metrics","`MetricOptions` contains some options for metrics of any…",null,null],[12,"description","","Description is an optional field describing the metric…",4,null],[12,"unit","","Unit is an optional field describing the metric…",4,null],[12,"keys","","Keys are dimension names for the given metric.",4,null],[12,"alternate","","Alternate defines the property of metric value dependent…",4,null],[3,"Measurement","","Used to record `MeasurementValue`s for a given…",null,null],[0,"counter","","Metrics Counter Interface",null,null],[8,"Counter","opentelemetry::api::metrics::counter","An interface for recording values where the sum is of…",null,null],[16,"Handle","","The handle type for the implementing `Counter`.",5,null],[10,"measurement","","Creates a `Measurement` object to be used by a `Meter`…",5,[[["self"],["t"]],["measurement"]]],[10,"acquire_handle","","Creates a handle for this counter. The labels should…",5,[[["ls"],["self"]]]],[11,"add","","Adds the value to the `Counter`'s sum.",5,[[["ls"],["self"],["t"]]]],[8,"CounterHandle","","`CounterHandle` is a handle for `Counter` instances.",null,null],[11,"add","","Add works by calling the underlying `record_one` method…",6,[[["self"],["t"]]]],[0,"gauge","opentelemetry::api::metrics","Metrics Gauge Interface",null,null],[8,"Gauge","opentelemetry::api::metrics::gauge","An interface for recording values where the metric cannot…",null,null],[16,"Handle","","The handle type for the implementing `Gauge`.",7,null],[10,"measurement","","Creates a `Measurement` object to be used by a `Meter`…",7,[[["self"],["t"]],["measurement"]]],[10,"acquire_handle","","Creates a handle for this gauge. The labels should contain…",7,[[["ls"],["self"]]]],[11,"set","","Assigns the passed value to the value of the gauge. The…",7,[[["ls"],["self"],["t"]]]],[8,"GaugeHandle","","`GaugeHandle` is a handle for `Gauge` instances.",null,null],[11,"set","","Set works by calling the underlying `record_one` method…",8,[[["self"],["t"]]]],[0,"measure","opentelemetry::api::metrics","Metrics Measure Interface",null,null],[8,"Measure","opentelemetry::api::metrics::measure","An interface for recording values where the count or rate…",null,null],[16,"Handle","","The handle type for the implementing `Measure`.",9,null],[10,"measurement","","Creates a `Measurement` object to be used by a `Meter`…",9,[[["self"],["t"]],["measurement"]]],[10,"acquire_handle","","Creates a handle for this measure. The labels should…",9,[[["ls"],["self"]]]],[11,"record","","Records the passed value to the value of the measure. The…",9,[[["ls"],["self"],["t"]]]],[8,"MeasureHandle","","`MeasureHandle` is a handle for `Measure` instances.",null,null],[11,"record","","Record works by calling the underlying `record_one` method…",10,[[["self"],["t"]]]],[0,"noop","opentelemetry::api::metrics","No-op OpenTelemetry Metrics Implementation",null,null],[3,"NoopMeter","opentelemetry::api::metrics::noop","A no-op instance of a `Meter`.",null,null],[3,"NoopLabelSet","","A no-op instance of `LabelSet`.",null,null],[3,"NoopHandle","","A no-op instance of all metric `InstrumentHandler`",null,null],[3,"NoopCounter","","A no-op instance of a `Counter`.",null,null],[3,"NoopGauge","","A no-op instance of a `Gauge`.",null,null],[3,"NoopMeasure","","A no-op instance of a `Measure`.",null,null],[0,"value","opentelemetry::api::metrics","OpenTelemetry Metrics Measurement Values",null,null],[3,"MeasurementValue","opentelemetry::api::metrics::value","`MeasurementValue` represents either an integer or a…",null,null],[11,"into_i64","","Convert the underlying `AtomicU64` into a standard `i64`.",11,[[],["i64"]]],[11,"into_f64","","Convert the underlying `AtomicU64` into a standard `f64`.",11,[[],["f64"]]],[8,"Instrument","opentelemetry::api::metrics","The implementation-level interface to Set/Add/Record…",null,null],[10,"record_one","","Allows the SDK to observe a single metric event for a…",12,[[["measurementvalue"],["ls"],["self"]]]],[8,"InstrumentHandle","","The implementation-level interface to Set/Add/Record…",null,null],[10,"record_one","","Allows the SDK to observe a single metric event.",13,[[["measurementvalue"],["self"]]]],[8,"LabelSet","","`LabelSet` is an implementation-level interface that…",null,null],[8,"Meter","","Meter is an interface to the metrics portion of the…",null,null],[16,"LabelSet","","The `LabelSet` data type for this meter.",14,null],[16,"I64Counter","","The `I64Counter` data type for this meter.",14,null],[16,"F64Counter","","The `F64Counter` data type for this meter.",14,null],[16,"I64Gauge","","The `I64Gauge` data type for this meter.",14,null],[16,"F64Gauge","","The `F64Gauge` data type for this meter.",14,null],[16,"I64Measure","","The `I64Measure` data type for this meter.",14,null],[16,"F64Measure","","The `F64Measure` data type for this meter.",14,null],[10,"labels","","Returns a reference to a set of labels that cannot be read…",14,[[["keyvalue"],["self"],["vec",["keyvalue"]]]]],[10,"new_i64_counter","","Creates a new `i64` counter with a given name and…",14,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[10,"new_f64_counter","","Creates a new `f64` counter with a given name and…",14,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[10,"new_i64_gauge","","Creates a new `i64` gauge with a given name and customized…",14,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[10,"new_f64_gauge","","Creates a new `f64` gauge with a given name and customized…",14,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[10,"new_i64_measure","","Creates a new `i64` measure with a given name and…",14,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[10,"new_f64_measure","","Creates a new `f64` measure with a given name and…",14,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[10,"record_batch","","Atomically records a batch of measurements.",14,[[["intoiterator"],["self"]]]],[11,"with_description","","Set a description for the current set of options.",4,[[["into",["string"]],["string"]],["self"]]],[11,"with_unit","","Set a `Unit` for the current set of metric options.",4,[[["unit"]],["self"]]],[11,"with_keys","","Set a list of `Key`s for the current set metric of options.",4,[[["vec",["key"]],["key"]],["self"]]],[11,"with_monotonic","","Set monotonic for the given set of metric options.",4,[[["bool"]],["self"]]],[11,"with_absolute","","Set absolute for the given set of metric options.",4,[[["bool"]],["self"]]],[11,"new","","Create a new measurement",15,[[["measurementvalue"],["arc",["instrument"]],["instrument"]],["self"]]],[11,"instrument","","Returns an instrument that created this measurement.",15,[[["self"]],[["arc",["instrument"]],["instrument"]]]],[11,"into_value","","Returns a value recorded in this measurement.",15,[[],["measurementvalue"]]],[0,"propagation","opentelemetry::api","OpenTelemetry Propagator interface",null,null],[0,"binary_propagator","opentelemetry::api::propagation","Binary Propagator",null,null],[3,"BinaryPropagator","opentelemetry::api::propagation::binary_propagator","Extracts and injects `SpanContext`s from byte arrays.",null,null],[8,"BinaryFormat","","Used to serialize and deserialize `SpanContext`s to and…",null,null],[10,"to_bytes","","Serializes span context into a byte array and returns the…",16,[[["self"],["spancontext"]]]],[10,"from_bytes","","Deserializes a span context from a byte array.",16,[[["vec",["u8"]],["self"],["u8"]],["spancontext"]]],[11,"new","","Create a new binary propagator.",17,[[],["self"]]],[0,"noop","opentelemetry::api::propagation","No-op OpenTelemetry Propagation Implementation",null,null],[3,"NoopTextFormat","opentelemetry::api::propagation::noop","A no-op instance of a `HttpTextFormat`.",null,null],[3,"NoopBinaryFormat","","A no-op instance of `BinaryFormat`",null,null],[0,"text_propagator","opentelemetry::api::propagation","Text Propagator",null,null],[8,"HttpTextFormat","opentelemetry::api::propagation::text_propagator","is used to inject and extract a value as text into…",null,null],[10,"inject","","Properly encodes the values of the `SpanContext` and…",18,[[["spancontext"],["self"],["carrier"]]]],[10,"extract","","Retrieves encoded `SpanContext`s using the `Carrier`. It…",18,[[["self"],["carrier"]],["spancontext"]]],[8,"Carrier","opentelemetry::api::propagation","Carriers provide an interface for adding and removing…",null,null],[10,"get","","Get a value for a key from the underlying data.",19,[[["str"],["self"]],[["str"],["option",["str"]]]]],[10,"set","","Add a key and value to the underlying.",19,[[["self"],["str"],["string"]]]],[0,"trace","opentelemetry::api","OpenTelemetry Tracing API.",null,null],[0,"b3_propagator","opentelemetry::api::trace","B3 Propagator",null,null],[3,"B3Propagator","opentelemetry::api::trace::b3_propagator","Extracts and injects `SpanContext`s into `Carrier`s using…",null,null],[11,"new","","Create a new `HttpB3Propagator`.",20,[[["bool"]],["self"]]],[0,"event","opentelemetry::api::trace","OpenTelemetry Trace Event Interface",null,null],[3,"Event","opentelemetry::api::trace::event","A `Span` has the ability to add events. Events have a time…",null,null],[12,"message","","Event message",21,null],[12,"timestamp","","Event timestamp",21,null],[0,"futures","opentelemetry::api::trace","OpenTelemetry Futures Compatibility",null,null],[3,"Instrumented","opentelemetry::api::trace::futures","A future, stream, sink, or executor that has been…",null,null],[8,"Instrument","","Extension trait allowing futures, streams, sinks, and…",null,null],[11,"instrument","","Traces this type with the provided `Span`, returning a…",22,[[["span"]],[["span"],["instrumented"]]]],[11,"in_active_span","","Traces this type with the provided `Tracer`'s active span,…",22,[[["tracer"]],["instrumented"]]],[0,"link","opentelemetry::api::trace","OpenTelemetry Trace Link Interface",null,null],[3,"Link","opentelemetry::api::trace::link","During the `Span` creation user MUST have the ability to…",null,null],[0,"noop","opentelemetry::api::trace","No-op OpenTelemetry Trace Implementation",null,null],[3,"NoopProvider","opentelemetry::api::trace::noop","A no-op instance of a `Provider`.",null,null],[3,"NoopSpan","","A no-op instance of a `Span`.",null,null],[3,"NoopTracer","","A no-op instance of a `Tracer`.",null,null],[11,"new","","Creates a new `NoopSpan` instance.",23,[[],["self"]]],[0,"provider","opentelemetry::api::trace","OpenTelemetry Tracer Provider Interface",null,null],[8,"Provider","opentelemetry::api::trace::provider","An interface to create `Tracer` instances.",null,null],[16,"Tracer","","The `Tracer` type that this `Provider` will return.",24,null],[10,"get_tracer","","Creates a named tracer instance of `Self::Tracer`. If the…",24,[[["str"],["self"]]]],[0,"sampler","opentelemetry::api::trace","OpenTelemetry Sampler Interface",null,null],[3,"SamplingResult","opentelemetry::api::trace::sampler","The result of sampling logic for a given `Span`.",null,null],[12,"decision","","`SamplingDecision` reached by this result",25,null],[12,"attributes","","Extra attributes added by this result",25,null],[4,"SamplingDecision","","Decision about whether or not to sample",null,null],[13,"NotRecord","","`is_recording() == false`, span will not be recorded and…",26,null],[13,"Record","","`is_recording() == true`, but `Sampled` flag MUST NOT be…",26,null],[13,"RecordAndSampled","","`is_recording() == true` AND `Sampled` flag` MUST be set.",26,null],[8,"Sampler","","The `Sampler` interface allows implementations to provide…",null,null],[10,"should_sample","","Returns the `SamplingDecision` for a `Span` to be created.",27,[[["spankind"],["u64"],["option",["spancontext"]],["str"],["spancontext"],["u128"],["self"]],["samplingresult"]]],[0,"span","opentelemetry::api::trace","OpenTelemetry Span interface",null,null],[4,"SpanKind","opentelemetry::api::trace::span","`SpanKind` describes the relationship between the Span,…",null,null],[13,"Client","","Indicates that the span describes a synchronous request to…",28,null],[13,"Server","","Indicates that the span covers server-side handling of a…",28,null],[13,"Producer","","Indicates that the span describes the parent of an…",28,null],[13,"Consumer","","Indicates that the span describes the child of an…",28,null],[13,"Internal","","Default value. Indicates that the span represents an…",28,null],[4,"SpanStatus","","The `SpanStatus` interface represents the status of a…",null,null],[13,"OK","","OK is returned on success.",29,null],[13,"Canceled","","Canceled indicates the operation was canceled (typically…",29,null],[13,"Unknown","","Unknown error. An example of where this error may be…",29,null],[13,"InvalidArgument","","InvalidArgument indicates client specified an invalid…",29,null],[13,"DeadlineExceeded","","DeadlineExceeded means operation expired before…",29,null],[13,"NotFound","","NotFound means some requested entity (e.g., file or…",29,null],[13,"AlreadyExists","","AlreadyExists means an attempt to create an entity failed…",29,null],[13,"PermissionDenied","","PermissionDenied indicates the caller does not have…",29,null],[13,"ResourceExhausted","","ResourceExhausted indicates some resource has been…",29,null],[13,"FailedPrecondition","","FailedPrecondition indicates operation was rejected…",29,null],[13,"Aborted","","Aborted indicates the operation was aborted, typically due…",29,null],[13,"OutOfRange","","OutOfRange means operation was attempted past the valid…",29,null],[13,"Unimplemented","","Unimplemented indicates operation is not implemented or…",29,null],[13,"Internal","","Internal errors. Means some invariants expected by…",29,null],[13,"Unavailable","","Unavailable indicates the service is currently…",29,null],[13,"DataLoss","","DataLoss indicates unrecoverable data loss or corruption.",29,null],[13,"Unauthenticated","","Unauthenticated indicates the request does not have valid…",29,null],[8,"Span","","Interface for a single operation within a trace.",null,null],[11,"add_event","","An API to record events in the context of a given `Span`.",30,[[["self"],["string"]]]],[10,"add_event_with_timestamp","","An API to record events at a specific time in the context…",30,[[["self"],["string"],["systemtime"]]]],[10,"get_context","","Returns the `SpanContext` for the given `Span`. The…",30,[[["self"]],["spancontext"]]],[10,"is_recording","","Returns true if this `Span` is recording information like…",30,[[["self"]],["bool"]]],[10,"set_attribute","","An API to set a single `Attribute` where the attribute…",30,[[["self"],["keyvalue"]]]],[10,"set_status","","Sets the status of the `Span`. If used, this will override…",30,[[["spanstatus"],["self"]]]],[10,"update_name","","Updates the `Span`'s name. After this update, any sampling…",30,[[["self"],["string"]]]],[10,"end","","Finishes the `Span`.",30,[[["self"]]]],[10,"as_any","","Used by global tracer to downcast to specific span type.",30,[[["self"]],["any"]]],[10,"mark_as_active","","Mark as currently active span.",30,[[["self"]]]],[10,"mark_as_inactive","","Mark as no longer active.",30,[[["self"]]]],[0,"span_context","opentelemetry::api::trace","OpenTelemetry SpanContext interface",null,null],[3,"SpanContext","opentelemetry::api::trace::span_context","Immutable portion of a `Span` which can be serialized and…",null,null],[17,"TRACE_FLAG_SAMPLED","","TraceFlagsSampled is a byte with sampled bit set. It is a…",null,null],[17,"TRACE_FLAGS_UNUSED","","Useful for extracting trace context",null,null],[11,"empty_context","","Create an invalid empty span context",31,[[],["self"]]],[11,"new","","Construct a new `SpanContext`",31,[[["bool"],["u128"],["u64"],["u8"]],["self"]]],[11,"trace_id","","A valid trace identifier is a non-zero `u128`.",31,[[["self"]],["u128"]]],[11,"span_id","","A valid span identifier is a non-zero `u64`.",31,[[["self"]],["u64"]]],[11,"trace_flags","","Returns details about the trace. Unlike `Tracestate`…",31,[[["self"]],["u8"]]],[11,"is_valid","","Returns a bool flag which is true if the `SpanContext` has…",31,[[["self"]],["bool"]]],[11,"is_remote","","Returns true if the `SpanContext` was propagated from a…",31,[[["self"]],["bool"]]],[11,"is_sampled","","Returns true if the `SpanContext` is sampled.",31,[[["self"]],["bool"]]],[0,"span_processor","opentelemetry::api::trace","OpenTelemetry Span Processor Interface",null,null],[8,"SpanProcessor","opentelemetry::api::trace::span_processor","`SpanProcessor`s allow finished spans to be processed.",null,null],[10,"on_start","","`on_start` method is invoked when a `Span` is started.",32,[[["spandata"],["arc",["spandata"]],["self"]]]],[10,"on_end","","`on_end` method is invoked when a `Span` is ended.",32,[[["spandata"],["arc",["spandata"]],["self"]]]],[10,"shutdown","","Shutdown is invoked when SDK shuts down. Use this call to…",32,[[["self"]]]],[0,"trace_context_propagator","opentelemetry::api::trace","Trace Context Propagator",null,null],[3,"TraceContextPropagator","opentelemetry::api::trace::trace_context_propagator","Extracts and injects `SpanContext`s into `Carrier`s using…",null,null],[11,"new","","Create a new `TraceContextPropagator`.",33,[[],["self"]]],[0,"tracer","opentelemetry::api::trace","OpenTelemetry Tracer interface",null,null],[8,"Tracer","opentelemetry::api::trace::tracer","Interface for constructing `Span`s.",null,null],[16,"Span","","The `Span` type used by this `Tracer`.",34,null],[10,"invalid","","Returns a span with an invalid `SpanContext`. Used by…",34,[[["self"]]]],[10,"start","","Starts a new `Span`.",34,[[["str"],["option",["spancontext"]],["spancontext"],["self"]]]],[10,"get_active_span","","Returns the current active span.",34,[[["self"]]]],[10,"mark_span_as_active","","Mark a given `Span` as active.",34,[[["self"]]]],[10,"mark_span_as_inactive","","Remove span from active span",34,[[["self"],["u64"]]]],[10,"clone_span","","Clone a span created by this tracer.",34,[[["self"]]]],[8,"TracerGenerics","","TracerGenerics are functions that have generic type…",null,null],[10,"with_span","","Wraps the execution of the function body with a span. It…",35,[[["str"],["self"],["f"]],["t"]]],[0,"exporter","opentelemetry","OpenTelemetry data exporters",null,null],[0,"metrics","opentelemetry::exporter","Metric exporters",null,null],[0,"prometheus","opentelemetry::exporter::metrics","OpenTelemetry Prometheus Exporter",null,null],[5,"default_registry","opentelemetry::exporter::metrics::prometheus","Default registry (global static).",null,[[],["registry"]]],[5,"gather","","Return all `MetricFamily` of `DEFAULT_REGISTRY`.",null,[[],[["vec",["metricfamily"]],["metricfamily"]]]],[6,"Counter","","A `Metric` represents a single numerical value that only…",null,null],[6,"CounterVec","","A `Collector` that bundles a set of `Counter`s that all…",null,null],[8,"Encoder","","An interface for encoding metric families into an…",null,null],[10,"encode","","`encode` converts a slice of MetricFamily proto messages…",36,[[["w"],["self"]],[["result",["error"]],["error"]]]],[10,"format_type","","`format_type` returns target format.",36,[[["self"]],["str"]]],[6,"Gauge","","A `Metric` represents a single numerical value that can…",null,null],[6,"GaugeVec","","A `Collector` that bundles a set of `Gauge`s that all…",null,null],[3,"Histogram","","A `Metric` counts individual observations from an event or…",null,null],[3,"HistogramOpts","","A struct that bundles the options for creating a…",null,null],[12,"common_opts","","A container holding various options.",37,null],[12,"buckets","","Defines the buckets into which observations are counted.…",37,null],[6,"HistogramVec","","A `Collector` that bundles a set of Histograms that all…",null,null],[6,"IntCounter","","The integer version of `Counter`. Provides better…",null,null],[6,"IntCounterVec","","The integer version of `CounterVec`. Provides better…",null,null],[6,"IntGauge","","The integer version of `Gauge`. Provides better…",null,null],[6,"IntGaugeVec","","The integer version of `GaugeVec`. Provides better…",null,null],[3,"Opts","","A struct that bundles the options for creating most…",null,null],[12,"namespace","","namespace, subsystem, and name are components of the…",38,null],[12,"subsystem","","namespace, subsystem, and name are components of the…",38,null],[12,"name","","namespace, subsystem, and name are components of the…",38,null],[12,"help","","help provides information about this metric. Mandatory!",38,null],[12,"const_labels","","const_labels are used to attach fixed labels to this…",38,null],[12,"variable_labels","","variable_labels contains names of labels for which the…",38,null],[3,"Registry","","A struct for registering Prometheus collectors, collecting…",null,null],[3,"TextEncoder","","An implementation of an `Encoder` that converts a…",null,null],[3,"IntCounterHandle","","Prometheus IntCounterHandle",null,null],[3,"CounterHandle","","Prometheus CounterHandle",null,null],[3,"IntGaugeHandle","","Prometheus IntGaugeHandle",null,null],[3,"GaugeHandle","","Prometheus GaugeHandle",null,null],[3,"IntMeasureHandle","","Prometheus IntMeasureHandle",null,null],[3,"IntMeasure","","Prometheus Histograms do not have i64 variant,…",null,null],[3,"MeasureHandle","","Prometheus MeasureHandle",null,null],[0,"trace","opentelemetry::exporter","Trace exporters",null,null],[3,"SpanData","opentelemetry::exporter::trace","`SpanData` contains all the information collected by a…",null,null],[12,"context","","Exportable `SpanContext`",39,null],[12,"parent_span_id","","Span parent id",39,null],[12,"span_kind","","Span kind",39,null],[12,"name","","Span name",39,null],[12,"start_time","","Span start time",39,null],[12,"end_time","","Span end time",39,null],[12,"attributes","","Span attributes",39,null],[12,"message_events","","Span Message events",39,null],[12,"links","","Span Links",39,null],[12,"status","","Span status",39,null],[4,"ExportResult","","Describes the result of an export.",null,null],[13,"Success","","Batch is successfully exported.",40,null],[13,"FailedNotRetryable","","Batch export failed. Caller must not retry.",40,null],[13,"FailedRetryable","","Batch export failed transiently. Caller should record…",40,null],[8,"SpanExporter","","`SpanExporter` defines the interface that…",null,null],[10,"export","","Exports a batch of telemetry data. Protocol exporters that…",41,[[["arc",["spandata"]],["self"],["vec",["arc"]]],["exportresult"]]],[10,"shutdown","","Shuts down the exporter. Called when SDK is shut down.…",41,[[["self"]]]],[10,"as_any","","Allows exporter to be downcast",41,[[["self"]],["any"]]],[0,"global","opentelemetry","OpenTelemetry global `Tracer` and `Meter` singletons.",null,null],[3,"BoxedSpan","opentelemetry::global","Boxed span wraps a generic trait object so that…",null,null],[3,"BoxedTracer","","BoxedTracer is an instance of a generic tracer that can be…",null,null],[3,"GlobalProvider","","GlobalProvider maintains a global singleton that allows…",null,null],[5,"trace_provider","","Returns a reference to the global `Provider`",null,[[],[["arc",["globalprovider"]],["globalprovider"]]]],[5,"set_provider","","Assigns the global `Tracer`",null,[[["p"]]]],[5,"global_meter","","Returns `NoopMeter` for now",null,[[],["noopmeter"]]],[8,"GenericTracer","","`GenericTracer` allows `BoxedTracer`'s to contain and use…",null,null],[10,"invalid_boxed","","Create a new invalid span for use in cases where there are…",42,[[["self"]],[["span"],["box",["span"]]]]],[10,"start_boxed","","Returns a trait object so the underlying implementation…",42,[[["str"],["option",["spancontext"]],["spancontext"],["self"]],[["span"],["box",["span"]]]]],[10,"get_active_span_boxed","","Returns the currently active span as a BoxedSpan",42,[[["self"]],[["span"],["box",["span"]]]]],[10,"mark_span_as_active_boxed","","Returns the currently active span as a BoxedSpan",42,[[["self"],["span"]]]],[10,"mark_span_as_inactive_boxed","","Marks the current span as inactive",42,[[["self"],["u64"]]]],[10,"clone_span_boxed","","Clone span",42,[[["self"],["span"]],[["span"],["box",["span"]]]]],[8,"GenericProvider","","`GenericProvider` allows `GlobalProvider`'s to contain and…",null,null],[10,"get_tracer_boxed","","Creates a named tracer instance that is a trait object…",43,[[["str"],["self"]],[["box",["generictracer"]],["generictracer"]]]],[0,"sdk","opentelemetry","OpenTelemetry SDK",null,null],[0,"metrics","opentelemetry::sdk","OpenTelemetry Metrics SDK",null,null],[3,"Meter","opentelemetry::sdk::metrics","`Meter` implementation to create manage metric instruments…",null,null],[6,"LabelSet","","Collection of label key and value types.",null,null],[11,"new","","Create a new `Meter` instance with a component name and…",44,[[["str"]],["self"]]],[0,"trace","opentelemetry::sdk","OpenTelemetry Trace SDK",null,null],[0,"config","opentelemetry::sdk::trace","SDK Configuration",null,null],[3,"Config","opentelemetry::sdk::trace::config","Tracer configuration",null,null],[12,"default_sampler","","The sampler that the sdk should use",45,null],[12,"max_events_per_span","","The max events that can be added to a `Span`.",45,null],[12,"max_attributes_per_span","","The max attributes that can be added to a `Span`.",45,null],[12,"max_links_per_span","","The max links that can be added to a `Span`.",45,null],[0,"evicted_queue","opentelemetry::sdk::trace","Evicted Queue",null,null],[3,"EvictedQueue","opentelemetry::sdk::trace::evicted_queue","This queue maintains an ordered list of elements, and a…",null,null],[11,"append_vec","","Moves all the elements of other into self, leaving other…",46,[[["self"],["vec"]]]],[11,"is_empty","","Returns `true` if the `EvictedQueue` is empty.",46,[[["self"]],["bool"]]],[11,"iter","","Returns a front-to-back iterator.",46,[[["self"]],["iter"]]],[0,"provider","opentelemetry::sdk::trace","Trace Provider SDK",null,null],[3,"Provider","opentelemetry::sdk::trace::provider","Creator and registry of named `Tracer` instances.",null,null],[3,"Builder","","Builder for provider attributes.",null,null],[11,"builder","","Create a new `Provider` builder.",47,[[],["builder"]]],[11,"span_processors","","Span processors associated with this provider",47,[[["self"]],["vec"]]],[11,"config","","Config associated with this tracer",47,[[["self"]],["config"]]],[11,"with_simple_exporter","","The `SpanExporter` that this provider should use.",48,[[["spanexporter"]],["self"]]],[11,"with_config","","The sdk `Config` that this provider will use.",48,[[["config"]],["self"]]],[11,"build","","Create a new provider from this configuration.",48,[[],["provider"]]],[0,"sampler","opentelemetry::sdk::trace","Sampler",null,null],[4,"Sampler","opentelemetry::sdk::trace::sampler","Sampling options",null,null],[13,"Always","","Always sample the trace",49,null],[13,"Never","","Never sample the trace",49,null],[13,"Parent","","Sample if the parent span is sampled",49,null],[13,"Probability","","Sample a given fraction of traces. Fractions >= 1 will…",49,null],[0,"span","opentelemetry::sdk::trace","Span",null,null],[3,"Span","opentelemetry::sdk::trace::span","Single operation within a trace.",null,null],[0,"span_processor","opentelemetry::sdk::trace","Span Processor",null,null],[3,"SimpleSpanProcessor","opentelemetry::sdk::trace::span_processor","`SimpleSpanProcessor` is used by exporters to receive…",null,null],[0,"tracer","opentelemetry::sdk::trace","Tracer",null,null],[3,"Tracer","opentelemetry::sdk::trace::tracer","`Tracer` implementation to create and manage spans",null,null],[11,"provider","","Provider associated with this tracer",50,[[["self"]],["provider"]]],[11,"from","opentelemetry::api::core","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","opentelemetry::api::metrics","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","opentelemetry::api::metrics::noop","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","opentelemetry::api::metrics::value","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","opentelemetry::api::propagation::binary_propagator","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","opentelemetry::api::propagation::noop","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","opentelemetry::api::trace::b3_propagator","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","opentelemetry::api::trace::event","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","opentelemetry::api::trace::futures","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","opentelemetry::api::trace::link","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","opentelemetry::api::trace::noop","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"with_span","","Wraps the execution of the function body with a span. It…",62,[[["str"],["self"],["f"]],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","opentelemetry::api::trace::sampler","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","opentelemetry::api::trace::span","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","opentelemetry::api::trace::span_context","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","opentelemetry::api::trace::trace_context_propagator","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","opentelemetry::exporter::metrics::prometheus","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","opentelemetry::exporter::trace","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","opentelemetry::global","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"with_span","","Wraps the execution of the function body with a span. It…",74,[[["str"],["self"],["f"]],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","opentelemetry::sdk::metrics","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","opentelemetry::sdk::trace::config","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","opentelemetry::sdk::trace::evicted_queue","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","opentelemetry::sdk::trace::provider","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","opentelemetry::sdk::trace::sampler","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","opentelemetry::sdk::trace::span","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","opentelemetry::sdk::trace::span_processor","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"with_span","opentelemetry::sdk::trace::tracer","Wraps the execution of the function body with a span. It…",50,[[["str"],["self"],["f"]],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"describe","opentelemetry::exporter::metrics::prometheus","",38,[[["self"]],[["result",["desc","error"]],["error"],["desc"]]]],[11,"describe","","",37,[[["self"]],[["result",["desc","error"]],["error"],["desc"]]]],[11,"clone","","",37,[[["self"]],["histogramopts"]]],[11,"clone","","",63,[[["self"]],["histogram"]]],[11,"clone","","",64,[[["self"]],["registry"]]],[11,"clone","","",38,[[["self"]],["opts"]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",64,[[],["registry"]]],[11,"default","","",65,[[],["textencoder"]]],[11,"from","","",37,[[["opts"]],["histogramopts"]]],[11,"desc","","",63,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect","","",63,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"encode","","",65,[[["w"],["self"]],[["result",["error"]],["error"]]]],[11,"format_type","","",65,[[["self"]],["str"]]],[11,"metric","","",63,[[["self"]],["metric"]]],[11,"measurement","opentelemetry::api::metrics::noop","Returns a no-op `Measurement`.",54,[[["self"],["t"]],[["nooplabelset"],["measurement",["nooplabelset"]]]]],[11,"acquire_handle","","Returns a `NoopHandle`",54,[[["nooplabelset"],["self"]]]],[11,"measurement","opentelemetry","Creates a `Measurement` object to be used by a `Meter`…",78,[[["i64"],["self"]],[["measurement",["labelset"]],["labelset"]]]],[11,"acquire_handle","","Creates a handle for this instrument.",78,[[["self"],["labelset"]]]],[11,"measurement","","Creates a `Measurement` object to be used by a `Meter`…",79,[[["f64"],["self"]],[["measurement",["labelset"]],["labelset"]]]],[11,"acquire_handle","","Creates a handle for this instrument.",79,[[["self"],["labelset"]]]],[11,"measurement","opentelemetry::api::metrics::noop","Returns a no-op `Measurement`.",55,[[["i64"],["self"]],[["nooplabelset"],["measurement",["nooplabelset"]]]]],[11,"acquire_handle","","Returns a `NoopHandle`",55,[[["nooplabelset"],["self"]]]],[11,"measurement","","Returns a no-op `Measurement`.",55,[[["f64"],["self"]],[["nooplabelset"],["measurement",["nooplabelset"]]]]],[11,"acquire_handle","","Returns a `NoopHandle`",55,[[["nooplabelset"],["self"]]]],[11,"measurement","opentelemetry","Creates a `Measurement` object to be used by a `Meter`…",80,[[["i64"],["self"]],[["measurement",["labelset"]],["labelset"]]]],[11,"acquire_handle","","Creates a handle for this instrument.",80,[[["self"],["labelset"]]]],[11,"measurement","","Creates a `Measurement` object to be used by a `Meter`…",81,[[["f64"],["self"]],[["measurement",["labelset"]],["labelset"]]]],[11,"acquire_handle","","Creates a handle for this instrument.",81,[[["self"],["labelset"]]]],[11,"measurement","opentelemetry::api::metrics::noop","Returns a no-op `Measurement`.",56,[[["i64"],["self"]],[["nooplabelset"],["measurement",["nooplabelset"]]]]],[11,"acquire_handle","","Returns a `NoopHandle`",56,[[["nooplabelset"],["self"]]]],[11,"measurement","","Returns a no-op `Measurement`.",56,[[["f64"],["self"]],[["nooplabelset"],["measurement",["nooplabelset"]]]]],[11,"acquire_handle","","Returns a `NoopHandle`",56,[[["nooplabelset"],["self"]]]],[11,"measurement","opentelemetry::exporter::metrics::prometheus","Creates a `Measurement` object to be used by a `Meter`…",71,[[["i64"],["self"]],[["measurement",["labelset"]],["labelset"]]]],[11,"acquire_handle","","Creates a handle for this instrument.",71,[[["self"],["labelset"]]]],[11,"measurement","opentelemetry","Creates a `Measurement` object to be used by a `Meter`…",82,[[["f64"],["self"]],[["measurement",["labelset"]],["labelset"]]]],[11,"acquire_handle","","Creates a handle for this instrument.",82,[[["self"],["labelset"]]]],[11,"record_one","opentelemetry::api::metrics::noop","",53,[[["measurementvalue"],["nooplabelset"],["self"]]]],[11,"record_one","","Ignores all recorded measurement values.",54,[[["measurementvalue"],["nooplabelset"],["self"]]]],[11,"record_one","","Ignores all measurement values and labels.",55,[[["measurementvalue"],["nooplabelset"],["self"]]]],[11,"record_one","","Ignores all measurement values and labels.",56,[[["measurementvalue"],["nooplabelset"],["self"]]]],[11,"record_one","opentelemetry","Record a single counter measurement value",78,[[["measurementvalue"],["self"],["labelset"]]]],[11,"record_one","","record a single counter measurement value",79,[[["measurementvalue"],["self"],["labelset"]]]],[11,"record_one","","record a single gauge measurement value",80,[[["measurementvalue"],["self"],["labelset"]]]],[11,"record_one","","record a single gauge measurement value",81,[[["measurementvalue"],["self"],["labelset"]]]],[11,"record_one","opentelemetry::exporter::metrics::prometheus","record a single measure measurement value",71,[[["measurementvalue"],["self"],["labelset"]]]],[11,"record_one","opentelemetry","record a single measure measurement value",82,[[["measurementvalue"],["self"],["labelset"]]]],[11,"record_one","opentelemetry::api::metrics::noop","Ignores all measurement values.",53,[[["measurementvalue"],["self"]]]],[11,"record_one","opentelemetry::exporter::metrics::prometheus","Record a single counter measurement value for preset values",66,[[["measurementvalue"],["self"]]]],[11,"record_one","","record a single counter measurement value for precomputed…",67,[[["measurementvalue"],["self"]]]],[11,"record_one","","record a single gauge measurement value for precomputed…",68,[[["measurementvalue"],["self"]]]],[11,"record_one","","record a single gauge measurement value for precomputed…",69,[[["measurementvalue"],["self"]]]],[11,"record_one","","record a single measure measurement value for precomputed…",70,[[["measurementvalue"],["self"]]]],[11,"record_one","","record a single measure measurement value for precomputed…",72,[[["measurementvalue"],["self"]]]],[11,"labels","opentelemetry::api::metrics::noop","Returns a no-op `NoopLabelSet`.",51,[[["keyvalue"],["self"],["vec",["keyvalue"]]]]],[11,"new_i64_counter","","Returns a no-op `I64Counter` instance.",51,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_f64_counter","","Returns a no-op `F64Counter` instance.",51,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_i64_gauge","","Returns a no-op `I64Gauge` instance.",51,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_f64_gauge","","Returns a no-op `F64Gauge` instance.",51,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_i64_measure","","Returns a no-op `I64Measure` instance.",51,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_f64_measure","","Returns a no-op `F64Measure` instance.",51,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"record_batch","","Ignores batch recordings",51,[[["nooplabelset"],["intoiterator"],["self"]]]],[11,"labels","opentelemetry::sdk::metrics","Builds a `LabelSet` from `KeyValue`s.",44,[[["keyvalue"],["self"],["vec",["keyvalue"]]]]],[11,"new_i64_counter","","Creates a new `i64` counter with a given name and…",44,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_f64_counter","","Creates a new `f64` counter with a given name and…",44,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_i64_gauge","","Creates a new `i64` gauge with a given name and customized…",44,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_f64_gauge","","Creates a new `f64` gauge with a given name and customized…",44,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_i64_measure","","Creates a new `i64` measure with a given name and…",44,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"new_f64_measure","","Creates a new `f64` measure with a given name and…",44,[[["into",["string"]],["string"],["metricoptions"],["self"]]]],[11,"record_batch","","Records a batch of measurements.",44,[[["intoiterator"],["self"]]]],[11,"to_bytes","opentelemetry::api::propagation::binary_propagator","Serializes span context into a byte array and returns the…",17,[[["self"],["spancontext"]]]],[11,"from_bytes","","Deserializes a span context from a byte array.",17,[[["vec",["u8"]],["self"],["u8"]],["spancontext"]]],[11,"to_bytes","opentelemetry::api::propagation::noop","",58,[[["self"],["spancontext"]]]],[11,"from_bytes","","Always returns invalid span contexts",58,[[["vec",["u8"]],["self"],["u8"]],["spancontext"]]],[11,"inject","","Ignores calls to `inject`",57,[[["spancontext"],["self"],["carrier"]]]],[11,"extract","","Always returns invalid span contexts",57,[[["self"],["carrier"]],["spancontext"]]],[11,"inject","opentelemetry::api::trace::b3_propagator","Properly encodes the values of the `SpanContext` and…",20,[[["spancontext"],["self"],["carrier"]]]],[11,"extract","","Retrieves encoded `SpanContext`s using the `Carrier`. It…",20,[[["self"],["carrier"]],["spancontext"]]],[11,"inject","opentelemetry::api::trace::trace_context_propagator","Properly encodes the values of the `SpanContext` and…",33,[[["spancontext"],["self"],["carrier"]]]],[11,"extract","","Retrieves encoded `SpanContext`s using the `Carrier`. It…",33,[[["self"],["carrier"]],["spancontext"]]],[11,"get_tracer","opentelemetry::api::trace::noop","Returns a new `NoopTracer` instance.",61,[[["str"],["self"]]]],[11,"get_tracer","opentelemetry::global","Find or create a named instance of `BoxedTracer`.",43,[[["str"],["self"]]]],[11,"get_tracer","","Find or create a named tracer using the global provider.",75,[[["str"],["self"]]]],[11,"get_tracer","opentelemetry::sdk::trace::provider","Find or create `Tracer` instance by name.",47,[[["str"],["self"]]]],[11,"should_sample","opentelemetry::sdk::trace::sampler","",49,[[["spankind"],["u64"],["option",["spancontext"]],["str"],["spancontext"],["u128"],["self"]],["samplingresult"]]],[11,"add_event","opentelemetry::api::trace::noop","Ignores all events",23,[[["self"],["string"]]]],[11,"add_event_with_timestamp","","Ignores all events with timestamps",23,[[["self"],["string"],["systemtime"]]]],[11,"get_context","","Returns an invalid `SpanContext`.",23,[[["self"]],["spancontext"]]],[11,"is_recording","","Returns false, signifying that this span is never recording.",23,[[["self"]],["bool"]]],[11,"set_attribute","","Ignores all attributes",23,[[["self"],["keyvalue"]]]],[11,"set_status","","Ignores status",23,[[["spanstatus"],["self"]]]],[11,"update_name","","Ignors name updates",23,[[["self"],["string"]]]],[11,"end","","Ignores `Span` endings.",23,[[["self"]]]],[11,"as_any","","Returns self as dyn Any",23,[[["self"]],["any"]]],[11,"mark_as_active","","Ignores being marked as active",23,[[["self"]]]],[11,"mark_as_inactive","","Ignores being marked as inactive",23,[[["self"]]]],[11,"add_event_with_timestamp","opentelemetry::global","Delegates to inner span.0",73,[[["self"],["string"],["systemtime"]]]],[11,"get_context","","Delegates to inner span.",73,[[["self"]],["spancontext"]]],[11,"is_recording","","Delegates to inner span.",73,[[["self"]],["bool"]]],[11,"set_attribute","","Delegates to inner span.",73,[[["self"],["keyvalue"]]]],[11,"set_status","","Delegates to inner span.",73,[[["spanstatus"],["self"]]]],[11,"update_name","","Delegates to inner span.",73,[[["self"],["string"]]]],[11,"end","","Delegates to inner span.",73,[[["self"]]]],[11,"as_any","","Returns self as any",73,[[["self"]],["any"]]],[11,"mark_as_active","","Mark span as currently active",73,[[["self"]]]],[11,"mark_as_inactive","","Mark span as no longer active",73,[[["self"]]]],[11,"add_event_with_timestamp","opentelemetry::sdk::trace::span","Records events at a specific time in the context of a…",76,[[["self"],["string"],["systemtime"]]]],[11,"get_context","","Returns the `SpanContext` for the given `Span`.",76,[[["self"]],["spancontext"]]],[11,"is_recording","","Returns true if this `Span` is recording information like…",76,[[["self"]],["bool"]]],[11,"set_attribute","","Sets a single `Attribute` where the attribute properties…",76,[[["self"],["keyvalue"]]]],[11,"set_status","","Sets the status of the `Span`. If used, this will override…",76,[[["spanstatus"],["self"]]]],[11,"update_name","","Updates the `Span`'s name.",76,[[["self"],["string"]]]],[11,"end","","Finishes the span.",76,[[["self"]]]],[11,"as_any","","Returns self as any",76,[[["self"]],["any"]]],[11,"mark_as_active","","Mark span as active",76,[[["self"]]]],[11,"mark_as_inactive","","Mark span as inactive",76,[[["self"]]]],[11,"on_start","opentelemetry::sdk::trace::span_processor","",77,[[["spandata"],["arc",["spandata"]],["self"]]]],[11,"on_end","","",77,[[["spandata"],["arc",["spandata"]],["self"]]]],[11,"shutdown","","",77,[[["self"]]]],[11,"invalid","opentelemetry::api::trace::noop","Returns a `NoopSpan` as they are always invalid.",62,[[["self"]]]],[11,"start","","Starts a new `NoopSpan`.",62,[[["str"],["option",["spancontext"]],["spancontext"],["self"]]]],[11,"get_active_span","","Returns a new `NoopSpan` as this tracer does not maintain…",62,[[["self"]]]],[11,"mark_span_as_active","","Ignores active span state.",62,[[["self"]]]],[11,"mark_span_as_inactive","","Ignores active span state.",62,[[["self"],["u64"]]]],[11,"clone_span","","",62,[[["self"]]]],[11,"invalid","opentelemetry::global","Returns an invalid boxed span",42,[[["self"]]]],[11,"start","","Starts a new boxed span.",42,[[["str"],["option",["spancontext"]],["spancontext"],["self"]]]],[11,"get_active_span","","Returns the current active span.",42,[[["self"]]]],[11,"mark_span_as_active","","Marks a given `Span` as active.",42,[[["self"]]]],[11,"mark_span_as_inactive","","Marks a given `Span` as inactive.",42,[[["self"],["u64"]]]],[11,"clone_span","","Clone span",42,[[["self"]]]],[11,"invalid","","Returns a span with an invalid `SpanContext`.",74,[[["self"]]]],[11,"start","","Starts a new `Span`.",74,[[["str"],["option",["spancontext"]],["spancontext"],["self"]]]],[11,"get_active_span","","Returns the current active span.",74,[[["self"]]]],[11,"mark_span_as_active","","Mark a given `Span` as active.",74,[[["self"]]]],[11,"mark_span_as_inactive","","Mark a given `Span` as inactive.",74,[[["self"],["u64"]]]],[11,"clone_span","","Clone span",74,[[["self"]]]],[11,"invalid","opentelemetry::sdk::trace::tracer","Returns a span with an inactive `SpanContext`. Used by…",50,[[["self"]]]],[11,"start","","Starts a new `Span`.",50,[[["str"],["option",["spancontext"]],["spancontext"],["self"]]]],[11,"get_active_span","","Returns the current active span.",50,[[["self"]]]],[11,"mark_span_as_active","","Mark a given `Span` as active.",50,[[["self"]]]],[11,"mark_span_as_inactive","","Mark a given `Span` as inactive.",50,[[["self"],["u64"]]]],[11,"clone_span","","Clone span",50,[[["self"]]]],[11,"from","opentelemetry::api::core","Convert a `&str` to a `Key`.",2,[[["str"]],["self"]]],[11,"from","","Convenience method for creating a `Value` form a `&str`.",1,[[["str"]],["self"]]],[11,"from","opentelemetry::api::metrics::value","Convert `i64` instances to `MeasurementValue` instances…",11,[[["i64"]],["self"]]],[11,"from","","Convert `f64` instances to `MeasurementValue` instances…",11,[[["f64"]],["self"]]],[11,"into","opentelemetry::api::core","Converts `Key` instances into `Cow`",2,[[],[["str"],["cow",["str"]]]]],[11,"into","","Converts `Key` instances into `String`.",2,[[],["string"]]],[11,"into","","Convert `Value` types into `Cow` for use in `LabelSet`s.",1,[[],[["str"],["cow",["str"]]]]],[11,"extend","opentelemetry::sdk::trace::evicted_queue","",46,[[["self"],["intoiterator"]]]],[11,"into_iter","","Consumes the `EvictedQueue` into a front-to-back iterator…",46,[[]]],[11,"clone","opentelemetry::api::core","",2,[[["self"]],["key"]]],[11,"clone","","",1,[[["self"]],["value"]]],[11,"clone","","",0,[[["self"]],["keyvalue"]]],[11,"clone","opentelemetry::api::metrics::noop","",51,[[["self"]],["noopmeter"]]],[11,"clone","","",52,[[["self"]],["nooplabelset"]]],[11,"clone","","",53,[[["self"]],["noophandle"]]],[11,"clone","","",54,[[["self"]],["noopcounter"]]],[11,"clone","","",55,[[["self"]],["noopgauge"]]],[11,"clone","","",56,[[["self"]],["noopmeasure"]]],[11,"clone","opentelemetry::api::trace::event","",21,[[["self"]],["event"]]],[11,"clone","opentelemetry::api::trace::futures","",59,[[["self"]],["instrumented"]]],[11,"clone","opentelemetry::api::trace::link","",60,[[["self"]],["link"]]],[11,"clone","opentelemetry::api::trace::sampler","",25,[[["self"]],["samplingresult"]]],[11,"clone","","",26,[[["self"]],["samplingdecision"]]],[11,"clone","opentelemetry::api::trace::span","",28,[[["self"]],["spankind"]]],[11,"clone","","",29,[[["self"]],["spanstatus"]]],[11,"clone","opentelemetry::api::trace::span_context","",31,[[["self"]],["spancontext"]]],[11,"clone","opentelemetry::exporter::metrics::prometheus","",66,[[["self"]],["intcounterhandle"]]],[11,"clone","","",67,[[["self"]],["counterhandle"]]],[11,"clone","","",68,[[["self"]],["intgaugehandle"]]],[11,"clone","","",69,[[["self"]],["gaugehandle"]]],[11,"clone","","",70,[[["self"]],["intmeasurehandle"]]],[11,"clone","","",71,[[["self"]],["intmeasure"]]],[11,"clone","","",72,[[["self"]],["measurehandle"]]],[11,"clone","opentelemetry::exporter::trace","",39,[[["self"]],["spandata"]]],[11,"clone","opentelemetry::sdk::trace::evicted_queue","",46,[[["self"]],["evictedqueue"]]],[11,"clone","opentelemetry::sdk::trace::provider","",47,[[["self"]],["provider"]]],[11,"clone","opentelemetry::sdk::trace::sampler","",49,[[["self"]],["sampler"]]],[11,"clone","opentelemetry::sdk::trace::span","",76,[[["self"]],["span"]]],[11,"clone","opentelemetry::sdk::trace::tracer","",50,[[["self"]],["tracer"]]],[11,"default","opentelemetry::api::core","",3,[[],["unit"]]],[11,"default","opentelemetry::api::metrics","",4,[[],["metricoptions"]]],[11,"default","opentelemetry::api::propagation::binary_propagator","",17,[[],["binarypropagator"]]],[11,"default","opentelemetry::api::trace::noop","",23,[[],["self"]]],[11,"default","opentelemetry::api::trace::trace_context_propagator","",33,[[],["tracecontextpropagator"]]],[11,"default","opentelemetry::sdk::trace::config","Create default global sdk configuration.",45,[[],["self"]]],[11,"default","opentelemetry::sdk::trace::provider","",47,[[],["self"]]],[11,"default","","",48,[[],["builder"]]],[11,"eq","opentelemetry::api::trace::span_context","",31,[[["self"],["spancontext"]],["bool"]]],[11,"ne","","",31,[[["self"],["spancontext"]],["bool"]]],[11,"to_string","opentelemetry::api::core","Convert `Value` types to `String` for use by exporters…",1,[[["self"]],["string"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::metrics::noop","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::metrics::value","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::metrics","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::propagation::binary_propagator","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::propagation::noop","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::b3_propagator","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::event","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::futures","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::link","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::noop","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::sampler","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::span","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::span_context","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::api::trace::trace_context_propagator","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::exporter::trace","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::global","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::config","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::evicted_queue","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::provider","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::sampler","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::span","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::span_processor","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry::sdk::trace::tracer","",50,[[["formatter"],["self"]],["result"]]],[11,"poll","opentelemetry::api::trace::futures","",59,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",59,[[["self"],["pin"]]]],[11,"with_opts","opentelemetry::exporter::metrics::prometheus","`with_opts` creates a `Histogram` with the `opts` options.",63,[[["histogramopts"]],[["result",["histogram","error"]],["histogram"],["error"]]]],[11,"observe","","Add a single observation to the `Histogram`.",63,[[["f64"],["self"]]]],[11,"start_timer","","Return a `HistogramTimer` to track a duration.",63,[[["self"]],["histogramtimer"]]],[11,"local","","Return a `LocalHistogram` for single thread usage.",63,[[["self"]],["localhistogram"]]],[11,"new","","Create a `HistogramOpts` with the `name` and `help`…",37,[[["s"]],["histogramopts"]]],[11,"namespace","","`namespace` sets the namespace.",37,[[["s"]],["histogramopts"]]],[11,"subsystem","","`subsystem` sets the sub system.",37,[[["s"]],["histogramopts"]]],[11,"const_labels","","`const_labels` sets the const labels.",37,[[["hashmap",["string","string","randomstate"]],["randomstate"],["string"]],["histogramopts"]]],[11,"const_label","","`const_label` adds a const label.",37,[[["s"]],["histogramopts"]]],[11,"variable_labels","","`variable_labels` sets the variable labels.",37,[[["vec",["string"]],["string"]],["histogramopts"]]],[11,"variable_label","","`variable_label` adds a variable label.",37,[[["s"]],["histogramopts"]]],[11,"fq_name","","`fq_name` returns the fq_name.",37,[[["self"]],["string"]]],[11,"buckets","","`buckets` set the buckets.",37,[[["vec",["f64"]],["f64"]],["histogramopts"]]],[11,"new","","`new` creates the Opts with the `name` and `help` arguments.",38,[[["s"]],["opts"]]],[11,"namespace","","`namespace` sets the namespace.",38,[[["s"]],["opts"]]],[11,"subsystem","","`subsystem` sets the sub system.",38,[[["s"]],["opts"]]],[11,"const_labels","","`const_labels` sets the const labels.",38,[[["hashmap",["string","string","randomstate"]],["randomstate"],["string"]],["opts"]]],[11,"const_label","","`const_label` adds a const label.",38,[[["s"]],["opts"]]],[11,"variable_labels","","`variable_labels` sets the variable labels.",38,[[["vec",["string"]],["string"]],["opts"]]],[11,"variable_label","","`variable_label` adds a variable label.",38,[[["s"]],["opts"]]],[11,"fq_name","","`fq_name` returns the fq_name.",38,[[["self"]],["string"]]],[11,"new","","`new` creates a Registry.",64,[[],["registry"]]],[11,"new_custom","","Create a new registry, with optional custom prefix and…",64,[[["option",["hashmap"]],["hashmap",["string","string","randomstate"]],["option",["string"]],["string"]],[["registry"],["result",["registry","error"]],["error"]]]],[11,"register","","`register` registers a new `Collector` to be included in…",64,[[["collector"],["self"],["box",["collector"]]],[["result",["error"]],["error"]]]],[11,"unregister","","`unregister` unregisters the `Collector` that equals the…",64,[[["collector"],["self"],["box",["collector"]]],[["result",["error"]],["error"]]]],[11,"gather","","`gather` calls the Collect method of the registered…",64,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"new","","Create a new text encoder.",65,[[],["textencoder"]]]],"p":[[3,"KeyValue"],[4,"Value"],[3,"Key"],[3,"Unit"],[3,"MetricOptions"],[8,"Counter"],[8,"CounterHandle"],[8,"Gauge"],[8,"GaugeHandle"],[8,"Measure"],[8,"MeasureHandle"],[3,"MeasurementValue"],[8,"Instrument"],[8,"InstrumentHandle"],[8,"Meter"],[3,"Measurement"],[8,"BinaryFormat"],[3,"BinaryPropagator"],[8,"HttpTextFormat"],[8,"Carrier"],[3,"B3Propagator"],[3,"Event"],[8,"Instrument"],[3,"NoopSpan"],[8,"Provider"],[3,"SamplingResult"],[4,"SamplingDecision"],[8,"Sampler"],[4,"SpanKind"],[4,"SpanStatus"],[8,"Span"],[3,"SpanContext"],[8,"SpanProcessor"],[3,"TraceContextPropagator"],[8,"Tracer"],[8,"TracerGenerics"],[8,"Encoder"],[3,"HistogramOpts"],[3,"Opts"],[3,"SpanData"],[4,"ExportResult"],[8,"SpanExporter"],[8,"GenericTracer"],[8,"GenericProvider"],[3,"Meter"],[3,"Config"],[3,"EvictedQueue"],[3,"Provider"],[3,"Builder"],[4,"Sampler"],[3,"Tracer"],[3,"NoopMeter"],[3,"NoopLabelSet"],[3,"NoopHandle"],[3,"NoopCounter"],[3,"NoopGauge"],[3,"NoopMeasure"],[3,"NoopTextFormat"],[3,"NoopBinaryFormat"],[3,"Instrumented"],[3,"Link"],[3,"NoopProvider"],[3,"NoopTracer"],[3,"Histogram"],[3,"Registry"],[3,"TextEncoder"],[3,"IntCounterHandle"],[3,"CounterHandle"],[3,"IntGaugeHandle"],[3,"GaugeHandle"],[3,"IntMeasureHandle"],[3,"IntMeasure"],[3,"MeasureHandle"],[3,"BoxedSpan"],[3,"BoxedTracer"],[3,"GlobalProvider"],[3,"Span"],[3,"SimpleSpanProcessor"],[6,"IntCounterVec"],[6,"CounterVec"],[6,"IntGaugeVec"],[6,"GaugeVec"],[6,"HistogramVec"]]};
searchIndex["opentelemetry_stackdriver"] = {"doc":"","i":[[3,"StackDriverExporter","opentelemetry_stackdriver","Exports opentelemetry tracing spans to Google StackDriver.",null,null],[0,"proto","","",null,null],[0,"google","opentelemetry_stackdriver::proto","",null,null],[0,"api","opentelemetry_stackdriver::proto::google","",null,null],[3,"Http","opentelemetry_stackdriver::proto::google::api","Defines the HTTP configuration for an API service. It…",null,null],[12,"rules","","A list of HTTP configuration rules that apply to…",0,null],[12,"fully_decode_reserved_expansion","","When set to true, URL path parameters will be fully…",0,null],[3,"HttpRule","","gRPC Transcoding",null,null],[12,"selector","","Selects a method to which this rule applies.",1,null],[12,"body","","The name of the request field whose value is mapped to the…",1,null],[12,"response_body","","Optional. The name of the response field whose value is…",1,null],[12,"additional_bindings","","Additional HTTP bindings for the selector. Nested bindings…",1,null],[12,"pattern","","Determines the URL pattern is matched by this rules. This…",1,null],[3,"CustomHttpPattern","","A custom pattern is used for defining custom HTTP verb.",null,null],[12,"kind","","The name of this custom HTTP verb.",2,null],[12,"path","","The path matched by this custom verb.",2,null],[3,"ResourceDescriptor","","A simple descriptor of a resource type.",null,null],[12,"type","","The resource type. It must be in the format of…",3,null],[12,"pattern","","Optional. The relative resource name pattern associated…",3,null],[12,"name_field","","Optional. The field on the resource that designates the…",3,null],[12,"history","","Optional. The historical or future-looking state of the…",3,null],[12,"plural","","The plural name used in the resource name, such as…",3,null],[12,"singular","","The same concept of the `singular` field in k8s CRD spec…",3,null],[3,"ResourceReference","","Defines a proto annotation that describes a string field…",null,null],[12,"type","","The resource type that the annotated field references.",4,null],[12,"child_type","","The resource type of a child collection that the annotated…",4,null],[4,"FieldBehavior","","An indicator of the behavior of a given field (for…",null,null],[13,"Unspecified","","Conventional default for enums. Do not use this.",5,null],[13,"Optional","","Specifically denotes a field as optional. While all fields…",5,null],[13,"Required","","Denotes a field as required. This indicates that the field…",5,null],[13,"OutputOnly","","Denotes a field as output only. This indicates that the…",5,null],[13,"InputOnly","","Denotes a field as input only. This indicates that the…",5,null],[13,"Immutable","","Denotes a field as immutable. This indicates that the…",5,null],[0,"http_rule","","",null,null],[4,"Pattern","opentelemetry_stackdriver::proto::google::api::http_rule","Determines the URL pattern is matched by this rules. This…",null,null],[13,"Get","","Maps to HTTP GET. Used for listing and getting information…",6,null],[13,"Put","","Maps to HTTP PUT. Used for replacing a resource.",6,null],[13,"Post","","Maps to HTTP POST. Used for creating a resource or…",6,null],[13,"Delete","","Maps to HTTP DELETE. Used for deleting a resource.",6,null],[13,"Patch","","Maps to HTTP PATCH. Used for updating a resource.",6,null],[13,"Custom","","The custom pattern is used for specifying an HTTP method…",6,null],[11,"encode","","",6,[[["self"],["b"]]]],[11,"merge","","",6,[[["decodecontext"],["u32"],["b"],["wiretype"],["option"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",6,[[["self"]],["usize"]]],[0,"resource_descriptor","opentelemetry_stackdriver::proto::google::api","",null,null],[4,"History","opentelemetry_stackdriver::proto::google::api::resource_descriptor","A description of the historical or future-looking state of…",null,null],[13,"Unspecified","","The \"unset\" value.",7,null],[13,"OriginallySinglePattern","","The resource originally had one pattern and launched as…",7,null],[13,"FutureMultiPattern","","The resource has one pattern, but the API owner expects to…",7,null],[11,"is_valid","","Returns `true` if `value` is a variant of `History`.",7,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `History`, or `None` if `value` is…",7,[[["i32"]],[["option",["history"]],["history"]]]],[11,"is_valid","opentelemetry_stackdriver::proto::google::api","Returns `true` if `value` is a variant of `FieldBehavior`.",5,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `FieldBehavior`, or `None` if…",5,[[["i32"]],[["option",["fieldbehavior"]],["fieldbehavior"]]]],[11,"history","","Returns the enum value of `history`, or the default if the…",3,[[["self"]],["history"]]],[11,"set_history","","Sets `history` to the provided enum value.",3,[[["self"],["history"]]]],[0,"devtools","opentelemetry_stackdriver::proto::google","",null,null],[0,"cloudtrace","opentelemetry_stackdriver::proto::google::devtools","",null,null],[0,"v2","opentelemetry_stackdriver::proto::google::devtools::cloudtrace","",null,null],[3,"Span","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","A span represents a single operation within a trace. Spans…",null,null],[12,"name","","The resource name of the span in the following format:",8,null],[12,"span_id","","The [SPAN_ID] portion of the span's resource name.",8,null],[12,"parent_span_id","","The [SPAN_ID] of this span's parent span. If this is a…",8,null],[12,"display_name","","A description of the span's operation (up to 128 bytes).…",8,null],[12,"start_time","","The start time of the span. On the client side, this is…",8,null],[12,"end_time","","The end time of the span. On the client side, this is the…",8,null],[12,"attributes","","A set of attributes on the span. You can have up to 32…",8,null],[12,"stack_trace","","Stack trace captured at the start of the span.",8,null],[12,"time_events","","A set of time events. You can have up to 32 annotations…",8,null],[12,"links","","Links associated with the span. You can have up to 128…",8,null],[12,"status","","Optional. The final status for this span.",8,null],[12,"same_process_as_parent_span","","Optional. Set this parameter to indicate whether this span…",8,null],[12,"child_span_count","","Optional. The number of child spans that were generated…",8,null],[3,"AttributeValue","","The allowed types for [VALUE] in a `[KEY]:[VALUE]`…",null,null],[12,"value","","The type of the value.",9,null],[3,"StackTrace","","A call stack appearing in a trace.",null,null],[12,"stack_frames","","Stack frames in this stack trace. A maximum of 128 frames…",10,null],[12,"stack_trace_hash_id","","The hash ID is used to conserve network bandwidth for…",10,null],[3,"Module","","Binary module.",null,null],[12,"module","","For example: main binary, kernel modules, and dynamic…",11,null],[12,"build_id","","A unique identifier for the module, usually a hash of its…",11,null],[3,"TruncatableString","","Represents a string that might be shortened to a specified…",null,null],[12,"value","","The shortened string. For example, if the original string…",12,null],[12,"truncated_byte_count","","The number of bytes removed from the original string. If…",12,null],[3,"BatchWriteSpansRequest","","The request message for the `BatchWriteSpans` method.",null,null],[12,"name","","Required. The name of the project where the spans belong.…",13,null],[12,"spans","","Required. A list of new spans. The span names must not…",13,null],[0,"span","","",null,null],[3,"Attributes","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","A set of attributes, each in the format `[KEY]:[VALUE]`.",null,null],[12,"attribute_map","","The set of attributes. Each attribute's key can be up to…",14,null],[12,"dropped_attributes_count","","The number of attributes that were discarded. Attributes…",14,null],[3,"TimeEvent","","A time-stamped annotation or message event in the Span.",null,null],[12,"time","","The timestamp indicating the time the event occurred.",15,null],[12,"value","","A `TimeEvent` can contain either an `Annotation` object or…",15,null],[3,"TimeEvents","","A collection of `TimeEvent`s. A `TimeEvent` is a…",null,null],[12,"time_event","","A collection of `TimeEvent`s.",16,null],[12,"dropped_annotations_count","","The number of dropped annotations in all the included time…",16,null],[12,"dropped_message_events_count","","The number of dropped message events in all the included…",16,null],[3,"Link","","A pointer from the current span to another span in the…",null,null],[12,"trace_id","","The [TRACE_ID] for a trace within a project.",17,null],[12,"span_id","","The [SPAN_ID] for a span within a trace.",17,null],[12,"type","","The relationship of the current span relative to the…",17,null],[12,"attributes","","A set of attributes on the link. You have have up to 32…",17,null],[3,"Links","","A collection of links, which are references from this span…",null,null],[12,"link","","A collection of links.",18,null],[12,"dropped_links_count","","The number of dropped links after the maximum size was…",18,null],[0,"time_event","","",null,null],[3,"Annotation","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","Text annotation with a set of attributes.",null,null],[12,"description","","A user-supplied message describing the event. The maximum…",19,null],[12,"attributes","","A set of attributes on the annotation. You can have up to…",19,null],[3,"MessageEvent","","An event describing a message sent/received between Spans.",null,null],[12,"type","","Type of MessageEvent. Indicates whether the message was…",20,null],[12,"id","","An identifier for the MessageEvent's message that can be…",20,null],[12,"uncompressed_size_bytes","","The number of uncompressed bytes sent or received.",20,null],[12,"compressed_size_bytes","","The number of compressed bytes sent or received. If…",20,null],[4,"Value","","A `TimeEvent` can contain either an `Annotation` object or…",null,null],[13,"Annotation","","Text annotation with a set of attributes.",21,null],[13,"MessageEvent","","An event describing a message sent/received between Spans.",21,null],[0,"message_event","","",null,null],[4,"Type","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","Indicates whether the message was sent or received.",null,null],[13,"Unspecified","","Unknown event type.",22,null],[13,"Sent","","Indicates a sent message.",22,null],[13,"Received","","Indicates a received message.",22,null],[11,"is_valid","","Returns `true` if `value` is a variant of `Type`.",22,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Type`, or `None` if `value` is not…",22,[[["i32"]],[["type"],["option",["type"]]]]],[11,"type","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","Returns the enum value of `type`, or the default if the…",20,[[["self"]],["type"]]],[11,"set_type","","Sets `type` to the provided enum value.",20,[[["self"],["type"]]]],[11,"encode","","",21,[[["self"],["b"]]]],[11,"merge","","",21,[[["decodecontext"],["u32"],["b"],["option"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",21,[[["self"]],["usize"]]],[0,"link","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",null,null],[4,"Type","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","The relationship of the current span relative to the…",null,null],[13,"Unspecified","","The relationship of the two spans is unknown.",23,null],[13,"ChildLinkedSpan","","The linked span is a child of the current span.",23,null],[13,"ParentLinkedSpan","","The linked span is a parent of the current span.",23,null],[11,"is_valid","","Returns `true` if `value` is a variant of `Type`.",23,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Type`, or `None` if `value` is not…",23,[[["i32"]],[["type"],["option",["type"]]]]],[11,"type","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","Returns the enum value of `type`, or the default if the…",17,[[["self"]],["type"]]],[11,"set_type","","Sets `type` to the provided enum value.",17,[[["type"],["self"]]]],[0,"attribute_value","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",null,null],[4,"Value","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::attribute_value","The type of the value.",null,null],[13,"StringValue","","A string up to 256 bytes long.",24,null],[13,"IntValue","","A 64-bit signed integer.",24,null],[13,"BoolValue","","A Boolean value represented by `true` or `false`.",24,null],[11,"encode","","",24,[[["self"],["b"]]]],[11,"merge","","",24,[[["decodecontext"],["u32"],["b"],["option"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",24,[[["self"]],["usize"]]],[0,"stack_trace","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",null,null],[3,"StackFrame","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","Represents a single stack frame in a stack trace.",null,null],[12,"function_name","","The fully-qualified name that uniquely identifies the…",25,null],[12,"original_function_name","","An un-mangled function name, if `function_name` is…",25,null],[12,"file_name","","The name of the source file where the function call…",25,null],[12,"line_number","","The line number in `file_name` where the function call…",25,null],[12,"column_number","","The column number where the function call appears, if…",25,null],[12,"load_module","","The binary module from where the code was loaded.",25,null],[12,"source_version","","The version of the deployed source code (up to 128 bytes).",25,null],[3,"StackFrames","","A collection of stack frames, which can be truncated.",null,null],[12,"frame","","Stack frames in this call stack.",26,null],[12,"dropped_frames_count","","The number of stack frames that were dropped because there…",26,null],[0,"trace_service_client","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","Generated client implementations.",null,null],[3,"TraceServiceClient","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::trace_service_client","This file describes an API for collecting and viewing…",null,null],[11,"connect","","Attempt to create a new client by connecting to a given…",27,[[["d"]]]],[11,"new","","",27,[[["t"]],["self"]]],[11,"with_interceptor","","",27,[[["t"]],["self"]]],[11,"batch_write_spans","","Sends new spans to new or existing traces. You cannot…",27,[[["self"]]]],[11,"create_span","","Creates a new span.",27,[[["self"]]]],[0,"protobuf","opentelemetry_stackdriver::proto::google","",null,null],[0,"rpc","","",null,null],[3,"Status","opentelemetry_stackdriver::proto::google::rpc","The `Status` type defines a logical error model that is…",null,null],[12,"code","","The status code, which should be an enum value of…",28,null],[12,"message","","A developer-facing error message, which should be in…",28,null],[12,"details","","A list of messages that carry the error details. There is…",28,null],[11,"connect","opentelemetry_stackdriver","If `num_concurrent_requests` is set to `0` or `None` then…",29,[[["duration"],["option",["duration"]],["s"]]]],[11,"pending_count","","",29,[[["self"]],["usize"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"into_request","","",29,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::api","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","opentelemetry_stackdriver::proto::google::api::http_rule","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"into_request","","",6,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"equivalent","","",7,[[["k"],["self"]],["bool"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"into_request","","",8,[[],["request"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"into_request","","",11,[[],["request"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"into_request","","",12,[[],["request"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"into_request","","",13,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"into_request","","",14,[[],["request"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"into_request","","",15,[[],["request"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"into_request","","",16,[[],["request"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"into_request","","",17,[[],["request"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"into_request","","",18,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"into_request","","",19,[[],["request"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"into_request","","",20,[[],["request"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"into_request","","",21,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"into_request","","",22,[[],["request"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"into_request","","",23,[[],["request"]]],[11,"equivalent","","",23,[[["k"],["self"]],["bool"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::attribute_value","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"into_request","","",24,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"into_request","","",25,[[],["request"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"into_request","","",26,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::trace_service_client","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"into_request","","",27,[[],["request"]]],[11,"from","opentelemetry_stackdriver::proto::google::rpc","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"into_request","","",28,[[],["request"]]],[11,"clone","opentelemetry_stackdriver::proto::google::api","",0,[[["self"]],["http"]]],[11,"clone","","",1,[[["self"]],["httprule"]]],[11,"clone","opentelemetry_stackdriver::proto::google::api::http_rule","",6,[[["self"]],["pattern"]]],[11,"clone","opentelemetry_stackdriver::proto::google::api","",2,[[["self"]],["customhttppattern"]]],[11,"clone","","",5,[[["self"]],["fieldbehavior"]]],[11,"clone","","",3,[[["self"]],["resourcedescriptor"]]],[11,"clone","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["self"]],["history"]]],[11,"clone","opentelemetry_stackdriver::proto::google::api","",4,[[["self"]],["resourcereference"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",8,[[["self"]],["span"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",14,[[["self"]],["attributes"]]],[11,"clone","","",15,[[["self"]],["timeevent"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",19,[[["self"]],["annotation"]]],[11,"clone","","",20,[[["self"]],["messageevent"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["self"]],["type"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",21,[[["self"]],["value"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",16,[[["self"]],["timeevents"]]],[11,"clone","","",17,[[["self"]],["link"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["self"]],["type"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",18,[[["self"]],["links"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",9,[[["self"]],["attributevalue"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::attribute_value","",24,[[["self"]],["value"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",10,[[["self"]],["stacktrace"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","",25,[[["self"]],["stackframe"]]],[11,"clone","","",26,[[["self"]],["stackframes"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",11,[[["self"]],["module"]]],[11,"clone","","",12,[[["self"]],["truncatablestring"]]],[11,"clone","","",13,[[["self"]],["batchwritespansrequest"]]],[11,"clone","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::trace_service_client","",27,[[["self"]],["self"]]],[11,"clone","opentelemetry_stackdriver::proto::google::rpc","",28,[[["self"]],["status"]]],[11,"default","opentelemetry_stackdriver::proto::google::api","",0,[[],["http"]]],[11,"default","","",1,[[],["httprule"]]],[11,"default","","",2,[[],["customhttppattern"]]],[11,"default","","",5,[[],["fieldbehavior"]]],[11,"default","","",3,[[],["resourcedescriptor"]]],[11,"default","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[],["history"]]],[11,"default","opentelemetry_stackdriver::proto::google::api","",4,[[],["resourcereference"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",8,[[],["span"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",14,[[],["attributes"]]],[11,"default","","",15,[[],["timeevent"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",19,[[],["annotation"]]],[11,"default","","",20,[[],["messageevent"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[],["type"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",16,[[],["timeevents"]]],[11,"default","","",17,[[],["link"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[],["type"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",18,[[],["links"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",9,[[],["attributevalue"]]],[11,"default","","",10,[[],["stacktrace"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","",25,[[],["stackframe"]]],[11,"default","","",26,[[],["stackframes"]]],[11,"default","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",11,[[],["module"]]],[11,"default","","",12,[[],["truncatablestring"]]],[11,"default","","",13,[[],["batchwritespansrequest"]]],[11,"default","opentelemetry_stackdriver::proto::google::rpc","",28,[[],["status"]]],[11,"cmp","opentelemetry_stackdriver::proto::google::api","",5,[[["self"],["fieldbehavior"]],["ordering"]]],[11,"cmp","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["history"],["self"]],["ordering"]]],[11,"cmp","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["self"],["type"]],["ordering"]]],[11,"cmp","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["self"],["type"]],["ordering"]]],[11,"eq","opentelemetry_stackdriver::proto::google::api","",0,[[["http"],["self"]],["bool"]]],[11,"ne","","",0,[[["http"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["httprule"]],["bool"]]],[11,"ne","","",1,[[["self"],["httprule"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::api::http_rule","",6,[[["self"],["pattern"]],["bool"]]],[11,"ne","","",6,[[["self"],["pattern"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::api","",2,[[["customhttppattern"],["self"]],["bool"]]],[11,"ne","","",2,[[["customhttppattern"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldbehavior"]],["bool"]]],[11,"eq","","",3,[[["self"],["resourcedescriptor"]],["bool"]]],[11,"ne","","",3,[[["self"],["resourcedescriptor"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["history"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::api","",4,[[["self"],["resourcereference"]],["bool"]]],[11,"ne","","",4,[[["self"],["resourcereference"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",8,[[["span"],["self"]],["bool"]]],[11,"ne","","",8,[[["span"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",14,[[["self"],["attributes"]],["bool"]]],[11,"ne","","",14,[[["self"],["attributes"]],["bool"]]],[11,"eq","","",15,[[["timeevent"],["self"]],["bool"]]],[11,"ne","","",15,[[["timeevent"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",19,[[["annotation"],["self"]],["bool"]]],[11,"ne","","",19,[[["annotation"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["messageevent"]],["bool"]]],[11,"ne","","",20,[[["self"],["messageevent"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["self"],["type"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",21,[[["value"],["self"]],["bool"]]],[11,"ne","","",21,[[["value"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",16,[[["self"],["timeevents"]],["bool"]]],[11,"ne","","",16,[[["self"],["timeevents"]],["bool"]]],[11,"eq","","",17,[[["self"],["link"]],["bool"]]],[11,"ne","","",17,[[["self"],["link"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["self"],["type"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",18,[[["links"],["self"]],["bool"]]],[11,"ne","","",18,[[["links"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",9,[[["attributevalue"],["self"]],["bool"]]],[11,"ne","","",9,[[["attributevalue"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::attribute_value","",24,[[["self"],["value"]],["bool"]]],[11,"ne","","",24,[[["self"],["value"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",10,[[["self"],["stacktrace"]],["bool"]]],[11,"ne","","",10,[[["self"],["stacktrace"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","",25,[[["self"],["stackframe"]],["bool"]]],[11,"ne","","",25,[[["self"],["stackframe"]],["bool"]]],[11,"eq","","",26,[[["self"],["stackframes"]],["bool"]]],[11,"ne","","",26,[[["self"],["stackframes"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",11,[[["self"],["module"]],["bool"]]],[11,"ne","","",11,[[["self"],["module"]],["bool"]]],[11,"eq","","",12,[[["self"],["truncatablestring"]],["bool"]]],[11,"ne","","",12,[[["self"],["truncatablestring"]],["bool"]]],[11,"eq","","",13,[[["batchwritespansrequest"],["self"]],["bool"]]],[11,"ne","","",13,[[["batchwritespansrequest"],["self"]],["bool"]]],[11,"eq","opentelemetry_stackdriver::proto::google::rpc","",28,[[["self"],["status"]],["bool"]]],[11,"ne","","",28,[[["self"],["status"]],["bool"]]],[11,"partial_cmp","opentelemetry_stackdriver::proto::google::api","",5,[[["self"],["fieldbehavior"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["history"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["self"],["type"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["self"],["type"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","opentelemetry_stackdriver::proto::google::api","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::api::http_rule","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::api","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::api","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::attribute_value","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver::proto::google::rpc","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","opentelemetry_stackdriver","",29,[[["formatter"],["self"]],["result"]]],[11,"hash","opentelemetry_stackdriver::proto::google::api","",5,[[["self"],["__h"]]]],[11,"hash","opentelemetry_stackdriver::proto::google::api::resource_descriptor","",7,[[["self"],["__h"]]]],[11,"hash","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event::message_event","",22,[[["self"],["__h"]]]],[11,"hash","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::link","",23,[[["self"],["__h"]]]],[11,"export","opentelemetry_stackdriver","",29,[[["arc",["spandata"]],["self"],["vec",["arc"]]],["exportresult"]]],[11,"shutdown","","",29,[[["self"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::api","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]],[11,"encode_raw","","",2,[[["self"],["b"]]]],[11,"merge_field","","",2,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",2,[[["self"]],["usize"]]],[11,"clear","","",2,[[["self"]]]],[11,"encode_raw","","",3,[[["self"],["b"]]]],[11,"merge_field","","",3,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",3,[[["self"]],["usize"]]],[11,"clear","","",3,[[["self"]]]],[11,"encode_raw","","",4,[[["self"],["b"]]]],[11,"merge_field","","",4,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",4,[[["self"]],["usize"]]],[11,"clear","","",4,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",8,[[["self"],["b"]]]],[11,"merge_field","","",8,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",8,[[["self"]],["usize"]]],[11,"clear","","",8,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",14,[[["self"],["b"]]]],[11,"merge_field","","",14,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",14,[[["self"]],["usize"]]],[11,"clear","","",14,[[["self"]]]],[11,"encode_raw","","",15,[[["self"],["b"]]]],[11,"merge_field","","",15,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",15,[[["self"]],["usize"]]],[11,"clear","","",15,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span::time_event","",19,[[["self"],["b"]]]],[11,"merge_field","","",19,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",19,[[["self"]],["usize"]]],[11,"clear","","",19,[[["self"]]]],[11,"encode_raw","","",20,[[["self"],["b"]]]],[11,"merge_field","","",20,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",20,[[["self"]],["usize"]]],[11,"clear","","",20,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::span","",16,[[["self"],["b"]]]],[11,"merge_field","","",16,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",16,[[["self"]],["usize"]]],[11,"clear","","",16,[[["self"]]]],[11,"encode_raw","","",17,[[["self"],["b"]]]],[11,"merge_field","","",17,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",17,[[["self"]],["usize"]]],[11,"clear","","",17,[[["self"]]]],[11,"encode_raw","","",18,[[["self"],["b"]]]],[11,"merge_field","","",18,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",18,[[["self"]],["usize"]]],[11,"clear","","",18,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",9,[[["self"],["b"]]]],[11,"merge_field","","",9,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",9,[[["self"]],["usize"]]],[11,"clear","","",9,[[["self"]]]],[11,"encode_raw","","",10,[[["self"],["b"]]]],[11,"merge_field","","",10,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",10,[[["self"]],["usize"]]],[11,"clear","","",10,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2::stack_trace","",25,[[["self"],["b"]]]],[11,"merge_field","","",25,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",25,[[["self"]],["usize"]]],[11,"clear","","",25,[[["self"]]]],[11,"encode_raw","","",26,[[["self"],["b"]]]],[11,"merge_field","","",26,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",26,[[["self"]],["usize"]]],[11,"clear","","",26,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::devtools::cloudtrace::v2","",11,[[["self"],["b"]]]],[11,"merge_field","","",11,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",11,[[["self"]],["usize"]]],[11,"clear","","",11,[[["self"]]]],[11,"encode_raw","","",12,[[["self"],["b"]]]],[11,"merge_field","","",12,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",12,[[["self"]],["usize"]]],[11,"clear","","",12,[[["self"]]]],[11,"encode_raw","","",13,[[["self"],["b"]]]],[11,"merge_field","","",13,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",13,[[["self"]],["usize"]]],[11,"clear","","",13,[[["self"]]]],[11,"encode_raw","opentelemetry_stackdriver::proto::google::rpc","",28,[[["self"],["b"]]]],[11,"merge_field","","",28,[[["decodecontext"],["u32"],["b"],["wiretype"],["self"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",28,[[["self"]],["usize"]]],[11,"clear","","",28,[[["self"]]]]],"p":[[3,"Http"],[3,"HttpRule"],[3,"CustomHttpPattern"],[3,"ResourceDescriptor"],[3,"ResourceReference"],[4,"FieldBehavior"],[4,"Pattern"],[4,"History"],[3,"Span"],[3,"AttributeValue"],[3,"StackTrace"],[3,"Module"],[3,"TruncatableString"],[3,"BatchWriteSpansRequest"],[3,"Attributes"],[3,"TimeEvent"],[3,"TimeEvents"],[3,"Link"],[3,"Links"],[3,"Annotation"],[3,"MessageEvent"],[4,"Value"],[4,"Type"],[4,"Type"],[4,"Value"],[3,"StackFrame"],[3,"StackFrames"],[3,"TraceServiceClient"],[3,"Status"],[3,"StackDriverExporter"]]};
searchIndex["parking_lot"] = {"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar","parking_lot","A Condition Variable",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[3,"RawMutex","","Raw mutex type backed by the parking lot.",null,null],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",null,null],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for…",null,null],[4,"OnceState","","Current state of a `Once`.",null,null],[13,"New","","A closure has not been executed yet",0,null],[13,"Poisoned","","A closure was executed but panicked.",0,null],[13,"InProgress","","A thread is currently executing a closure.",0,null],[13,"Done","","A closure has completed successfully.",0,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]],["usize"]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["instant"],["self"],["mutexguard"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["duration"],["self"],["mutexguard"]],["waittimeoutresult"]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",3,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",null,null],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",null,null],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",null,null],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",null,null],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",null,null],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",null,null],[6,"RwLock","","A reader-writer lock",null,null],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",null,null],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"default","","",2,[[],["condvar"]]],[11,"default","","",3,[[],["once"]]],[11,"eq","","",1,[[["waittimeoutresult"],["self"]],["bool"]]],[11,"ne","","",1,[[["waittimeoutresult"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"lock","","",4,[[["self"]]]],[11,"try_lock","","",4,[[["self"]],["bool"]]],[11,"unlock","","",4,[[["self"]]]],[11,"unlock_fair","","",4,[[["self"]]]],[11,"bump","","",4,[[["self"]]]],[11,"try_lock_until","","",4,[[["instant"],["self"]],["bool"]]],[11,"try_lock_for","","",4,[[["duration"],["self"]],["bool"]]],[11,"nonzero_thread_id","","",6,[[["self"]],["nonzerousize"]]],[11,"lock_exclusive","","",5,[[["self"]]]],[11,"try_lock_exclusive","","",5,[[["self"]],["bool"]]],[11,"unlock_exclusive","","",5,[[["self"]]]],[11,"lock_shared","","",5,[[["self"]]]],[11,"try_lock_shared","","",5,[[["self"]],["bool"]]],[11,"unlock_shared","","",5,[[["self"]]]],[11,"unlock_shared_fair","","",5,[[["self"]]]],[11,"unlock_exclusive_fair","","",5,[[["self"]]]],[11,"bump_shared","","",5,[[["self"]]]],[11,"bump_exclusive","","",5,[[["self"]]]],[11,"downgrade","","",5,[[["self"]]]],[11,"try_lock_shared_for","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_until","","",5,[[["self"]],["bool"]]],[11,"try_lock_exclusive_for","","",5,[[["duration"],["self"]],["bool"]]],[11,"try_lock_exclusive_until","","",5,[[["instant"],["self"]],["bool"]]],[11,"lock_shared_recursive","","",5,[[["self"]]]],[11,"try_lock_shared_recursive","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_for","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_until","","",5,[[["self"]],["bool"]]],[11,"lock_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable","","",5,[[["self"]]]],[11,"upgrade","","",5,[[["self"]]]],[11,"try_upgrade","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable_fair","","",5,[[["self"]]]],[11,"bump_upgradable","","",5,[[["self"]]]],[11,"downgrade_upgradable","","",5,[[["self"]]]],[11,"downgrade_to_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable_until","","",5,[[["instant"],["self"]],["bool"]]],[11,"try_lock_upgradable_for","","",5,[[["duration"],["self"]],["bool"]]],[11,"try_upgrade_until","","",5,[[["instant"],["self"]],["bool"]]],[11,"try_upgrade_for","","",5,[[["duration"],["self"]],["bool"]]]],"p":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"] = {"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",null,null],[12,"0","","",0,null],[3,"UnparkResult","","Result of an unpark operation.",null,null],[12,"unparked_threads","","The number of threads that were unparked.",1,null],[12,"requeued_threads","","The number of threads that were requeued.",1,null],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,null],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,null],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",null,null],[12,"0","","",2,null],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",null,null],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",null,null],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,null],[13,"Skip","","Don't unpark the thread and continue scanning the list of…",3,null],[13,"Stop","","Don't unpark the thread and stop scanning the list of…",3,null],[4,"ParkResult","","Result of a park operation.",null,null],[13,"Unparked","","We were unparked by another thread with the given token.",4,null],[13,"Invalid","","The validation callback returned false.",4,null],[13,"TimedOut","","The timeout expired.",4,null],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",null,null],[13,"Abort","","Abort the operation without doing anything.",5,null],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,null],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,null],[13,"UnparkOne","","Unpark one thread and leave the rest parked. No requeuing…",5,null],[13,"RequeueOne","","Requeue one thread and leave the rest parked on the…",5,null],[5,"park","","Parks the current thread in the queue associated with the…",null,[[["option",["instant"]],["usize"],["instant"],["parktoken"]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",null,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",null,[[["usize"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",null,[[["usize"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",null,[[["usize"]],["unparkresult"]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[],["bool"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["self"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock","","[Experimental] Deadlock detection",null,null],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",null,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",null,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",null,null],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"default","","",1,[[],["unparkresult"]]],[11,"default","","",6,[[],["spinwait"]]],[11,"eq","","",4,[[["parkresult"],["self"]],["bool"]]],[11,"ne","","",4,[[["parkresult"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"eq","","",5,[[["requeueop"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"eq","","",0,[[["parktoken"],["self"]],["bool"]]],[11,"ne","","",0,[[["parktoken"],["self"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the…","i":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base…",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and…",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,[[["encodeset"]],[["percentencode"],["encodeset"]]]],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,[[["str"],["encodeset"]],[["percentencode"],["encodeset"]]]],[5,"percent_decode","","Percent-decode the given bytes.",null,[[],["percentdecode"]]],[8,"EncodeSet","","Represents a set of characters / bytes that should be…",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should…",0,[[["self"],["u8"]],["bool"]]],[11,"if_any","","If the percent-decoding is different from the input,…",1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[],[["result",["cow","utf8error"]],["cow",["str"]],["utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[],[["str"],["cow",["str"]]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"contains","","",2,[[["self"],["u8"]],["bool"]]],[11,"contains","","",3,[[["self"],["u8"]],["bool"]]],[11,"contains","","",4,[[["self"],["u8"]],["bool"]]],[11,"contains","","",5,[[["self"],["u8"]],["bool"]]],[11,"contains","","",6,[[["self"],["u8"]],["bool"]]],[11,"next","","",7,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"clone","","",2,[[["self"]],["simple_encode_set"]]],[11,"clone","","",3,[[["self"]],["query_encode_set"]]],[11,"clone","","",4,[[["self"]],["default_encode_set"]]],[11,"clone","","",5,[[["self"]],["path_segment_encode_set"]]],[11,"clone","","",6,[[["self"]],["userinfo_encode_set"]]],[11,"clone","","",7,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]]],"p":[[8,"EncodeSet"],[3,"PercentDecode"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"]]};
searchIndex["pin_project"] = {"doc":"A crate for safe and ergonomic pin-projection.","i":[[23,"pin_project","pin_project","An attribute that creates a projection struct covering all…",null,null],[23,"pinned_drop","","An attribute for annotating an impl block that implements…",null,null],[23,"project","","An attribute to provide way to refer to the projected type…",null,null],[23,"project_ref","","An attribute to provide way to refer to the projected type…",null,null],[8,"UnsafeUnpin","","A trait used for custom implementations of [`Unpin`]. This…",null,null]],"p":[]};
searchIndex["pin_project_internal"] = {"doc":"An internal crate to support pin_project - do not use…","i":[[23,"pin_project","pin_project_internal","An attribute that creates a projection struct covering all…",null,null],[23,"pinned_drop","","An attribute for annotating an impl block that implements…",null,null],[23,"project","","An attribute to provide way to refer to the projected type…",null,null],[23,"project_ref","","An attribute to provide way to refer to the projected type…",null,null]],"p":[]};
searchIndex["pin_project_lite"] = {"doc":"A lightweight version of [pin-project] written with…","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection struct covering all the…",null,null]],"p":[]};
searchIndex["pin_utils"] = {"doc":"Utilities for pinning","i":[[14,"pin_mut","pin_utils","Pins a value on the stack.",null,null],[14,"unsafe_pinned","","A pinned projection of a struct field.",null,null],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",null,null]],"p":[]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["span"],["self"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream"],["delimiter"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["span"],["self"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span"],["self"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span"],["self"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,[[],["literal"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["span"],["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["tokenstream"],["lexerror"],["result",["tokenstream","lexerror"]]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["proc_macro_hack"] = {"doc":"As of Rust 1.30, the language supports user-defined…","i":[[23,"proc_macro_hack","proc_macro_hack","",null,null]],"p":[]};
searchIndex["proc_macro_nested"] = {"doc":"Support for nested invocations of proc-macro-hack…","i":[],"p":[]};
searchIndex["prometheus"] = {"doc":"The Rust client library for Prometheus.","i":[[3,"ProtobufEncoder","prometheus","An implementation of an `Encoder` that converts a…",null,null],[3,"TextEncoder","","An implementation of an `Encoder` that converts a…",null,null],[3,"Histogram","","A `Metric` counts individual observations from an event or…",null,null],[3,"HistogramOpts","","A struct that bundles the options for creating a…",null,null],[12,"common_opts","","A container holding various options.",0,null],[12,"buckets","","Defines the buckets into which observations are counted.…",0,null],[3,"HistogramTimer","","A struct represents an event being timed. When the timer…",null,null],[3,"Opts","","A struct that bundles the options for creating most…",null,null],[12,"namespace","","namespace, subsystem, and name are components of the…",1,null],[12,"subsystem","","namespace, subsystem, and name are components of the…",1,null],[12,"name","","namespace, subsystem, and name are components of the…",1,null],[12,"help","","help provides information about this metric. Mandatory!",1,null],[12,"const_labels","","const_labels are used to attach fixed labels to this…",1,null],[12,"variable_labels","","variable_labels contains names of labels for which the…",1,null],[3,"Registry","","A struct for registering Prometheus collectors, collecting…",null,null],[4,"Error","","The error types for prometheus.",null,null],[13,"AlreadyReg","","A duplicate metric collector has already been registered.",2,null],[13,"InconsistentCardinality","","The label cardinality was inconsistent.",2,null],[13,"Msg","","An error message which is only a string.",2,null],[13,"Io","","An error containing a [`std::io::Error`].",2,null],[13,"Protobuf","","An error containing a [`protobuf::Error`].",2,null],[5,"exponential_buckets","","Create `count` buckets, where the lowest bucket has an…",null,[[["f64"],["usize"]],[["vec",["f64"]],["result",["vec"]]]]],[5,"linear_buckets","","Create `count` buckets, each `width` wide, where the…",null,[[["f64"],["usize"]],[["vec",["f64"]],["result",["vec"]]]]],[5,"default_registry","","Default registry (global static).",null,[[],["registry"]]],[5,"gather","","Return all `MetricFamily` of `DEFAULT_REGISTRY`.",null,[[],[["vec",["metricfamily"]],["metricfamily"]]]],[5,"register","","Registers a new `Collector` to be included in metrics…",null,[[["collector"],["box",["collector"]]],["result"]]],[5,"unregister","","Unregisters the `Collector` that equals the `Collector`…",null,[[["collector"],["box",["collector"]]],["result"]]],[0,"proto","","Protocol buffers format of metrics.",null,null],[3,"LabelPair","prometheus::proto","",null,null],[12,"unknown_fields","","",3,null],[12,"cached_size","","",3,null],[3,"Gauge","","",null,null],[12,"unknown_fields","","",4,null],[12,"cached_size","","",4,null],[3,"Counter","","",null,null],[12,"unknown_fields","","",5,null],[12,"cached_size","","",5,null],[3,"Quantile","","",null,null],[12,"unknown_fields","","",6,null],[12,"cached_size","","",6,null],[3,"Summary","","",null,null],[12,"unknown_fields","","",7,null],[12,"cached_size","","",7,null],[3,"Untyped","","",null,null],[12,"unknown_fields","","",8,null],[12,"cached_size","","",8,null],[3,"Histogram","","",null,null],[12,"unknown_fields","","",9,null],[12,"cached_size","","",9,null],[3,"Bucket","","",null,null],[12,"unknown_fields","","",10,null],[12,"cached_size","","",10,null],[3,"Metric","","",null,null],[12,"unknown_fields","","",11,null],[12,"cached_size","","",11,null],[3,"MetricFamily","","",null,null],[12,"unknown_fields","","",12,null],[12,"cached_size","","",12,null],[4,"MetricType","","",null,null],[13,"COUNTER","","",13,null],[13,"GAUGE","","",13,null],[13,"SUMMARY","","",13,null],[13,"UNTYPED","","",13,null],[13,"HISTOGRAM","","",13,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",3,[[],["labelpair"]]],[11,"clear_name","","",3,[[["self"]]]],[11,"has_name","","",3,[[["self"]],["bool"]]],[11,"set_name","","",3,[[["string"],["self"]]]],[11,"mut_name","","",3,[[["self"]],["string"]]],[11,"take_name","","",3,[[["self"]],["string"]]],[11,"get_name","","",3,[[["self"]],["str"]]],[11,"clear_value","","",3,[[["self"]]]],[11,"has_value","","",3,[[["self"]],["bool"]]],[11,"set_value","","",3,[[["string"],["self"]]]],[11,"mut_value","","",3,[[["self"]],["string"]]],[11,"take_value","","",3,[[["self"]],["string"]]],[11,"get_value","","",3,[[["self"]],["str"]]],[11,"new","","",4,[[],["gauge"]]],[11,"clear_value","","",4,[[["self"]]]],[11,"has_value","","",4,[[["self"]],["bool"]]],[11,"set_value","","",4,[[["self"],["f64"]]]],[11,"get_value","","",4,[[["self"]],["f64"]]],[11,"new","","",5,[[],["counter"]]],[11,"clear_value","","",5,[[["self"]]]],[11,"has_value","","",5,[[["self"]],["bool"]]],[11,"set_value","","",5,[[["self"],["f64"]]]],[11,"get_value","","",5,[[["self"]],["f64"]]],[11,"new","","",6,[[],["quantile"]]],[11,"clear_quantile","","",6,[[["self"]]]],[11,"has_quantile","","",6,[[["self"]],["bool"]]],[11,"set_quantile","","",6,[[["self"],["f64"]]]],[11,"get_quantile","","",6,[[["self"]],["f64"]]],[11,"clear_value","","",6,[[["self"]]]],[11,"has_value","","",6,[[["self"]],["bool"]]],[11,"set_value","","",6,[[["self"],["f64"]]]],[11,"get_value","","",6,[[["self"]],["f64"]]],[11,"new","","",7,[[],["summary"]]],[11,"clear_sample_count","","",7,[[["self"]]]],[11,"has_sample_count","","",7,[[["self"]],["bool"]]],[11,"set_sample_count","","",7,[[["self"],["u64"]]]],[11,"get_sample_count","","",7,[[["self"]],["u64"]]],[11,"clear_sample_sum","","",7,[[["self"]]]],[11,"has_sample_sum","","",7,[[["self"]],["bool"]]],[11,"set_sample_sum","","",7,[[["self"],["f64"]]]],[11,"get_sample_sum","","",7,[[["self"]],["f64"]]],[11,"clear_quantile","","",7,[[["self"]]]],[11,"set_quantile","","",7,[[["self"],["repeatedfield",["quantile"]],["quantile"]]]],[11,"mut_quantile","","",7,[[["self"]],["repeatedfield"]]],[11,"take_quantile","","",7,[[["self"]],[["repeatedfield",["quantile"]],["quantile"]]]],[11,"get_quantile","","",7,[[["self"]]]],[11,"new","","",8,[[],["untyped"]]],[11,"clear_value","","",8,[[["self"]]]],[11,"has_value","","",8,[[["self"]],["bool"]]],[11,"set_value","","",8,[[["self"],["f64"]]]],[11,"get_value","","",8,[[["self"]],["f64"]]],[11,"new","","",9,[[],["histogram"]]],[11,"clear_sample_count","","",9,[[["self"]]]],[11,"has_sample_count","","",9,[[["self"]],["bool"]]],[11,"set_sample_count","","",9,[[["self"],["u64"]]]],[11,"get_sample_count","","",9,[[["self"]],["u64"]]],[11,"clear_sample_sum","","",9,[[["self"]]]],[11,"has_sample_sum","","",9,[[["self"]],["bool"]]],[11,"set_sample_sum","","",9,[[["self"],["f64"]]]],[11,"get_sample_sum","","",9,[[["self"]],["f64"]]],[11,"clear_bucket","","",9,[[["self"]]]],[11,"set_bucket","","",9,[[["self"],["bucket"],["repeatedfield",["bucket"]]]]],[11,"mut_bucket","","",9,[[["self"]],["repeatedfield"]]],[11,"take_bucket","","",9,[[["self"]],[["bucket"],["repeatedfield",["bucket"]]]]],[11,"get_bucket","","",9,[[["self"]]]],[11,"new","","",10,[[],["bucket"]]],[11,"clear_cumulative_count","","",10,[[["self"]]]],[11,"has_cumulative_count","","",10,[[["self"]],["bool"]]],[11,"set_cumulative_count","","",10,[[["self"],["u64"]]]],[11,"get_cumulative_count","","",10,[[["self"]],["u64"]]],[11,"clear_upper_bound","","",10,[[["self"]]]],[11,"has_upper_bound","","",10,[[["self"]],["bool"]]],[11,"set_upper_bound","","",10,[[["self"],["f64"]]]],[11,"get_upper_bound","","",10,[[["self"]],["f64"]]],[11,"new","","",11,[[],["metric"]]],[11,"clear_label","","",11,[[["self"]]]],[11,"set_label","","",11,[[["labelpair"],["self"],["repeatedfield",["labelpair"]]]]],[11,"mut_label","","",11,[[["self"]],["repeatedfield"]]],[11,"take_label","","",11,[[["self"]],[["labelpair"],["repeatedfield",["labelpair"]]]]],[11,"get_label","","",11,[[["self"]]]],[11,"clear_gauge","","",11,[[["self"]]]],[11,"has_gauge","","",11,[[["self"]],["bool"]]],[11,"set_gauge","","",11,[[["self"],["gauge"]]]],[11,"mut_gauge","","",11,[[["self"]],["gauge"]]],[11,"take_gauge","","",11,[[["self"]],["gauge"]]],[11,"get_gauge","","",11,[[["self"]],["gauge"]]],[11,"clear_counter","","",11,[[["self"]]]],[11,"has_counter","","",11,[[["self"]],["bool"]]],[11,"set_counter","","",11,[[["self"],["counter"]]]],[11,"mut_counter","","",11,[[["self"]],["counter"]]],[11,"take_counter","","",11,[[["self"]],["counter"]]],[11,"get_counter","","",11,[[["self"]],["counter"]]],[11,"clear_summary","","",11,[[["self"]]]],[11,"has_summary","","",11,[[["self"]],["bool"]]],[11,"set_summary","","",11,[[["summary"],["self"]]]],[11,"mut_summary","","",11,[[["self"]],["summary"]]],[11,"take_summary","","",11,[[["self"]],["summary"]]],[11,"get_summary","","",11,[[["self"]],["summary"]]],[11,"clear_untyped","","",11,[[["self"]]]],[11,"has_untyped","","",11,[[["self"]],["bool"]]],[11,"set_untyped","","",11,[[["self"],["untyped"]]]],[11,"mut_untyped","","",11,[[["self"]],["untyped"]]],[11,"take_untyped","","",11,[[["self"]],["untyped"]]],[11,"get_untyped","","",11,[[["self"]],["untyped"]]],[11,"clear_histogram","","",11,[[["self"]]]],[11,"has_histogram","","",11,[[["self"]],["bool"]]],[11,"set_histogram","","",11,[[["self"],["histogram"]]]],[11,"mut_histogram","","",11,[[["self"]],["histogram"]]],[11,"take_histogram","","",11,[[["self"]],["histogram"]]],[11,"get_histogram","","",11,[[["self"]],["histogram"]]],[11,"clear_timestamp_ms","","",11,[[["self"]]]],[11,"has_timestamp_ms","","",11,[[["self"]],["bool"]]],[11,"set_timestamp_ms","","",11,[[["i64"],["self"]]]],[11,"get_timestamp_ms","","",11,[[["self"]],["i64"]]],[11,"new","","",12,[[],["metricfamily"]]],[11,"clear_name","","",12,[[["self"]]]],[11,"has_name","","",12,[[["self"]],["bool"]]],[11,"set_name","","",12,[[["string"],["self"]]]],[11,"mut_name","","",12,[[["self"]],["string"]]],[11,"take_name","","",12,[[["self"]],["string"]]],[11,"get_name","","",12,[[["self"]],["str"]]],[11,"clear_help","","",12,[[["self"]]]],[11,"has_help","","",12,[[["self"]],["bool"]]],[11,"set_help","","",12,[[["string"],["self"]]]],[11,"mut_help","","",12,[[["self"]],["string"]]],[11,"take_help","","",12,[[["self"]],["string"]]],[11,"get_help","","",12,[[["self"]],["str"]]],[11,"clear_field_type","","",12,[[["self"]]]],[11,"has_field_type","","",12,[[["self"]],["bool"]]],[11,"set_field_type","","",12,[[["self"],["metrictype"]]]],[11,"get_field_type","","",12,[[["self"]],["metrictype"]]],[11,"clear_metric","","",12,[[["self"]]]],[11,"set_metric","","",12,[[["metric"],["self"],["repeatedfield",["metric"]]]]],[11,"mut_metric","","",12,[[["self"]],["repeatedfield"]]],[11,"take_metric","","",12,[[["self"]],[["metric"],["repeatedfield",["metric"]]]]],[11,"get_metric","","",12,[[["self"]]]],[11,"new","prometheus","Create a new protobuf encoder.",14,[[],["protobufencoder"]]],[11,"new","","Create a new text encoder.",15,[[],["textencoder"]]],[11,"new","","Create a `HistogramOpts` with the `name` and `help`…",0,[[["into",["string"]],["string"]],["histogramopts"]]],[11,"namespace","","`namespace` sets the namespace.",0,[[["into",["string"]],["string"]],["self"]]],[11,"subsystem","","`subsystem` sets the sub system.",0,[[["into",["string"]],["string"]],["self"]]],[11,"const_labels","","`const_labels` sets the const labels.",0,[[["string"],["hashmap",["string","string"]]],["self"]]],[11,"const_label","","`const_label` adds a const label.",0,[[["into",["string"]],["string"]],["self"]]],[11,"variable_labels","","`variable_labels` sets the variable labels.",0,[[["string"],["vec",["string"]]],["self"]]],[11,"variable_label","","`variable_label` adds a variable label.",0,[[["into",["string"]],["string"]],["self"]]],[11,"fq_name","","`fq_name` returns the fq_name.",0,[[["self"]],["string"]]],[11,"buckets","","`buckets` set the buckets.",0,[[["vec",["f64"]],["f64"]],["self"]]],[11,"observe_duration","","`observe_duration` observes the amount of time in seconds…",16,[[]]],[11,"with_opts","","`with_opts` creates a `Histogram` with the `opts` options.",17,[[["histogramopts"]],[["histogram"],["result",["histogram"]]]]],[11,"observe","","Add a single observation to the `Histogram`.",17,[[["f64"],["self"]]]],[11,"start_timer","","Return a `HistogramTimer` to track a duration.",17,[[["self"]],["histogramtimer"]]],[11,"local","","Return a `LocalHistogram` for single thread usage.",17,[[["self"]],["localhistogram"]]],[11,"new","","`new` creates the Opts with the `name` and `help` arguments.",1,[[["into",["string"]],["string"]],["opts"]]],[11,"namespace","","`namespace` sets the namespace.",1,[[["into",["string"]],["string"]],["self"]]],[11,"subsystem","","`subsystem` sets the sub system.",1,[[["into",["string"]],["string"]],["self"]]],[11,"const_labels","","`const_labels` sets the const labels.",1,[[["string"],["hashmap",["string","string"]]],["self"]]],[11,"const_label","","`const_label` adds a const label.",1,[[["into",["string"]],["string"]],["self"]]],[11,"variable_labels","","`variable_labels` sets the variable labels.",1,[[["string"],["vec",["string"]]],["self"]]],[11,"variable_label","","`variable_label` adds a variable label.",1,[[["into",["string"]],["string"]],["self"]]],[11,"fq_name","","`fq_name` returns the fq_name.",1,[[["self"]],["string"]]],[11,"new","","`new` creates a Registry.",18,[[],["registry"]]],[11,"new_custom","","Create a new registry, with optional custom prefix and…",18,[[["string"],["option",["hashmap"]],["hashmap",["string","string"]],["option",["string"]]],[["registry"],["result",["registry"]]]]],[11,"register","","`register` registers a new `Collector` to be included in…",18,[[["collector"],["self"],["box",["collector"]]],["result"]]],[11,"unregister","","`unregister` unregisters the `Collector` that equals the…",18,[[["collector"],["self"],["box",["collector"]]],["result"]]],[11,"gather","","`gather` calls the Collect method of the registered…",18,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[0,"local","","Unsync local metrics, provides better performance.",null,null],[3,"LocalHistogram","prometheus::local","An unsync `Histogram`.",null,null],[3,"LocalHistogramTimer","","An unsync `HistogramTimer`.",null,null],[3,"LocalHistogramVec","","An unsync `HistogramVec`.",null,null],[6,"LocalCounter","","An unsync `Counter`.",null,null],[6,"LocalCounterVec","","An unsync `CounterVec`.",null,null],[6,"LocalIntCounter","","The integer version of `LocalCounter`. Provides better…",null,null],[6,"LocalIntCounterVec","","The integer version of `LocalCounterVec`. Provides better…",null,null],[0,"core","prometheus","Core traits and types.",null,null],[3,"AtomicF64","prometheus::core","A atomic float.",null,null],[3,"AtomicI64","","A atomic signed integer.",null,null],[3,"AtomicU64","","A atomic unsigned integer.",null,null],[3,"GenericCounter","","The underlying implementation for `Counter` and…",null,null],[3,"GenericLocalCounter","","The underlying implementation for `LocalCounter` and…",null,null],[3,"GenericLocalCounterVec","","The underlying implementation for `LocalCounterVec` and…",null,null],[3,"Desc","","The descriptor used by every Prometheus `Metric`. It is…",null,null],[12,"fq_name","","fq_name has been built from Namespace, Subsystem, and Name.",19,null],[12,"help","","help provides some helpful information about this metric.",19,null],[12,"const_label_pairs","","const_label_pairs contains precalculated DTO label pairs…",19,null],[12,"variable_labels","","variable_labels contains names of labels for which the…",19,null],[12,"id","","id is a hash of the values of the ConstLabels and fqName.…",19,null],[12,"dim_hash","","dim_hash is a hash of the label names (preset and…",19,null],[3,"GenericGauge","","The underlying implementation for `Gauge` and `IntGauge`.",null,null],[3,"Opts","","A struct that bundles the options for creating most…",null,null],[12,"namespace","","namespace, subsystem, and name are components of the…",1,null],[12,"subsystem","","namespace, subsystem, and name are components of the…",1,null],[12,"name","","namespace, subsystem, and name are components of the…",1,null],[12,"help","","help provides information about this metric. Mandatory!",1,null],[12,"const_labels","","const_labels are used to attach fixed labels to this…",1,null],[12,"variable_labels","","variable_labels contains names of labels for which the…",1,null],[3,"MetricVec","","A `Collector` to bundle metrics of the same name that…",null,null],[6,"GenericCounterVec","","The underlying implementation for `CounterVec` and…",null,null],[6,"GenericGaugeVec","","The underlying implementation for `GaugeVec` and…",null,null],[8,"Number","","An interface for numbers. Used to generically model float…",null,null],[10,"from_i64","","`std::convert::From<i64> for f64` is not implemented, so…",20,[[["i64"]],["self"]]],[10,"into_f64","","Convert to a f64.",20,[[],["f64"]]],[8,"Atomic","","An interface for atomics. Used to generically model float…",null,null],[16,"T","","The numeric type associated with this atomic.",21,null],[10,"new","","Create a new atomic value.",21,[[],["self"]]],[10,"set","","Set the value to the provided value.",21,[[["self"]]]],[10,"get","","Get the value.",21,[[["self"]]]],[10,"inc_by","","Increment the value by a given amount.",21,[[["self"]]]],[10,"dec_by","","Decrement the value by a given amount.",21,[[["self"]]]],[8,"Describer","","An interface for describing the immutable meta-data of a…",null,null],[10,"describe","","`describe` returns a `Desc`.",22,[[["self"]],[["desc"],["result",["desc"]]]]],[8,"Collector","","An interface for collecting metrics.",null,null],[10,"desc","","Return descriptors for metrics.",23,[[["self"]],[["desc"],["vec",["desc"]]]]],[10,"collect","","Collect metrics.",23,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[8,"Metric","","An interface models a single sample value with its meta…",null,null],[10,"metric","","Return the protocol Metric.",24,[[["self"]],["metric"]]],[8,"MetricVecBuilder","","An interface for building a metric vector.",null,null],[16,"M","","The associated Metric collected.",25,null],[16,"P","","The associated describer.",25,null],[10,"build","","`build` builds a `Metric` with option and corresponding…",25,[[["self"]],["result"]]],[6,"Counter","prometheus","A `Metric` represents a single numerical value that only…",null,null],[6,"CounterVec","","A `Collector` that bundles a set of `Counter`s that all…",null,null],[6,"IntCounter","","The integer version of `Counter`. Provides better…",null,null],[6,"IntCounterVec","","The integer version of `CounterVec`. Provides better…",null,null],[6,"Result","","A specialized Result type for prometheus.",null,null],[6,"Gauge","","A `Metric` represents a single numerical value that can…",null,null],[6,"GaugeVec","","A `Collector` that bundles a set of `Gauge`s that all…",null,null],[6,"IntGauge","","The integer version of `Gauge`. Provides better…",null,null],[6,"IntGaugeVec","","The integer version of `GaugeVec`. Provides better…",null,null],[6,"HistogramVec","","A `Collector` that bundles a set of Histograms that all…",null,null],[17,"PROTOBUF_FORMAT","","The protocol buffer format of metric family.",null,null],[17,"TEXT_FORMAT","","The text format of metric family.",null,null],[17,"DEFAULT_BUCKETS","","The default `Histogram` buckets. The default buckets are…",null,null],[8,"Encoder","","An interface for encoding metric families into an…",null,null],[10,"encode","","`encode` converts a slice of MetricFamily proto messages…",26,[[["w"],["self"]],["result"]]],[10,"format_type","","`format_type` returns target format.",26,[[["self"]],["str"]]],[14,"labels","","Create labels with specified name-value pairs.",null,null],[14,"opts","","Create an `Opts`.",null,null],[14,"histogram_opts","","Create a `HistogramOpts`.",null,null],[14,"register_counter","","Create a `Counter` and registers to default registry.",null,null],[14,"register_int_counter","","Create an `IntCounter` and registers to default registry.",null,null],[14,"register_counter_vec","","Create a `CounterVec` and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an `IntCounterVec` and registers to default registry.",null,null],[14,"register_gauge","","Create a `Gauge` and registers to default registry.",null,null],[14,"register_int_gauge","","Create an `IntGauge` and registers to default registry.",null,null],[14,"register_gauge_vec","","Create a `GaugeVec` and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an `IntGaugeVec` and registers to default registry.",null,null],[14,"register_histogram","","Create a `Histogram` and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a `HistogramVec` and registers to default registry.",null,null],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","prometheus::proto","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","prometheus::core","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","prometheus::local","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","prometheus::core","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"encode","prometheus","",14,[[["w"],["self"]],["result"]]],[11,"format_type","","",14,[[["self"]],["str"]]],[11,"encode","","",15,[[["w"],["self"]],["result"]]],[11,"format_type","","",15,[[["self"]],["str"]]],[11,"new","prometheus::core","",27,[[],["atomicf64"]]],[11,"set","","",27,[[["self"]]]],[11,"get","","",27,[[["self"]]]],[11,"inc_by","","",27,[[["self"]]]],[11,"dec_by","","",27,[[["self"]]]],[11,"new","","",28,[[],["atomici64"]]],[11,"set","","",28,[[["self"]]]],[11,"get","","",28,[[["self"]]]],[11,"inc_by","","",28,[[["self"]]]],[11,"dec_by","","",28,[[["self"]]]],[11,"new","","",29,[[],["atomicu64"]]],[11,"set","","",29,[[["self"]]]],[11,"get","","",29,[[["self"]]]],[11,"inc_by","","",29,[[["self"]]]],[11,"dec_by","","",29,[[["self"]]]],[11,"describe","prometheus","",0,[[["self"]],[["desc"],["result",["desc"]]]]],[11,"describe","","",1,[[["self"]],[["desc"],["result",["desc"]]]]],[11,"desc","prometheus::core","",30,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect","","",30,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"desc","","",33,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect","","",33,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"desc","prometheus","",17,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect","","",17,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"desc","prometheus::core","",37,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect","","",37,[[["self"]],[["metricfamily"],["vec",["metricfamily"]]]]],[11,"metric","","",30,[[["self"]],["metric"]]],[11,"metric","","",33,[[["self"]],["metric"]]],[11,"metric","prometheus","",17,[[["self"]],["metric"]]],[11,"drop","","",16,[[["self"]]]],[11,"drop","prometheus::local","",35,[[["self"]]]],[11,"drop","","",34,[[["self"]]]],[11,"from","prometheus","",2,[[["ioerror"]],["error"]]],[11,"from","","",2,[[["protobuferror"]],["error"]]],[11,"from","","",0,[[["opts"]],["histogramopts"]]],[11,"clone","prometheus::proto","",3,[[["self"]],["labelpair"]]],[11,"clone","","",4,[[["self"]],["gauge"]]],[11,"clone","","",5,[[["self"]],["counter"]]],[11,"clone","","",6,[[["self"]],["quantile"]]],[11,"clone","","",7,[[["self"]],["summary"]]],[11,"clone","","",8,[[["self"]],["untyped"]]],[11,"clone","","",9,[[["self"]],["histogram"]]],[11,"clone","","",10,[[["self"]],["bucket"]]],[11,"clone","","",11,[[["self"]],["metric"]]],[11,"clone","","",12,[[["self"]],["metricfamily"]]],[11,"clone","","",13,[[["self"]],["metrictype"]]],[11,"clone","prometheus::core","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["desc"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","prometheus","",0,[[["self"]],["histogramopts"]]],[11,"clone","","",17,[[["self"]],["histogram"]]],[11,"clone","prometheus::local","",34,[[["self"]],["localhistogram"]]],[11,"clone","","",36,[[["self"]],["localhistogramvec"]]],[11,"clone","prometheus","",1,[[["self"]],["opts"]]],[11,"clone","","",18,[[["self"]],["registry"]]],[11,"clone","prometheus::core","",37,[[["self"]],["metricvec"]]],[11,"default","prometheus::proto","",3,[[],["labelpair"]]],[11,"default","","",4,[[],["gauge"]]],[11,"default","","",5,[[],["counter"]]],[11,"default","","",6,[[],["quantile"]]],[11,"default","","",7,[[],["summary"]]],[11,"default","","",8,[[],["untyped"]]],[11,"default","","",9,[[],["histogram"]]],[11,"default","","",10,[[],["bucket"]]],[11,"default","","",11,[[],["metric"]]],[11,"default","","",12,[[],["metricfamily"]]],[11,"default","prometheus","",14,[[],["protobufencoder"]]],[11,"default","","",15,[[],["textencoder"]]],[11,"default","","",18,[[],["registry"]]],[11,"cmp","prometheus::proto","",3,[[["self"],["labelpair"]],["ordering"]]],[11,"eq","","",3,[[["self"],["labelpair"]],["bool"]]],[11,"ne","","",3,[[["self"],["labelpair"]],["bool"]]],[11,"eq","","",4,[[["gauge"],["self"]],["bool"]]],[11,"ne","","",4,[[["gauge"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["counter"]],["bool"]]],[11,"ne","","",5,[[["self"],["counter"]],["bool"]]],[11,"eq","","",6,[[["self"],["quantile"]],["bool"]]],[11,"ne","","",6,[[["self"],["quantile"]],["bool"]]],[11,"eq","","",7,[[["self"],["summary"]],["bool"]]],[11,"ne","","",7,[[["self"],["summary"]],["bool"]]],[11,"eq","","",8,[[["self"],["untyped"]],["bool"]]],[11,"ne","","",8,[[["self"],["untyped"]],["bool"]]],[11,"eq","","",9,[[["self"],["histogram"]],["bool"]]],[11,"ne","","",9,[[["self"],["histogram"]],["bool"]]],[11,"eq","","",10,[[["self"],["bucket"]],["bool"]]],[11,"ne","","",10,[[["self"],["bucket"]],["bool"]]],[11,"eq","","",11,[[["self"],["metric"]],["bool"]]],[11,"ne","","",11,[[["self"],["metric"]],["bool"]]],[11,"eq","","",12,[[["self"],["metricfamily"]],["bool"]]],[11,"ne","","",12,[[["self"],["metricfamily"]],["bool"]]],[11,"eq","","",13,[[["self"],["metrictype"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["labelpair"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","prometheus","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","prometheus::core","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","prometheus","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"hash","prometheus::proto","",13,[[["self"],["__h"]]]],[11,"cause","prometheus","",2,[[["self"]],[["option",["error"]],["error"]]]],[11,"is_initialized","prometheus::proto","",3,[[["self"]],["bool"]]],[11,"merge_from","","",3,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",3,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",3,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",3,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",3,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",3,[[["self"]],["unknownfields"]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",3,[[["self"]],["messagedescriptor"]]],[11,"new","","",3,[[],["labelpair"]]],[11,"descriptor_static","","",3,[[],["messagedescriptor"]]],[11,"default_instance","","",3,[[],["labelpair"]]],[11,"is_initialized","","",4,[[["self"]],["bool"]]],[11,"merge_from","","",4,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",4,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",4,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",4,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",4,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",4,[[["self"]],["unknownfields"]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",4,[[["self"]],["messagedescriptor"]]],[11,"new","","",4,[[],["gauge"]]],[11,"descriptor_static","","",4,[[],["messagedescriptor"]]],[11,"default_instance","","",4,[[],["gauge"]]],[11,"is_initialized","","",5,[[["self"]],["bool"]]],[11,"merge_from","","",5,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",5,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",5,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",5,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",5,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",5,[[["self"]],["unknownfields"]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",5,[[["self"]],["messagedescriptor"]]],[11,"new","","",5,[[],["counter"]]],[11,"descriptor_static","","",5,[[],["messagedescriptor"]]],[11,"default_instance","","",5,[[],["counter"]]],[11,"is_initialized","","",6,[[["self"]],["bool"]]],[11,"merge_from","","",6,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",6,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",6,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",6,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",6,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",6,[[["self"]],["unknownfields"]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",6,[[["self"]],["messagedescriptor"]]],[11,"new","","",6,[[],["quantile"]]],[11,"descriptor_static","","",6,[[],["messagedescriptor"]]],[11,"default_instance","","",6,[[],["quantile"]]],[11,"is_initialized","","",7,[[["self"]],["bool"]]],[11,"merge_from","","",7,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",7,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",7,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",7,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",7,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",7,[[["self"]],["unknownfields"]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",7,[[["self"]],["messagedescriptor"]]],[11,"new","","",7,[[],["summary"]]],[11,"descriptor_static","","",7,[[],["messagedescriptor"]]],[11,"default_instance","","",7,[[],["summary"]]],[11,"is_initialized","","",8,[[["self"]],["bool"]]],[11,"merge_from","","",8,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",8,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",8,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",8,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",8,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",8,[[["self"]],["unknownfields"]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"into_any","","",8,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",8,[[["self"]],["messagedescriptor"]]],[11,"new","","",8,[[],["untyped"]]],[11,"descriptor_static","","",8,[[],["messagedescriptor"]]],[11,"default_instance","","",8,[[],["untyped"]]],[11,"is_initialized","","",9,[[["self"]],["bool"]]],[11,"merge_from","","",9,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",9,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",9,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",9,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",9,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",9,[[["self"]],["unknownfields"]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",9,[[["self"]],["messagedescriptor"]]],[11,"new","","",9,[[],["histogram"]]],[11,"descriptor_static","","",9,[[],["messagedescriptor"]]],[11,"default_instance","","",9,[[],["histogram"]]],[11,"is_initialized","","",10,[[["self"]],["bool"]]],[11,"merge_from","","",10,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",10,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",10,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",10,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",10,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",10,[[["self"]],["unknownfields"]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",10,[[["self"]],["messagedescriptor"]]],[11,"new","","",10,[[],["bucket"]]],[11,"descriptor_static","","",10,[[],["messagedescriptor"]]],[11,"default_instance","","",10,[[],["bucket"]]],[11,"is_initialized","","",11,[[["self"]],["bool"]]],[11,"merge_from","","",11,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",11,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",11,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",11,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",11,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",11,[[["self"]],["unknownfields"]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",11,[[["self"]],["messagedescriptor"]]],[11,"new","","",11,[[],["metric"]]],[11,"descriptor_static","","",11,[[],["messagedescriptor"]]],[11,"default_instance","","",11,[[],["metric"]]],[11,"is_initialized","","",12,[[["self"]],["bool"]]],[11,"merge_from","","",12,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",12,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",12,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",12,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",12,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",12,[[["self"]],["unknownfields"]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",12,[[["self"]],["messagedescriptor"]]],[11,"new","","",12,[[],["metricfamily"]]],[11,"descriptor_static","","",12,[[],["messagedescriptor"]]],[11,"default_instance","","",12,[[],["metricfamily"]]],[11,"value","","",13,[[["self"]],["i32"]]],[11,"from_i32","","",13,[[["i32"]],[["option",["metrictype"]],["metrictype"]]]],[11,"values","","",13,[[]]],[11,"enum_descriptor_static","","",13,[[],["enumdescriptor"]]],[11,"clear","","",3,[[["self"]]]],[11,"clear","","",4,[[["self"]]]],[11,"clear","","",5,[[["self"]]]],[11,"clear","","",6,[[["self"]]]],[11,"clear","","",7,[[["self"]]]],[11,"clear","","",8,[[["self"]]]],[11,"clear","","",9,[[["self"]]]],[11,"clear","","",10,[[["self"]]]],[11,"clear","","",11,[[["self"]]]],[11,"clear","","",12,[[["self"]]]],[11,"as_ref","","",3,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",4,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",5,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",6,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",7,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",8,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",9,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",10,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",11,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",12,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",13,[[["self"]],["protobufvalueref"]]],[11,"new","prometheus::core","Create a `GenericCounter` with the `name` and `help`…",30,[[["into",["string"]],["string"]],["result"]]],[11,"with_opts","","Create a `GenericCounter` with the `opts` options.",30,[[["opts"]],["result"]]],[11,"inc_by","","Increase the given value to the counter.",30,[[["self"]]]],[11,"inc","","Increase the counter by 1.",30,[[["self"]]]],[11,"get","","Return the counter value.",30,[[["self"]]]],[11,"local","","Return a `GenericLocalCounter` for single thread usage.",30,[[["self"]],["genericlocalcounter"]]],[11,"new","","Create a new `GenericCounterVec` based on the provided…",37,[[["opts"]],["result"]]],[11,"local","","Return a `GenericLocalCounterVec` for single thread usage.",37,[[["self"]],["genericlocalcountervec"]]],[11,"new","","Create a new `GenericCounterVec` based on the provided…",38,[[["opts"]],["result"]]],[11,"local","","Return a `GenericLocalCounterVec` for single thread usage.",38,[[["self"]],["genericlocalcountervec"]]],[11,"inc_by","","Increase the given value to the local counter.",31,[[["self"]]]],[11,"inc","","Increase the local counter by 1.",31,[[["self"]]]],[11,"get","","Return the local counter value.",31,[[["self"]]]],[11,"flush","","Flush the local metrics to the `Counter`.",31,[[["self"]]]],[11,"with_label_values","","Get a `GenericLocalCounter` by label values. See more…",32,[[["self"]],["genericlocalcounter"]]],[11,"remove_label_values","","Remove a `GenericLocalCounter` by label values. See more…",32,[[["self"]],["result"]]],[11,"flush","","Flush the local metrics to the `CounterVec` metric.",32,[[["self"]]]],[11,"new","","Initializes a new `Desc`. Errors are recorded in the Desc…",19,[[["string"],["hashmap",["string","string"]],["vec",["string"]]],[["desc"],["result",["desc"]]]]],[11,"new","","Create a `GenericGauge` with the `name` and `help`…",33,[[["into",["string"]],["string"]],["result"]]],[11,"with_opts","","Create a `GenericGauge` with the `opts` options.",33,[[["opts"]],["result"]]],[11,"set","","Set the gauge to an arbitrary value.",33,[[["self"]]]],[11,"inc","","Increase the gauge by 1.",33,[[["self"]]]],[11,"dec","","Decrease the gauge by 1.",33,[[["self"]]]],[11,"add","","Add the given value to the gauge. (The value can be…",33,[[["self"]]]],[11,"sub","","Subtract the given value from the gauge. (The value can be…",33,[[["self"]]]],[11,"get","","Return the gauge value.",33,[[["self"]]]],[11,"new","","Create a new `GenericGaugeVec` based on the provided…",37,[[["opts"]],["result"]]],[11,"new","","Create a new `GenericGaugeVec` based on the provided…",39,[[["opts"]],["result"]]],[11,"new","","Create a new `HistogramVec` based on the provided…",37,[[["histogramopts"]],[["histogramvec"],["result",["histogramvec"]]]]],[11,"local","","Return a `LocalHistogramVec` for single thread usage.",37,[[["self"]],["localhistogramvec"]]],[11,"new","prometheus","Create a new `HistogramVec` based on the provided…",40,[[["histogramopts"]],[["histogramvec"],["result",["histogramvec"]]]]],[11,"local","","Return a `LocalHistogramVec` for single thread usage.",40,[[["self"]],["localhistogramvec"]]],[11,"observe_duration","prometheus::local","`observe_duration` observes the amount of time in seconds…",35,[[]]],[11,"observe","","Add a single observation to the `Histogram`.",34,[[["f64"],["self"]]]],[11,"start_timer","","Return a `LocalHistogramTimer` to track a duration.",34,[[["self"]],["localhistogramtimer"]]],[11,"clear","","Clear the local metric.",34,[[["self"]]]],[11,"flush","","Flush the local metrics to the `Histogram` metric.",34,[[["self"]]]],[11,"with_label_values","","Get a `LocalHistogram` by label values. See more…",36,[[["self"]],["localhistogram"]]],[11,"remove_label_values","","Remove a `LocalHistogram` by label values. See more…",36,[[["self"]],["result"]]],[11,"flush","","Flush the local metrics to the `HistogramVec` metric.",36,[[["self"]]]],[11,"create","prometheus::core","`create` creates a MetricVec with description `desc`, a…",37,[[["metrictype"],["t"]],[["result",["metricvec"]],["metricvec"]]]],[11,"get_metric_with_label_values","","`get_metric_with_label_values` returns the `Metric` for…",37,[[["self"]],["result"]]],[11,"get_metric_with","","`get_metric_with` returns the `Metric` for the given…",37,[[["self"],["hashmap"]],["result"]]],[11,"with_label_values","","`with_label_values` works as…",37,[[["self"]]]],[11,"with","","`with` works as `get_metric_with`, but panics if an error…",37,[[["self"],["hashmap"]]]],[11,"remove_label_values","","`remove_label_values` removes the metric where the…",37,[[["self"]],["result"]]],[11,"remove","","`remove` removes the metric where the variable labels are…",37,[[["self"],["hashmap"]],["result"]]],[11,"reset","","`reset` deletes all metrics in this vector.",37,[[["self"]]]]],"p":[[3,"HistogramOpts"],[3,"Opts"],[4,"Error"],[3,"LabelPair"],[3,"Gauge"],[3,"Counter"],[3,"Quantile"],[3,"Summary"],[3,"Untyped"],[3,"Histogram"],[3,"Bucket"],[3,"Metric"],[3,"MetricFamily"],[4,"MetricType"],[3,"ProtobufEncoder"],[3,"TextEncoder"],[3,"HistogramTimer"],[3,"Histogram"],[3,"Registry"],[3,"Desc"],[8,"Number"],[8,"Atomic"],[8,"Describer"],[8,"Collector"],[8,"Metric"],[8,"MetricVecBuilder"],[8,"Encoder"],[3,"AtomicF64"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"GenericCounter"],[3,"GenericLocalCounter"],[3,"GenericLocalCounterVec"],[3,"GenericGauge"],[3,"LocalHistogram"],[3,"LocalHistogramTimer"],[3,"LocalHistogramVec"],[3,"MetricVec"],[6,"GenericCounterVec"],[6,"GenericGaugeVec"],[6,"HistogramVec"]]};
searchIndex["prost"] = {"doc":"","i":[[3,"DecodeError","prost","A Protobuf message decoding error.",null,null],[3,"EncodeError","","A Protobuf message encoding error.",null,null],[5,"encode_length_delimiter","","Encodes a length delimiter to the buffer.",null,[[["usize"],["b"]],[["result",["encodeerror"]],["encodeerror"]]]],[5,"length_delimiter_len","","Returns the encoded length of a length delimiter.",null,[[["usize"]],["usize"]]],[5,"decode_length_delimiter","","Decodes a length delimiter from the buffer.",null,[[["b"]],[["decodeerror"],["result",["usize","decodeerror"]],["usize"]]]],[11,"required_capacity","","Returns the required buffer capacity to encode the message.",0,[[["self"]],["usize"]]],[11,"remaining","","Returns the remaining length in the provided buffer at the…",0,[[["self"]],["usize"]]],[8,"Message","","A Protocol Buffers message.",null,null],[10,"encoded_len","","Returns the encoded length of the message without a length…",1,[[["self"]],["usize"]]],[11,"encode","","Encodes the message to a buffer.",1,[[["self"],["b"]],[["result",["encodeerror"]],["encodeerror"]]]],[11,"encode_length_delimited","","Encodes the message with a length-delimiter to a buffer.",1,[[["self"],["b"]],[["result",["encodeerror"]],["encodeerror"]]]],[11,"decode","","Decodes an instance of the message from a buffer.",1,[[["b"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"decode_length_delimited","","Decodes a length-delimited instance of the message from…",1,[[["b"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"merge","","Decodes an instance of the message from a buffer, and…",1,[[["self"],["b"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"merge_length_delimited","","Decodes a length-delimited instance of the message from…",1,[[["self"],["b"]],[["result",["decodeerror"]],["decodeerror"]]]],[10,"clear","","Clears the message, resetting all fields to their default.",1,[[["self"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["decodeerror"]]],[11,"clone","","",0,[[["self"]],["encodeerror"]]],[11,"eq","","",2,[[["decodeerror"],["self"]],["bool"]]],[11,"ne","","",2,[[["decodeerror"],["self"]],["bool"]]],[11,"eq","","",0,[[["encodeerror"],["self"]],["bool"]]],[11,"ne","","",0,[[["encodeerror"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"encode","","Encodes the message to a buffer.",1,[[["self"],["b"]],[["result",["encodeerror"]],["encodeerror"]]]],[11,"encode_length_delimited","","Encodes the message with a length-delimiter to a buffer.",1,[[["self"],["b"]],[["result",["encodeerror"]],["encodeerror"]]]],[11,"decode","","Decodes an instance of the message from a buffer.",1,[[["b"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"decode_length_delimited","","Decodes a length-delimited instance of the message from…",1,[[["b"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"merge","","Decodes an instance of the message from a buffer, and…",1,[[["self"],["b"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"merge_length_delimited","","Decodes a length-delimited instance of the message from…",1,[[["self"],["b"]],[["result",["decodeerror"]],["decodeerror"]]]]],"p":[[3,"EncodeError"],[8,"Message"],[3,"DecodeError"]]};
searchIndex["prost_derive"] = {"doc":"","i":[[24,"Message","prost_derive","",null,null],[24,"Enumeration","","",null,null],[24,"Oneof","","",null,null]],"p":[]};
searchIndex["prost_types"] = {"doc":"Protocol Buffers well-known types.","i":[[3,"FileDescriptorSet","prost_types","The protocol compiler can output a FileDescriptorSet…",null,null],[12,"file","","",0,null],[3,"FileDescriptorProto","","Describes a complete .proto file.",null,null],[12,"name","","file name, relative to root of source tree",1,null],[12,"package","","e.g. \"foo\", \"foo.bar\", etc.",1,null],[12,"dependency","","Names of files imported by this file.",1,null],[12,"public_dependency","","Indexes of the public imported files in the dependency…",1,null],[12,"weak_dependency","","Indexes of the weak imported files in the dependency list.…",1,null],[12,"message_type","","All top-level definitions in this file.",1,null],[12,"enum_type","","",1,null],[12,"service","","",1,null],[12,"extension","","",1,null],[12,"options","","",1,null],[12,"source_code_info","","This field contains optional information about the…",1,null],[12,"syntax","","The syntax of the proto file. The supported values are…",1,null],[3,"DescriptorProto","","Describes a message type.",null,null],[12,"name","","",2,null],[12,"field","","",2,null],[12,"extension","","",2,null],[12,"nested_type","","",2,null],[12,"enum_type","","",2,null],[12,"extension_range","","",2,null],[12,"oneof_decl","","",2,null],[12,"options","","",2,null],[12,"reserved_range","","",2,null],[12,"reserved_name","","Reserved field names, which may not be used by fields in…",2,null],[3,"ExtensionRangeOptions","","",null,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",3,null],[3,"FieldDescriptorProto","","Describes a field within a message.",null,null],[12,"name","","",4,null],[12,"number","","",4,null],[12,"label","","",4,null],[12,"type","","If type_name is set, this need not be set. If both this…",4,null],[12,"type_name","","For message and enum types, this is the name of the type.…",4,null],[12,"extendee","","For extensions, this is the name of the type being…",4,null],[12,"default_value","","For numeric types, contains the original text…",4,null],[12,"oneof_index","","If set, gives the index of a oneof in the containing…",4,null],[12,"json_name","","JSON name of this field. The value is set by protocol…",4,null],[12,"options","","",4,null],[3,"OneofDescriptorProto","","Describes a oneof.",null,null],[12,"name","","",5,null],[12,"options","","",5,null],[3,"EnumDescriptorProto","","Describes an enum type.",null,null],[12,"name","","",6,null],[12,"value","","",6,null],[12,"options","","",6,null],[12,"reserved_range","","Range of reserved numeric values. Reserved numeric values…",6,null],[12,"reserved_name","","Reserved enum value names, which may not be reused. A…",6,null],[3,"EnumValueDescriptorProto","","Describes a value within an enum.",null,null],[12,"name","","",7,null],[12,"number","","",7,null],[12,"options","","",7,null],[3,"ServiceDescriptorProto","","Describes a service.",null,null],[12,"name","","",8,null],[12,"method","","",8,null],[12,"options","","",8,null],[3,"MethodDescriptorProto","","Describes a method of a service.",null,null],[12,"name","","",9,null],[12,"input_type","","Input and output type names. These are resolved in the…",9,null],[12,"output_type","","",9,null],[12,"options","","",9,null],[12,"client_streaming","","Identifies if client streams multiple client messages",9,null],[12,"server_streaming","","Identifies if server streams multiple server messages",9,null],[3,"FileOptions","","",null,null],[12,"java_package","","Sets the Java package where classes generated from this…",10,null],[12,"java_outer_classname","","If set, all the classes from the .proto file are wrapped…",10,null],[12,"java_multiple_files","","If set true, then the Java code generator will generate a…",10,null],[12,"java_generate_equals_and_hash","","This option does nothing.",10,null],[12,"java_string_check_utf8","","If set true, then the Java2 code generator will generate…",10,null],[12,"optimize_for","","",10,null],[12,"go_package","","Sets the Go package where structs generated from this…",10,null],[12,"cc_generic_services","","Should generic services be generated in each language?…",10,null],[12,"java_generic_services","","",10,null],[12,"py_generic_services","","",10,null],[12,"php_generic_services","","",10,null],[12,"deprecated","","Is this file deprecated? Depending on the target platform,…",10,null],[12,"cc_enable_arenas","","Enables the use of arenas for the proto messages in this…",10,null],[12,"objc_class_prefix","","Sets the objective c class prefix which is prepended to…",10,null],[12,"csharp_namespace","","Namespace for generated classes; defaults to the package.",10,null],[12,"swift_prefix","","By default Swift generators will take the proto package…",10,null],[12,"php_class_prefix","","Sets the php class prefix which is prepended to all php…",10,null],[12,"php_namespace","","Use this option to change the namespace of php generated…",10,null],[12,"php_metadata_namespace","","Use this option to change the namespace of php generated…",10,null],[12,"ruby_package","","Use this option to change the package of ruby generated…",10,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",10,null],[3,"MessageOptions","","",null,null],[12,"message_set_wire_format","","Set true to use the old proto1 MessageSet wire format for…",11,null],[12,"no_standard_descriptor_accessor","","Disables the generation of the standard \"descriptor()\"…",11,null],[12,"deprecated","","Is this message deprecated? Depending on the target…",11,null],[12,"map_entry","","Whether the message is an automatically generated map…",11,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",11,null],[3,"FieldOptions","","",null,null],[12,"ctype","","The ctype option instructs the C++ code generator to use a…",12,null],[12,"packed","","The packed option can be enabled for repeated primitive…",12,null],[12,"jstype","","The jstype option determines the JavaScript type used for…",12,null],[12,"lazy","","Should this field be parsed lazily? Lazy applies only to…",12,null],[12,"deprecated","","Is this field deprecated? Depending on the target…",12,null],[12,"weak","","For Google-internal migration only. Do not use.",12,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",12,null],[3,"OneofOptions","","",null,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",13,null],[3,"EnumOptions","","",null,null],[12,"allow_alias","","Set this option to true to allow mapping different tag…",14,null],[12,"deprecated","","Is this enum deprecated? Depending on the target platform,…",14,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",14,null],[3,"EnumValueOptions","","",null,null],[12,"deprecated","","Is this enum value deprecated? Depending on the target…",15,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",15,null],[3,"ServiceOptions","","",null,null],[12,"deprecated","","Is this service deprecated? Depending on the target…",16,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",16,null],[3,"MethodOptions","","",null,null],[12,"deprecated","","Is this method deprecated? Depending on the target…",17,null],[12,"idempotency_level","","",17,null],[12,"uninterpreted_option","","The parser stores options it doesn't recognize here. See…",17,null],[3,"UninterpretedOption","","A message representing a option the parser does not…",null,null],[12,"name","","",18,null],[12,"identifier_value","","The value of the uninterpreted option, in whatever type…",18,null],[12,"positive_int_value","","",18,null],[12,"negative_int_value","","",18,null],[12,"double_value","","",18,null],[12,"string_value","","",18,null],[12,"aggregate_value","","",18,null],[3,"SourceCodeInfo","","Encapsulates information about the original source file…",null,null],[12,"location","","A Location identifies a piece of source code in a .proto…",19,null],[3,"GeneratedCodeInfo","","Describes the relationship between generated code and its…",null,null],[12,"annotation","","An Annotation connects some span of text in generated code…",20,null],[3,"Any","","`Any` contains an arbitrary serialized protocol buffer…",null,null],[12,"type_url","","A URL/resource name that uniquely identifies the type of…",21,null],[12,"value","","Must be a valid serialized protocol buffer of the above…",21,null],[3,"SourceContext","","`SourceContext` represents information about the source of…",null,null],[12,"file_name","","The path-qualified name of the .proto file that contained…",22,null],[3,"Type","","A protocol buffer message type.",null,null],[12,"name","","The fully qualified message name.",23,null],[12,"fields","","The list of fields.",23,null],[12,"oneofs","","The list of types appearing in `oneof` definitions in this…",23,null],[12,"options","","The protocol buffer options.",23,null],[12,"source_context","","The source context.",23,null],[12,"syntax","","The source syntax.",23,null],[3,"Field","","A single field of a message type.",null,null],[12,"kind","","The field type.",24,null],[12,"cardinality","","The field cardinality.",24,null],[12,"number","","The field number.",24,null],[12,"name","","The field name.",24,null],[12,"type_url","","The field type URL, without the scheme, for message or…",24,null],[12,"oneof_index","","The index of the field type in `Type.oneofs`, for message…",24,null],[12,"packed","","Whether to use alternative packed wire representation.",24,null],[12,"options","","The protocol buffer options.",24,null],[12,"json_name","","The field JSON name.",24,null],[12,"default_value","","The string value of the default value of this field.…",24,null],[3,"Enum","","Enum type definition.",null,null],[12,"name","","Enum type name.",25,null],[12,"enumvalue","","Enum value definitions.",25,null],[12,"options","","Protocol buffer options.",25,null],[12,"source_context","","The source context.",25,null],[12,"syntax","","The source syntax.",25,null],[3,"EnumValue","","Enum value definition.",null,null],[12,"name","","Enum value name.",26,null],[12,"number","","Enum value number.",26,null],[12,"options","","Protocol buffer options.",26,null],[3,"Option","","A protocol buffer option, which can be attached to a…",null,null],[12,"name","","The option's name. For protobuf built-in options (options…",27,null],[12,"value","","The option's value packed in an Any message. If the value…",27,null],[3,"Api","","Api is a light-weight descriptor for an API Interface.",null,null],[12,"name","","The fully qualified name of this interface, including…",28,null],[12,"methods","","The methods of this interface, in unspecified order.",28,null],[12,"options","","Any metadata attached to the interface.",28,null],[12,"version","","A version string for this interface. If specified, must…",28,null],[12,"source_context","","Source context for the protocol buffer service represented…",28,null],[12,"mixins","","Included interfaces. See [Mixin][].",28,null],[12,"syntax","","The source syntax of the service.",28,null],[3,"Method","","Method represents a method of an API interface.",null,null],[12,"name","","The simple name of this method.",29,null],[12,"request_type_url","","A URL of the input message type.",29,null],[12,"request_streaming","","If true, the request is streamed.",29,null],[12,"response_type_url","","The URL of the output message type.",29,null],[12,"response_streaming","","If true, the response is streamed.",29,null],[12,"options","","Any metadata attached to the method.",29,null],[12,"syntax","","The source syntax of this method.",29,null],[3,"Mixin","","Declares an API Interface to be included in this…",null,null],[12,"name","","The fully qualified name of the interface which is included.",30,null],[12,"root","","If non-empty specifies a path under which inherited HTTP…",30,null],[3,"Duration","","A Duration represents a signed, fixed-length span of time…",null,null],[12,"seconds","","Signed seconds of the span of time. Must be from…",31,null],[12,"nanos","","Signed fractions of a second at nanosecond resolution of…",31,null],[3,"FieldMask","","`FieldMask` represents a set of symbolic field paths, for…",null,null],[12,"paths","","The set of field mask paths.",32,null],[3,"Struct","","`Struct` represents a structured data value, consisting of…",null,null],[12,"fields","","Unordered map of dynamically typed values.",33,null],[3,"Value","","`Value` represents a dynamically typed value which can be…",null,null],[12,"kind","","The kind of value.",34,null],[3,"ListValue","","`ListValue` is a wrapper around a repeated field of values.",null,null],[12,"values","","Repeated field of dynamically typed values.",35,null],[3,"Timestamp","","A Timestamp represents a point in time independent of any…",null,null],[12,"seconds","","Represents seconds of UTC time since Unix epoch…",36,null],[12,"nanos","","Non-negative fractions of a second at nanosecond…",36,null],[4,"Syntax","","The syntax in which a protocol buffer element is defined.",null,null],[13,"Proto2","","Syntax `proto2`.",37,null],[13,"Proto3","","Syntax `proto3`.",37,null],[4,"NullValue","","`NullValue` is a singleton enumeration to represent the…",null,null],[13,"NullValue","","Null value.",38,null],[0,"descriptor_proto","","",null,null],[3,"ExtensionRange","prost_types::descriptor_proto","",null,null],[12,"start","","Inclusive.",39,null],[12,"end","","Exclusive.",39,null],[12,"options","","",39,null],[3,"ReservedRange","","Range of reserved tag numbers. Reserved tag numbers may…",null,null],[12,"start","","Inclusive.",40,null],[12,"end","","Exclusive.",40,null],[11,"start","","Returns the value of `start`, or the default value if…",39,[[["self"]],["i32"]]],[11,"end","","Returns the value of `end`, or the default value if `end`…",39,[[["self"]],["i32"]]],[11,"start","","Returns the value of `start`, or the default value if…",40,[[["self"]],["i32"]]],[11,"end","","Returns the value of `end`, or the default value if `end`…",40,[[["self"]],["i32"]]],[0,"field_descriptor_proto","prost_types","",null,null],[4,"Type","prost_types::field_descriptor_proto","",null,null],[13,"Double","","0 is reserved for errors. Order is weird for historical…",41,null],[13,"Float","","",41,null],[13,"Int64","","Not ZigZag encoded. Negative numbers take 10 bytes. Use…",41,null],[13,"Uint64","","",41,null],[13,"Int32","","Not ZigZag encoded. Negative numbers take 10 bytes. Use…",41,null],[13,"Fixed64","","",41,null],[13,"Fixed32","","",41,null],[13,"Bool","","",41,null],[13,"String","","",41,null],[13,"Group","","Tag-delimited aggregate. Group type is deprecated and not…",41,null],[13,"Message","","Length-delimited aggregate.",41,null],[13,"Bytes","","New in version 2.",41,null],[13,"Uint32","","",41,null],[13,"Enum","","",41,null],[13,"Sfixed32","","",41,null],[13,"Sfixed64","","",41,null],[13,"Sint32","","Uses ZigZag encoding.",41,null],[13,"Sint64","","Uses ZigZag encoding.",41,null],[4,"Label","","",null,null],[13,"Optional","","0 is reserved for errors",42,null],[13,"Required","","",42,null],[13,"Repeated","","",42,null],[11,"is_valid","","Returns `true` if `value` is a variant of `Type`.",41,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Type`, or `None` if `value` is not…",41,[[["i32"]],[["option",["type"]],["type"]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `Label`.",42,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Label`, or `None` if `value` is…",42,[[["i32"]],[["option",["label"]],["label"]]]],[0,"enum_descriptor_proto","prost_types","",null,null],[3,"EnumReservedRange","prost_types::enum_descriptor_proto","Range of reserved numeric values. Reserved values may not…",null,null],[12,"start","","Inclusive.",43,null],[12,"end","","Inclusive.",43,null],[11,"start","","Returns the value of `start`, or the default value if…",43,[[["self"]],["i32"]]],[11,"end","","Returns the value of `end`, or the default value if `end`…",43,[[["self"]],["i32"]]],[0,"file_options","prost_types","",null,null],[4,"OptimizeMode","prost_types::file_options","Generated classes can be optimized for speed or code size.",null,null],[13,"Speed","","Generate complete code for parsing, serialization,",44,null],[13,"CodeSize","","etc.",44,null],[13,"LiteRuntime","","Generate code using MessageLite and the lite runtime.",44,null],[11,"is_valid","","Returns `true` if `value` is a variant of `OptimizeMode`.",44,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `OptimizeMode`, or `None` if…",44,[[["i32"]],[["optimizemode"],["option",["optimizemode"]]]]],[0,"field_options","prost_types","",null,null],[4,"CType","prost_types::field_options","",null,null],[13,"String","","Default mode.",45,null],[13,"Cord","","",45,null],[13,"StringPiece","","",45,null],[4,"JsType","","",null,null],[13,"JsNormal","","Use the default type.",46,null],[13,"JsString","","Use JavaScript strings.",46,null],[13,"JsNumber","","Use JavaScript numbers.",46,null],[11,"is_valid","","Returns `true` if `value` is a variant of `CType`.",45,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `CType`, or `None` if `value` is…",45,[[["i32"]],[["ctype"],["option",["ctype"]]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `JsType`.",46,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `JsType`, or `None` if `value` is…",46,[[["i32"]],[["option",["jstype"]],["jstype"]]]],[0,"method_options","prost_types","",null,null],[4,"IdempotencyLevel","prost_types::method_options","Is this method side-effect-free (or safe in HTTP…",null,null],[13,"IdempotencyUnknown","","",47,null],[13,"NoSideEffects","","implies idempotent",47,null],[13,"Idempotent","","idempotent, but may have side effects",47,null],[11,"is_valid","","Returns `true` if `value` is a variant of…",47,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `IdempotencyLevel`, or `None` if…",47,[[["i32"]],[["idempotencylevel"],["option",["idempotencylevel"]]]]],[0,"uninterpreted_option","prost_types","",null,null],[3,"NamePart","prost_types::uninterpreted_option","The name of the uninterpreted option. Each string…",null,null],[12,"name_part","","",48,null],[12,"is_extension","","",48,null],[0,"source_code_info","prost_types","",null,null],[3,"Location","prost_types::source_code_info","",null,null],[12,"path","","Identifies which part of the FileDescriptorProto was…",49,null],[12,"span","","Always has exactly three or four elements: start line,…",49,null],[12,"leading_comments","","If this SourceCodeInfo represents a complete declaration,…",49,null],[12,"trailing_comments","","",49,null],[12,"leading_detached_comments","","",49,null],[11,"leading_comments","","Returns the value of `leading_comments`, or the default…",49,[[["self"]],["str"]]],[11,"trailing_comments","","Returns the value of `trailing_comments`, or the default…",49,[[["self"]],["str"]]],[0,"generated_code_info","prost_types","",null,null],[3,"Annotation","prost_types::generated_code_info","",null,null],[12,"path","","Identifies the element in the original source .proto file.…",50,null],[12,"source_file","","Identifies the filesystem path to the original source…",50,null],[12,"begin","","Identifies the starting offset in bytes in the generated…",50,null],[12,"end","","Identifies the ending offset in bytes in the generated…",50,null],[11,"source_file","","Returns the value of `source_file`, or the default value…",50,[[["self"]],["str"]]],[11,"begin","","Returns the value of `begin`, or the default value if…",50,[[["self"]],["i32"]]],[11,"end","","Returns the value of `end`, or the default value if `end`…",50,[[["self"]],["i32"]]],[0,"field","prost_types","",null,null],[4,"Kind","prost_types::field","Basic field types.",null,null],[13,"TypeUnknown","","Field type unknown.",51,null],[13,"TypeDouble","","Field type double.",51,null],[13,"TypeFloat","","Field type float.",51,null],[13,"TypeInt64","","Field type int64.",51,null],[13,"TypeUint64","","Field type uint64.",51,null],[13,"TypeInt32","","Field type int32.",51,null],[13,"TypeFixed64","","Field type fixed64.",51,null],[13,"TypeFixed32","","Field type fixed32.",51,null],[13,"TypeBool","","Field type bool.",51,null],[13,"TypeString","","Field type string.",51,null],[13,"TypeGroup","","Field type group. Proto2 syntax only, and deprecated.",51,null],[13,"TypeMessage","","Field type message.",51,null],[13,"TypeBytes","","Field type bytes.",51,null],[13,"TypeUint32","","Field type uint32.",51,null],[13,"TypeEnum","","Field type enum.",51,null],[13,"TypeSfixed32","","Field type sfixed32.",51,null],[13,"TypeSfixed64","","Field type sfixed64.",51,null],[13,"TypeSint32","","Field type sint32.",51,null],[13,"TypeSint64","","Field type sint64.",51,null],[4,"Cardinality","","Whether a field is optional, required, or repeated.",null,null],[13,"Unknown","","For fields with unknown cardinality.",52,null],[13,"Optional","","For optional fields.",52,null],[13,"Required","","For required fields. Proto2 syntax only.",52,null],[13,"Repeated","","For repeated fields.",52,null],[11,"is_valid","","Returns `true` if `value` is a variant of `Kind`.",51,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Kind`, or `None` if `value` is not…",51,[[["i32"]],[["option",["kind"]],["kind"]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `Cardinality`.",52,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Cardinality`, or `None` if `value`…",52,[[["i32"]],[["option",["cardinality"]],["cardinality"]]]],[0,"value","prost_types","",null,null],[4,"Kind","prost_types::value","The kind of value.",null,null],[13,"NullValue","","Represents a null value.",53,null],[13,"NumberValue","","Represents a double value.",53,null],[13,"StringValue","","Represents a string value.",53,null],[13,"BoolValue","","Represents a boolean value.",53,null],[13,"StructValue","","Represents a structured value.",53,null],[13,"ListValue","","Represents a repeated `Value`.",53,null],[11,"encode","","",53,[[["self"],["b"]]]],[11,"merge","","",53,[[["option"],["u32"],["b"],["wiretype"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",53,[[["self"]],["usize"]]],[0,"compiler","prost_types","",null,null],[3,"Version","prost_types::compiler","The version number of protocol compiler.",null,null],[12,"major","","",54,null],[12,"minor","","",54,null],[12,"patch","","",54,null],[12,"suffix","","A suffix for alpha, beta or rc release, e.g., \"alpha-1\",…",54,null],[3,"CodeGeneratorRequest","","An encoded CodeGeneratorRequest is written to the plugin's…",null,null],[12,"file_to_generate","","The .proto files that were explicitly listed on the…",55,null],[12,"parameter","","The generator parameter passed on the command-line.",55,null],[12,"proto_file","","FileDescriptorProtos for all files in files_to_generate…",55,null],[12,"compiler_version","","The version number of protocol compiler.",55,null],[3,"CodeGeneratorResponse","","The plugin writes an encoded CodeGeneratorResponse to…",null,null],[12,"error","","Error message. If non-empty, code generation failed. The…",56,null],[12,"file","","",56,null],[0,"code_generator_response","","",null,null],[3,"File","prost_types::compiler::code_generator_response","Represents a single generated file.",null,null],[12,"name","","The file name, relative to the output directory. The name…",57,null],[12,"insertion_point","","If non-empty, indicates that the named file should already…",57,null],[12,"content","","The file contents.",57,null],[11,"name","","Returns the value of `name`, or the default value if…",57,[[["self"]],["str"]]],[11,"insertion_point","","Returns the value of `insertion_point`, or the default…",57,[[["self"]],["str"]]],[11,"content","","Returns the value of `content`, or the default value if…",57,[[["self"]],["str"]]],[11,"major","prost_types::compiler","Returns the value of `major`, or the default value if…",54,[[["self"]],["i32"]]],[11,"minor","","Returns the value of `minor`, or the default value if…",54,[[["self"]],["i32"]]],[11,"patch","","Returns the value of `patch`, or the default value if…",54,[[["self"]],["i32"]]],[11,"suffix","","Returns the value of `suffix`, or the default value if…",54,[[["self"]],["str"]]],[11,"parameter","","Returns the value of `parameter`, or the default value if…",55,[[["self"]],["str"]]],[11,"error","","Returns the value of `error`, or the default value if…",56,[[["self"]],["str"]]],[11,"name","prost_types","Returns the value of `name`, or the default value if…",1,[[["self"]],["str"]]],[11,"package","","Returns the value of `package`, or the default value if…",1,[[["self"]],["str"]]],[11,"syntax","","Returns the value of `syntax`, or the default value if…",1,[[["self"]],["str"]]],[11,"name","","Returns the value of `name`, or the default value if…",2,[[["self"]],["str"]]],[11,"name","","Returns the value of `name`, or the default value if…",4,[[["self"]],["str"]]],[11,"extendee","","Returns the value of `extendee`, or the default value if…",4,[[["self"]],["str"]]],[11,"number","","Returns the value of `number`, or the default value if…",4,[[["self"]],["i32"]]],[11,"label","","Returns the enum value of `label`, or the default if the…",4,[[["self"]],["label"]]],[11,"set_label","","Sets `label` to the provided enum value.",4,[[["self"],["label"]]]],[11,"type","","Returns the enum value of `type`, or the default if the…",4,[[["self"]],["type"]]],[11,"set_type","","Sets `type` to the provided enum value.",4,[[["self"],["type"]]]],[11,"type_name","","Returns the value of `type_name`, or the default value if…",4,[[["self"]],["str"]]],[11,"default_value","","Returns the value of `default_value`, or the default value…",4,[[["self"]],["str"]]],[11,"oneof_index","","Returns the value of `oneof_index`, or the default value…",4,[[["self"]],["i32"]]],[11,"json_name","","Returns the value of `json_name`, or the default value if…",4,[[["self"]],["str"]]],[11,"name","","Returns the value of `name`, or the default value if…",5,[[["self"]],["str"]]],[11,"name","","Returns the value of `name`, or the default value if…",6,[[["self"]],["str"]]],[11,"name","","Returns the value of `name`, or the default value if…",7,[[["self"]],["str"]]],[11,"number","","Returns the value of `number`, or the default value if…",7,[[["self"]],["i32"]]],[11,"name","","Returns the value of `name`, or the default value if…",8,[[["self"]],["str"]]],[11,"name","","Returns the value of `name`, or the default value if…",9,[[["self"]],["str"]]],[11,"input_type","","Returns the value of `input_type`, or the default value if…",9,[[["self"]],["str"]]],[11,"output_type","","Returns the value of `output_type`, or the default value…",9,[[["self"]],["str"]]],[11,"client_streaming","","Returns the value of `client_streaming`, or the default…",9,[[["self"]],["bool"]]],[11,"server_streaming","","Returns the value of `server_streaming`, or the default…",9,[[["self"]],["bool"]]],[11,"java_package","","Returns the value of `java_package`, or the default value…",10,[[["self"]],["str"]]],[11,"java_outer_classname","","Returns the value of `java_outer_classname`, or the…",10,[[["self"]],["str"]]],[11,"optimize_for","","Returns the enum value of `optimize_for`, or the default…",10,[[["self"]],["optimizemode"]]],[11,"set_optimize_for","","Sets `optimize_for` to the provided enum value.",10,[[["self"],["optimizemode"]]]],[11,"java_multiple_files","","Returns the value of `java_multiple_files`, or the default…",10,[[["self"]],["bool"]]],[11,"go_package","","Returns the value of `go_package`, or the default value if…",10,[[["self"]],["str"]]],[11,"cc_generic_services","","Returns the value of `cc_generic_services`, or the default…",10,[[["self"]],["bool"]]],[11,"java_generic_services","","Returns the value of `java_generic_services`, or the…",10,[[["self"]],["bool"]]],[11,"py_generic_services","","Returns the value of `py_generic_services`, or the default…",10,[[["self"]],["bool"]]],[11,"java_generate_equals_and_hash","","Returns the value of `java_generate_equals_and_hash`, or…",10,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",10,[[["self"]],["bool"]]],[11,"java_string_check_utf8","","Returns the value of `java_string_check_utf8`, or the…",10,[[["self"]],["bool"]]],[11,"cc_enable_arenas","","Returns the value of `cc_enable_arenas`, or the default…",10,[[["self"]],["bool"]]],[11,"objc_class_prefix","","Returns the value of `objc_class_prefix`, or the default…",10,[[["self"]],["str"]]],[11,"csharp_namespace","","Returns the value of `csharp_namespace`, or the default…",10,[[["self"]],["str"]]],[11,"swift_prefix","","Returns the value of `swift_prefix`, or the default value…",10,[[["self"]],["str"]]],[11,"php_class_prefix","","Returns the value of `php_class_prefix`, or the default…",10,[[["self"]],["str"]]],[11,"php_namespace","","Returns the value of `php_namespace`, or the default value…",10,[[["self"]],["str"]]],[11,"php_generic_services","","Returns the value of `php_generic_services`, or the…",10,[[["self"]],["bool"]]],[11,"php_metadata_namespace","","Returns the value of `php_metadata_namespace`, or the…",10,[[["self"]],["str"]]],[11,"ruby_package","","Returns the value of `ruby_package`, or the default value…",10,[[["self"]],["str"]]],[11,"message_set_wire_format","","Returns the value of `message_set_wire_format`, or the…",11,[[["self"]],["bool"]]],[11,"no_standard_descriptor_accessor","","Returns the value of `no_standard_descriptor_accessor`, or…",11,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",11,[[["self"]],["bool"]]],[11,"map_entry","","Returns the value of `map_entry`, or the default value if…",11,[[["self"]],["bool"]]],[11,"ctype","","Returns the enum value of `ctype`, or the default if the…",12,[[["self"]],["ctype"]]],[11,"set_ctype","","Sets `ctype` to the provided enum value.",12,[[["self"],["ctype"]]]],[11,"packed","","Returns the value of `packed`, or the default value if…",12,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",12,[[["self"]],["bool"]]],[11,"lazy","","Returns the value of `lazy`, or the default value if…",12,[[["self"]],["bool"]]],[11,"jstype","","Returns the enum value of `jstype`, or the default if the…",12,[[["self"]],["jstype"]]],[11,"set_jstype","","Sets `jstype` to the provided enum value.",12,[[["self"],["jstype"]]]],[11,"weak","","Returns the value of `weak`, or the default value if…",12,[[["self"]],["bool"]]],[11,"allow_alias","","Returns the value of `allow_alias`, or the default value…",14,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",14,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",15,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",16,[[["self"]],["bool"]]],[11,"deprecated","","Returns the value of `deprecated`, or the default value if…",17,[[["self"]],["bool"]]],[11,"idempotency_level","","Returns the enum value of `idempotency_level`, or the…",17,[[["self"]],["idempotencylevel"]]],[11,"set_idempotency_level","","Sets `idempotency_level` to the provided enum value.",17,[[["idempotencylevel"],["self"]]]],[11,"identifier_value","","Returns the value of `identifier_value`, or the default…",18,[[["self"]],["str"]]],[11,"positive_int_value","","Returns the value of `positive_int_value`, or the default…",18,[[["self"]],["u64"]]],[11,"negative_int_value","","Returns the value of `negative_int_value`, or the default…",18,[[["self"]],["i64"]]],[11,"double_value","","Returns the value of `double_value`, or the default value…",18,[[["self"]],["f64"]]],[11,"string_value","","Returns the value of `string_value`, or the default value…",18,[[["self"]]]],[11,"aggregate_value","","Returns the value of `aggregate_value`, or the default…",18,[[["self"]],["str"]]],[11,"syntax","","Returns the enum value of `syntax`, or the default if the…",23,[[["self"]],["syntax"]]],[11,"set_syntax","","Sets `syntax` to the provided enum value.",23,[[["self"],["syntax"]]]],[11,"kind","","Returns the enum value of `kind`, or the default if the…",24,[[["self"]],["kind"]]],[11,"set_kind","","Sets `kind` to the provided enum value.",24,[[["self"],["kind"]]]],[11,"cardinality","","Returns the enum value of `cardinality`, or the default if…",24,[[["self"]],["cardinality"]]],[11,"set_cardinality","","Sets `cardinality` to the provided enum value.",24,[[["self"],["cardinality"]]]],[11,"syntax","","Returns the enum value of `syntax`, or the default if the…",25,[[["self"]],["syntax"]]],[11,"set_syntax","","Sets `syntax` to the provided enum value.",25,[[["self"],["syntax"]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `Syntax`.",37,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Syntax`, or `None` if `value` is…",37,[[["i32"]],[["syntax"],["option",["syntax"]]]]],[11,"syntax","","Returns the enum value of `syntax`, or the default if the…",28,[[["self"]],["syntax"]]],[11,"set_syntax","","Sets `syntax` to the provided enum value.",28,[[["self"],["syntax"]]]],[11,"syntax","","Returns the enum value of `syntax`, or the default if the…",29,[[["self"]],["syntax"]]],[11,"set_syntax","","Sets `syntax` to the provided enum value.",29,[[["self"],["syntax"]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `NullValue`.",38,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `NullValue`, or `None` if `value`…",38,[[["i32"]],[["nullvalue"],["option",["nullvalue"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","prost_types::descriptor_proto","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","prost_types::field_descriptor_proto","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","prost_types::enum_descriptor_proto","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","prost_types::file_options","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","prost_types::field_options","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","prost_types::method_options","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","prost_types::uninterpreted_option","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","prost_types::source_code_info","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","prost_types::generated_code_info","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","prost_types::field","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","prost_types::value","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","prost_types::compiler","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","prost_types::compiler::code_generator_response","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","prost_types","",31,[[["duration"]],["duration"]]],[11,"from","","",36,[[["systemtime"]],["timestamp"]]],[11,"clone","","",0,[[["self"]],["filedescriptorset"]]],[11,"clone","","",1,[[["self"]],["filedescriptorproto"]]],[11,"clone","","",2,[[["self"]],["descriptorproto"]]],[11,"clone","prost_types::descriptor_proto","",39,[[["self"]],["extensionrange"]]],[11,"clone","","",40,[[["self"]],["reservedrange"]]],[11,"clone","prost_types","",3,[[["self"]],["extensionrangeoptions"]]],[11,"clone","","",4,[[["self"]],["fielddescriptorproto"]]],[11,"clone","prost_types::field_descriptor_proto","",41,[[["self"]],["type"]]],[11,"clone","","",42,[[["self"]],["label"]]],[11,"clone","prost_types","",5,[[["self"]],["oneofdescriptorproto"]]],[11,"clone","","",6,[[["self"]],["enumdescriptorproto"]]],[11,"clone","prost_types::enum_descriptor_proto","",43,[[["self"]],["enumreservedrange"]]],[11,"clone","prost_types","",7,[[["self"]],["enumvaluedescriptorproto"]]],[11,"clone","","",8,[[["self"]],["servicedescriptorproto"]]],[11,"clone","","",9,[[["self"]],["methoddescriptorproto"]]],[11,"clone","","",10,[[["self"]],["fileoptions"]]],[11,"clone","prost_types::file_options","",44,[[["self"]],["optimizemode"]]],[11,"clone","prost_types","",11,[[["self"]],["messageoptions"]]],[11,"clone","","",12,[[["self"]],["fieldoptions"]]],[11,"clone","prost_types::field_options","",45,[[["self"]],["ctype"]]],[11,"clone","","",46,[[["self"]],["jstype"]]],[11,"clone","prost_types","",13,[[["self"]],["oneofoptions"]]],[11,"clone","","",14,[[["self"]],["enumoptions"]]],[11,"clone","","",15,[[["self"]],["enumvalueoptions"]]],[11,"clone","","",16,[[["self"]],["serviceoptions"]]],[11,"clone","","",17,[[["self"]],["methodoptions"]]],[11,"clone","prost_types::method_options","",47,[[["self"]],["idempotencylevel"]]],[11,"clone","prost_types","",18,[[["self"]],["uninterpretedoption"]]],[11,"clone","prost_types::uninterpreted_option","",48,[[["self"]],["namepart"]]],[11,"clone","prost_types","",19,[[["self"]],["sourcecodeinfo"]]],[11,"clone","prost_types::source_code_info","",49,[[["self"]],["location"]]],[11,"clone","prost_types","",20,[[["self"]],["generatedcodeinfo"]]],[11,"clone","prost_types::generated_code_info","",50,[[["self"]],["annotation"]]],[11,"clone","prost_types","",21,[[["self"]],["any"]]],[11,"clone","","",22,[[["self"]],["sourcecontext"]]],[11,"clone","","",23,[[["self"]],["type"]]],[11,"clone","","",24,[[["self"]],["field"]]],[11,"clone","prost_types::field","",51,[[["self"]],["kind"]]],[11,"clone","","",52,[[["self"]],["cardinality"]]],[11,"clone","prost_types","",25,[[["self"]],["enum"]]],[11,"clone","","",26,[[["self"]],["enumvalue"]]],[11,"clone","","",27,[[["self"]],["option"]]],[11,"clone","","",37,[[["self"]],["syntax"]]],[11,"clone","","",28,[[["self"]],["api"]]],[11,"clone","","",29,[[["self"]],["method"]]],[11,"clone","","",30,[[["self"]],["mixin"]]],[11,"clone","","",31,[[["self"]],["duration"]]],[11,"clone","","",32,[[["self"]],["fieldmask"]]],[11,"clone","","",33,[[["self"]],["struct"]]],[11,"clone","","",34,[[["self"]],["value"]]],[11,"clone","prost_types::value","",53,[[["self"]],["kind"]]],[11,"clone","prost_types","",35,[[["self"]],["listvalue"]]],[11,"clone","","",38,[[["self"]],["nullvalue"]]],[11,"clone","","",36,[[["self"]],["timestamp"]]],[11,"clone","prost_types::compiler","",54,[[["self"]],["version"]]],[11,"clone","","",55,[[["self"]],["codegeneratorrequest"]]],[11,"clone","","",56,[[["self"]],["codegeneratorresponse"]]],[11,"clone","prost_types::compiler::code_generator_response","",57,[[["self"]],["file"]]],[11,"default","prost_types","",0,[[],["filedescriptorset"]]],[11,"default","","",1,[[],["filedescriptorproto"]]],[11,"default","","",2,[[],["descriptorproto"]]],[11,"default","prost_types::descriptor_proto","",39,[[],["extensionrange"]]],[11,"default","","",40,[[],["reservedrange"]]],[11,"default","prost_types","",3,[[],["extensionrangeoptions"]]],[11,"default","","",4,[[],["fielddescriptorproto"]]],[11,"default","prost_types::field_descriptor_proto","",41,[[],["type"]]],[11,"default","","",42,[[],["label"]]],[11,"default","prost_types","",5,[[],["oneofdescriptorproto"]]],[11,"default","","",6,[[],["enumdescriptorproto"]]],[11,"default","prost_types::enum_descriptor_proto","",43,[[],["enumreservedrange"]]],[11,"default","prost_types","",7,[[],["enumvaluedescriptorproto"]]],[11,"default","","",8,[[],["servicedescriptorproto"]]],[11,"default","","",9,[[],["methoddescriptorproto"]]],[11,"default","","",10,[[],["fileoptions"]]],[11,"default","prost_types::file_options","",44,[[],["optimizemode"]]],[11,"default","prost_types","",11,[[],["messageoptions"]]],[11,"default","","",12,[[],["fieldoptions"]]],[11,"default","prost_types::field_options","",45,[[],["ctype"]]],[11,"default","","",46,[[],["jstype"]]],[11,"default","prost_types","",13,[[],["oneofoptions"]]],[11,"default","","",14,[[],["enumoptions"]]],[11,"default","","",15,[[],["enumvalueoptions"]]],[11,"default","","",16,[[],["serviceoptions"]]],[11,"default","","",17,[[],["methodoptions"]]],[11,"default","prost_types::method_options","",47,[[],["idempotencylevel"]]],[11,"default","prost_types","",18,[[],["uninterpretedoption"]]],[11,"default","prost_types::uninterpreted_option","",48,[[],["namepart"]]],[11,"default","prost_types","",19,[[],["sourcecodeinfo"]]],[11,"default","prost_types::source_code_info","",49,[[],["location"]]],[11,"default","prost_types","",20,[[],["generatedcodeinfo"]]],[11,"default","prost_types::generated_code_info","",50,[[],["annotation"]]],[11,"default","prost_types","",21,[[],["any"]]],[11,"default","","",22,[[],["sourcecontext"]]],[11,"default","","",23,[[],["type"]]],[11,"default","","",24,[[],["field"]]],[11,"default","prost_types::field","",51,[[],["kind"]]],[11,"default","","",52,[[],["cardinality"]]],[11,"default","prost_types","",25,[[],["enum"]]],[11,"default","","",26,[[],["enumvalue"]]],[11,"default","","",27,[[],["option"]]],[11,"default","","",37,[[],["syntax"]]],[11,"default","","",28,[[],["api"]]],[11,"default","","",29,[[],["method"]]],[11,"default","","",30,[[],["mixin"]]],[11,"default","","",31,[[],["duration"]]],[11,"default","","",32,[[],["fieldmask"]]],[11,"default","","",33,[[],["struct"]]],[11,"default","","",34,[[],["value"]]],[11,"default","","",35,[[],["listvalue"]]],[11,"default","","",38,[[],["nullvalue"]]],[11,"default","","",36,[[],["timestamp"]]],[11,"default","prost_types::compiler","",54,[[],["version"]]],[11,"default","","",55,[[],["codegeneratorrequest"]]],[11,"default","","",56,[[],["codegeneratorresponse"]]],[11,"default","prost_types::compiler::code_generator_response","",57,[[],["file"]]],[11,"cmp","prost_types::field_descriptor_proto","",41,[[["type"],["self"]],["ordering"]]],[11,"cmp","","",42,[[["self"],["label"]],["ordering"]]],[11,"cmp","prost_types::file_options","",44,[[["optimizemode"],["self"]],["ordering"]]],[11,"cmp","prost_types::field_options","",45,[[["ctype"],["self"]],["ordering"]]],[11,"cmp","","",46,[[["self"],["jstype"]],["ordering"]]],[11,"cmp","prost_types::method_options","",47,[[["self"],["idempotencylevel"]],["ordering"]]],[11,"cmp","prost_types::field","",51,[[["self"],["kind"]],["ordering"]]],[11,"cmp","","",52,[[["cardinality"],["self"]],["ordering"]]],[11,"cmp","prost_types","",37,[[["self"],["syntax"]],["ordering"]]],[11,"cmp","","",38,[[["nullvalue"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["filedescriptorset"]],["bool"]]],[11,"ne","","",0,[[["self"],["filedescriptorset"]],["bool"]]],[11,"eq","","",1,[[["filedescriptorproto"],["self"]],["bool"]]],[11,"ne","","",1,[[["filedescriptorproto"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["descriptorproto"]],["bool"]]],[11,"ne","","",2,[[["self"],["descriptorproto"]],["bool"]]],[11,"eq","prost_types::descriptor_proto","",39,[[["extensionrange"],["self"]],["bool"]]],[11,"ne","","",39,[[["extensionrange"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["reservedrange"]],["bool"]]],[11,"ne","","",40,[[["self"],["reservedrange"]],["bool"]]],[11,"eq","prost_types","",3,[[["self"],["extensionrangeoptions"]],["bool"]]],[11,"ne","","",3,[[["self"],["extensionrangeoptions"]],["bool"]]],[11,"eq","","",4,[[["fielddescriptorproto"],["self"]],["bool"]]],[11,"ne","","",4,[[["fielddescriptorproto"],["self"]],["bool"]]],[11,"eq","prost_types::field_descriptor_proto","",41,[[["type"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["label"]],["bool"]]],[11,"eq","prost_types","",5,[[["oneofdescriptorproto"],["self"]],["bool"]]],[11,"ne","","",5,[[["oneofdescriptorproto"],["self"]],["bool"]]],[11,"eq","","",6,[[["enumdescriptorproto"],["self"]],["bool"]]],[11,"ne","","",6,[[["enumdescriptorproto"],["self"]],["bool"]]],[11,"eq","prost_types::enum_descriptor_proto","",43,[[["enumreservedrange"],["self"]],["bool"]]],[11,"ne","","",43,[[["enumreservedrange"],["self"]],["bool"]]],[11,"eq","prost_types","",7,[[["self"],["enumvaluedescriptorproto"]],["bool"]]],[11,"ne","","",7,[[["self"],["enumvaluedescriptorproto"]],["bool"]]],[11,"eq","","",8,[[["servicedescriptorproto"],["self"]],["bool"]]],[11,"ne","","",8,[[["servicedescriptorproto"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["methoddescriptorproto"]],["bool"]]],[11,"ne","","",9,[[["self"],["methoddescriptorproto"]],["bool"]]],[11,"eq","","",10,[[["self"],["fileoptions"]],["bool"]]],[11,"ne","","",10,[[["self"],["fileoptions"]],["bool"]]],[11,"eq","prost_types::file_options","",44,[[["optimizemode"],["self"]],["bool"]]],[11,"eq","prost_types","",11,[[["self"],["messageoptions"]],["bool"]]],[11,"ne","","",11,[[["self"],["messageoptions"]],["bool"]]],[11,"eq","","",12,[[["self"],["fieldoptions"]],["bool"]]],[11,"ne","","",12,[[["self"],["fieldoptions"]],["bool"]]],[11,"eq","prost_types::field_options","",45,[[["ctype"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["jstype"]],["bool"]]],[11,"eq","prost_types","",13,[[["oneofoptions"],["self"]],["bool"]]],[11,"ne","","",13,[[["oneofoptions"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["enumoptions"]],["bool"]]],[11,"ne","","",14,[[["self"],["enumoptions"]],["bool"]]],[11,"eq","","",15,[[["self"],["enumvalueoptions"]],["bool"]]],[11,"ne","","",15,[[["self"],["enumvalueoptions"]],["bool"]]],[11,"eq","","",16,[[["self"],["serviceoptions"]],["bool"]]],[11,"ne","","",16,[[["self"],["serviceoptions"]],["bool"]]],[11,"eq","","",17,[[["self"],["methodoptions"]],["bool"]]],[11,"ne","","",17,[[["self"],["methodoptions"]],["bool"]]],[11,"eq","prost_types::method_options","",47,[[["self"],["idempotencylevel"]],["bool"]]],[11,"eq","prost_types","",18,[[["self"],["uninterpretedoption"]],["bool"]]],[11,"ne","","",18,[[["self"],["uninterpretedoption"]],["bool"]]],[11,"eq","prost_types::uninterpreted_option","",48,[[["namepart"],["self"]],["bool"]]],[11,"ne","","",48,[[["namepart"],["self"]],["bool"]]],[11,"eq","prost_types","",19,[[["sourcecodeinfo"],["self"]],["bool"]]],[11,"ne","","",19,[[["sourcecodeinfo"],["self"]],["bool"]]],[11,"eq","prost_types::source_code_info","",49,[[["self"],["location"]],["bool"]]],[11,"ne","","",49,[[["self"],["location"]],["bool"]]],[11,"eq","prost_types","",20,[[["generatedcodeinfo"],["self"]],["bool"]]],[11,"ne","","",20,[[["generatedcodeinfo"],["self"]],["bool"]]],[11,"eq","prost_types::generated_code_info","",50,[[["annotation"],["self"]],["bool"]]],[11,"ne","","",50,[[["annotation"],["self"]],["bool"]]],[11,"eq","prost_types","",21,[[["any"],["self"]],["bool"]]],[11,"ne","","",21,[[["any"],["self"]],["bool"]]],[11,"eq","","",22,[[["sourcecontext"],["self"]],["bool"]]],[11,"ne","","",22,[[["sourcecontext"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["type"]],["bool"]]],[11,"ne","","",23,[[["self"],["type"]],["bool"]]],[11,"eq","","",24,[[["self"],["field"]],["bool"]]],[11,"ne","","",24,[[["self"],["field"]],["bool"]]],[11,"eq","prost_types::field","",51,[[["self"],["kind"]],["bool"]]],[11,"eq","","",52,[[["cardinality"],["self"]],["bool"]]],[11,"eq","prost_types","",25,[[["enum"],["self"]],["bool"]]],[11,"ne","","",25,[[["enum"],["self"]],["bool"]]],[11,"eq","","",26,[[["enumvalue"],["self"]],["bool"]]],[11,"ne","","",26,[[["enumvalue"],["self"]],["bool"]]],[11,"eq","","",27,[[["option"],["self"]],["bool"]]],[11,"ne","","",27,[[["option"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["syntax"]],["bool"]]],[11,"eq","","",28,[[["api"],["self"]],["bool"]]],[11,"ne","","",28,[[["api"],["self"]],["bool"]]],[11,"eq","","",29,[[["method"],["self"]],["bool"]]],[11,"ne","","",29,[[["method"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["mixin"]],["bool"]]],[11,"ne","","",30,[[["self"],["mixin"]],["bool"]]],[11,"eq","","",31,[[["duration"],["self"]],["bool"]]],[11,"ne","","",31,[[["duration"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["fieldmask"]],["bool"]]],[11,"ne","","",32,[[["self"],["fieldmask"]],["bool"]]],[11,"eq","","",33,[[["self"],["struct"]],["bool"]]],[11,"ne","","",33,[[["self"],["struct"]],["bool"]]],[11,"eq","","",34,[[["self"],["value"]],["bool"]]],[11,"ne","","",34,[[["self"],["value"]],["bool"]]],[11,"eq","prost_types::value","",53,[[["self"],["kind"]],["bool"]]],[11,"ne","","",53,[[["self"],["kind"]],["bool"]]],[11,"eq","prost_types","",35,[[["self"],["listvalue"]],["bool"]]],[11,"ne","","",35,[[["self"],["listvalue"]],["bool"]]],[11,"eq","","",38,[[["nullvalue"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["timestamp"]],["bool"]]],[11,"ne","","",36,[[["self"],["timestamp"]],["bool"]]],[11,"eq","prost_types::compiler","",54,[[["self"],["version"]],["bool"]]],[11,"ne","","",54,[[["self"],["version"]],["bool"]]],[11,"eq","","",55,[[["self"],["codegeneratorrequest"]],["bool"]]],[11,"ne","","",55,[[["self"],["codegeneratorrequest"]],["bool"]]],[11,"eq","","",56,[[["self"],["codegeneratorresponse"]],["bool"]]],[11,"ne","","",56,[[["self"],["codegeneratorresponse"]],["bool"]]],[11,"eq","prost_types::compiler::code_generator_response","",57,[[["self"],["file"]],["bool"]]],[11,"ne","","",57,[[["self"],["file"]],["bool"]]],[11,"partial_cmp","prost_types::field_descriptor_proto","",41,[[["type"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",42,[[["self"],["label"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","prost_types::file_options","",44,[[["optimizemode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","prost_types::field_options","",45,[[["ctype"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",46,[[["self"],["jstype"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","prost_types::method_options","",47,[[["self"],["idempotencylevel"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","prost_types::field","",51,[[["self"],["kind"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",52,[[["cardinality"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","prost_types","",37,[[["self"],["syntax"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",38,[[["nullvalue"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::descriptor_proto","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::field_descriptor_proto","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::enum_descriptor_proto","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::file_options","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::field_options","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::method_options","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::uninterpreted_option","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::source_code_info","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::generated_code_info","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::field","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::value","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::compiler","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","prost_types::compiler::code_generator_response","",57,[[["formatter"],["self"]],["result"]]],[11,"hash","prost_types::field_descriptor_proto","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","prost_types::file_options","",44,[[["self"],["__h"]]]],[11,"hash","prost_types::field_options","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","prost_types::method_options","",47,[[["self"],["__h"]]]],[11,"hash","prost_types::field","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","prost_types","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"encode_raw","","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]],[11,"encode_raw","","",2,[[["self"],["b"]]]],[11,"merge_field","","",2,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",2,[[["self"]],["usize"]]],[11,"clear","","",2,[[["self"]]]],[11,"encode_raw","prost_types::descriptor_proto","",39,[[["self"],["b"]]]],[11,"merge_field","","",39,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",39,[[["self"]],["usize"]]],[11,"clear","","",39,[[["self"]]]],[11,"encode_raw","","",40,[[["self"],["b"]]]],[11,"merge_field","","",40,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",40,[[["self"]],["usize"]]],[11,"clear","","",40,[[["self"]]]],[11,"encode_raw","prost_types","",3,[[["self"],["b"]]]],[11,"merge_field","","",3,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",3,[[["self"]],["usize"]]],[11,"clear","","",3,[[["self"]]]],[11,"encode_raw","","",4,[[["self"],["b"]]]],[11,"merge_field","","",4,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",4,[[["self"]],["usize"]]],[11,"clear","","",4,[[["self"]]]],[11,"encode_raw","","",5,[[["self"],["b"]]]],[11,"merge_field","","",5,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",5,[[["self"]],["usize"]]],[11,"clear","","",5,[[["self"]]]],[11,"encode_raw","","",6,[[["self"],["b"]]]],[11,"merge_field","","",6,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",6,[[["self"]],["usize"]]],[11,"clear","","",6,[[["self"]]]],[11,"encode_raw","prost_types::enum_descriptor_proto","",43,[[["self"],["b"]]]],[11,"merge_field","","",43,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",43,[[["self"]],["usize"]]],[11,"clear","","",43,[[["self"]]]],[11,"encode_raw","prost_types","",7,[[["self"],["b"]]]],[11,"merge_field","","",7,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",7,[[["self"]],["usize"]]],[11,"clear","","",7,[[["self"]]]],[11,"encode_raw","","",8,[[["self"],["b"]]]],[11,"merge_field","","",8,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",8,[[["self"]],["usize"]]],[11,"clear","","",8,[[["self"]]]],[11,"encode_raw","","",9,[[["self"],["b"]]]],[11,"merge_field","","",9,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",9,[[["self"]],["usize"]]],[11,"clear","","",9,[[["self"]]]],[11,"encode_raw","","",10,[[["self"],["b"]]]],[11,"merge_field","","",10,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",10,[[["self"]],["usize"]]],[11,"clear","","",10,[[["self"]]]],[11,"encode_raw","","",11,[[["self"],["b"]]]],[11,"merge_field","","",11,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",11,[[["self"]],["usize"]]],[11,"clear","","",11,[[["self"]]]],[11,"encode_raw","","",12,[[["self"],["b"]]]],[11,"merge_field","","",12,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",12,[[["self"]],["usize"]]],[11,"clear","","",12,[[["self"]]]],[11,"encode_raw","","",13,[[["self"],["b"]]]],[11,"merge_field","","",13,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",13,[[["self"]],["usize"]]],[11,"clear","","",13,[[["self"]]]],[11,"encode_raw","","",14,[[["self"],["b"]]]],[11,"merge_field","","",14,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",14,[[["self"]],["usize"]]],[11,"clear","","",14,[[["self"]]]],[11,"encode_raw","","",15,[[["self"],["b"]]]],[11,"merge_field","","",15,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",15,[[["self"]],["usize"]]],[11,"clear","","",15,[[["self"]]]],[11,"encode_raw","","",16,[[["self"],["b"]]]],[11,"merge_field","","",16,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",16,[[["self"]],["usize"]]],[11,"clear","","",16,[[["self"]]]],[11,"encode_raw","","",17,[[["self"],["b"]]]],[11,"merge_field","","",17,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",17,[[["self"]],["usize"]]],[11,"clear","","",17,[[["self"]]]],[11,"encode_raw","","",18,[[["self"],["b"]]]],[11,"merge_field","","",18,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",18,[[["self"]],["usize"]]],[11,"clear","","",18,[[["self"]]]],[11,"encode_raw","prost_types::uninterpreted_option","",48,[[["self"],["b"]]]],[11,"merge_field","","",48,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",48,[[["self"]],["usize"]]],[11,"clear","","",48,[[["self"]]]],[11,"encode_raw","prost_types","",19,[[["self"],["b"]]]],[11,"merge_field","","",19,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",19,[[["self"]],["usize"]]],[11,"clear","","",19,[[["self"]]]],[11,"encode_raw","prost_types::source_code_info","",49,[[["self"],["b"]]]],[11,"merge_field","","",49,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",49,[[["self"]],["usize"]]],[11,"clear","","",49,[[["self"]]]],[11,"encode_raw","prost_types","",20,[[["self"],["b"]]]],[11,"merge_field","","",20,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",20,[[["self"]],["usize"]]],[11,"clear","","",20,[[["self"]]]],[11,"encode_raw","prost_types::generated_code_info","",50,[[["self"],["b"]]]],[11,"merge_field","","",50,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",50,[[["self"]],["usize"]]],[11,"clear","","",50,[[["self"]]]],[11,"encode_raw","prost_types","",21,[[["self"],["b"]]]],[11,"merge_field","","",21,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",21,[[["self"]],["usize"]]],[11,"clear","","",21,[[["self"]]]],[11,"encode_raw","","",22,[[["self"],["b"]]]],[11,"merge_field","","",22,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",22,[[["self"]],["usize"]]],[11,"clear","","",22,[[["self"]]]],[11,"encode_raw","","",23,[[["self"],["b"]]]],[11,"merge_field","","",23,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",23,[[["self"]],["usize"]]],[11,"clear","","",23,[[["self"]]]],[11,"encode_raw","","",24,[[["self"],["b"]]]],[11,"merge_field","","",24,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",24,[[["self"]],["usize"]]],[11,"clear","","",24,[[["self"]]]],[11,"encode_raw","","",25,[[["self"],["b"]]]],[11,"merge_field","","",25,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",25,[[["self"]],["usize"]]],[11,"clear","","",25,[[["self"]]]],[11,"encode_raw","","",26,[[["self"],["b"]]]],[11,"merge_field","","",26,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",26,[[["self"]],["usize"]]],[11,"clear","","",26,[[["self"]]]],[11,"encode_raw","","",27,[[["self"],["b"]]]],[11,"merge_field","","",27,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",27,[[["self"]],["usize"]]],[11,"clear","","",27,[[["self"]]]],[11,"encode_raw","","",28,[[["self"],["b"]]]],[11,"merge_field","","",28,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",28,[[["self"]],["usize"]]],[11,"clear","","",28,[[["self"]]]],[11,"encode_raw","","",29,[[["self"],["b"]]]],[11,"merge_field","","",29,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",29,[[["self"]],["usize"]]],[11,"clear","","",29,[[["self"]]]],[11,"encode_raw","","",30,[[["self"],["b"]]]],[11,"merge_field","","",30,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",30,[[["self"]],["usize"]]],[11,"clear","","",30,[[["self"]]]],[11,"encode_raw","","",31,[[["self"],["b"]]]],[11,"merge_field","","",31,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",31,[[["self"]],["usize"]]],[11,"clear","","",31,[[["self"]]]],[11,"encode_raw","","",32,[[["self"],["b"]]]],[11,"merge_field","","",32,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",32,[[["self"]],["usize"]]],[11,"clear","","",32,[[["self"]]]],[11,"encode_raw","","",33,[[["self"],["b"]]]],[11,"merge_field","","",33,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",33,[[["self"]],["usize"]]],[11,"clear","","",33,[[["self"]]]],[11,"encode_raw","","",34,[[["self"],["b"]]]],[11,"merge_field","","",34,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",34,[[["self"]],["usize"]]],[11,"clear","","",34,[[["self"]]]],[11,"encode_raw","","",35,[[["self"],["b"]]]],[11,"merge_field","","",35,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",35,[[["self"]],["usize"]]],[11,"clear","","",35,[[["self"]]]],[11,"encode_raw","","",36,[[["self"],["b"]]]],[11,"merge_field","","",36,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",36,[[["self"]],["usize"]]],[11,"clear","","",36,[[["self"]]]],[11,"encode_raw","prost_types::compiler","",54,[[["self"],["b"]]]],[11,"merge_field","","",54,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",54,[[["self"]],["usize"]]],[11,"clear","","",54,[[["self"]]]],[11,"encode_raw","","",55,[[["self"],["b"]]]],[11,"merge_field","","",55,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",55,[[["self"]],["usize"]]],[11,"clear","","",55,[[["self"]]]],[11,"encode_raw","","",56,[[["self"],["b"]]]],[11,"merge_field","","",56,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",56,[[["self"]],["usize"]]],[11,"clear","","",56,[[["self"]]]],[11,"encode_raw","prost_types::compiler::code_generator_response","",57,[[["self"],["b"]]]],[11,"merge_field","","",57,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",57,[[["self"]],["usize"]]],[11,"clear","","",57,[[["self"]]]]],"p":[[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"ExtensionRangeOptions"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"OneofOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"SourceCodeInfo"],[3,"GeneratedCodeInfo"],[3,"Any"],[3,"SourceContext"],[3,"Type"],[3,"Field"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"FieldMask"],[3,"Struct"],[3,"Value"],[3,"ListValue"],[3,"Timestamp"],[4,"Syntax"],[4,"NullValue"],[3,"ExtensionRange"],[3,"ReservedRange"],[4,"Type"],[4,"Label"],[3,"EnumReservedRange"],[4,"OptimizeMode"],[4,"CType"],[4,"JsType"],[4,"IdempotencyLevel"],[3,"NamePart"],[3,"Location"],[3,"Annotation"],[4,"Kind"],[4,"Cardinality"],[4,"Kind"],[3,"Version"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"File"]]};
searchIndex["protobuf"] = {"doc":"Library to read and write protocol buffers data.","i":[[3,"CachedSize","protobuf","Cached size field used in generated code. It is always…",null,null],[3,"RepeatedField","","Wrapper around vector to avoid deallocations on clear.",null,null],[3,"SingularField","","Like `Option<T>`, but keeps the actual element on `clear`.",null,null],[3,"SingularPtrField","","Like `Option<Box<T>>`, but keeps the actual element on…",null,null],[3,"CodedInputStream","","Buffered read with handy utilities.",null,null],[3,"CodedOutputStream","","Buffered write with handy utilities",null,null],[3,"UnknownFields","","Hold \"unknown\" fields in parsed message.",null,null],[12,"fields","","The map.",0,null],[3,"UnknownFieldsIter","","Iterator over `UnknownFields`",null,null],[3,"UnknownValues","","Field unknown values.",null,null],[12,"fixed32","","32-bit unknowns",1,null],[12,"fixed64","","64-bit unknowns",1,null],[12,"varint","","Varint unknowns",1,null],[12,"length_delimited","","Length-delimited unknowns",1,null],[3,"UnknownValuesIter","","Iterator over unknown values",null,null],[4,"UnknownValue","","Unknown value.",null,null],[13,"Fixed32","","32-bit unknown (e. g. `fixed32` or `float`)",2,null],[13,"Fixed64","","64-bit unknown (e. g. `fixed64` or `double`)",2,null],[13,"Varint","","Varint unknown (e. g. `int32` or `bool`)",2,null],[13,"LengthDelimited","","Length-delimited unknown (e. g. `message` or `string`)",2,null],[4,"UnknownValueRef","","Reference to unknown value.",null,null],[13,"Fixed32","","32-bit unknown",3,null],[13,"Fixed64","","64-bit unknown",3,null],[13,"Varint","","Varint unknown",3,null],[13,"LengthDelimited","","Length-delimited unknown",3,null],[5,"parse_from_bytes","","Parse message from byte array.",null,[[],[["message"],["protobufresult"]]]],[5,"parse_from_reader","","Parse message from reader. Parse stops on EOF or when…",null,[[["read"]],[["message"],["protobufresult"]]]],[5,"parse_length_delimited_from","","Parse length-delimited message from stream.",null,[[["codedinputstream"]],[["message"],["protobufresult"]]]],[5,"parse_length_delimited_from_bytes","","Parse length-delimited message from bytes.",null,[[],[["message"],["protobufresult"]]]],[5,"parse_length_delimited_from_reader","","Parse length-delimited message from `Read`.",null,[[["read"]],[["message"],["protobufresult"]]]],[0,"wire_format","","Serialization constants.",null,null],[3,"Tag","protobuf::wire_format","Parsed protobuf tag, which is a pair of field number and…",null,null],[4,"WireType","","One of six defined protobuf wire types",null,null],[13,"WireTypeVarint","","Varint (e. g. `int32` or `sint64`)",4,null],[13,"WireTypeFixed64","","Fixed size 64 bit (e. g. `fixed64` or `double`)",4,null],[13,"WireTypeLengthDelimited","","Length-delimited (e. g. `message` or `string`)",4,null],[13,"WireTypeStartGroup","","Groups are not supported by rust-protobuf",4,null],[13,"WireTypeEndGroup","","Groups are not supported by rust-protobuf",4,null],[13,"WireTypeFixed32","","Fixed size 64 bit (e. g. `fixed32` or `float`)",4,null],[17,"TAG_TYPE_BITS","","Tag occupies 3 bits",null,null],[17,"TAG_TYPE_MASK","","Tag mask",null,null],[17,"FIELD_NUMBER_MAX","","Max possible field number",null,null],[0,"descriptor","protobuf","Generated file from `google/protobuf/descriptor.proto`",null,null],[3,"FileDescriptorSet","protobuf::descriptor","",null,null],[12,"unknown_fields","","",5,null],[12,"cached_size","","",5,null],[3,"FileDescriptorProto","","",null,null],[12,"unknown_fields","","",6,null],[12,"cached_size","","",6,null],[3,"DescriptorProto","","",null,null],[12,"unknown_fields","","",7,null],[12,"cached_size","","",7,null],[3,"DescriptorProto_ExtensionRange","","",null,null],[12,"unknown_fields","","",8,null],[12,"cached_size","","",8,null],[3,"DescriptorProto_ReservedRange","","",null,null],[12,"unknown_fields","","",9,null],[12,"cached_size","","",9,null],[3,"FieldDescriptorProto","","",null,null],[12,"unknown_fields","","",10,null],[12,"cached_size","","",10,null],[3,"OneofDescriptorProto","","",null,null],[12,"unknown_fields","","",11,null],[12,"cached_size","","",11,null],[3,"EnumDescriptorProto","","",null,null],[12,"unknown_fields","","",12,null],[12,"cached_size","","",12,null],[3,"EnumValueDescriptorProto","","",null,null],[12,"unknown_fields","","",13,null],[12,"cached_size","","",13,null],[3,"ServiceDescriptorProto","","",null,null],[12,"unknown_fields","","",14,null],[12,"cached_size","","",14,null],[3,"MethodDescriptorProto","","",null,null],[12,"unknown_fields","","",15,null],[12,"cached_size","","",15,null],[3,"FileOptions","","",null,null],[12,"unknown_fields","","",16,null],[12,"cached_size","","",16,null],[3,"MessageOptions","","",null,null],[12,"unknown_fields","","",17,null],[12,"cached_size","","",17,null],[3,"FieldOptions","","",null,null],[12,"unknown_fields","","",18,null],[12,"cached_size","","",18,null],[3,"OneofOptions","","",null,null],[12,"unknown_fields","","",19,null],[12,"cached_size","","",19,null],[3,"EnumOptions","","",null,null],[12,"unknown_fields","","",20,null],[12,"cached_size","","",20,null],[3,"EnumValueOptions","","",null,null],[12,"unknown_fields","","",21,null],[12,"cached_size","","",21,null],[3,"ServiceOptions","","",null,null],[12,"unknown_fields","","",22,null],[12,"cached_size","","",22,null],[3,"MethodOptions","","",null,null],[12,"unknown_fields","","",23,null],[12,"cached_size","","",23,null],[3,"UninterpretedOption","","",null,null],[12,"unknown_fields","","",24,null],[12,"cached_size","","",24,null],[3,"UninterpretedOption_NamePart","","",null,null],[12,"unknown_fields","","",25,null],[12,"cached_size","","",25,null],[3,"SourceCodeInfo","","",null,null],[12,"unknown_fields","","",26,null],[12,"cached_size","","",26,null],[3,"SourceCodeInfo_Location","","",null,null],[12,"unknown_fields","","",27,null],[12,"cached_size","","",27,null],[3,"GeneratedCodeInfo","","",null,null],[12,"unknown_fields","","",28,null],[12,"cached_size","","",28,null],[3,"GeneratedCodeInfo_Annotation","","",null,null],[12,"unknown_fields","","",29,null],[12,"cached_size","","",29,null],[4,"FieldDescriptorProto_Type","","",null,null],[13,"TYPE_DOUBLE","","",30,null],[13,"TYPE_FLOAT","","",30,null],[13,"TYPE_INT64","","",30,null],[13,"TYPE_UINT64","","",30,null],[13,"TYPE_INT32","","",30,null],[13,"TYPE_FIXED64","","",30,null],[13,"TYPE_FIXED32","","",30,null],[13,"TYPE_BOOL","","",30,null],[13,"TYPE_STRING","","",30,null],[13,"TYPE_GROUP","","",30,null],[13,"TYPE_MESSAGE","","",30,null],[13,"TYPE_BYTES","","",30,null],[13,"TYPE_UINT32","","",30,null],[13,"TYPE_ENUM","","",30,null],[13,"TYPE_SFIXED32","","",30,null],[13,"TYPE_SFIXED64","","",30,null],[13,"TYPE_SINT32","","",30,null],[13,"TYPE_SINT64","","",30,null],[4,"FieldDescriptorProto_Label","","",null,null],[13,"LABEL_OPTIONAL","","",31,null],[13,"LABEL_REQUIRED","","",31,null],[13,"LABEL_REPEATED","","",31,null],[4,"FileOptions_OptimizeMode","","",null,null],[13,"SPEED","","",32,null],[13,"CODE_SIZE","","",32,null],[13,"LITE_RUNTIME","","",32,null],[4,"FieldOptions_CType","","",null,null],[13,"STRING","","",33,null],[13,"CORD","","",33,null],[13,"STRING_PIECE","","",33,null],[4,"FieldOptions_JSType","","",null,null],[13,"JS_NORMAL","","",34,null],[13,"JS_STRING","","",34,null],[13,"JS_NUMBER","","",34,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",5,[[],["filedescriptorset"]]],[11,"get_file","","",5,[[["self"]]]],[11,"clear_file","","",5,[[["self"]]]],[11,"set_file","","",5,[[["self"],["filedescriptorproto"],["repeatedfield",["filedescriptorproto"]]]]],[11,"mut_file","","",5,[[["self"]],["repeatedfield"]]],[11,"take_file","","",5,[[["self"]],[["filedescriptorproto"],["repeatedfield",["filedescriptorproto"]]]]],[11,"new","","",6,[[],["filedescriptorproto"]]],[11,"get_name","","",6,[[["self"]],["str"]]],[11,"clear_name","","",6,[[["self"]]]],[11,"has_name","","",6,[[["self"]],["bool"]]],[11,"set_name","","",6,[[["string"],["self"]]]],[11,"mut_name","","",6,[[["self"]],["string"]]],[11,"take_name","","",6,[[["self"]],["string"]]],[11,"get_package","","",6,[[["self"]],["str"]]],[11,"clear_package","","",6,[[["self"]]]],[11,"has_package","","",6,[[["self"]],["bool"]]],[11,"set_package","","",6,[[["string"],["self"]]]],[11,"mut_package","","",6,[[["self"]],["string"]]],[11,"take_package","","",6,[[["self"]],["string"]]],[11,"get_dependency","","",6,[[["self"]]]],[11,"clear_dependency","","",6,[[["self"]]]],[11,"set_dependency","","",6,[[["string"],["self"],["repeatedfield",["string"]]]]],[11,"mut_dependency","","",6,[[["self"]],["repeatedfield"]]],[11,"take_dependency","","",6,[[["self"]],[["string"],["repeatedfield",["string"]]]]],[11,"get_public_dependency","","",6,[[["self"]]]],[11,"clear_public_dependency","","",6,[[["self"]]]],[11,"set_public_dependency","","",6,[[["vec",["i32"]],["self"],["i32"]]]],[11,"mut_public_dependency","","",6,[[["self"]],["vec"]]],[11,"take_public_dependency","","",6,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"get_weak_dependency","","",6,[[["self"]]]],[11,"clear_weak_dependency","","",6,[[["self"]]]],[11,"set_weak_dependency","","",6,[[["vec",["i32"]],["self"],["i32"]]]],[11,"mut_weak_dependency","","",6,[[["self"]],["vec"]]],[11,"take_weak_dependency","","",6,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"get_message_type","","",6,[[["self"]]]],[11,"clear_message_type","","",6,[[["self"]]]],[11,"set_message_type","","",6,[[["descriptorproto"],["self"],["repeatedfield",["descriptorproto"]]]]],[11,"mut_message_type","","",6,[[["self"]],["repeatedfield"]]],[11,"take_message_type","","",6,[[["self"]],[["descriptorproto"],["repeatedfield",["descriptorproto"]]]]],[11,"get_enum_type","","",6,[[["self"]]]],[11,"clear_enum_type","","",6,[[["self"]]]],[11,"set_enum_type","","",6,[[["repeatedfield",["enumdescriptorproto"]],["self"],["enumdescriptorproto"]]]],[11,"mut_enum_type","","",6,[[["self"]],["repeatedfield"]]],[11,"take_enum_type","","",6,[[["self"]],[["repeatedfield",["enumdescriptorproto"]],["enumdescriptorproto"]]]],[11,"get_service","","",6,[[["self"]]]],[11,"clear_service","","",6,[[["self"]]]],[11,"set_service","","",6,[[["self"],["repeatedfield",["servicedescriptorproto"]],["servicedescriptorproto"]]]],[11,"mut_service","","",6,[[["self"]],["repeatedfield"]]],[11,"take_service","","",6,[[["self"]],[["repeatedfield",["servicedescriptorproto"]],["servicedescriptorproto"]]]],[11,"get_extension","","",6,[[["self"]]]],[11,"clear_extension","","",6,[[["self"]]]],[11,"set_extension","","",6,[[["repeatedfield",["fielddescriptorproto"]],["self"],["fielddescriptorproto"]]]],[11,"mut_extension","","",6,[[["self"]],["repeatedfield"]]],[11,"take_extension","","",6,[[["self"]],[["repeatedfield",["fielddescriptorproto"]],["fielddescriptorproto"]]]],[11,"get_options","","",6,[[["self"]],["fileoptions"]]],[11,"clear_options","","",6,[[["self"]]]],[11,"has_options","","",6,[[["self"]],["bool"]]],[11,"set_options","","",6,[[["self"],["fileoptions"]]]],[11,"mut_options","","",6,[[["self"]],["fileoptions"]]],[11,"take_options","","",6,[[["self"]],["fileoptions"]]],[11,"get_source_code_info","","",6,[[["self"]],["sourcecodeinfo"]]],[11,"clear_source_code_info","","",6,[[["self"]]]],[11,"has_source_code_info","","",6,[[["self"]],["bool"]]],[11,"set_source_code_info","","",6,[[["self"],["sourcecodeinfo"]]]],[11,"mut_source_code_info","","",6,[[["self"]],["sourcecodeinfo"]]],[11,"take_source_code_info","","",6,[[["self"]],["sourcecodeinfo"]]],[11,"get_syntax","","",6,[[["self"]],["str"]]],[11,"clear_syntax","","",6,[[["self"]]]],[11,"has_syntax","","",6,[[["self"]],["bool"]]],[11,"set_syntax","","",6,[[["string"],["self"]]]],[11,"mut_syntax","","",6,[[["self"]],["string"]]],[11,"take_syntax","","",6,[[["self"]],["string"]]],[11,"new","","",7,[[],["descriptorproto"]]],[11,"get_name","","",7,[[["self"]],["str"]]],[11,"clear_name","","",7,[[["self"]]]],[11,"has_name","","",7,[[["self"]],["bool"]]],[11,"set_name","","",7,[[["string"],["self"]]]],[11,"mut_name","","",7,[[["self"]],["string"]]],[11,"take_name","","",7,[[["self"]],["string"]]],[11,"get_field","","",7,[[["self"]]]],[11,"clear_field","","",7,[[["self"]]]],[11,"set_field","","",7,[[["repeatedfield",["fielddescriptorproto"]],["self"],["fielddescriptorproto"]]]],[11,"mut_field","","",7,[[["self"]],["repeatedfield"]]],[11,"take_field","","",7,[[["self"]],[["repeatedfield",["fielddescriptorproto"]],["fielddescriptorproto"]]]],[11,"get_extension","","",7,[[["self"]]]],[11,"clear_extension","","",7,[[["self"]]]],[11,"set_extension","","",7,[[["repeatedfield",["fielddescriptorproto"]],["self"],["fielddescriptorproto"]]]],[11,"mut_extension","","",7,[[["self"]],["repeatedfield"]]],[11,"take_extension","","",7,[[["self"]],[["repeatedfield",["fielddescriptorproto"]],["fielddescriptorproto"]]]],[11,"get_nested_type","","",7,[[["self"]]]],[11,"clear_nested_type","","",7,[[["self"]]]],[11,"set_nested_type","","",7,[[["descriptorproto"],["self"],["repeatedfield",["descriptorproto"]]]]],[11,"mut_nested_type","","",7,[[["self"]],["repeatedfield"]]],[11,"take_nested_type","","",7,[[["self"]],[["descriptorproto"],["repeatedfield",["descriptorproto"]]]]],[11,"get_enum_type","","",7,[[["self"]]]],[11,"clear_enum_type","","",7,[[["self"]]]],[11,"set_enum_type","","",7,[[["repeatedfield",["enumdescriptorproto"]],["self"],["enumdescriptorproto"]]]],[11,"mut_enum_type","","",7,[[["self"]],["repeatedfield"]]],[11,"take_enum_type","","",7,[[["self"]],[["repeatedfield",["enumdescriptorproto"]],["enumdescriptorproto"]]]],[11,"get_extension_range","","",7,[[["self"]]]],[11,"clear_extension_range","","",7,[[["self"]]]],[11,"set_extension_range","","",7,[[["self"],["repeatedfield",["descriptorproto_extensionrange"]],["descriptorproto_extensionrange"]]]],[11,"mut_extension_range","","",7,[[["self"]],["repeatedfield"]]],[11,"take_extension_range","","",7,[[["self"]],[["repeatedfield",["descriptorproto_extensionrange"]],["descriptorproto_extensionrange"]]]],[11,"get_oneof_decl","","",7,[[["self"]]]],[11,"clear_oneof_decl","","",7,[[["self"]]]],[11,"set_oneof_decl","","",7,[[["self"],["oneofdescriptorproto"],["repeatedfield",["oneofdescriptorproto"]]]]],[11,"mut_oneof_decl","","",7,[[["self"]],["repeatedfield"]]],[11,"take_oneof_decl","","",7,[[["self"]],[["oneofdescriptorproto"],["repeatedfield",["oneofdescriptorproto"]]]]],[11,"get_options","","",7,[[["self"]],["messageoptions"]]],[11,"clear_options","","",7,[[["self"]]]],[11,"has_options","","",7,[[["self"]],["bool"]]],[11,"set_options","","",7,[[["self"],["messageoptions"]]]],[11,"mut_options","","",7,[[["self"]],["messageoptions"]]],[11,"take_options","","",7,[[["self"]],["messageoptions"]]],[11,"get_reserved_range","","",7,[[["self"]]]],[11,"clear_reserved_range","","",7,[[["self"]]]],[11,"set_reserved_range","","",7,[[["repeatedfield",["descriptorproto_reservedrange"]],["self"],["descriptorproto_reservedrange"]]]],[11,"mut_reserved_range","","",7,[[["self"]],["repeatedfield"]]],[11,"take_reserved_range","","",7,[[["self"]],[["repeatedfield",["descriptorproto_reservedrange"]],["descriptorproto_reservedrange"]]]],[11,"get_reserved_name","","",7,[[["self"]]]],[11,"clear_reserved_name","","",7,[[["self"]]]],[11,"set_reserved_name","","",7,[[["string"],["self"],["repeatedfield",["string"]]]]],[11,"mut_reserved_name","","",7,[[["self"]],["repeatedfield"]]],[11,"take_reserved_name","","",7,[[["self"]],[["string"],["repeatedfield",["string"]]]]],[11,"new","","",8,[[],["descriptorproto_extensionrange"]]],[11,"get_start","","",8,[[["self"]],["i32"]]],[11,"clear_start","","",8,[[["self"]]]],[11,"has_start","","",8,[[["self"]],["bool"]]],[11,"set_start","","",8,[[["self"],["i32"]]]],[11,"get_end","","",8,[[["self"]],["i32"]]],[11,"clear_end","","",8,[[["self"]]]],[11,"has_end","","",8,[[["self"]],["bool"]]],[11,"set_end","","",8,[[["self"],["i32"]]]],[11,"new","","",9,[[],["descriptorproto_reservedrange"]]],[11,"get_start","","",9,[[["self"]],["i32"]]],[11,"clear_start","","",9,[[["self"]]]],[11,"has_start","","",9,[[["self"]],["bool"]]],[11,"set_start","","",9,[[["self"],["i32"]]]],[11,"get_end","","",9,[[["self"]],["i32"]]],[11,"clear_end","","",9,[[["self"]]]],[11,"has_end","","",9,[[["self"]],["bool"]]],[11,"set_end","","",9,[[["self"],["i32"]]]],[11,"new","","",10,[[],["fielddescriptorproto"]]],[11,"get_name","","",10,[[["self"]],["str"]]],[11,"clear_name","","",10,[[["self"]]]],[11,"has_name","","",10,[[["self"]],["bool"]]],[11,"set_name","","",10,[[["string"],["self"]]]],[11,"mut_name","","",10,[[["self"]],["string"]]],[11,"take_name","","",10,[[["self"]],["string"]]],[11,"get_number","","",10,[[["self"]],["i32"]]],[11,"clear_number","","",10,[[["self"]]]],[11,"has_number","","",10,[[["self"]],["bool"]]],[11,"set_number","","",10,[[["self"],["i32"]]]],[11,"get_label","","",10,[[["self"]],["fielddescriptorproto_label"]]],[11,"clear_label","","",10,[[["self"]]]],[11,"has_label","","",10,[[["self"]],["bool"]]],[11,"set_label","","",10,[[["self"],["fielddescriptorproto_label"]]]],[11,"get_field_type","","",10,[[["self"]],["fielddescriptorproto_type"]]],[11,"clear_field_type","","",10,[[["self"]]]],[11,"has_field_type","","",10,[[["self"]],["bool"]]],[11,"set_field_type","","",10,[[["self"],["fielddescriptorproto_type"]]]],[11,"get_type_name","","",10,[[["self"]],["str"]]],[11,"clear_type_name","","",10,[[["self"]]]],[11,"has_type_name","","",10,[[["self"]],["bool"]]],[11,"set_type_name","","",10,[[["string"],["self"]]]],[11,"mut_type_name","","",10,[[["self"]],["string"]]],[11,"take_type_name","","",10,[[["self"]],["string"]]],[11,"get_extendee","","",10,[[["self"]],["str"]]],[11,"clear_extendee","","",10,[[["self"]]]],[11,"has_extendee","","",10,[[["self"]],["bool"]]],[11,"set_extendee","","",10,[[["string"],["self"]]]],[11,"mut_extendee","","",10,[[["self"]],["string"]]],[11,"take_extendee","","",10,[[["self"]],["string"]]],[11,"get_default_value","","",10,[[["self"]],["str"]]],[11,"clear_default_value","","",10,[[["self"]]]],[11,"has_default_value","","",10,[[["self"]],["bool"]]],[11,"set_default_value","","",10,[[["string"],["self"]]]],[11,"mut_default_value","","",10,[[["self"]],["string"]]],[11,"take_default_value","","",10,[[["self"]],["string"]]],[11,"get_oneof_index","","",10,[[["self"]],["i32"]]],[11,"clear_oneof_index","","",10,[[["self"]]]],[11,"has_oneof_index","","",10,[[["self"]],["bool"]]],[11,"set_oneof_index","","",10,[[["self"],["i32"]]]],[11,"get_json_name","","",10,[[["self"]],["str"]]],[11,"clear_json_name","","",10,[[["self"]]]],[11,"has_json_name","","",10,[[["self"]],["bool"]]],[11,"set_json_name","","",10,[[["string"],["self"]]]],[11,"mut_json_name","","",10,[[["self"]],["string"]]],[11,"take_json_name","","",10,[[["self"]],["string"]]],[11,"get_options","","",10,[[["self"]],["fieldoptions"]]],[11,"clear_options","","",10,[[["self"]]]],[11,"has_options","","",10,[[["self"]],["bool"]]],[11,"set_options","","",10,[[["self"],["fieldoptions"]]]],[11,"mut_options","","",10,[[["self"]],["fieldoptions"]]],[11,"take_options","","",10,[[["self"]],["fieldoptions"]]],[11,"new","","",11,[[],["oneofdescriptorproto"]]],[11,"get_name","","",11,[[["self"]],["str"]]],[11,"clear_name","","",11,[[["self"]]]],[11,"has_name","","",11,[[["self"]],["bool"]]],[11,"set_name","","",11,[[["string"],["self"]]]],[11,"mut_name","","",11,[[["self"]],["string"]]],[11,"take_name","","",11,[[["self"]],["string"]]],[11,"get_options","","",11,[[["self"]],["oneofoptions"]]],[11,"clear_options","","",11,[[["self"]]]],[11,"has_options","","",11,[[["self"]],["bool"]]],[11,"set_options","","",11,[[["self"],["oneofoptions"]]]],[11,"mut_options","","",11,[[["self"]],["oneofoptions"]]],[11,"take_options","","",11,[[["self"]],["oneofoptions"]]],[11,"new","","",12,[[],["enumdescriptorproto"]]],[11,"get_name","","",12,[[["self"]],["str"]]],[11,"clear_name","","",12,[[["self"]]]],[11,"has_name","","",12,[[["self"]],["bool"]]],[11,"set_name","","",12,[[["string"],["self"]]]],[11,"mut_name","","",12,[[["self"]],["string"]]],[11,"take_name","","",12,[[["self"]],["string"]]],[11,"get_value","","",12,[[["self"]]]],[11,"clear_value","","",12,[[["self"]]]],[11,"set_value","","",12,[[["repeatedfield",["enumvaluedescriptorproto"]],["self"],["enumvaluedescriptorproto"]]]],[11,"mut_value","","",12,[[["self"]],["repeatedfield"]]],[11,"take_value","","",12,[[["self"]],[["repeatedfield",["enumvaluedescriptorproto"]],["enumvaluedescriptorproto"]]]],[11,"get_options","","",12,[[["self"]],["enumoptions"]]],[11,"clear_options","","",12,[[["self"]]]],[11,"has_options","","",12,[[["self"]],["bool"]]],[11,"set_options","","",12,[[["self"],["enumoptions"]]]],[11,"mut_options","","",12,[[["self"]],["enumoptions"]]],[11,"take_options","","",12,[[["self"]],["enumoptions"]]],[11,"new","","",13,[[],["enumvaluedescriptorproto"]]],[11,"get_name","","",13,[[["self"]],["str"]]],[11,"clear_name","","",13,[[["self"]]]],[11,"has_name","","",13,[[["self"]],["bool"]]],[11,"set_name","","",13,[[["string"],["self"]]]],[11,"mut_name","","",13,[[["self"]],["string"]]],[11,"take_name","","",13,[[["self"]],["string"]]],[11,"get_number","","",13,[[["self"]],["i32"]]],[11,"clear_number","","",13,[[["self"]]]],[11,"has_number","","",13,[[["self"]],["bool"]]],[11,"set_number","","",13,[[["self"],["i32"]]]],[11,"get_options","","",13,[[["self"]],["enumvalueoptions"]]],[11,"clear_options","","",13,[[["self"]]]],[11,"has_options","","",13,[[["self"]],["bool"]]],[11,"set_options","","",13,[[["self"],["enumvalueoptions"]]]],[11,"mut_options","","",13,[[["self"]],["enumvalueoptions"]]],[11,"take_options","","",13,[[["self"]],["enumvalueoptions"]]],[11,"new","","",14,[[],["servicedescriptorproto"]]],[11,"get_name","","",14,[[["self"]],["str"]]],[11,"clear_name","","",14,[[["self"]]]],[11,"has_name","","",14,[[["self"]],["bool"]]],[11,"set_name","","",14,[[["string"],["self"]]]],[11,"mut_name","","",14,[[["self"]],["string"]]],[11,"take_name","","",14,[[["self"]],["string"]]],[11,"get_method","","",14,[[["self"]]]],[11,"clear_method","","",14,[[["self"]]]],[11,"set_method","","",14,[[["repeatedfield",["methoddescriptorproto"]],["self"],["methoddescriptorproto"]]]],[11,"mut_method","","",14,[[["self"]],["repeatedfield"]]],[11,"take_method","","",14,[[["self"]],[["repeatedfield",["methoddescriptorproto"]],["methoddescriptorproto"]]]],[11,"get_options","","",14,[[["self"]],["serviceoptions"]]],[11,"clear_options","","",14,[[["self"]]]],[11,"has_options","","",14,[[["self"]],["bool"]]],[11,"set_options","","",14,[[["self"],["serviceoptions"]]]],[11,"mut_options","","",14,[[["self"]],["serviceoptions"]]],[11,"take_options","","",14,[[["self"]],["serviceoptions"]]],[11,"new","","",15,[[],["methoddescriptorproto"]]],[11,"get_name","","",15,[[["self"]],["str"]]],[11,"clear_name","","",15,[[["self"]]]],[11,"has_name","","",15,[[["self"]],["bool"]]],[11,"set_name","","",15,[[["string"],["self"]]]],[11,"mut_name","","",15,[[["self"]],["string"]]],[11,"take_name","","",15,[[["self"]],["string"]]],[11,"get_input_type","","",15,[[["self"]],["str"]]],[11,"clear_input_type","","",15,[[["self"]]]],[11,"has_input_type","","",15,[[["self"]],["bool"]]],[11,"set_input_type","","",15,[[["string"],["self"]]]],[11,"mut_input_type","","",15,[[["self"]],["string"]]],[11,"take_input_type","","",15,[[["self"]],["string"]]],[11,"get_output_type","","",15,[[["self"]],["str"]]],[11,"clear_output_type","","",15,[[["self"]]]],[11,"has_output_type","","",15,[[["self"]],["bool"]]],[11,"set_output_type","","",15,[[["string"],["self"]]]],[11,"mut_output_type","","",15,[[["self"]],["string"]]],[11,"take_output_type","","",15,[[["self"]],["string"]]],[11,"get_options","","",15,[[["self"]],["methodoptions"]]],[11,"clear_options","","",15,[[["self"]]]],[11,"has_options","","",15,[[["self"]],["bool"]]],[11,"set_options","","",15,[[["self"],["methodoptions"]]]],[11,"mut_options","","",15,[[["self"]],["methodoptions"]]],[11,"take_options","","",15,[[["self"]],["methodoptions"]]],[11,"get_client_streaming","","",15,[[["self"]],["bool"]]],[11,"clear_client_streaming","","",15,[[["self"]]]],[11,"has_client_streaming","","",15,[[["self"]],["bool"]]],[11,"set_client_streaming","","",15,[[["self"],["bool"]]]],[11,"get_server_streaming","","",15,[[["self"]],["bool"]]],[11,"clear_server_streaming","","",15,[[["self"]]]],[11,"has_server_streaming","","",15,[[["self"]],["bool"]]],[11,"set_server_streaming","","",15,[[["self"],["bool"]]]],[11,"new","","",16,[[],["fileoptions"]]],[11,"get_java_package","","",16,[[["self"]],["str"]]],[11,"clear_java_package","","",16,[[["self"]]]],[11,"has_java_package","","",16,[[["self"]],["bool"]]],[11,"set_java_package","","",16,[[["string"],["self"]]]],[11,"mut_java_package","","",16,[[["self"]],["string"]]],[11,"take_java_package","","",16,[[["self"]],["string"]]],[11,"get_java_outer_classname","","",16,[[["self"]],["str"]]],[11,"clear_java_outer_classname","","",16,[[["self"]]]],[11,"has_java_outer_classname","","",16,[[["self"]],["bool"]]],[11,"set_java_outer_classname","","",16,[[["string"],["self"]]]],[11,"mut_java_outer_classname","","",16,[[["self"]],["string"]]],[11,"take_java_outer_classname","","",16,[[["self"]],["string"]]],[11,"get_java_multiple_files","","",16,[[["self"]],["bool"]]],[11,"clear_java_multiple_files","","",16,[[["self"]]]],[11,"has_java_multiple_files","","",16,[[["self"]],["bool"]]],[11,"set_java_multiple_files","","",16,[[["self"],["bool"]]]],[11,"get_java_generate_equals_and_hash","","",16,[[["self"]],["bool"]]],[11,"clear_java_generate_equals_and_hash","","",16,[[["self"]]]],[11,"has_java_generate_equals_and_hash","","",16,[[["self"]],["bool"]]],[11,"set_java_generate_equals_and_hash","","",16,[[["self"],["bool"]]]],[11,"get_java_string_check_utf8","","",16,[[["self"]],["bool"]]],[11,"clear_java_string_check_utf8","","",16,[[["self"]]]],[11,"has_java_string_check_utf8","","",16,[[["self"]],["bool"]]],[11,"set_java_string_check_utf8","","",16,[[["self"],["bool"]]]],[11,"get_optimize_for","","",16,[[["self"]],["fileoptions_optimizemode"]]],[11,"clear_optimize_for","","",16,[[["self"]]]],[11,"has_optimize_for","","",16,[[["self"]],["bool"]]],[11,"set_optimize_for","","",16,[[["fileoptions_optimizemode"],["self"]]]],[11,"get_go_package","","",16,[[["self"]],["str"]]],[11,"clear_go_package","","",16,[[["self"]]]],[11,"has_go_package","","",16,[[["self"]],["bool"]]],[11,"set_go_package","","",16,[[["string"],["self"]]]],[11,"mut_go_package","","",16,[[["self"]],["string"]]],[11,"take_go_package","","",16,[[["self"]],["string"]]],[11,"get_cc_generic_services","","",16,[[["self"]],["bool"]]],[11,"clear_cc_generic_services","","",16,[[["self"]]]],[11,"has_cc_generic_services","","",16,[[["self"]],["bool"]]],[11,"set_cc_generic_services","","",16,[[["self"],["bool"]]]],[11,"get_java_generic_services","","",16,[[["self"]],["bool"]]],[11,"clear_java_generic_services","","",16,[[["self"]]]],[11,"has_java_generic_services","","",16,[[["self"]],["bool"]]],[11,"set_java_generic_services","","",16,[[["self"],["bool"]]]],[11,"get_py_generic_services","","",16,[[["self"]],["bool"]]],[11,"clear_py_generic_services","","",16,[[["self"]]]],[11,"has_py_generic_services","","",16,[[["self"]],["bool"]]],[11,"set_py_generic_services","","",16,[[["self"],["bool"]]]],[11,"get_deprecated","","",16,[[["self"]],["bool"]]],[11,"clear_deprecated","","",16,[[["self"]]]],[11,"has_deprecated","","",16,[[["self"]],["bool"]]],[11,"set_deprecated","","",16,[[["self"],["bool"]]]],[11,"get_cc_enable_arenas","","",16,[[["self"]],["bool"]]],[11,"clear_cc_enable_arenas","","",16,[[["self"]]]],[11,"has_cc_enable_arenas","","",16,[[["self"]],["bool"]]],[11,"set_cc_enable_arenas","","",16,[[["self"],["bool"]]]],[11,"get_objc_class_prefix","","",16,[[["self"]],["str"]]],[11,"clear_objc_class_prefix","","",16,[[["self"]]]],[11,"has_objc_class_prefix","","",16,[[["self"]],["bool"]]],[11,"set_objc_class_prefix","","",16,[[["string"],["self"]]]],[11,"mut_objc_class_prefix","","",16,[[["self"]],["string"]]],[11,"take_objc_class_prefix","","",16,[[["self"]],["string"]]],[11,"get_csharp_namespace","","",16,[[["self"]],["str"]]],[11,"clear_csharp_namespace","","",16,[[["self"]]]],[11,"has_csharp_namespace","","",16,[[["self"]],["bool"]]],[11,"set_csharp_namespace","","",16,[[["string"],["self"]]]],[11,"mut_csharp_namespace","","",16,[[["self"]],["string"]]],[11,"take_csharp_namespace","","",16,[[["self"]],["string"]]],[11,"get_uninterpreted_option","","",16,[[["self"]]]],[11,"clear_uninterpreted_option","","",16,[[["self"]]]],[11,"set_uninterpreted_option","","",16,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",16,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",16,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",17,[[],["messageoptions"]]],[11,"get_message_set_wire_format","","",17,[[["self"]],["bool"]]],[11,"clear_message_set_wire_format","","",17,[[["self"]]]],[11,"has_message_set_wire_format","","",17,[[["self"]],["bool"]]],[11,"set_message_set_wire_format","","",17,[[["self"],["bool"]]]],[11,"get_no_standard_descriptor_accessor","","",17,[[["self"]],["bool"]]],[11,"clear_no_standard_descriptor_accessor","","",17,[[["self"]]]],[11,"has_no_standard_descriptor_accessor","","",17,[[["self"]],["bool"]]],[11,"set_no_standard_descriptor_accessor","","",17,[[["self"],["bool"]]]],[11,"get_deprecated","","",17,[[["self"]],["bool"]]],[11,"clear_deprecated","","",17,[[["self"]]]],[11,"has_deprecated","","",17,[[["self"]],["bool"]]],[11,"set_deprecated","","",17,[[["self"],["bool"]]]],[11,"get_map_entry","","",17,[[["self"]],["bool"]]],[11,"clear_map_entry","","",17,[[["self"]]]],[11,"has_map_entry","","",17,[[["self"]],["bool"]]],[11,"set_map_entry","","",17,[[["self"],["bool"]]]],[11,"get_uninterpreted_option","","",17,[[["self"]]]],[11,"clear_uninterpreted_option","","",17,[[["self"]]]],[11,"set_uninterpreted_option","","",17,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",17,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",17,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",18,[[],["fieldoptions"]]],[11,"get_ctype","","",18,[[["self"]],["fieldoptions_ctype"]]],[11,"clear_ctype","","",18,[[["self"]]]],[11,"has_ctype","","",18,[[["self"]],["bool"]]],[11,"set_ctype","","",18,[[["fieldoptions_ctype"],["self"]]]],[11,"get_packed","","",18,[[["self"]],["bool"]]],[11,"clear_packed","","",18,[[["self"]]]],[11,"has_packed","","",18,[[["self"]],["bool"]]],[11,"set_packed","","",18,[[["self"],["bool"]]]],[11,"get_jstype","","",18,[[["self"]],["fieldoptions_jstype"]]],[11,"clear_jstype","","",18,[[["self"]]]],[11,"has_jstype","","",18,[[["self"]],["bool"]]],[11,"set_jstype","","",18,[[["fieldoptions_jstype"],["self"]]]],[11,"get_lazy","","",18,[[["self"]],["bool"]]],[11,"clear_lazy","","",18,[[["self"]]]],[11,"has_lazy","","",18,[[["self"]],["bool"]]],[11,"set_lazy","","",18,[[["self"],["bool"]]]],[11,"get_deprecated","","",18,[[["self"]],["bool"]]],[11,"clear_deprecated","","",18,[[["self"]]]],[11,"has_deprecated","","",18,[[["self"]],["bool"]]],[11,"set_deprecated","","",18,[[["self"],["bool"]]]],[11,"get_weak","","",18,[[["self"]],["bool"]]],[11,"clear_weak","","",18,[[["self"]]]],[11,"has_weak","","",18,[[["self"]],["bool"]]],[11,"set_weak","","",18,[[["self"],["bool"]]]],[11,"get_uninterpreted_option","","",18,[[["self"]]]],[11,"clear_uninterpreted_option","","",18,[[["self"]]]],[11,"set_uninterpreted_option","","",18,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",18,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",18,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",19,[[],["oneofoptions"]]],[11,"get_uninterpreted_option","","",19,[[["self"]]]],[11,"clear_uninterpreted_option","","",19,[[["self"]]]],[11,"set_uninterpreted_option","","",19,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",19,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",19,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",20,[[],["enumoptions"]]],[11,"get_allow_alias","","",20,[[["self"]],["bool"]]],[11,"clear_allow_alias","","",20,[[["self"]]]],[11,"has_allow_alias","","",20,[[["self"]],["bool"]]],[11,"set_allow_alias","","",20,[[["self"],["bool"]]]],[11,"get_deprecated","","",20,[[["self"]],["bool"]]],[11,"clear_deprecated","","",20,[[["self"]]]],[11,"has_deprecated","","",20,[[["self"]],["bool"]]],[11,"set_deprecated","","",20,[[["self"],["bool"]]]],[11,"get_uninterpreted_option","","",20,[[["self"]]]],[11,"clear_uninterpreted_option","","",20,[[["self"]]]],[11,"set_uninterpreted_option","","",20,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",20,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",20,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",21,[[],["enumvalueoptions"]]],[11,"get_deprecated","","",21,[[["self"]],["bool"]]],[11,"clear_deprecated","","",21,[[["self"]]]],[11,"has_deprecated","","",21,[[["self"]],["bool"]]],[11,"set_deprecated","","",21,[[["self"],["bool"]]]],[11,"get_uninterpreted_option","","",21,[[["self"]]]],[11,"clear_uninterpreted_option","","",21,[[["self"]]]],[11,"set_uninterpreted_option","","",21,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",21,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",21,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",22,[[],["serviceoptions"]]],[11,"get_deprecated","","",22,[[["self"]],["bool"]]],[11,"clear_deprecated","","",22,[[["self"]]]],[11,"has_deprecated","","",22,[[["self"]],["bool"]]],[11,"set_deprecated","","",22,[[["self"],["bool"]]]],[11,"get_uninterpreted_option","","",22,[[["self"]]]],[11,"clear_uninterpreted_option","","",22,[[["self"]]]],[11,"set_uninterpreted_option","","",22,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",22,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",22,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",23,[[],["methodoptions"]]],[11,"get_deprecated","","",23,[[["self"]],["bool"]]],[11,"clear_deprecated","","",23,[[["self"]]]],[11,"has_deprecated","","",23,[[["self"]],["bool"]]],[11,"set_deprecated","","",23,[[["self"],["bool"]]]],[11,"get_uninterpreted_option","","",23,[[["self"]]]],[11,"clear_uninterpreted_option","","",23,[[["self"]]]],[11,"set_uninterpreted_option","","",23,[[["self"],["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",23,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",23,[[["self"]],[["uninterpretedoption"],["repeatedfield",["uninterpretedoption"]]]]],[11,"new","","",24,[[],["uninterpretedoption"]]],[11,"get_name","","",24,[[["self"]]]],[11,"clear_name","","",24,[[["self"]]]],[11,"set_name","","",24,[[["self"],["repeatedfield",["uninterpretedoption_namepart"]],["uninterpretedoption_namepart"]]]],[11,"mut_name","","",24,[[["self"]],["repeatedfield"]]],[11,"take_name","","",24,[[["self"]],[["repeatedfield",["uninterpretedoption_namepart"]],["uninterpretedoption_namepart"]]]],[11,"get_identifier_value","","",24,[[["self"]],["str"]]],[11,"clear_identifier_value","","",24,[[["self"]]]],[11,"has_identifier_value","","",24,[[["self"]],["bool"]]],[11,"set_identifier_value","","",24,[[["string"],["self"]]]],[11,"mut_identifier_value","","",24,[[["self"]],["string"]]],[11,"take_identifier_value","","",24,[[["self"]],["string"]]],[11,"get_positive_int_value","","",24,[[["self"]],["u64"]]],[11,"clear_positive_int_value","","",24,[[["self"]]]],[11,"has_positive_int_value","","",24,[[["self"]],["bool"]]],[11,"set_positive_int_value","","",24,[[["self"],["u64"]]]],[11,"get_negative_int_value","","",24,[[["self"]],["i64"]]],[11,"clear_negative_int_value","","",24,[[["self"]]]],[11,"has_negative_int_value","","",24,[[["self"]],["bool"]]],[11,"set_negative_int_value","","",24,[[["i64"],["self"]]]],[11,"get_double_value","","",24,[[["self"]],["f64"]]],[11,"clear_double_value","","",24,[[["self"]]]],[11,"has_double_value","","",24,[[["self"]],["bool"]]],[11,"set_double_value","","",24,[[["self"],["f64"]]]],[11,"get_string_value","","",24,[[["self"]]]],[11,"clear_string_value","","",24,[[["self"]]]],[11,"has_string_value","","",24,[[["self"]],["bool"]]],[11,"set_string_value","","",24,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_string_value","","",24,[[["self"]],["vec"]]],[11,"take_string_value","","",24,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"get_aggregate_value","","",24,[[["self"]],["str"]]],[11,"clear_aggregate_value","","",24,[[["self"]]]],[11,"has_aggregate_value","","",24,[[["self"]],["bool"]]],[11,"set_aggregate_value","","",24,[[["string"],["self"]]]],[11,"mut_aggregate_value","","",24,[[["self"]],["string"]]],[11,"take_aggregate_value","","",24,[[["self"]],["string"]]],[11,"new","","",25,[[],["uninterpretedoption_namepart"]]],[11,"get_name_part","","",25,[[["self"]],["str"]]],[11,"clear_name_part","","",25,[[["self"]]]],[11,"has_name_part","","",25,[[["self"]],["bool"]]],[11,"set_name_part","","",25,[[["string"],["self"]]]],[11,"mut_name_part","","",25,[[["self"]],["string"]]],[11,"take_name_part","","",25,[[["self"]],["string"]]],[11,"get_is_extension","","",25,[[["self"]],["bool"]]],[11,"clear_is_extension","","",25,[[["self"]]]],[11,"has_is_extension","","",25,[[["self"]],["bool"]]],[11,"set_is_extension","","",25,[[["self"],["bool"]]]],[11,"new","","",26,[[],["sourcecodeinfo"]]],[11,"get_location","","",26,[[["self"]]]],[11,"clear_location","","",26,[[["self"]]]],[11,"set_location","","",26,[[["sourcecodeinfo_location"],["self"],["repeatedfield",["sourcecodeinfo_location"]]]]],[11,"mut_location","","",26,[[["self"]],["repeatedfield"]]],[11,"take_location","","",26,[[["self"]],[["sourcecodeinfo_location"],["repeatedfield",["sourcecodeinfo_location"]]]]],[11,"new","","",27,[[],["sourcecodeinfo_location"]]],[11,"get_path","","",27,[[["self"]]]],[11,"clear_path","","",27,[[["self"]]]],[11,"set_path","","",27,[[["vec",["i32"]],["self"],["i32"]]]],[11,"mut_path","","",27,[[["self"]],["vec"]]],[11,"take_path","","",27,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"get_span","","",27,[[["self"]]]],[11,"clear_span","","",27,[[["self"]]]],[11,"set_span","","",27,[[["vec",["i32"]],["self"],["i32"]]]],[11,"mut_span","","",27,[[["self"]],["vec"]]],[11,"take_span","","",27,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"get_leading_comments","","",27,[[["self"]],["str"]]],[11,"clear_leading_comments","","",27,[[["self"]]]],[11,"has_leading_comments","","",27,[[["self"]],["bool"]]],[11,"set_leading_comments","","",27,[[["string"],["self"]]]],[11,"mut_leading_comments","","",27,[[["self"]],["string"]]],[11,"take_leading_comments","","",27,[[["self"]],["string"]]],[11,"get_trailing_comments","","",27,[[["self"]],["str"]]],[11,"clear_trailing_comments","","",27,[[["self"]]]],[11,"has_trailing_comments","","",27,[[["self"]],["bool"]]],[11,"set_trailing_comments","","",27,[[["string"],["self"]]]],[11,"mut_trailing_comments","","",27,[[["self"]],["string"]]],[11,"take_trailing_comments","","",27,[[["self"]],["string"]]],[11,"get_leading_detached_comments","","",27,[[["self"]]]],[11,"clear_leading_detached_comments","","",27,[[["self"]]]],[11,"set_leading_detached_comments","","",27,[[["string"],["self"],["repeatedfield",["string"]]]]],[11,"mut_leading_detached_comments","","",27,[[["self"]],["repeatedfield"]]],[11,"take_leading_detached_comments","","",27,[[["self"]],[["string"],["repeatedfield",["string"]]]]],[11,"new","","",28,[[],["generatedcodeinfo"]]],[11,"get_annotation","","",28,[[["self"]]]],[11,"clear_annotation","","",28,[[["self"]]]],[11,"set_annotation","","",28,[[["self"],["generatedcodeinfo_annotation"],["repeatedfield",["generatedcodeinfo_annotation"]]]]],[11,"mut_annotation","","",28,[[["self"]],["repeatedfield"]]],[11,"take_annotation","","",28,[[["self"]],[["generatedcodeinfo_annotation"],["repeatedfield",["generatedcodeinfo_annotation"]]]]],[11,"new","","",29,[[],["generatedcodeinfo_annotation"]]],[11,"get_path","","",29,[[["self"]]]],[11,"clear_path","","",29,[[["self"]]]],[11,"set_path","","",29,[[["vec",["i32"]],["self"],["i32"]]]],[11,"mut_path","","",29,[[["self"]],["vec"]]],[11,"take_path","","",29,[[["self"]],[["i32"],["vec",["i32"]]]]],[11,"get_source_file","","",29,[[["self"]],["str"]]],[11,"clear_source_file","","",29,[[["self"]]]],[11,"has_source_file","","",29,[[["self"]],["bool"]]],[11,"set_source_file","","",29,[[["string"],["self"]]]],[11,"mut_source_file","","",29,[[["self"]],["string"]]],[11,"take_source_file","","",29,[[["self"]],["string"]]],[11,"get_begin","","",29,[[["self"]],["i32"]]],[11,"clear_begin","","",29,[[["self"]]]],[11,"has_begin","","",29,[[["self"]],["bool"]]],[11,"set_begin","","",29,[[["self"],["i32"]]]],[11,"get_end","","",29,[[["self"]],["i32"]]],[11,"clear_end","","",29,[[["self"]]]],[11,"has_end","","",29,[[["self"]],["bool"]]],[11,"set_end","","",29,[[["self"],["i32"]]]],[0,"plugin","protobuf","Generated file from `google/protobuf/compiler/plugin.proto`",null,null],[3,"CodeGeneratorRequest","protobuf::plugin","",null,null],[12,"unknown_fields","","",35,null],[12,"cached_size","","",35,null],[3,"CodeGeneratorResponse","","",null,null],[12,"unknown_fields","","",36,null],[12,"cached_size","","",36,null],[3,"CodeGeneratorResponse_File","","",null,null],[12,"unknown_fields","","",37,null],[12,"cached_size","","",37,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",35,[[],["codegeneratorrequest"]]],[11,"get_file_to_generate","","",35,[[["self"]]]],[11,"clear_file_to_generate","","",35,[[["self"]]]],[11,"set_file_to_generate","","",35,[[["string"],["self"],["repeatedfield",["string"]]]]],[11,"mut_file_to_generate","","",35,[[["self"]],["repeatedfield"]]],[11,"take_file_to_generate","","",35,[[["self"]],[["string"],["repeatedfield",["string"]]]]],[11,"get_parameter","","",35,[[["self"]],["str"]]],[11,"clear_parameter","","",35,[[["self"]]]],[11,"has_parameter","","",35,[[["self"]],["bool"]]],[11,"set_parameter","","",35,[[["string"],["self"]]]],[11,"mut_parameter","","",35,[[["self"]],["string"]]],[11,"take_parameter","","",35,[[["self"]],["string"]]],[11,"get_proto_file","","",35,[[["self"]]]],[11,"clear_proto_file","","",35,[[["self"]]]],[11,"set_proto_file","","",35,[[["self"],["repeatedfield",["filedescriptorproto"]],["filedescriptorproto"]]]],[11,"mut_proto_file","","",35,[[["self"]],["repeatedfield"]]],[11,"take_proto_file","","",35,[[["self"]],[["repeatedfield",["filedescriptorproto"]],["filedescriptorproto"]]]],[11,"new","","",36,[[],["codegeneratorresponse"]]],[11,"get_error","","",36,[[["self"]],["str"]]],[11,"clear_error","","",36,[[["self"]]]],[11,"has_error","","",36,[[["self"]],["bool"]]],[11,"set_error","","",36,[[["string"],["self"]]]],[11,"mut_error","","",36,[[["self"]],["string"]]],[11,"take_error","","",36,[[["self"]],["string"]]],[11,"get_file","","",36,[[["self"]]]],[11,"clear_file","","",36,[[["self"]]]],[11,"set_file","","",36,[[["codegeneratorresponse_file"],["self"],["repeatedfield",["codegeneratorresponse_file"]]]]],[11,"mut_file","","",36,[[["self"]],["repeatedfield"]]],[11,"take_file","","",36,[[["self"]],[["codegeneratorresponse_file"],["repeatedfield",["codegeneratorresponse_file"]]]]],[11,"new","","",37,[[],["codegeneratorresponse_file"]]],[11,"get_name","","",37,[[["self"]],["str"]]],[11,"clear_name","","",37,[[["self"]]]],[11,"has_name","","",37,[[["self"]],["bool"]]],[11,"set_name","","",37,[[["string"],["self"]]]],[11,"mut_name","","",37,[[["self"]],["string"]]],[11,"take_name","","",37,[[["self"]],["string"]]],[11,"get_insertion_point","","",37,[[["self"]],["str"]]],[11,"clear_insertion_point","","",37,[[["self"]]]],[11,"has_insertion_point","","",37,[[["self"]],["bool"]]],[11,"set_insertion_point","","",37,[[["string"],["self"]]]],[11,"mut_insertion_point","","",37,[[["self"]],["string"]]],[11,"take_insertion_point","","",37,[[["self"]],["string"]]],[11,"get_content","","",37,[[["self"]],["str"]]],[11,"clear_content","","",37,[[["self"]]]],[11,"has_content","","",37,[[["self"]],["bool"]]],[11,"set_content","","",37,[[["string"],["self"]]]],[11,"mut_content","","",37,[[["self"]],["string"]]],[11,"take_content","","",37,[[["self"]],["string"]]],[0,"rustproto","protobuf","Generated file from `rustproto.proto`",null,null],[5,"file_descriptor_proto","protobuf::rustproto","",null,[[],["filedescriptorproto"]]],[0,"exts","","",null,null],[17,"expose_oneof_all","protobuf::rustproto::exts","",null,null],[17,"expose_fields_all","","",null,null],[17,"generate_accessors_all","","",null,null],[17,"carllerche_bytes_for_bytes_all","","",null,null],[17,"carllerche_bytes_for_string_all","","",null,null],[17,"serde_derive_all","","",null,null],[17,"serde_derive_cfg_all","","",null,null],[17,"lite_runtime_all","","",null,null],[17,"expose_oneof","","",null,null],[17,"expose_fields","","",null,null],[17,"generate_accessors","","",null,null],[17,"carllerche_bytes_for_bytes","","",null,null],[17,"carllerche_bytes_for_string","","",null,null],[17,"serde_derive","","",null,null],[17,"serde_derive_cfg","","",null,null],[17,"expose_fields_field","","",null,null],[17,"generate_accessors_field","","",null,null],[17,"carllerche_bytes_for_bytes_field","","",null,null],[17,"carllerche_bytes_for_string_field","","",null,null],[0,"error","protobuf","Protobuf error type",null,null],[4,"WireError","protobuf::error","Enum values added here for diagnostic purposes. Users…",null,null],[13,"UnexpectedEof","","Could not read complete message because stream is EOF",38,null],[13,"UnexpectedWireType","","Wrong wire type for given field",38,null],[13,"IncorrectTag","","Incorrect tag value",38,null],[13,"IncompleteMap","","Malformed map field",38,null],[13,"IncorrectVarint","","Malformed varint",38,null],[13,"Utf8Error","","String is not valid UTD-8",38,null],[13,"InvalidEnumValue","","Enum value is unknown",38,null],[13,"OverRecursionLimit","","Message is too nested",38,null],[13,"TruncatedMessage","","Could not read complete message because stream is EOF",38,null],[13,"Other","","Other error",38,null],[4,"ProtobufError","","Generic protobuf error",null,null],[13,"IoError","","I/O error when reading or writing",39,null],[13,"WireError","","Malformed input",39,null],[13,"Utf8","","Protocol contains a string which is not valid UTF-8 string",39,null],[13,"MessageNotInitialized","","Not all required fields set",39,null],[12,"message","protobuf::error::ProtobufError","Message name",39,null],[6,"ProtobufResult","protobuf::error","`Result` alias for `ProtobufError`",null,null],[0,"ext","protobuf","Utilities to support \"extension\" fields.",null,null],[3,"ExtFieldOptional","protobuf::ext","Optional ext field",null,null],[12,"field_number","","Extension field number",40,null],[12,"phantom","","Marker",40,null],[3,"ExtFieldRepeated","","Repeated ext field",null,null],[12,"field_number","","Extension field number",41,null],[12,"phantom","","Extension field number",41,null],[11,"get","","Get a copy of value from a message.",40,[[["self"],["m"]],["option"]]],[11,"get","","Get a copy of value from a message (not implemented).",41,[[["self"],["m"]],["vec"]]],[0,"lazy","protobuf","Lazily initialized data. Used in generated code.",null,null],[3,"Lazy","protobuf::lazy","Lasily initialized data.",null,null],[17,"ONCE_INIT","","Used to initialize `lock` field in `Lazy` struct.",null,null],[18,"INIT","","Uninitialized `Lazy` object.",42,null],[11,"get","","Get lazy field value, initialize it with given function if…",42,[[["self"],["f"]],["t"]]],[0,"reflect","protobuf","Reflection implementation for protobuf types.",null,null],[3,"EnumDescriptor","protobuf::reflect","Dynamic representation of enum type.",null,null],[3,"EnumValueDescriptor","","Description for enum variant.",null,null],[3,"MessageDescriptor","","Dynamic message type",null,null],[3,"FieldDescriptor","","Field descriptor.",null,null],[4,"ReflectValueRef","","A reference to a value",null,null],[13,"U32","","`u32`",43,null],[13,"U64","","`u64`",43,null],[13,"I32","","`i32`",43,null],[13,"I64","","`i64`",43,null],[13,"F32","","`f32`",43,null],[13,"F64","","`f64`",43,null],[13,"Bool","","`bool`",43,null],[13,"String","","`string`",43,null],[13,"Bytes","","`bytes`",43,null],[13,"Enum","","`enum`",43,null],[13,"Message","","`message`",43,null],[4,"ReflectFieldRef","","Reference to a value stored in a field, optional, repeated…",null,null],[13,"Optional","","Singular field, optional or required in proto3 and just…",44,null],[13,"Repeated","","Repeated field",44,null],[13,"Map","","Map field",44,null],[11,"name","","Name of enum variant as specified in proto file",45,[[["self"]],["str"]]],[11,"value","","`i32` value of the enum variant",45,[[["self"]],["i32"]]],[11,"name","","Enum name as given in `.proto` file",46,[[["self"]],["str"]]],[11,"for_type","","`EnumDescriptor` for enum type",46,[[],["enumdescriptor"]]],[11,"new","","Create new enum descriptor.",46,[[["str"],["filedescriptorproto"]],["enumdescriptor"]]],[11,"new_pb_name","","Create new enum descriptor.",46,[[["str"],["filedescriptorproto"]],["enumdescriptor"]]],[11,"value_by_name","","Find enum value by name",46,[[["str"],["self"]],["enumvaluedescriptor"]]],[11,"value_by_number","","Find enum value by number",46,[[["self"],["i32"]],["enumvaluedescriptor"]]],[11,"proto","","Get `.proto` description of field",47,[[["self"]],["fielddescriptorproto"]]],[11,"name","","Field name as specified in `.proto` file",47,[[["self"]],["str"]]],[11,"is_repeated","","If this field repeated?",47,[[["self"]],["bool"]]],[11,"has_field","","Check if field is set in given message.",47,[[["self"],["message"]],["bool"]]],[11,"len_field","","Return length of repeated field.",47,[[["self"],["message"]],["usize"]]],[11,"get_message","","Get message field or default instance if field is unset.",47,[[["self"],["message"]],["message"]]],[11,"get_enum","","Get `enum` field.",47,[[["self"],["message"]],["enumvaluedescriptor"]]],[11,"get_str","","Get `string` field.",47,[[["self"],["message"]],["str"]]],[11,"get_bytes","","Get `bytes` field.",47,[[["self"],["message"]]]],[11,"get_u32","","Get `u32` field.",47,[[["self"],["message"]],["u32"]]],[11,"get_u64","","Get `u64` field.",47,[[["self"],["message"]],["u64"]]],[11,"get_i32","","Get `i32` field.",47,[[["self"],["message"]],["i32"]]],[11,"get_i64","","Get `i64` field.",47,[[["self"],["message"]],["i64"]]],[11,"get_bool","","Get `bool` field.",47,[[["self"],["message"]],["bool"]]],[11,"get_f32","","Get `float` field.",47,[[["self"],["message"]],["f32"]]],[11,"get_f64","","Get `double` field.",47,[[["self"],["message"]],["f64"]]],[11,"get_reflect","","Get field of any type.",47,[[["self"],["message"]],["reflectfieldref"]]],[11,"get_proto","","Get underlying `DescriptorProto` object.",48,[[["self"]],["descriptorproto"]]],[11,"for_type","","Get a message descriptor for given message type",48,[[],["messagedescriptor"]]],[11,"new_instance","","New empty message",48,[[["self"]],[["box",["message"]],["message"]]]],[11,"name","","Protobuf message name",48,[[["self"]],["str"]]],[11,"full_name","","Fully qualified protobuf message name",48,[[["self"]],["str"]]],[11,"fields","","Message field descriptors.",48,[[["self"]]]],[11,"field_by_name","","Find field by name",48,[[["str"],["self"]],["fielddescriptor"]]],[11,"field_by_number","","Find field by number",48,[[["u32"],["self"]],["fielddescriptor"]]],[8,"ProtobufValue","","Type implemented by all protobuf elementary types (ints,…",null,null],[10,"as_ref","","As ref",49,[[["self"]],["reflectvalueref"]]],[11,"as_any","","Convert to `Any`",49,[[["self"]],["any"]]],[11,"is_non_zero","","Is value non-zero?",49,[[["self"]],["bool"]]],[11,"as_ref_copy","","Return `ProtobufValueRef` if self is `Copy`.",49,[[["self"]],["reflectvalueref"]]],[11,"len","protobuf","Return number of elements in this container.",50,[[["self"]],["usize"]]],[11,"clear","","Clear.",50,[[["self"]]]],[11,"new","","Create new empty container.",50,[[],["repeatedfield"]]],[11,"from_vec","","Create a contained with data from given vec.",50,[[["vec"]],["repeatedfield"]]],[11,"into_vec","","Convert data into vec.",50,[[],["vec"]]],[11,"capacity","","Return current capacity.",50,[[["self"]],["usize"]]],[11,"as_slice","","View data as slice.",50,[[["self"]]]],[11,"as_mut_slice","","View data as mutable slice.",50,[[["self"]]]],[11,"slice","","Get subslice of this container.",50,[[["self"],["usize"]]]],[11,"slice_mut","","Get mutable subslice of this container.",50,[[["self"],["usize"]]]],[11,"slice_from","","Get slice from given index.",50,[[["self"],["usize"]]]],[11,"slice_from_mut","","Get mutable slice from given index.",50,[[["self"],["usize"]]]],[11,"slice_to","","Get slice to given index.",50,[[["self"],["usize"]]]],[11,"slice_to_mut","","Get mutable slice to given index.",50,[[["self"],["usize"]]]],[11,"split_at","","View this container as two slices split at given index.",50,[[["self"],["usize"]]]],[11,"split_at_mut","","View this container as two mutable slices split at given…",50,[[["self"],["usize"]]]],[11,"tail","","View all but first elements of this container.",50,[[["self"]]]],[11,"last","","Last element of this container.",50,[[["self"]],[["t"],["option"]]]],[11,"last_mut","","Mutable last element of this container.",50,[[["self"]],[["t"],["option"]]]],[11,"init","","View all but last elements of this container.",50,[[["self"]]]],[11,"push","","Push an element to the end.",50,[[["self"],["t"]]]],[11,"pop","","Pop last element.",50,[[["self"]],["option"]]],[11,"insert","","Insert an element at specified position.",50,[[["self"],["usize"],["t"]]]],[11,"remove","","Remove an element from specified position.",50,[[["self"],["usize"]],["t"]]],[11,"truncate","","Truncate at specified length.",50,[[["self"],["usize"]]]],[11,"reverse","","Reverse in place.",50,[[["self"]]]],[11,"into_iter","","Into owned iterator.",50,[[],["intoiter"]]],[11,"iter","","Immutable data iterator.",50,[[["self"]],["iter"]]],[11,"iter_mut","","Mutable data iterator.",50,[[["self"]],["itermut"]]],[11,"sort_by","","Sort elements with given comparator.",50,[[["self"],["f"]]]],[11,"as_ptr","","Get data as raw pointer.",50,[[["self"]]]],[11,"as_mut_ptr","","Get data a mutable raw pointer.",50,[[["self"]]]],[11,"push_default","","Push default value. This operation could be faster than…",50,[[["self"]],["t"]]],[11,"from_slice","","Copy slice data to `RepeatedField`",50,[[],["repeatedfield"]]],[11,"from_ref","","Copy slice data to `RepeatedField`",50,[[["asref"]],["repeatedfield"]]],[11,"to_vec","","Copy this data into new vec.",50,[[["self"]],["vec"]]],[11,"contains","","True iff this container contains given element.",50,[[["t"],["self"]],["bool"]]],[0,"rt","","Functions used by generated protobuf code. Should not be…",null,null],[5,"compute_raw_varint64_size","protobuf::rt","Given `u64` value compute varint encoded length.",null,[[["u64"]],["u32"]]],[5,"compute_raw_varint32_size","","Given `u32` value compute varint encoded length.",null,[[["u32"]],["u32"]]],[5,"vec_packed_varint_data_size","","Size of serialized repeated packed field, excluding length…",null,[[],["u32"]]],[5,"vec_packed_varint_zigzag_data_size","","Size of serialized repeated packed field, excluding length…",null,[[],["u32"]]],[5,"vec_packed_enum_data_size","","Size of serialized repeated packed enum field, excluding…",null,[[],["u32"]]],[5,"vec_packed_varint_size","","Size of serialized data with length prefix and tag",null,[[["u32"]],["u32"]]],[5,"vec_packed_varint_zigzag_size","","Size of serialized data with length prefix and tag",null,[[["u32"]],["u32"]]],[5,"vec_packed_enum_size","","Size of serialized data with length prefix and tag",null,[[["u32"]],["u32"]]],[5,"tag_size","","Compute tag size. Size of tag does not depend on wire type.",null,[[["u32"]],["u32"]]],[5,"value_size","","Integer value size when encoded as specified wire type.",null,[[["u32"],["wiretype"],["protobufvarint"]],["u32"]]],[5,"value_varint_zigzag_size_no_tag","","Integer value size when encoded as specified wire type.",null,[[["protobufvarintzigzag"]],["u32"]]],[5,"value_varint_zigzag_size","","Length of value when encoding with zigzag encoding with tag",null,[[["u32"],["protobufvarintzigzag"]],["u32"]]],[5,"enum_size","","Size of encoded enum field value.",null,[[["u32"],["protobufenum"]],["u32"]]],[5,"bytes_size","","Size of encoded bytes field.",null,[[["u32"]],["u32"]]],[5,"string_size","","Size of encoded string field.",null,[[["str"],["u32"]],["u32"]]],[5,"unknown_fields_size","","Size of encoded unknown fields size.",null,[[["unknownfields"]],["u32"]]],[5,"read_repeated_int32_into","","Read repeated `int32` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_int64_into","","Read repeated `int64` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_uint32_into","","Read repeated `uint32` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_uint64_into","","Read repeated `uint64` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sint32_into","","Read repeated `sint32` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sint64_into","","Read repeated `sint64` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_fixed32_into","","Read repeated `fixed32` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_fixed64_into","","Read repeated `fixed64` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sfixed32_into","","Read repeated `sfixed32` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sfixed64_into","","Read repeated `sfixed64` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_double_into","","Read repeated `double` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_float_into","","Read repeated `float` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_bool_into","","Read repeated `bool` field into given vec.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_enum_into","","Read repeated `enum` field into given vec. This function…",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_enum_with_unknown_fields_into","","Read repeated `enum` field into given vec, and when value…",null,[[["u32"],["codedinputstream"],["unknownfields"],["wiretype"],["vec"]],["protobufresult"]]],[5,"read_proto3_enum_with_unknown_fields_into","","Read repeated `enum` field into given vec, and when value…",null,[[["u32"],["codedinputstream"],["e"],["unknownfields"],["wiretype"]],["protobufresult"]]],[5,"read_proto2_enum_with_unknown_fields_into","","Read repeated `enum` field into given vec, and when value…",null,[[["u32"],["codedinputstream"],["unknownfields"],["wiretype"],["option"]],["protobufresult"]]],[5,"read_repeated_string_into","","Read repeated `string` field into given vec.",null,[[["repeatedfield"],["wiretype"],["codedinputstream"]],["protobufresult"]]],[5,"read_singular_string_into","","Read singular `string` field.",null,[[["wiretype"],["codedinputstream"],["singularfield"]],["protobufresult"]]],[5,"read_singular_proto3_string_into","","Read singular `string` field for proto3.",null,[[["wiretype"],["codedinputstream"],["string"]],["protobufresult"]]],[5,"read_repeated_bytes_into","","Read repeated `bytes` field into given vec.",null,[[["wiretype"],["codedinputstream"],["repeatedfield"]],["protobufresult"]]],[5,"read_singular_bytes_into","","Read singular `bytes` field.",null,[[["wiretype"],["codedinputstream"],["singularfield"]],["protobufresult"]]],[5,"read_singular_proto3_bytes_into","","Read singular `bytes` field for proto3.",null,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_message_into","","Read repeated `message` field.",null,[[["repeatedfield"],["wiretype"],["codedinputstream"]],["protobufresult"]]],[5,"read_singular_message_into","","Read singular `message` field.",null,[[["wiretype"],["codedinputstream"],["singularptrfield"]],["protobufresult"]]],[5,"read_unknown_or_skip_group","","Handle unknown field in generated code. Either store a…",null,[[["u32"],["codedinputstream"],["unknownfields"],["wiretype"]],["protobufresult"]]],[5,"unexpected_wire_type","","Create an error for unexpected wire type.",null,[[["wiretype"]],["protobuferror"]]],[5,"compute_map_size","","Compute serialized size of `map` field and cache nested…",null,[[["u32"],["hashmap"]],["u32"]]],[5,"write_map_with_cached_sizes","","Write map, message sizes must be already known.",null,[[["codedoutputstream"],["u32"],["hashmap"]],["protobufresult"]]],[5,"read_map_into","","Read `map` field.",null,[[["hashmap"],["wiretype"],["codedinputstream"]],["protobufresult"]]],[8,"ProtobufVarint","","Helper trait implemented by integer types which could be…",null,null],[10,"len_varint","","Size of self when encoded as varint.",51,[[["self"]],["u32"]]],[8,"ProtobufVarintZigzag","","Helper trait implemented by integer types which could be…",null,null],[10,"len_varint_zigzag","","Size of self when encoded as zigzag varint.",52,[[["self"]],["u32"]]],[11,"some","protobuf","Construct this object from given value.",53,[[["t"]],["singularfield"]]],[11,"is_some","","True iff this object contains data.",53,[[["self"]],["bool"]]],[11,"is_none","","True iff this object contains no data.",53,[[["self"]],["bool"]]],[11,"into_option","","Convert this object into `Option`.",53,[[],["option"]]],[11,"as_ref","","View data as `Option`.",53,[[["self"]],[["option"],["t"]]]],[11,"as_mut","","View data as mutable `Option`.",53,[[["self"]],[["t"],["option"]]]],[11,"unwrap_ref","","Unwrap data as reference.",53,[[["self"]],["t"]]],[11,"unwrap_mut_ref","","Unwrap data as mutable reference.",53,[[["self"]],["t"]]],[11,"unwrap","","Unwrap data, panic if not set.",53,[[],["t"]]],[11,"unwrap_or","","Unwrap data or return given default value.",53,[[["t"]],["t"]]],[11,"unwrap_or_else","","Unwrap data or return given default value.",53,[[["f"]],["t"]]],[11,"map","","Apply a function to contained element and store result in…",53,[[["f"]],["singularptrfield"]]],[11,"iter","","View as iterator over references.",53,[[["self"]],[["intoiter"],["t"]]]],[11,"mut_iter","","View as iterator over mutable references.",53,[[["self"]],[["intoiter"],["t"]]]],[11,"clear","","Clear this object. Note, contained object destructor is…",53,[[["self"]]]],[11,"none","","Construct a `SingularField` with no data.",53,[[],["singularfield"]]],[11,"from_option","","Construct `SingularField` from `Option`.",53,[[["option"]],["singularfield"]]],[11,"take","","Return data as option, clear this object.",53,[[["self"]],["option"]]],[11,"some","","Construct `SingularPtrField` from given object.",54,[[["t"]],["singularptrfield"]]],[11,"none","","Construct an empty `SingularPtrField`.",54,[[],["singularptrfield"]]],[11,"from_option","","Construct `SingularPtrField` from optional.",54,[[["option"]],["singularptrfield"]]],[11,"is_some","","True iff this object contains data.",54,[[["self"]],["bool"]]],[11,"is_none","","True iff this object contains no data.",54,[[["self"]],["bool"]]],[11,"into_option","","Convert into `Option<T>`.",54,[[],["option"]]],[11,"as_ref","","View data as reference option.",54,[[["self"]],[["option"],["t"]]]],[11,"as_mut","","View data as mutable reference option.",54,[[["self"]],[["t"],["option"]]]],[11,"get_ref","","Get data as reference. Panics if empty.",54,[[["self"]],["t"]]],[11,"get_mut_ref","","Get data as mutable reference. Panics if empty.",54,[[["self"]],["t"]]],[11,"unwrap","","Take the data. Panics if empty",54,[[],["t"]]],[11,"unwrap_or","","Take the data or return supplied default element if empty.",54,[[["t"]],["t"]]],[11,"unwrap_or_else","","Take the data or return supplied default element if empty.",54,[[["f"]],["t"]]],[11,"map","","Apply given function to contained data to construct…",54,[[["f"]],["singularptrfield"]]],[11,"iter","","View data as iterator.",54,[[["self"]],[["intoiter"],["t"]]]],[11,"mut_iter","","View data as mutable iterator.",54,[[["self"]],[["intoiter"],["t"]]]],[11,"take","","Take data as option, leaving this object empty.",54,[[["self"]],["option"]]],[11,"clear","","Clear this object, but do not call destructor of…",54,[[["self"]]]],[11,"unwrap_or_default","","Get contained data, consume self. Return default value for…",53,[[],["t"]]],[11,"set_default","","Initialize this object with default value. This operation…",53,[[["self"]],["t"]]],[11,"unwrap_or_default","","Get contained data, consume self. Return default value for…",54,[[],["t"]]],[11,"set_default","","Initialize this object with default value. This operation…",54,[[["self"]],["t"]]],[11,"new","protobuf::wire_format","Parse wire type",4,[[["u32"]],[["option",["wiretype"]],["wiretype"]]]],[11,"value","","Pack a tag to integer",55,[[],["u32"]]],[11,"new","","Parse integer into `Tag` object",55,[[["u32"]],[["option",["tag"]],["tag"]]]],[11,"make","","Create a tag from a field number and wire type.",55,[[["u32"],["wiretype"]],["tag"]]],[11,"unpack","","Tag as pair of (field number, wire type)",55,[[]]],[11,"field_number","","Protobuf field number",55,[[],["u32"]]],[11,"new","protobuf","Wrap a `Read`.",56,[[["read"]],["codedinputstream"]]],[11,"from_buffered_reader","","Create from `BufRead`.",56,[[["bufread"]],["codedinputstream"]]],[11,"from_bytes","","Read from byte slice",56,[[],["codedinputstream"]]],[11,"set_recursion_limit","","Set the recursion limit.",56,[[["self"],["u32"]]]],[11,"pos","","How many bytes processed",56,[[["self"]],["u64"]]],[11,"bytes_until_limit","","How many bytes until current limit",56,[[["self"]],["u64"]]],[11,"read","","Read bytes into given `buf`.",56,[[["self"]],["protobufresult"]]],[11,"read_raw_byte","","Read one byte",56,[[["self"]],[["protobufresult",["u8"]],["u8"]]]],[11,"push_limit","","Push new limit, return previous limit.",56,[[["self"],["u64"]],[["u64"],["protobufresult",["u64"]]]]],[11,"pop_limit","","Restore previous limit.",56,[[["self"],["u64"]]]],[11,"eof","","Are we at EOF?",56,[[["self"]],[["protobufresult",["bool"]],["bool"]]]],[11,"check_eof","","Check we are at EOF.",56,[[["self"]],["protobufresult"]]],[11,"read_raw_varint64","","Read varint",56,[[["self"]],[["u64"],["protobufresult",["u64"]]]]],[11,"read_raw_varint32","","Read varint",56,[[["self"]],[["protobufresult",["u32"]],["u32"]]]],[11,"read_raw_little_endian32","","Read little-endian 32-bit integer",56,[[["self"]],[["protobufresult",["u32"]],["u32"]]]],[11,"read_raw_little_endian64","","Read little-endian 64-bit integer",56,[[["self"]],[["u64"],["protobufresult",["u64"]]]]],[11,"read_tag","","Read tag",56,[[["self"]],[["protobufresult",["tag"]],["tag"]]]],[11,"read_tag_unpack","","Read tag, return it is pair (field number, wire type)",56,[[["self"]],["protobufresult"]]],[11,"read_double","","Read `double`",56,[[["self"]],[["protobufresult",["f64"]],["f64"]]]],[11,"read_float","","Read `float`",56,[[["self"]],[["f32"],["protobufresult",["f32"]]]]],[11,"read_int64","","Read `int64`",56,[[["self"]],[["i64"],["protobufresult",["i64"]]]]],[11,"read_int32","","Read `int32`",56,[[["self"]],[["protobufresult",["i32"]],["i32"]]]],[11,"read_uint64","","Read `uint64`",56,[[["self"]],[["u64"],["protobufresult",["u64"]]]]],[11,"read_uint32","","Read `uint32`",56,[[["self"]],[["protobufresult",["u32"]],["u32"]]]],[11,"read_sint64","","Read `sint64`",56,[[["self"]],[["i64"],["protobufresult",["i64"]]]]],[11,"read_sint32","","Read `sint32`",56,[[["self"]],[["protobufresult",["i32"]],["i32"]]]],[11,"read_fixed64","","Read `fixed64`",56,[[["self"]],[["u64"],["protobufresult",["u64"]]]]],[11,"read_fixed32","","Read `fixed32`",56,[[["self"]],[["protobufresult",["u32"]],["u32"]]]],[11,"read_sfixed64","","Read `sfixed64`",56,[[["self"]],[["i64"],["protobufresult",["i64"]]]]],[11,"read_sfixed32","","Read `sfixed32`",56,[[["self"]],[["protobufresult",["i32"]],["i32"]]]],[11,"read_bool","","Read `bool`",56,[[["self"]],[["protobufresult",["bool"]],["bool"]]]],[11,"read_enum","","Read `enum` as `ProtobufEnum`",56,[[["self"]],[["protobufresult"],["protobufenum"]]]],[11,"read_repeated_packed_double_into","","Read `repeated` packed `double`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_float_into","","Read `repeated` packed `float`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_int64_into","","Read `repeated` packed `int64`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_int32_into","","Read repeated packed `int32`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_uint64_into","","Read repeated packed `uint64`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_uint32_into","","Read repeated packed `uint32`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sint64_into","","Read repeated packed `sint64`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sint32_into","","Read repeated packed `sint32`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_fixed64_into","","Read repeated packed `fixed64`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_fixed32_into","","Read repeated packed `fixed32`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sfixed64_into","","Read repeated packed `sfixed64`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sfixed32_into","","Read repeated packed `sfixed32`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_bool_into","","Read repeated packed `bool`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_enum_into","","Read repeated packed `enum` into `ProtobufEnum`",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_unknown","","Read `UnknownValue`",56,[[["wiretype"],["self"]],[["protobufresult",["unknownvalue"]],["unknownvalue"]]]],[11,"skip_field","","Skip field",56,[[["wiretype"],["self"]],["protobufresult"]]],[11,"read_raw_bytes_into","","Read raw bytes into the supplied vector. The vector will…",56,[[["self"],["u32"],["vec"]],["protobufresult"]]],[11,"read_raw_bytes","","Read exact number of bytes",56,[[["self"],["u32"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[11,"skip_raw_bytes","","Skip exact number of bytes",56,[[["self"],["u32"]],["protobufresult"]]],[11,"read_bytes","","Read `bytes` field, length delimited",56,[[["self"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[11,"read_bytes_into","","Read `bytes` field, length delimited",56,[[["self"],["vec"]],["protobufresult"]]],[11,"read_string","","Read `string` field, length delimited",56,[[["self"]],[["protobufresult",["string"]],["string"]]]],[11,"read_string_into","","Read `string` field, length delimited",56,[[["self"],["string"]],["protobufresult"]]],[11,"merge_message","","Read message, do not check if message is initialized",56,[[["m"],["self"]],["protobufresult"]]],[11,"read_message","","Read message",56,[[["self"]],[["message"],["protobufresult"]]]],[11,"new","","Construct from given `Write`.",57,[[["write"]],["codedoutputstream"]]],[11,"bytes","","`CodedOutputStream` which writes directly to bytes.",57,[[],["codedoutputstream"]]],[11,"vec","","`CodedOutputStream` which writes directly to `Vec<u8>`.",57,[[["vec"]],["codedoutputstream"]]],[11,"check_eof","","Check if EOF is reached.",57,[[["self"]]]],[11,"flush","","Flush the buffer to underlying write",57,[[["self"]],["protobufresult"]]],[11,"write_raw_byte","","Write a byte",57,[[["self"],["u8"]],["protobufresult"]]],[11,"write_raw_bytes","","Write bytes",57,[[["self"]],["protobufresult"]]],[11,"write_tag","","Write a tag",57,[[["wiretype"],["self"],["u32"]],["protobufresult"]]],[11,"write_raw_varint32","","Write varint",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_raw_varint64","","Write varint",57,[[["self"],["u64"]],["protobufresult"]]],[11,"write_raw_little_endian32","","Write 32-bit integer little endian",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_raw_little_endian64","","Write 64-bit integer little endian",57,[[["self"],["u64"]],["protobufresult"]]],[11,"write_float_no_tag","","Write `float`",57,[[["f32"],["self"]],["protobufresult"]]],[11,"write_double_no_tag","","Write `double`",57,[[["self"],["f64"]],["protobufresult"]]],[11,"write_float","","Write `float` field",57,[[["f32"],["self"],["u32"]],["protobufresult"]]],[11,"write_double","","Write `double` field",57,[[["self"],["u32"],["f64"]],["protobufresult"]]],[11,"write_uint64_no_tag","","Write varint",57,[[["self"],["u64"]],["protobufresult"]]],[11,"write_uint32_no_tag","","Write varint",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_int64_no_tag","","Write varint",57,[[["i64"],["self"]],["protobufresult"]]],[11,"write_int32_no_tag","","Write varint",57,[[["self"],["i32"]],["protobufresult"]]],[11,"write_sint64_no_tag","","Write zigzag varint",57,[[["i64"],["self"]],["protobufresult"]]],[11,"write_sint32_no_tag","","Write zigzag varint",57,[[["self"],["i32"]],["protobufresult"]]],[11,"write_fixed64_no_tag","","Write `fixed64`",57,[[["self"],["u64"]],["protobufresult"]]],[11,"write_fixed32_no_tag","","Write `fixed32`",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_sfixed64_no_tag","","Write `sfixed64`",57,[[["i64"],["self"]],["protobufresult"]]],[11,"write_sfixed32_no_tag","","Write `sfixed32`",57,[[["self"],["i32"]],["protobufresult"]]],[11,"write_bool_no_tag","","Write `bool`",57,[[["self"],["bool"]],["protobufresult"]]],[11,"write_enum_no_tag","","Write `enum`",57,[[["self"],["i32"]],["protobufresult"]]],[11,"write_enum_obj_no_tag","","Write `enum`",57,[[["self"],["e"]],["protobufresult"]]],[11,"write_unknown_no_tag","","Write unknown value",57,[[["unknownvalueref"],["self"]],["protobufresult"]]],[11,"write_uint64","","Write `uint64` field",57,[[["self"],["u32"],["u64"]],["protobufresult"]]],[11,"write_uint32","","Write `uint32` field",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_int64","","Write `int64` field",57,[[["i64"],["self"],["u32"]],["protobufresult"]]],[11,"write_int32","","Write `int32` field",57,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_sint64","","Write `sint64` field",57,[[["i64"],["self"],["u32"]],["protobufresult"]]],[11,"write_sint32","","Write `sint32` field",57,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_fixed64","","Write `fixed64` field",57,[[["self"],["u32"],["u64"]],["protobufresult"]]],[11,"write_fixed32","","Write `fixed32` field",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_sfixed64","","Write `sfixed64` field",57,[[["i64"],["self"],["u32"]],["protobufresult"]]],[11,"write_sfixed32","","Write `sfixed32` field",57,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_bool","","Write `bool` field",57,[[["self"],["u32"],["bool"]],["protobufresult"]]],[11,"write_enum","","Write `enum` field",57,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_enum_obj","","Write `enum` field",57,[[["self"],["u32"],["e"]],["protobufresult"]]],[11,"write_unknown","","Write unknown field",57,[[["unknownvalueref"],["self"],["u32"]],["protobufresult"]]],[11,"write_unknown_fields","","Write unknown fields",57,[[["self"],["unknownfields"]],["protobufresult"]]],[11,"write_bytes_no_tag","","Write bytes",57,[[["self"]],["protobufresult"]]],[11,"write_string_no_tag","","Write string",57,[[["str"],["self"]],["protobufresult"]]],[11,"write_message_no_tag","","Write message",57,[[["self"],["m"]],["protobufresult"]]],[11,"write_bytes","","Write `bytes` field",57,[[["self"],["u32"]],["protobufresult"]]],[11,"write_string","","Write `string` field",57,[[["str"],["self"],["u32"]],["protobufresult"]]],[11,"write_message","","Write `message` field",57,[[["self"],["u32"],["m"]],["protobufresult"]]],[0,"text_format","","Protobuf \"text format\" implementation.",null,null],[5,"print_to","protobuf::text_format","Text-format",null,[[["string"],["message"]]]],[5,"print_to_string","","Text-format",null,[[["message"]],["string"]]],[5,"fmt","","Text-format to `fmt::Formatter`.",null,[[["formatter"],["message"]],["result"]]],[0,"types","protobuf","Implementations of `ProtobufType` for all types.",null,null],[3,"ProtobufTypeFloat","protobuf::types","`float`",null,null],[3,"ProtobufTypeDouble","","`double`",null,null],[3,"ProtobufTypeInt32","","`uint32`",null,null],[3,"ProtobufTypeInt64","","`int64`",null,null],[3,"ProtobufTypeUint32","","`uint32`",null,null],[3,"ProtobufTypeUint64","","`uint64`",null,null],[3,"ProtobufTypeSint32","","`sint32`",null,null],[3,"ProtobufTypeSint64","","`sint64`",null,null],[3,"ProtobufTypeFixed32","","`fixed32`",null,null],[3,"ProtobufTypeFixed64","","`fixed64`",null,null],[3,"ProtobufTypeSfixed32","","`sfixed32`",null,null],[3,"ProtobufTypeSfixed64","","`sfixed64`",null,null],[3,"ProtobufTypeBool","","`bool`",null,null],[3,"ProtobufTypeString","","`string`",null,null],[3,"ProtobufTypeBytes","","`bytes`",null,null],[3,"ProtobufTypeChars","","Something which should be deleted",null,null],[3,"ProtobufTypeEnum","","`enum`",null,null],[3,"ProtobufTypeMessage","","`message`",null,null],[8,"ProtobufType","","Protobuf elementary type as generic trait",null,null],[16,"Value","","Rust type of value",58,null],[10,"wire_type","","Wire type when writing to stream",58,[[],["wiretype"]]],[10,"read","","Read value from `CodedInputStream`",58,[[["codedinputstream"]],["protobufresult"]]],[10,"compute_size","","Compute wire size",58,[[],["u32"]]],[10,"get_from_unknown","","Get value from `UnknownValues`",58,[[["unknownvalues"]],["option"]]],[11,"compute_size_with_length_delimiter","","Compute size adding length prefix if wire type is length…",58,[[],["u32"]]],[11,"get_cached_size","","Get previously computed size",58,[[],["u32"]]],[11,"get_cached_size_with_length_delimiter","","Get previously cached size with length prefix",58,[[],["u32"]]],[10,"write_with_cached_size","","Write a value with previously cached size",58,[[["codedoutputstream"],["u32"]],["protobufresult"]]],[0,"well_known_types","protobuf","Generated code for \"well known types\"",null,null],[3,"Any","protobuf::well_known_types","",null,null],[12,"type_url","","",59,null],[12,"value","","",59,null],[12,"unknown_fields","","",59,null],[12,"cached_size","","",59,null],[3,"Api","","",null,null],[12,"name","","",60,null],[12,"methods","","",60,null],[12,"options","","",60,null],[12,"version","","",60,null],[12,"source_context","","",60,null],[12,"mixins","","",60,null],[12,"syntax","","",60,null],[12,"unknown_fields","","",60,null],[12,"cached_size","","",60,null],[3,"Method","","",null,null],[12,"name","","",61,null],[12,"request_type_url","","",61,null],[12,"request_streaming","","",61,null],[12,"response_type_url","","",61,null],[12,"response_streaming","","",61,null],[12,"options","","",61,null],[12,"syntax","","",61,null],[12,"unknown_fields","","",61,null],[12,"cached_size","","",61,null],[3,"Mixin","","",null,null],[12,"name","","",62,null],[12,"root","","",62,null],[12,"unknown_fields","","",62,null],[12,"cached_size","","",62,null],[3,"Duration","","",null,null],[12,"seconds","","",63,null],[12,"nanos","","",63,null],[12,"unknown_fields","","",63,null],[12,"cached_size","","",63,null],[3,"Empty","","",null,null],[12,"unknown_fields","","",64,null],[12,"cached_size","","",64,null],[3,"FieldMask","","",null,null],[12,"paths","","",65,null],[12,"unknown_fields","","",65,null],[12,"cached_size","","",65,null],[3,"SourceContext","","",null,null],[12,"file_name","","",66,null],[12,"unknown_fields","","",66,null],[12,"cached_size","","",66,null],[3,"Struct","","",null,null],[12,"fields","","",67,null],[12,"unknown_fields","","",67,null],[12,"cached_size","","",67,null],[3,"Value","","",null,null],[12,"kind","","",68,null],[12,"unknown_fields","","",68,null],[12,"cached_size","","",68,null],[3,"ListValue","","",null,null],[12,"values","","",69,null],[12,"unknown_fields","","",69,null],[12,"cached_size","","",69,null],[3,"Timestamp","","",null,null],[12,"seconds","","",70,null],[12,"nanos","","",70,null],[12,"unknown_fields","","",70,null],[12,"cached_size","","",70,null],[3,"Type","","",null,null],[12,"name","","",71,null],[12,"fields","","",71,null],[12,"oneofs","","",71,null],[12,"options","","",71,null],[12,"source_context","","",71,null],[12,"syntax","","",71,null],[12,"unknown_fields","","",71,null],[12,"cached_size","","",71,null],[3,"Field","","",null,null],[12,"kind","","",72,null],[12,"cardinality","","",72,null],[12,"number","","",72,null],[12,"name","","",72,null],[12,"type_url","","",72,null],[12,"oneof_index","","",72,null],[12,"packed","","",72,null],[12,"options","","",72,null],[12,"json_name","","",72,null],[12,"default_value","","",72,null],[12,"unknown_fields","","",72,null],[12,"cached_size","","",72,null],[3,"Enum","","",null,null],[12,"name","","",73,null],[12,"enumvalue","","",73,null],[12,"options","","",73,null],[12,"source_context","","",73,null],[12,"syntax","","",73,null],[12,"unknown_fields","","",73,null],[12,"cached_size","","",73,null],[3,"EnumValue","","",null,null],[12,"name","","",74,null],[12,"number","","",74,null],[12,"options","","",74,null],[12,"unknown_fields","","",74,null],[12,"cached_size","","",74,null],[3,"Option","","",null,null],[12,"name","","",75,null],[12,"value","","",75,null],[12,"unknown_fields","","",75,null],[12,"cached_size","","",75,null],[3,"DoubleValue","","",null,null],[12,"value","","",76,null],[12,"unknown_fields","","",76,null],[12,"cached_size","","",76,null],[3,"FloatValue","","",null,null],[12,"value","","",77,null],[12,"unknown_fields","","",77,null],[12,"cached_size","","",77,null],[3,"Int64Value","","",null,null],[12,"value","","",78,null],[12,"unknown_fields","","",78,null],[12,"cached_size","","",78,null],[3,"UInt64Value","","",null,null],[12,"value","","",79,null],[12,"unknown_fields","","",79,null],[12,"cached_size","","",79,null],[3,"Int32Value","","",null,null],[12,"value","","",80,null],[12,"unknown_fields","","",80,null],[12,"cached_size","","",80,null],[3,"UInt32Value","","",null,null],[12,"value","","",81,null],[12,"unknown_fields","","",81,null],[12,"cached_size","","",81,null],[3,"BoolValue","","",null,null],[12,"value","","",82,null],[12,"unknown_fields","","",82,null],[12,"cached_size","","",82,null],[3,"StringValue","","",null,null],[12,"value","","",83,null],[12,"unknown_fields","","",83,null],[12,"cached_size","","",83,null],[3,"BytesValue","","",null,null],[12,"value","","",84,null],[12,"unknown_fields","","",84,null],[12,"cached_size","","",84,null],[4,"Value_oneof_kind","","",null,null],[13,"null_value","","",85,null],[13,"number_value","","",85,null],[13,"string_value","","",85,null],[13,"bool_value","","",85,null],[13,"struct_value","","",85,null],[13,"list_value","","",85,null],[4,"NullValue","","",null,null],[13,"NULL_VALUE","","",86,null],[4,"Field_Kind","","",null,null],[13,"TYPE_UNKNOWN","","",87,null],[13,"TYPE_DOUBLE","","",87,null],[13,"TYPE_FLOAT","","",87,null],[13,"TYPE_INT64","","",87,null],[13,"TYPE_UINT64","","",87,null],[13,"TYPE_INT32","","",87,null],[13,"TYPE_FIXED64","","",87,null],[13,"TYPE_FIXED32","","",87,null],[13,"TYPE_BOOL","","",87,null],[13,"TYPE_STRING","","",87,null],[13,"TYPE_GROUP","","",87,null],[13,"TYPE_MESSAGE","","",87,null],[13,"TYPE_BYTES","","",87,null],[13,"TYPE_UINT32","","",87,null],[13,"TYPE_ENUM","","",87,null],[13,"TYPE_SFIXED32","","",87,null],[13,"TYPE_SFIXED64","","",87,null],[13,"TYPE_SINT32","","",87,null],[13,"TYPE_SINT64","","",87,null],[4,"Field_Cardinality","","",null,null],[13,"CARDINALITY_UNKNOWN","","",88,null],[13,"CARDINALITY_OPTIONAL","","",88,null],[13,"CARDINALITY_REQUIRED","","",88,null],[13,"CARDINALITY_REPEATED","","",88,null],[4,"Syntax","","",null,null],[13,"SYNTAX_PROTO2","","",89,null],[13,"SYNTAX_PROTO3","","",89,null],[11,"new","","",59,[[],["any"]]],[11,"get_type_url","","",59,[[["self"]],["str"]]],[11,"clear_type_url","","",59,[[["self"]]]],[11,"set_type_url","","",59,[[["string"],["self"]]]],[11,"mut_type_url","","",59,[[["self"]],["string"]]],[11,"take_type_url","","",59,[[["self"]],["string"]]],[11,"get_value","","",59,[[["self"]]]],[11,"clear_value","","",59,[[["self"]]]],[11,"set_value","","",59,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_value","","",59,[[["self"]],["vec"]]],[11,"take_value","","",59,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","",60,[[],["api"]]],[11,"get_name","","",60,[[["self"]],["str"]]],[11,"clear_name","","",60,[[["self"]]]],[11,"set_name","","",60,[[["string"],["self"]]]],[11,"mut_name","","",60,[[["self"]],["string"]]],[11,"take_name","","",60,[[["self"]],["string"]]],[11,"get_methods","","",60,[[["self"]]]],[11,"clear_methods","","",60,[[["self"]]]],[11,"set_methods","","",60,[[["method"],["self"],["repeatedfield",["method"]]]]],[11,"mut_methods","","",60,[[["self"]],["repeatedfield"]]],[11,"take_methods","","",60,[[["self"]],[["method"],["repeatedfield",["method"]]]]],[11,"get_options","","",60,[[["self"]]]],[11,"clear_options","","",60,[[["self"]]]],[11,"set_options","","",60,[[["repeatedfield",["option"]],["self"],["option"]]]],[11,"mut_options","","",60,[[["self"]],["repeatedfield"]]],[11,"take_options","","",60,[[["self"]],[["repeatedfield",["option"]],["option"]]]],[11,"get_version","","",60,[[["self"]],["str"]]],[11,"clear_version","","",60,[[["self"]]]],[11,"set_version","","",60,[[["string"],["self"]]]],[11,"mut_version","","",60,[[["self"]],["string"]]],[11,"take_version","","",60,[[["self"]],["string"]]],[11,"get_source_context","","",60,[[["self"]],["sourcecontext"]]],[11,"clear_source_context","","",60,[[["self"]]]],[11,"has_source_context","","",60,[[["self"]],["bool"]]],[11,"set_source_context","","",60,[[["self"],["sourcecontext"]]]],[11,"mut_source_context","","",60,[[["self"]],["sourcecontext"]]],[11,"take_source_context","","",60,[[["self"]],["sourcecontext"]]],[11,"get_mixins","","",60,[[["self"]]]],[11,"clear_mixins","","",60,[[["self"]]]],[11,"set_mixins","","",60,[[["self"],["repeatedfield",["mixin"]],["mixin"]]]],[11,"mut_mixins","","",60,[[["self"]],["repeatedfield"]]],[11,"take_mixins","","",60,[[["self"]],[["repeatedfield",["mixin"]],["mixin"]]]],[11,"get_syntax","","",60,[[["self"]],["syntax"]]],[11,"clear_syntax","","",60,[[["self"]]]],[11,"set_syntax","","",60,[[["self"],["syntax"]]]],[11,"new","","",61,[[],["method"]]],[11,"get_name","","",61,[[["self"]],["str"]]],[11,"clear_name","","",61,[[["self"]]]],[11,"set_name","","",61,[[["string"],["self"]]]],[11,"mut_name","","",61,[[["self"]],["string"]]],[11,"take_name","","",61,[[["self"]],["string"]]],[11,"get_request_type_url","","",61,[[["self"]],["str"]]],[11,"clear_request_type_url","","",61,[[["self"]]]],[11,"set_request_type_url","","",61,[[["string"],["self"]]]],[11,"mut_request_type_url","","",61,[[["self"]],["string"]]],[11,"take_request_type_url","","",61,[[["self"]],["string"]]],[11,"get_request_streaming","","",61,[[["self"]],["bool"]]],[11,"clear_request_streaming","","",61,[[["self"]]]],[11,"set_request_streaming","","",61,[[["self"],["bool"]]]],[11,"get_response_type_url","","",61,[[["self"]],["str"]]],[11,"clear_response_type_url","","",61,[[["self"]]]],[11,"set_response_type_url","","",61,[[["string"],["self"]]]],[11,"mut_response_type_url","","",61,[[["self"]],["string"]]],[11,"take_response_type_url","","",61,[[["self"]],["string"]]],[11,"get_response_streaming","","",61,[[["self"]],["bool"]]],[11,"clear_response_streaming","","",61,[[["self"]]]],[11,"set_response_streaming","","",61,[[["self"],["bool"]]]],[11,"get_options","","",61,[[["self"]]]],[11,"clear_options","","",61,[[["self"]]]],[11,"set_options","","",61,[[["repeatedfield",["option"]],["self"],["option"]]]],[11,"mut_options","","",61,[[["self"]],["repeatedfield"]]],[11,"take_options","","",61,[[["self"]],[["repeatedfield",["option"]],["option"]]]],[11,"get_syntax","","",61,[[["self"]],["syntax"]]],[11,"clear_syntax","","",61,[[["self"]]]],[11,"set_syntax","","",61,[[["self"],["syntax"]]]],[11,"new","","",62,[[],["mixin"]]],[11,"get_name","","",62,[[["self"]],["str"]]],[11,"clear_name","","",62,[[["self"]]]],[11,"set_name","","",62,[[["string"],["self"]]]],[11,"mut_name","","",62,[[["self"]],["string"]]],[11,"take_name","","",62,[[["self"]],["string"]]],[11,"get_root","","",62,[[["self"]],["str"]]],[11,"clear_root","","",62,[[["self"]]]],[11,"set_root","","",62,[[["string"],["self"]]]],[11,"mut_root","","",62,[[["self"]],["string"]]],[11,"take_root","","",62,[[["self"]],["string"]]],[11,"new","","",63,[[],["duration"]]],[11,"get_seconds","","",63,[[["self"]],["i64"]]],[11,"clear_seconds","","",63,[[["self"]]]],[11,"set_seconds","","",63,[[["i64"],["self"]]]],[11,"get_nanos","","",63,[[["self"]],["i32"]]],[11,"clear_nanos","","",63,[[["self"]]]],[11,"set_nanos","","",63,[[["self"],["i32"]]]],[11,"new","","",64,[[],["empty"]]],[11,"new","","",65,[[],["fieldmask"]]],[11,"get_paths","","",65,[[["self"]]]],[11,"clear_paths","","",65,[[["self"]]]],[11,"set_paths","","",65,[[["string"],["self"],["repeatedfield",["string"]]]]],[11,"mut_paths","","",65,[[["self"]],["repeatedfield"]]],[11,"take_paths","","",65,[[["self"]],[["string"],["repeatedfield",["string"]]]]],[11,"new","","",66,[[],["sourcecontext"]]],[11,"get_file_name","","",66,[[["self"]],["str"]]],[11,"clear_file_name","","",66,[[["self"]]]],[11,"set_file_name","","",66,[[["string"],["self"]]]],[11,"mut_file_name","","",66,[[["self"]],["string"]]],[11,"take_file_name","","",66,[[["self"]],["string"]]],[11,"new","","",67,[[],["struct"]]],[11,"get_fields","","",67,[[["self"]],["hashmap"]]],[11,"clear_fields","","",67,[[["self"]]]],[11,"set_fields","","",67,[[["string"],["self"],["value"],["hashmap",["string","value"]]]]],[11,"mut_fields","","",67,[[["self"]],["hashmap"]]],[11,"take_fields","","",67,[[["self"]],[["string"],["value"],["hashmap",["string","value"]]]]],[11,"new","","",68,[[],["value"]]],[11,"get_null_value","","",68,[[["self"]],["nullvalue"]]],[11,"clear_null_value","","",68,[[["self"]]]],[11,"has_null_value","","",68,[[["self"]],["bool"]]],[11,"set_null_value","","",68,[[["self"],["nullvalue"]]]],[11,"get_number_value","","",68,[[["self"]],["f64"]]],[11,"clear_number_value","","",68,[[["self"]]]],[11,"has_number_value","","",68,[[["self"]],["bool"]]],[11,"set_number_value","","",68,[[["self"],["f64"]]]],[11,"get_string_value","","",68,[[["self"]],["str"]]],[11,"clear_string_value","","",68,[[["self"]]]],[11,"has_string_value","","",68,[[["self"]],["bool"]]],[11,"set_string_value","","",68,[[["string"],["self"]]]],[11,"mut_string_value","","",68,[[["self"]],["string"]]],[11,"take_string_value","","",68,[[["self"]],["string"]]],[11,"get_bool_value","","",68,[[["self"]],["bool"]]],[11,"clear_bool_value","","",68,[[["self"]]]],[11,"has_bool_value","","",68,[[["self"]],["bool"]]],[11,"set_bool_value","","",68,[[["self"],["bool"]]]],[11,"get_struct_value","","",68,[[["self"]],["struct"]]],[11,"clear_struct_value","","",68,[[["self"]]]],[11,"has_struct_value","","",68,[[["self"]],["bool"]]],[11,"set_struct_value","","",68,[[["struct"],["self"]]]],[11,"mut_struct_value","","",68,[[["self"]],["struct"]]],[11,"take_struct_value","","",68,[[["self"]],["struct"]]],[11,"get_list_value","","",68,[[["self"]],["listvalue"]]],[11,"clear_list_value","","",68,[[["self"]]]],[11,"has_list_value","","",68,[[["self"]],["bool"]]],[11,"set_list_value","","",68,[[["self"],["listvalue"]]]],[11,"mut_list_value","","",68,[[["self"]],["listvalue"]]],[11,"take_list_value","","",68,[[["self"]],["listvalue"]]],[11,"new","","",69,[[],["listvalue"]]],[11,"get_values","","",69,[[["self"]]]],[11,"clear_values","","",69,[[["self"]]]],[11,"set_values","","",69,[[["self"],["repeatedfield",["value"]],["value"]]]],[11,"mut_values","","",69,[[["self"]],["repeatedfield"]]],[11,"take_values","","",69,[[["self"]],[["repeatedfield",["value"]],["value"]]]],[11,"new","","",70,[[],["timestamp"]]],[11,"get_seconds","","",70,[[["self"]],["i64"]]],[11,"clear_seconds","","",70,[[["self"]]]],[11,"set_seconds","","",70,[[["i64"],["self"]]]],[11,"get_nanos","","",70,[[["self"]],["i32"]]],[11,"clear_nanos","","",70,[[["self"]]]],[11,"set_nanos","","",70,[[["self"],["i32"]]]],[11,"new","","",71,[[],["type"]]],[11,"get_name","","",71,[[["self"]],["str"]]],[11,"clear_name","","",71,[[["self"]]]],[11,"set_name","","",71,[[["string"],["self"]]]],[11,"mut_name","","",71,[[["self"]],["string"]]],[11,"take_name","","",71,[[["self"]],["string"]]],[11,"get_fields","","",71,[[["self"]]]],[11,"clear_fields","","",71,[[["self"]]]],[11,"set_fields","","",71,[[["repeatedfield",["field"]],["self"],["field"]]]],[11,"mut_fields","","",71,[[["self"]],["repeatedfield"]]],[11,"take_fields","","",71,[[["self"]],[["repeatedfield",["field"]],["field"]]]],[11,"get_oneofs","","",71,[[["self"]]]],[11,"clear_oneofs","","",71,[[["self"]]]],[11,"set_oneofs","","",71,[[["string"],["self"],["repeatedfield",["string"]]]]],[11,"mut_oneofs","","",71,[[["self"]],["repeatedfield"]]],[11,"take_oneofs","","",71,[[["self"]],[["string"],["repeatedfield",["string"]]]]],[11,"get_options","","",71,[[["self"]]]],[11,"clear_options","","",71,[[["self"]]]],[11,"set_options","","",71,[[["self"],["repeatedfield",["option"]],["option"]]]],[11,"mut_options","","",71,[[["self"]],["repeatedfield"]]],[11,"take_options","","",71,[[["self"]],[["repeatedfield",["option"]],["option"]]]],[11,"get_source_context","","",71,[[["self"]],["sourcecontext"]]],[11,"clear_source_context","","",71,[[["self"]]]],[11,"has_source_context","","",71,[[["self"]],["bool"]]],[11,"set_source_context","","",71,[[["self"],["sourcecontext"]]]],[11,"mut_source_context","","",71,[[["self"]],["sourcecontext"]]],[11,"take_source_context","","",71,[[["self"]],["sourcecontext"]]],[11,"get_syntax","","",71,[[["self"]],["syntax"]]],[11,"clear_syntax","","",71,[[["self"]]]],[11,"set_syntax","","",71,[[["syntax"],["self"]]]],[11,"new","","",72,[[],["field"]]],[11,"get_kind","","",72,[[["self"]],["field_kind"]]],[11,"clear_kind","","",72,[[["self"]]]],[11,"set_kind","","",72,[[["self"],["field_kind"]]]],[11,"get_cardinality","","",72,[[["self"]],["field_cardinality"]]],[11,"clear_cardinality","","",72,[[["self"]]]],[11,"set_cardinality","","",72,[[["self"],["field_cardinality"]]]],[11,"get_number","","",72,[[["self"]],["i32"]]],[11,"clear_number","","",72,[[["self"]]]],[11,"set_number","","",72,[[["self"],["i32"]]]],[11,"get_name","","",72,[[["self"]],["str"]]],[11,"clear_name","","",72,[[["self"]]]],[11,"set_name","","",72,[[["string"],["self"]]]],[11,"mut_name","","",72,[[["self"]],["string"]]],[11,"take_name","","",72,[[["self"]],["string"]]],[11,"get_type_url","","",72,[[["self"]],["str"]]],[11,"clear_type_url","","",72,[[["self"]]]],[11,"set_type_url","","",72,[[["string"],["self"]]]],[11,"mut_type_url","","",72,[[["self"]],["string"]]],[11,"take_type_url","","",72,[[["self"]],["string"]]],[11,"get_oneof_index","","",72,[[["self"]],["i32"]]],[11,"clear_oneof_index","","",72,[[["self"]]]],[11,"set_oneof_index","","",72,[[["self"],["i32"]]]],[11,"get_packed","","",72,[[["self"]],["bool"]]],[11,"clear_packed","","",72,[[["self"]]]],[11,"set_packed","","",72,[[["self"],["bool"]]]],[11,"get_options","","",72,[[["self"]]]],[11,"clear_options","","",72,[[["self"]]]],[11,"set_options","","",72,[[["self"],["repeatedfield",["option"]],["option"]]]],[11,"mut_options","","",72,[[["self"]],["repeatedfield"]]],[11,"take_options","","",72,[[["self"]],[["repeatedfield",["option"]],["option"]]]],[11,"get_json_name","","",72,[[["self"]],["str"]]],[11,"clear_json_name","","",72,[[["self"]]]],[11,"set_json_name","","",72,[[["string"],["self"]]]],[11,"mut_json_name","","",72,[[["self"]],["string"]]],[11,"take_json_name","","",72,[[["self"]],["string"]]],[11,"get_default_value","","",72,[[["self"]],["str"]]],[11,"clear_default_value","","",72,[[["self"]]]],[11,"set_default_value","","",72,[[["string"],["self"]]]],[11,"mut_default_value","","",72,[[["self"]],["string"]]],[11,"take_default_value","","",72,[[["self"]],["string"]]],[11,"new","","",73,[[],["enum"]]],[11,"get_name","","",73,[[["self"]],["str"]]],[11,"clear_name","","",73,[[["self"]]]],[11,"set_name","","",73,[[["string"],["self"]]]],[11,"mut_name","","",73,[[["self"]],["string"]]],[11,"take_name","","",73,[[["self"]],["string"]]],[11,"get_enumvalue","","",73,[[["self"]]]],[11,"clear_enumvalue","","",73,[[["self"]]]],[11,"set_enumvalue","","",73,[[["repeatedfield",["enumvalue"]],["self"],["enumvalue"]]]],[11,"mut_enumvalue","","",73,[[["self"]],["repeatedfield"]]],[11,"take_enumvalue","","",73,[[["self"]],[["enumvalue"],["repeatedfield",["enumvalue"]]]]],[11,"get_options","","",73,[[["self"]]]],[11,"clear_options","","",73,[[["self"]]]],[11,"set_options","","",73,[[["self"],["repeatedfield",["option"]],["option"]]]],[11,"mut_options","","",73,[[["self"]],["repeatedfield"]]],[11,"take_options","","",73,[[["self"]],[["repeatedfield",["option"]],["option"]]]],[11,"get_source_context","","",73,[[["self"]],["sourcecontext"]]],[11,"clear_source_context","","",73,[[["self"]]]],[11,"has_source_context","","",73,[[["self"]],["bool"]]],[11,"set_source_context","","",73,[[["self"],["sourcecontext"]]]],[11,"mut_source_context","","",73,[[["self"]],["sourcecontext"]]],[11,"take_source_context","","",73,[[["self"]],["sourcecontext"]]],[11,"get_syntax","","",73,[[["self"]],["syntax"]]],[11,"clear_syntax","","",73,[[["self"]]]],[11,"set_syntax","","",73,[[["syntax"],["self"]]]],[11,"new","","",74,[[],["enumvalue"]]],[11,"get_name","","",74,[[["self"]],["str"]]],[11,"clear_name","","",74,[[["self"]]]],[11,"set_name","","",74,[[["string"],["self"]]]],[11,"mut_name","","",74,[[["self"]],["string"]]],[11,"take_name","","",74,[[["self"]],["string"]]],[11,"get_number","","",74,[[["self"]],["i32"]]],[11,"clear_number","","",74,[[["self"]]]],[11,"set_number","","",74,[[["self"],["i32"]]]],[11,"get_options","","",74,[[["self"]]]],[11,"clear_options","","",74,[[["self"]]]],[11,"set_options","","",74,[[["self"],["repeatedfield",["option"]],["option"]]]],[11,"mut_options","","",74,[[["self"]],["repeatedfield"]]],[11,"take_options","","",74,[[["self"]],[["repeatedfield",["option"]],["option"]]]],[11,"new","","",75,[[],["option"]]],[11,"get_name","","",75,[[["self"]],["str"]]],[11,"clear_name","","",75,[[["self"]]]],[11,"set_name","","",75,[[["string"],["self"]]]],[11,"mut_name","","",75,[[["self"]],["string"]]],[11,"take_name","","",75,[[["self"]],["string"]]],[11,"get_value","","",75,[[["self"]],["any"]]],[11,"clear_value","","",75,[[["self"]]]],[11,"has_value","","",75,[[["self"]],["bool"]]],[11,"set_value","","",75,[[["self"],["any"]]]],[11,"mut_value","","",75,[[["self"]],["any"]]],[11,"take_value","","",75,[[["self"]],["any"]]],[11,"new","","",76,[[],["doublevalue"]]],[11,"get_value","","",76,[[["self"]],["f64"]]],[11,"clear_value","","",76,[[["self"]]]],[11,"set_value","","",76,[[["self"],["f64"]]]],[11,"new","","",77,[[],["floatvalue"]]],[11,"get_value","","",77,[[["self"]],["f32"]]],[11,"clear_value","","",77,[[["self"]]]],[11,"set_value","","",77,[[["f32"],["self"]]]],[11,"new","","",78,[[],["int64value"]]],[11,"get_value","","",78,[[["self"]],["i64"]]],[11,"clear_value","","",78,[[["self"]]]],[11,"set_value","","",78,[[["i64"],["self"]]]],[11,"new","","",79,[[],["uint64value"]]],[11,"get_value","","",79,[[["self"]],["u64"]]],[11,"clear_value","","",79,[[["self"]]]],[11,"set_value","","",79,[[["self"],["u64"]]]],[11,"new","","",80,[[],["int32value"]]],[11,"get_value","","",80,[[["self"]],["i32"]]],[11,"clear_value","","",80,[[["self"]]]],[11,"set_value","","",80,[[["self"],["i32"]]]],[11,"new","","",81,[[],["uint32value"]]],[11,"get_value","","",81,[[["self"]],["u32"]]],[11,"clear_value","","",81,[[["self"]]]],[11,"set_value","","",81,[[["self"],["u32"]]]],[11,"new","","",82,[[],["boolvalue"]]],[11,"get_value","","",82,[[["self"]],["bool"]]],[11,"clear_value","","",82,[[["self"]]]],[11,"set_value","","",82,[[["self"],["bool"]]]],[11,"new","","",83,[[],["stringvalue"]]],[11,"get_value","","",83,[[["self"]],["str"]]],[11,"clear_value","","",83,[[["self"]]]],[11,"set_value","","",83,[[["string"],["self"]]]],[11,"mut_value","","",83,[[["self"]],["string"]]],[11,"take_value","","",83,[[["self"]],["string"]]],[11,"new","","",84,[[],["bytesvalue"]]],[11,"get_value","","",84,[[["self"]]]],[11,"clear_value","","",84,[[["self"]]]],[11,"set_value","","",84,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_value","","",84,[[["self"]],["vec"]]],[11,"take_value","","",84,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"get","protobuf","Get cached size",90,[[["self"]],["u32"]]],[11,"set","","Set cached size",90,[[["u32"],["self"]]]],[11,"wire_type","","Wire type for this unknown",2,[[["self"]],["wiretype"]]],[11,"get_ref","","As ref",2,[[["self"]],["unknownvalueref"]]],[11,"sint32","","Construct unknown value from `sint32` value.",2,[[["i32"]],["unknownvalue"]]],[11,"sint64","","Construct unknown value from `sint64` value.",2,[[["i64"]],["unknownvalue"]]],[11,"wire_type","","Wire-type to serialize this unknown",3,[[["self"]],["wiretype"]]],[11,"add_value","","Add unknown value",1,[[["self"],["unknownvalue"]]]],[11,"iter","","Iterate over unknown values",1,[[["self"]],["unknownvaluesiter"]]],[11,"new","","Empty unknown fields",0,[[],["unknownfields"]]],[11,"add_fixed32","","Add unknown fixed 32-bit",0,[[["self"],["u32"]]]],[11,"add_fixed64","","Add unknown fixed 64-bit",0,[[["self"],["u32"],["u64"]]]],[11,"add_varint","","Add unknown varint",0,[[["self"],["u32"],["u64"]]]],[11,"add_length_delimited","","Add unknown length delimited",0,[[["u32"],["self"],["vec",["u8"]],["u8"]]]],[11,"add_value","","Add unknown value",0,[[["self"],["u32"],["unknownvalue"]]]],[11,"iter","","Iterate over all unknowns",0,[[["self"]],["unknownfieldsiter"]]],[11,"get","","Find unknown field by number",0,[[["u32"],["self"]],[["option",["unknownvalues"]],["unknownvalues"]]]],[17,"VERSION","","protobuf crate version",null,null],[17,"VERSION_2_14_0","","This symbol can be referenced to assert that proper…",null,null],[8,"Clear","","anything that can be cleared",null,null],[10,"clear","","Clear this make, make it equivalent to newly created object.",91,[[["self"]]]],[8,"Message","","Trait implemented for all generated structs for protobuf…",null,null],[10,"descriptor","","Message descriptor for this message, used for reflection.",92,[[["self"]],["messagedescriptor"]]],[10,"is_initialized","","True iff all required fields are initialized. Always…",92,[[["self"]],["bool"]]],[10,"merge_from","","Update this message object with fields read from given…",92,[[["self"],["codedinputstream"]],["protobufresult"]]],[10,"write_to_with_cached_sizes","","Write message to the stream.",92,[[["codedoutputstream"],["self"]],["protobufresult"]]],[10,"compute_size","","Compute and cache size of this message and all nested…",92,[[["self"]],["u32"]]],[10,"get_cached_size","","Get size previously computed by `compute_size`.",92,[[["self"]],["u32"]]],[11,"write_to","","Write the message to the stream.",92,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"write_length_delimited_to","","Write the message to the stream prepending the message…",92,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"write_length_delimited_to_vec","","Write the message to the vec, prepend the message with…",92,[[["vec"],["self"]],["protobufresult"]]],[11,"merge_from_bytes","","Update this message object with fields read from given…",92,[[["self"]],["protobufresult"]]],[11,"check_initialized","","Check if all required fields of this object are initialized.",92,[[["self"]],["protobufresult"]]],[11,"write_to_writer","","Write the message to the writer.",92,[[["self"],["write"]],["protobufresult"]]],[11,"write_to_vec","","Write the message to bytes vec.",92,[[["vec"],["self"]],["protobufresult"]]],[11,"write_to_bytes","","Write the message to bytes vec.",92,[[["self"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[11,"write_length_delimited_to_writer","","Write the message to the writer, prepend the message with…",92,[[["self"],["write"]],["protobufresult"]]],[11,"write_length_delimited_to_bytes","","Write the message to the bytes vec, prepend the message…",92,[[["self"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[10,"get_unknown_fields","","Get a reference to unknown fields.",92,[[["self"]],["unknownfields"]]],[10,"mut_unknown_fields","","Get a mutable reference to unknown fields.",92,[[["self"]],["unknownfields"]]],[11,"type_id","","Get type id for downcasting.",92,[[["self"]],["typeid"]]],[10,"as_any","","View self as `Any`.",92,[[["self"]],["any"]]],[11,"as_any_mut","","View self as mutable `Any`.",92,[[["self"]],["any"]]],[11,"into_any","","Convert boxed self to boxed `Any`.",92,[[["box"]],[["any"],["box",["any"]]]]],[10,"new","","Create an empty message object.",92,[[],["self"]]],[11,"descriptor_static","","Get message descriptor for message type.",92,[[],["messagedescriptor"]]],[10,"default_instance","","Return a pointer to default immutable message with static…",92,[[],["self"]]],[8,"ProtobufEnum","","Trait implemented by all protobuf enum types.",null,null],[10,"value","","Get enum `i32` value.",93,[[["self"]],["i32"]]],[10,"from_i32","","Try to create an enum from `i32` value. Return `None` if…",93,[[["i32"]],["option"]]],[11,"values","","Get all enum values for enum type.",93,[[]]],[11,"descriptor","","Get enum value descriptor.",93,[[["self"]],["enumvaluedescriptor"]]],[11,"enum_descriptor","","Get enum descriptor.",93,[[["self"]],["enumdescriptor"]]],[11,"enum_descriptor_static","","Get enum descriptor by type.",93,[[],["enumdescriptor"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"into_iter","","",94,[[],["i"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"into_iter","","",95,[[],["i"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","protobuf::wire_format","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","protobuf::descriptor","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","protobuf::plugin","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","protobuf::error","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","protobuf::ext","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","protobuf::lazy","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","protobuf::reflect","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","protobuf::types","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","protobuf::well_known_types","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"clear","protobuf::descriptor","",5,[[["self"]]]],[11,"clear","","",6,[[["self"]]]],[11,"clear","","",7,[[["self"]]]],[11,"clear","","",8,[[["self"]]]],[11,"clear","","",9,[[["self"]]]],[11,"clear","","",10,[[["self"]]]],[11,"clear","","",11,[[["self"]]]],[11,"clear","","",12,[[["self"]]]],[11,"clear","","",13,[[["self"]]]],[11,"clear","","",14,[[["self"]]]],[11,"clear","","",15,[[["self"]]]],[11,"clear","","",16,[[["self"]]]],[11,"clear","","",17,[[["self"]]]],[11,"clear","","",18,[[["self"]]]],[11,"clear","","",19,[[["self"]]]],[11,"clear","","",20,[[["self"]]]],[11,"clear","","",21,[[["self"]]]],[11,"clear","","",22,[[["self"]]]],[11,"clear","","",23,[[["self"]]]],[11,"clear","","",24,[[["self"]]]],[11,"clear","","",25,[[["self"]]]],[11,"clear","","",26,[[["self"]]]],[11,"clear","","",27,[[["self"]]]],[11,"clear","","",28,[[["self"]]]],[11,"clear","","",29,[[["self"]]]],[11,"clear","protobuf::plugin","",35,[[["self"]]]],[11,"clear","","",36,[[["self"]]]],[11,"clear","","",37,[[["self"]]]],[11,"clear","protobuf","",50,[[["self"]]]],[11,"clear","protobuf::well_known_types","",59,[[["self"]]]],[11,"clear","","",60,[[["self"]]]],[11,"clear","","",61,[[["self"]]]],[11,"clear","","",62,[[["self"]]]],[11,"clear","","",63,[[["self"]]]],[11,"clear","","",64,[[["self"]]]],[11,"clear","","",65,[[["self"]]]],[11,"clear","","",66,[[["self"]]]],[11,"clear","","",67,[[["self"]]]],[11,"clear","","",68,[[["self"]]]],[11,"clear","","",69,[[["self"]]]],[11,"clear","","",70,[[["self"]]]],[11,"clear","","",71,[[["self"]]]],[11,"clear","","",72,[[["self"]]]],[11,"clear","","",73,[[["self"]]]],[11,"clear","","",74,[[["self"]]]],[11,"clear","","",75,[[["self"]]]],[11,"clear","","",76,[[["self"]]]],[11,"clear","","",77,[[["self"]]]],[11,"clear","","",78,[[["self"]]]],[11,"clear","","",79,[[["self"]]]],[11,"clear","","",80,[[["self"]]]],[11,"clear","","",81,[[["self"]]]],[11,"clear","","",82,[[["self"]]]],[11,"clear","","",83,[[["self"]]]],[11,"clear","","",84,[[["self"]]]],[11,"clear","protobuf","",0,[[["self"]]]],[11,"is_initialized","protobuf::descriptor","",5,[[["self"]],["bool"]]],[11,"merge_from","","",5,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",5,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",5,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",5,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",5,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",5,[[["self"]],["unknownfields"]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",5,[[["self"]],["messagedescriptor"]]],[11,"new","","",5,[[],["filedescriptorset"]]],[11,"descriptor_static","","",5,[[],["messagedescriptor"]]],[11,"default_instance","","",5,[[],["filedescriptorset"]]],[11,"is_initialized","","",6,[[["self"]],["bool"]]],[11,"merge_from","","",6,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",6,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",6,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",6,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",6,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",6,[[["self"]],["unknownfields"]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",6,[[["self"]],["messagedescriptor"]]],[11,"new","","",6,[[],["filedescriptorproto"]]],[11,"descriptor_static","","",6,[[],["messagedescriptor"]]],[11,"default_instance","","",6,[[],["filedescriptorproto"]]],[11,"is_initialized","","",7,[[["self"]],["bool"]]],[11,"merge_from","","",7,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",7,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",7,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",7,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",7,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",7,[[["self"]],["unknownfields"]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",7,[[["self"]],["messagedescriptor"]]],[11,"new","","",7,[[],["descriptorproto"]]],[11,"descriptor_static","","",7,[[],["messagedescriptor"]]],[11,"default_instance","","",7,[[],["descriptorproto"]]],[11,"is_initialized","","",8,[[["self"]],["bool"]]],[11,"merge_from","","",8,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",8,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",8,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",8,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",8,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",8,[[["self"]],["unknownfields"]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"into_any","","",8,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",8,[[["self"]],["messagedescriptor"]]],[11,"new","","",8,[[],["descriptorproto_extensionrange"]]],[11,"descriptor_static","","",8,[[],["messagedescriptor"]]],[11,"default_instance","","",8,[[],["descriptorproto_extensionrange"]]],[11,"is_initialized","","",9,[[["self"]],["bool"]]],[11,"merge_from","","",9,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",9,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",9,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",9,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",9,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",9,[[["self"]],["unknownfields"]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",9,[[["self"]],["messagedescriptor"]]],[11,"new","","",9,[[],["descriptorproto_reservedrange"]]],[11,"descriptor_static","","",9,[[],["messagedescriptor"]]],[11,"default_instance","","",9,[[],["descriptorproto_reservedrange"]]],[11,"is_initialized","","",10,[[["self"]],["bool"]]],[11,"merge_from","","",10,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",10,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",10,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",10,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",10,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",10,[[["self"]],["unknownfields"]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",10,[[["self"]],["messagedescriptor"]]],[11,"new","","",10,[[],["fielddescriptorproto"]]],[11,"descriptor_static","","",10,[[],["messagedescriptor"]]],[11,"default_instance","","",10,[[],["fielddescriptorproto"]]],[11,"is_initialized","","",11,[[["self"]],["bool"]]],[11,"merge_from","","",11,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",11,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",11,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",11,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",11,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",11,[[["self"]],["unknownfields"]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",11,[[["self"]],["messagedescriptor"]]],[11,"new","","",11,[[],["oneofdescriptorproto"]]],[11,"descriptor_static","","",11,[[],["messagedescriptor"]]],[11,"default_instance","","",11,[[],["oneofdescriptorproto"]]],[11,"is_initialized","","",12,[[["self"]],["bool"]]],[11,"merge_from","","",12,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",12,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",12,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",12,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",12,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",12,[[["self"]],["unknownfields"]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",12,[[["self"]],["messagedescriptor"]]],[11,"new","","",12,[[],["enumdescriptorproto"]]],[11,"descriptor_static","","",12,[[],["messagedescriptor"]]],[11,"default_instance","","",12,[[],["enumdescriptorproto"]]],[11,"is_initialized","","",13,[[["self"]],["bool"]]],[11,"merge_from","","",13,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",13,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",13,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",13,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",13,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",13,[[["self"]],["unknownfields"]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",13,[[["self"]],["messagedescriptor"]]],[11,"new","","",13,[[],["enumvaluedescriptorproto"]]],[11,"descriptor_static","","",13,[[],["messagedescriptor"]]],[11,"default_instance","","",13,[[],["enumvaluedescriptorproto"]]],[11,"is_initialized","","",14,[[["self"]],["bool"]]],[11,"merge_from","","",14,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",14,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",14,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",14,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",14,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",14,[[["self"]],["unknownfields"]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"into_any","","",14,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",14,[[["self"]],["messagedescriptor"]]],[11,"new","","",14,[[],["servicedescriptorproto"]]],[11,"descriptor_static","","",14,[[],["messagedescriptor"]]],[11,"default_instance","","",14,[[],["servicedescriptorproto"]]],[11,"is_initialized","","",15,[[["self"]],["bool"]]],[11,"merge_from","","",15,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",15,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",15,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",15,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",15,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",15,[[["self"]],["unknownfields"]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",15,[[["self"]],["messagedescriptor"]]],[11,"new","","",15,[[],["methoddescriptorproto"]]],[11,"descriptor_static","","",15,[[],["messagedescriptor"]]],[11,"default_instance","","",15,[[],["methoddescriptorproto"]]],[11,"is_initialized","","",16,[[["self"]],["bool"]]],[11,"merge_from","","",16,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",16,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",16,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",16,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",16,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",16,[[["self"]],["unknownfields"]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"into_any","","",16,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",16,[[["self"]],["messagedescriptor"]]],[11,"new","","",16,[[],["fileoptions"]]],[11,"descriptor_static","","",16,[[],["messagedescriptor"]]],[11,"default_instance","","",16,[[],["fileoptions"]]],[11,"is_initialized","","",17,[[["self"]],["bool"]]],[11,"merge_from","","",17,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",17,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",17,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",17,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",17,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",17,[[["self"]],["unknownfields"]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",17,[[["self"]],["messagedescriptor"]]],[11,"new","","",17,[[],["messageoptions"]]],[11,"descriptor_static","","",17,[[],["messagedescriptor"]]],[11,"default_instance","","",17,[[],["messageoptions"]]],[11,"is_initialized","","",18,[[["self"]],["bool"]]],[11,"merge_from","","",18,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",18,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",18,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",18,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",18,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",18,[[["self"]],["unknownfields"]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",18,[[["self"]],["messagedescriptor"]]],[11,"new","","",18,[[],["fieldoptions"]]],[11,"descriptor_static","","",18,[[],["messagedescriptor"]]],[11,"default_instance","","",18,[[],["fieldoptions"]]],[11,"is_initialized","","",19,[[["self"]],["bool"]]],[11,"merge_from","","",19,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",19,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",19,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",19,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",19,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",19,[[["self"]],["unknownfields"]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"into_any","","",19,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",19,[[["self"]],["messagedescriptor"]]],[11,"new","","",19,[[],["oneofoptions"]]],[11,"descriptor_static","","",19,[[],["messagedescriptor"]]],[11,"default_instance","","",19,[[],["oneofoptions"]]],[11,"is_initialized","","",20,[[["self"]],["bool"]]],[11,"merge_from","","",20,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",20,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",20,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",20,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",20,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",20,[[["self"]],["unknownfields"]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",20,[[["self"]],["messagedescriptor"]]],[11,"new","","",20,[[],["enumoptions"]]],[11,"descriptor_static","","",20,[[],["messagedescriptor"]]],[11,"default_instance","","",20,[[],["enumoptions"]]],[11,"is_initialized","","",21,[[["self"]],["bool"]]],[11,"merge_from","","",21,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",21,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",21,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",21,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",21,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",21,[[["self"]],["unknownfields"]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",21,[[["self"]],["messagedescriptor"]]],[11,"new","","",21,[[],["enumvalueoptions"]]],[11,"descriptor_static","","",21,[[],["messagedescriptor"]]],[11,"default_instance","","",21,[[],["enumvalueoptions"]]],[11,"is_initialized","","",22,[[["self"]],["bool"]]],[11,"merge_from","","",22,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",22,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",22,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",22,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",22,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",22,[[["self"]],["unknownfields"]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"into_any","","",22,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",22,[[["self"]],["messagedescriptor"]]],[11,"new","","",22,[[],["serviceoptions"]]],[11,"descriptor_static","","",22,[[],["messagedescriptor"]]],[11,"default_instance","","",22,[[],["serviceoptions"]]],[11,"is_initialized","","",23,[[["self"]],["bool"]]],[11,"merge_from","","",23,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",23,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",23,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",23,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",23,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",23,[[["self"]],["unknownfields"]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any","","",23,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",23,[[["self"]],["messagedescriptor"]]],[11,"new","","",23,[[],["methodoptions"]]],[11,"descriptor_static","","",23,[[],["messagedescriptor"]]],[11,"default_instance","","",23,[[],["methodoptions"]]],[11,"is_initialized","","",24,[[["self"]],["bool"]]],[11,"merge_from","","",24,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",24,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",24,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",24,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",24,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",24,[[["self"]],["unknownfields"]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",24,[[["self"]],["messagedescriptor"]]],[11,"new","","",24,[[],["uninterpretedoption"]]],[11,"descriptor_static","","",24,[[],["messagedescriptor"]]],[11,"default_instance","","",24,[[],["uninterpretedoption"]]],[11,"is_initialized","","",25,[[["self"]],["bool"]]],[11,"merge_from","","",25,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",25,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",25,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",25,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",25,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",25,[[["self"]],["unknownfields"]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",25,[[["self"]],["messagedescriptor"]]],[11,"new","","",25,[[],["uninterpretedoption_namepart"]]],[11,"descriptor_static","","",25,[[],["messagedescriptor"]]],[11,"default_instance","","",25,[[],["uninterpretedoption_namepart"]]],[11,"is_initialized","","",26,[[["self"]],["bool"]]],[11,"merge_from","","",26,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",26,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",26,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",26,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",26,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",26,[[["self"]],["unknownfields"]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any","","",26,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",26,[[["self"]],["messagedescriptor"]]],[11,"new","","",26,[[],["sourcecodeinfo"]]],[11,"descriptor_static","","",26,[[],["messagedescriptor"]]],[11,"default_instance","","",26,[[],["sourcecodeinfo"]]],[11,"is_initialized","","",27,[[["self"]],["bool"]]],[11,"merge_from","","",27,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",27,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",27,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",27,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",27,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",27,[[["self"]],["unknownfields"]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any","","",27,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",27,[[["self"]],["messagedescriptor"]]],[11,"new","","",27,[[],["sourcecodeinfo_location"]]],[11,"descriptor_static","","",27,[[],["messagedescriptor"]]],[11,"default_instance","","",27,[[],["sourcecodeinfo_location"]]],[11,"is_initialized","","",28,[[["self"]],["bool"]]],[11,"merge_from","","",28,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",28,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",28,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",28,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",28,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",28,[[["self"]],["unknownfields"]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",28,[[["self"]],["messagedescriptor"]]],[11,"new","","",28,[[],["generatedcodeinfo"]]],[11,"descriptor_static","","",28,[[],["messagedescriptor"]]],[11,"default_instance","","",28,[[],["generatedcodeinfo"]]],[11,"is_initialized","","",29,[[["self"]],["bool"]]],[11,"merge_from","","",29,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",29,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",29,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",29,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",29,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",29,[[["self"]],["unknownfields"]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",29,[[["self"]],["messagedescriptor"]]],[11,"new","","",29,[[],["generatedcodeinfo_annotation"]]],[11,"descriptor_static","","",29,[[],["messagedescriptor"]]],[11,"default_instance","","",29,[[],["generatedcodeinfo_annotation"]]],[11,"is_initialized","protobuf::plugin","",35,[[["self"]],["bool"]]],[11,"merge_from","","",35,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",35,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",35,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",35,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",35,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",35,[[["self"]],["unknownfields"]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",35,[[["self"]],["messagedescriptor"]]],[11,"new","","",35,[[],["codegeneratorrequest"]]],[11,"descriptor_static","","",35,[[],["messagedescriptor"]]],[11,"default_instance","","",35,[[],["codegeneratorrequest"]]],[11,"is_initialized","","",36,[[["self"]],["bool"]]],[11,"merge_from","","",36,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",36,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",36,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",36,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",36,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",36,[[["self"]],["unknownfields"]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any","","",36,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",36,[[["self"]],["messagedescriptor"]]],[11,"new","","",36,[[],["codegeneratorresponse"]]],[11,"descriptor_static","","",36,[[],["messagedescriptor"]]],[11,"default_instance","","",36,[[],["codegeneratorresponse"]]],[11,"is_initialized","","",37,[[["self"]],["bool"]]],[11,"merge_from","","",37,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",37,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",37,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",37,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",37,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",37,[[["self"]],["unknownfields"]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",37,[[["self"]],["messagedescriptor"]]],[11,"new","","",37,[[],["codegeneratorresponse_file"]]],[11,"descriptor_static","","",37,[[],["messagedescriptor"]]],[11,"default_instance","","",37,[[],["codegeneratorresponse_file"]]],[11,"is_initialized","protobuf::well_known_types","",59,[[["self"]],["bool"]]],[11,"merge_from","","",59,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",59,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",59,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",59,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",59,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",59,[[["self"]],["unknownfields"]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"into_any","","",59,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",59,[[["self"]],["messagedescriptor"]]],[11,"new","","",59,[[],["any"]]],[11,"descriptor_static","","",59,[[],["messagedescriptor"]]],[11,"default_instance","","",59,[[],["any"]]],[11,"is_initialized","","",60,[[["self"]],["bool"]]],[11,"merge_from","","",60,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",60,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",60,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",60,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",60,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",60,[[["self"]],["unknownfields"]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"into_any","","",60,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",60,[[["self"]],["messagedescriptor"]]],[11,"new","","",60,[[],["api"]]],[11,"descriptor_static","","",60,[[],["messagedescriptor"]]],[11,"default_instance","","",60,[[],["api"]]],[11,"is_initialized","","",61,[[["self"]],["bool"]]],[11,"merge_from","","",61,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",61,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",61,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",61,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",61,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",61,[[["self"]],["unknownfields"]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"into_any","","",61,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",61,[[["self"]],["messagedescriptor"]]],[11,"new","","",61,[[],["method"]]],[11,"descriptor_static","","",61,[[],["messagedescriptor"]]],[11,"default_instance","","",61,[[],["method"]]],[11,"is_initialized","","",62,[[["self"]],["bool"]]],[11,"merge_from","","",62,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",62,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",62,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",62,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",62,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",62,[[["self"]],["unknownfields"]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",62,[[["self"]],["messagedescriptor"]]],[11,"new","","",62,[[],["mixin"]]],[11,"descriptor_static","","",62,[[],["messagedescriptor"]]],[11,"default_instance","","",62,[[],["mixin"]]],[11,"is_initialized","","",63,[[["self"]],["bool"]]],[11,"merge_from","","",63,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",63,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",63,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",63,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",63,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",63,[[["self"]],["unknownfields"]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",63,[[["self"]],["messagedescriptor"]]],[11,"new","","",63,[[],["duration"]]],[11,"descriptor_static","","",63,[[],["messagedescriptor"]]],[11,"default_instance","","",63,[[],["duration"]]],[11,"is_initialized","","",64,[[["self"]],["bool"]]],[11,"merge_from","","",64,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",64,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",64,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",64,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",64,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",64,[[["self"]],["unknownfields"]]],[11,"as_any","","",64,[[["self"]],["any"]]],[11,"as_any_mut","","",64,[[["self"]],["any"]]],[11,"into_any","","",64,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",64,[[["self"]],["messagedescriptor"]]],[11,"new","","",64,[[],["empty"]]],[11,"descriptor_static","","",64,[[],["messagedescriptor"]]],[11,"default_instance","","",64,[[],["empty"]]],[11,"is_initialized","","",65,[[["self"]],["bool"]]],[11,"merge_from","","",65,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",65,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",65,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",65,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",65,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",65,[[["self"]],["unknownfields"]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"into_any","","",65,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",65,[[["self"]],["messagedescriptor"]]],[11,"new","","",65,[[],["fieldmask"]]],[11,"descriptor_static","","",65,[[],["messagedescriptor"]]],[11,"default_instance","","",65,[[],["fieldmask"]]],[11,"is_initialized","","",66,[[["self"]],["bool"]]],[11,"merge_from","","",66,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",66,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",66,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",66,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",66,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",66,[[["self"]],["unknownfields"]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"into_any","","",66,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",66,[[["self"]],["messagedescriptor"]]],[11,"new","","",66,[[],["sourcecontext"]]],[11,"descriptor_static","","",66,[[],["messagedescriptor"]]],[11,"default_instance","","",66,[[],["sourcecontext"]]],[11,"is_initialized","","",67,[[["self"]],["bool"]]],[11,"merge_from","","",67,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",67,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",67,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",67,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",67,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",67,[[["self"]],["unknownfields"]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"into_any","","",67,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",67,[[["self"]],["messagedescriptor"]]],[11,"new","","",67,[[],["struct"]]],[11,"descriptor_static","","",67,[[],["messagedescriptor"]]],[11,"default_instance","","",67,[[],["struct"]]],[11,"is_initialized","","",68,[[["self"]],["bool"]]],[11,"merge_from","","",68,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",68,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",68,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",68,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",68,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",68,[[["self"]],["unknownfields"]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"into_any","","",68,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",68,[[["self"]],["messagedescriptor"]]],[11,"new","","",68,[[],["value"]]],[11,"descriptor_static","","",68,[[],["messagedescriptor"]]],[11,"default_instance","","",68,[[],["value"]]],[11,"is_initialized","","",69,[[["self"]],["bool"]]],[11,"merge_from","","",69,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",69,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",69,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",69,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",69,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",69,[[["self"]],["unknownfields"]]],[11,"as_any","","",69,[[["self"]],["any"]]],[11,"as_any_mut","","",69,[[["self"]],["any"]]],[11,"into_any","","",69,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",69,[[["self"]],["messagedescriptor"]]],[11,"new","","",69,[[],["listvalue"]]],[11,"descriptor_static","","",69,[[],["messagedescriptor"]]],[11,"default_instance","","",69,[[],["listvalue"]]],[11,"is_initialized","","",70,[[["self"]],["bool"]]],[11,"merge_from","","",70,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",70,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",70,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",70,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",70,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",70,[[["self"]],["unknownfields"]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"into_any","","",70,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",70,[[["self"]],["messagedescriptor"]]],[11,"new","","",70,[[],["timestamp"]]],[11,"descriptor_static","","",70,[[],["messagedescriptor"]]],[11,"default_instance","","",70,[[],["timestamp"]]],[11,"is_initialized","","",71,[[["self"]],["bool"]]],[11,"merge_from","","",71,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",71,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",71,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",71,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",71,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",71,[[["self"]],["unknownfields"]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",71,[[["self"]],["messagedescriptor"]]],[11,"new","","",71,[[],["type"]]],[11,"descriptor_static","","",71,[[],["messagedescriptor"]]],[11,"default_instance","","",71,[[],["type"]]],[11,"is_initialized","","",72,[[["self"]],["bool"]]],[11,"merge_from","","",72,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",72,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",72,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",72,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",72,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",72,[[["self"]],["unknownfields"]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"into_any","","",72,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",72,[[["self"]],["messagedescriptor"]]],[11,"new","","",72,[[],["field"]]],[11,"descriptor_static","","",72,[[],["messagedescriptor"]]],[11,"default_instance","","",72,[[],["field"]]],[11,"is_initialized","","",73,[[["self"]],["bool"]]],[11,"merge_from","","",73,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",73,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",73,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",73,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",73,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",73,[[["self"]],["unknownfields"]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"into_any","","",73,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",73,[[["self"]],["messagedescriptor"]]],[11,"new","","",73,[[],["enum"]]],[11,"descriptor_static","","",73,[[],["messagedescriptor"]]],[11,"default_instance","","",73,[[],["enum"]]],[11,"is_initialized","","",74,[[["self"]],["bool"]]],[11,"merge_from","","",74,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",74,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",74,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",74,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",74,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",74,[[["self"]],["unknownfields"]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"into_any","","",74,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",74,[[["self"]],["messagedescriptor"]]],[11,"new","","",74,[[],["enumvalue"]]],[11,"descriptor_static","","",74,[[],["messagedescriptor"]]],[11,"default_instance","","",74,[[],["enumvalue"]]],[11,"is_initialized","","",75,[[["self"]],["bool"]]],[11,"merge_from","","",75,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",75,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",75,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",75,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",75,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",75,[[["self"]],["unknownfields"]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"into_any","","",75,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",75,[[["self"]],["messagedescriptor"]]],[11,"new","","",75,[[],["option"]]],[11,"descriptor_static","","",75,[[],["messagedescriptor"]]],[11,"default_instance","","",75,[[],["option"]]],[11,"is_initialized","","",76,[[["self"]],["bool"]]],[11,"merge_from","","",76,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",76,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",76,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",76,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",76,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",76,[[["self"]],["unknownfields"]]],[11,"as_any","","",76,[[["self"]],["any"]]],[11,"as_any_mut","","",76,[[["self"]],["any"]]],[11,"into_any","","",76,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",76,[[["self"]],["messagedescriptor"]]],[11,"new","","",76,[[],["doublevalue"]]],[11,"descriptor_static","","",76,[[],["messagedescriptor"]]],[11,"default_instance","","",76,[[],["doublevalue"]]],[11,"is_initialized","","",77,[[["self"]],["bool"]]],[11,"merge_from","","",77,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",77,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",77,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",77,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",77,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",77,[[["self"]],["unknownfields"]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"into_any","","",77,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",77,[[["self"]],["messagedescriptor"]]],[11,"new","","",77,[[],["floatvalue"]]],[11,"descriptor_static","","",77,[[],["messagedescriptor"]]],[11,"default_instance","","",77,[[],["floatvalue"]]],[11,"is_initialized","","",78,[[["self"]],["bool"]]],[11,"merge_from","","",78,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",78,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",78,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",78,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",78,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",78,[[["self"]],["unknownfields"]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"into_any","","",78,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",78,[[["self"]],["messagedescriptor"]]],[11,"new","","",78,[[],["int64value"]]],[11,"descriptor_static","","",78,[[],["messagedescriptor"]]],[11,"default_instance","","",78,[[],["int64value"]]],[11,"is_initialized","","",79,[[["self"]],["bool"]]],[11,"merge_from","","",79,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",79,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",79,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",79,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",79,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",79,[[["self"]],["unknownfields"]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"into_any","","",79,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",79,[[["self"]],["messagedescriptor"]]],[11,"new","","",79,[[],["uint64value"]]],[11,"descriptor_static","","",79,[[],["messagedescriptor"]]],[11,"default_instance","","",79,[[],["uint64value"]]],[11,"is_initialized","","",80,[[["self"]],["bool"]]],[11,"merge_from","","",80,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",80,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",80,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",80,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",80,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",80,[[["self"]],["unknownfields"]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"into_any","","",80,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",80,[[["self"]],["messagedescriptor"]]],[11,"new","","",80,[[],["int32value"]]],[11,"descriptor_static","","",80,[[],["messagedescriptor"]]],[11,"default_instance","","",80,[[],["int32value"]]],[11,"is_initialized","","",81,[[["self"]],["bool"]]],[11,"merge_from","","",81,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",81,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",81,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",81,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",81,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",81,[[["self"]],["unknownfields"]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any","","",81,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",81,[[["self"]],["messagedescriptor"]]],[11,"new","","",81,[[],["uint32value"]]],[11,"descriptor_static","","",81,[[],["messagedescriptor"]]],[11,"default_instance","","",81,[[],["uint32value"]]],[11,"is_initialized","","",82,[[["self"]],["bool"]]],[11,"merge_from","","",82,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",82,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",82,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",82,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",82,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",82,[[["self"]],["unknownfields"]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"into_any","","",82,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",82,[[["self"]],["messagedescriptor"]]],[11,"new","","",82,[[],["boolvalue"]]],[11,"descriptor_static","","",82,[[],["messagedescriptor"]]],[11,"default_instance","","",82,[[],["boolvalue"]]],[11,"is_initialized","","",83,[[["self"]],["bool"]]],[11,"merge_from","","",83,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",83,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",83,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",83,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",83,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",83,[[["self"]],["unknownfields"]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"into_any","","",83,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",83,[[["self"]],["messagedescriptor"]]],[11,"new","","",83,[[],["stringvalue"]]],[11,"descriptor_static","","",83,[[],["messagedescriptor"]]],[11,"default_instance","","",83,[[],["stringvalue"]]],[11,"is_initialized","","",84,[[["self"]],["bool"]]],[11,"merge_from","","",84,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",84,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",84,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",84,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",84,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",84,[[["self"]],["unknownfields"]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"into_any","","",84,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",84,[[["self"]],["messagedescriptor"]]],[11,"new","","",84,[[],["bytesvalue"]]],[11,"descriptor_static","","",84,[[],["messagedescriptor"]]],[11,"default_instance","","",84,[[],["bytesvalue"]]],[11,"value","protobuf::descriptor","",30,[[["self"]],["i32"]]],[11,"from_i32","","",30,[[["i32"]],[["option",["fielddescriptorproto_type"]],["fielddescriptorproto_type"]]]],[11,"values","","",30,[[]]],[11,"enum_descriptor_static","","",30,[[],["enumdescriptor"]]],[11,"value","","",31,[[["self"]],["i32"]]],[11,"from_i32","","",31,[[["i32"]],[["option",["fielddescriptorproto_label"]],["fielddescriptorproto_label"]]]],[11,"values","","",31,[[]]],[11,"enum_descriptor_static","","",31,[[],["enumdescriptor"]]],[11,"value","","",32,[[["self"]],["i32"]]],[11,"from_i32","","",32,[[["i32"]],[["fileoptions_optimizemode"],["option",["fileoptions_optimizemode"]]]]],[11,"values","","",32,[[]]],[11,"enum_descriptor_static","","",32,[[],["enumdescriptor"]]],[11,"value","","",33,[[["self"]],["i32"]]],[11,"from_i32","","",33,[[["i32"]],[["fieldoptions_ctype"],["option",["fieldoptions_ctype"]]]]],[11,"values","","",33,[[]]],[11,"enum_descriptor_static","","",33,[[],["enumdescriptor"]]],[11,"value","","",34,[[["self"]],["i32"]]],[11,"from_i32","","",34,[[["i32"]],[["fieldoptions_jstype"],["option",["fieldoptions_jstype"]]]]],[11,"values","","",34,[[]]],[11,"enum_descriptor_static","","",34,[[],["enumdescriptor"]]],[11,"value","protobuf::well_known_types","",86,[[["self"]],["i32"]]],[11,"from_i32","","",86,[[["i32"]],[["nullvalue"],["option",["nullvalue"]]]]],[11,"values","","",86,[[]]],[11,"enum_descriptor_static","","",86,[[],["enumdescriptor"]]],[11,"value","","",87,[[["self"]],["i32"]]],[11,"from_i32","","",87,[[["i32"]],[["field_kind"],["option",["field_kind"]]]]],[11,"values","","",87,[[]]],[11,"enum_descriptor_static","","",87,[[],["enumdescriptor"]]],[11,"value","","",88,[[["self"]],["i32"]]],[11,"from_i32","","",88,[[["i32"]],[["field_cardinality"],["option",["field_cardinality"]]]]],[11,"values","","",88,[[]]],[11,"enum_descriptor_static","","",88,[[],["enumdescriptor"]]],[11,"value","","",89,[[["self"]],["i32"]]],[11,"from_i32","","",89,[[["i32"]],[["syntax"],["option",["syntax"]]]]],[11,"values","","",89,[[]]],[11,"enum_descriptor_static","","",89,[[],["enumdescriptor"]]],[11,"as_ref","protobuf::descriptor","",5,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",6,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",7,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",8,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",9,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",10,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",30,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",31,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",11,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",12,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",13,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",14,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",15,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",16,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",32,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",17,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",18,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",33,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",34,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",19,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",20,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",21,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",22,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",23,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",24,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",25,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",26,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",27,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",28,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",29,[[["self"]],["reflectvalueref"]]],[11,"as_ref","protobuf::plugin","",35,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",36,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",37,[[["self"]],["reflectvalueref"]]],[11,"as_ref","protobuf::well_known_types","",59,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",60,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",61,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",62,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",63,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",64,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",65,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",66,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",67,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",68,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",69,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",86,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",70,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",71,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",72,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",87,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",88,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",73,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",74,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",75,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",89,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",76,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",77,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",78,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",79,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",80,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",81,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",82,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",83,[[["self"]],["reflectvalueref"]]],[11,"as_ref","","",84,[[["self"]],["reflectvalueref"]]],[11,"wire_type","protobuf::types","",96,[[],["wiretype"]]],[11,"read","","",96,[[["codedinputstream"]],[["f32"],["protobufresult",["f32"]]]]],[11,"compute_size","","",96,[[["f32"]],["u32"]]],[11,"get_from_unknown","","",96,[[["unknownvalues"]],[["f32"],["option",["f32"]]]]],[11,"write_with_cached_size","","",96,[[["f32"],["u32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",97,[[],["wiretype"]]],[11,"read","","",97,[[["codedinputstream"]],[["protobufresult",["f64"]],["f64"]]]],[11,"get_from_unknown","","",97,[[["unknownvalues"]],[["option",["f64"]],["f64"]]]],[11,"compute_size","","",97,[[["f64"]],["u32"]]],[11,"write_with_cached_size","","",97,[[["codedoutputstream"],["u32"],["f64"]],["protobufresult"]]],[11,"wire_type","","",98,[[],["wiretype"]]],[11,"read","","",98,[[["codedinputstream"]],[["protobufresult",["i32"]],["i32"]]]],[11,"compute_size","","",98,[[["i32"]],["u32"]]],[11,"write_with_cached_size","","",98,[[["codedoutputstream"],["u32"],["i32"]],["protobufresult"]]],[11,"get_from_unknown","","",98,[[["unknownvalues"]],[["option",["i32"]],["i32"]]]],[11,"wire_type","","",99,[[],["wiretype"]]],[11,"read","","",99,[[["codedinputstream"]],[["i64"],["protobufresult",["i64"]]]]],[11,"get_from_unknown","","",99,[[["unknownvalues"]],[["option",["i64"]],["i64"]]]],[11,"compute_size","","",99,[[["i64"]],["u32"]]],[11,"write_with_cached_size","","",99,[[["i64"],["u32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",100,[[],["wiretype"]]],[11,"read","","",100,[[["codedinputstream"]],[["protobufresult",["u32"]],["u32"]]]],[11,"get_from_unknown","","",100,[[["unknownvalues"]],[["option",["u32"]],["u32"]]]],[11,"compute_size","","",100,[[["u32"]],["u32"]]],[11,"write_with_cached_size","","",100,[[["codedoutputstream"],["u32"],["u32"]],["protobufresult"]]],[11,"wire_type","","",101,[[],["wiretype"]]],[11,"read","","",101,[[["codedinputstream"]],[["u64"],["protobufresult",["u64"]]]]],[11,"get_from_unknown","","",101,[[["unknownvalues"]],[["u64"],["option",["u64"]]]]],[11,"compute_size","","",101,[[["u64"]],["u32"]]],[11,"write_with_cached_size","","",101,[[["codedoutputstream"],["u32"],["u64"]],["protobufresult"]]],[11,"wire_type","","",102,[[],["wiretype"]]],[11,"read","","",102,[[["codedinputstream"]],[["protobufresult",["i32"]],["i32"]]]],[11,"get_from_unknown","","",102,[[["unknownvalues"]],[["option",["i32"]],["i32"]]]],[11,"compute_size","","",102,[[["i32"]],["u32"]]],[11,"write_with_cached_size","","",102,[[["codedoutputstream"],["u32"],["i32"]],["protobufresult"]]],[11,"wire_type","","",103,[[],["wiretype"]]],[11,"read","","",103,[[["codedinputstream"]],[["i64"],["protobufresult",["i64"]]]]],[11,"get_from_unknown","","",103,[[["unknownvalues"]],[["option",["i64"]],["i64"]]]],[11,"compute_size","","",103,[[["i64"]],["u32"]]],[11,"write_with_cached_size","","",103,[[["i64"],["u32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",104,[[],["wiretype"]]],[11,"read","","",104,[[["codedinputstream"]],[["protobufresult",["u32"]],["u32"]]]],[11,"get_from_unknown","","",104,[[["unknownvalues"]],[["option",["u32"]],["u32"]]]],[11,"compute_size","","",104,[[["u32"]],["u32"]]],[11,"write_with_cached_size","","",104,[[["codedoutputstream"],["u32"],["u32"]],["protobufresult"]]],[11,"wire_type","","",105,[[],["wiretype"]]],[11,"read","","",105,[[["codedinputstream"]],[["u64"],["protobufresult",["u64"]]]]],[11,"get_from_unknown","","",105,[[["unknownvalues"]],[["u64"],["option",["u64"]]]]],[11,"compute_size","","",105,[[["u64"]],["u32"]]],[11,"write_with_cached_size","","",105,[[["codedoutputstream"],["u32"],["u64"]],["protobufresult"]]],[11,"wire_type","","",106,[[],["wiretype"]]],[11,"read","","",106,[[["codedinputstream"]],[["protobufresult",["i32"]],["i32"]]]],[11,"get_from_unknown","","",106,[[["unknownvalues"]],[["option",["i32"]],["i32"]]]],[11,"compute_size","","",106,[[["i32"]],["u32"]]],[11,"write_with_cached_size","","",106,[[["codedoutputstream"],["u32"],["i32"]],["protobufresult"]]],[11,"wire_type","","",107,[[],["wiretype"]]],[11,"read","","",107,[[["codedinputstream"]],[["i64"],["protobufresult",["i64"]]]]],[11,"get_from_unknown","","",107,[[["unknownvalues"]],[["option",["i64"]],["i64"]]]],[11,"compute_size","","",107,[[["i64"]],["u32"]]],[11,"write_with_cached_size","","",107,[[["i64"],["u32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",108,[[],["wiretype"]]],[11,"read","","",108,[[["codedinputstream"]],[["protobufresult",["bool"]],["bool"]]]],[11,"get_from_unknown","","",108,[[["unknownvalues"]],[["bool"],["option",["bool"]]]]],[11,"compute_size","","",108,[[["bool"]],["u32"]]],[11,"write_with_cached_size","","",108,[[["codedoutputstream"],["u32"],["bool"]],["protobufresult"]]],[11,"wire_type","","",109,[[],["wiretype"]]],[11,"read","","",109,[[["codedinputstream"]],[["protobufresult",["string"]],["string"]]]],[11,"get_from_unknown","","",109,[[["unknownvalues"]],[["string"],["option",["string"]]]]],[11,"compute_size","","",109,[[["string"]],["u32"]]],[11,"write_with_cached_size","","",109,[[["codedoutputstream"],["u32"],["string"]],["protobufresult"]]],[11,"wire_type","","",110,[[],["wiretype"]]],[11,"read","","",110,[[["codedinputstream"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[11,"get_from_unknown","","",110,[[["unknownvalues"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"compute_size","","",110,[[["vec"]],["u32"]]],[11,"write_with_cached_size","","",110,[[["codedoutputstream"],["u32"],["vec"]],["protobufresult"]]],[11,"wire_type","","",112,[[],["wiretype"]]],[11,"read","","",112,[[["codedinputstream"]],["protobufresult"]]],[11,"get_from_unknown","","",112,[[["unknownvalues"]],["option"]]],[11,"compute_size","","",112,[[["e"]],["u32"]]],[11,"write_with_cached_size","","",112,[[["codedoutputstream"],["u32"],["e"]],["protobufresult"]]],[11,"wire_type","","",113,[[],["wiretype"]]],[11,"read","","",113,[[["codedinputstream"]],["protobufresult"]]],[11,"get_from_unknown","","",113,[[["unknownvalues"]],["option"]]],[11,"compute_size","","",113,[[["m"]],["u32"]]],[11,"get_cached_size","","",113,[[["m"]],["u32"]]],[11,"write_with_cached_size","","",113,[[["codedoutputstream"],["u32"]],["protobufresult"]]],[11,"as_ref","protobuf","",50,[[["self"]]]],[11,"from","protobuf::error","",39,[[["error"]],["self"]]],[11,"from","","",39,[[["utf8error"]],["self"]]],[11,"from","protobuf","",50,[[["vec"]],["repeatedfield"]]],[11,"from","","",50,[[],["repeatedfield"]]],[11,"from","","",53,[[["option"]],["self"]]],[11,"from","","",54,[[["option"]],["self"]]],[11,"into","","",50,[[],["vec"]]],[11,"next","","",95,[[["self"]],[["unknownvalueref"],["option",["unknownvalueref"]]]]],[11,"next","","",94,[[["self"]],["option"]]],[11,"clone","protobuf::descriptor","",5,[[["self"]],["filedescriptorset"]]],[11,"clone","","",6,[[["self"]],["filedescriptorproto"]]],[11,"clone","","",7,[[["self"]],["descriptorproto"]]],[11,"clone","","",8,[[["self"]],["descriptorproto_extensionrange"]]],[11,"clone","","",9,[[["self"]],["descriptorproto_reservedrange"]]],[11,"clone","","",10,[[["self"]],["fielddescriptorproto"]]],[11,"clone","","",30,[[["self"]],["fielddescriptorproto_type"]]],[11,"clone","","",31,[[["self"]],["fielddescriptorproto_label"]]],[11,"clone","","",11,[[["self"]],["oneofdescriptorproto"]]],[11,"clone","","",12,[[["self"]],["enumdescriptorproto"]]],[11,"clone","","",13,[[["self"]],["enumvaluedescriptorproto"]]],[11,"clone","","",14,[[["self"]],["servicedescriptorproto"]]],[11,"clone","","",15,[[["self"]],["methoddescriptorproto"]]],[11,"clone","","",16,[[["self"]],["fileoptions"]]],[11,"clone","","",32,[[["self"]],["fileoptions_optimizemode"]]],[11,"clone","","",17,[[["self"]],["messageoptions"]]],[11,"clone","","",18,[[["self"]],["fieldoptions"]]],[11,"clone","","",33,[[["self"]],["fieldoptions_ctype"]]],[11,"clone","","",34,[[["self"]],["fieldoptions_jstype"]]],[11,"clone","","",19,[[["self"]],["oneofoptions"]]],[11,"clone","","",20,[[["self"]],["enumoptions"]]],[11,"clone","","",21,[[["self"]],["enumvalueoptions"]]],[11,"clone","","",22,[[["self"]],["serviceoptions"]]],[11,"clone","","",23,[[["self"]],["methodoptions"]]],[11,"clone","","",24,[[["self"]],["uninterpretedoption"]]],[11,"clone","","",25,[[["self"]],["uninterpretedoption_namepart"]]],[11,"clone","","",26,[[["self"]],["sourcecodeinfo"]]],[11,"clone","","",27,[[["self"]],["sourcecodeinfo_location"]]],[11,"clone","","",28,[[["self"]],["generatedcodeinfo"]]],[11,"clone","","",29,[[["self"]],["generatedcodeinfo_annotation"]]],[11,"clone","protobuf::plugin","",35,[[["self"]],["codegeneratorrequest"]]],[11,"clone","","",36,[[["self"]],["codegeneratorresponse"]]],[11,"clone","","",37,[[["self"]],["codegeneratorresponse_file"]]],[11,"clone","protobuf::reflect","",45,[[["self"]],["enumvaluedescriptor"]]],[11,"clone","protobuf","",50,[[["self"]],["repeatedfield"]]],[11,"clone","","",53,[[["self"]],["singularfield"]]],[11,"clone","","",54,[[["self"]],["singularptrfield"]]],[11,"clone","protobuf::wire_format","",4,[[["self"]],["wiretype"]]],[11,"clone","","",55,[[["self"]],["tag"]]],[11,"clone","protobuf::well_known_types","",59,[[["self"]],["any"]]],[11,"clone","","",60,[[["self"]],["api"]]],[11,"clone","","",61,[[["self"]],["method"]]],[11,"clone","","",62,[[["self"]],["mixin"]]],[11,"clone","","",63,[[["self"]],["duration"]]],[11,"clone","","",64,[[["self"]],["empty"]]],[11,"clone","","",65,[[["self"]],["fieldmask"]]],[11,"clone","","",66,[[["self"]],["sourcecontext"]]],[11,"clone","","",67,[[["self"]],["struct"]]],[11,"clone","","",68,[[["self"]],["value"]]],[11,"clone","","",85,[[["self"]],["value_oneof_kind"]]],[11,"clone","","",69,[[["self"]],["listvalue"]]],[11,"clone","","",86,[[["self"]],["nullvalue"]]],[11,"clone","","",70,[[["self"]],["timestamp"]]],[11,"clone","","",71,[[["self"]],["type"]]],[11,"clone","","",72,[[["self"]],["field"]]],[11,"clone","","",87,[[["self"]],["field_kind"]]],[11,"clone","","",88,[[["self"]],["field_cardinality"]]],[11,"clone","","",73,[[["self"]],["enum"]]],[11,"clone","","",74,[[["self"]],["enumvalue"]]],[11,"clone","","",75,[[["self"]],["option"]]],[11,"clone","","",89,[[["self"]],["syntax"]]],[11,"clone","","",76,[[["self"]],["doublevalue"]]],[11,"clone","","",77,[[["self"]],["floatvalue"]]],[11,"clone","","",78,[[["self"]],["int64value"]]],[11,"clone","","",79,[[["self"]],["uint64value"]]],[11,"clone","","",80,[[["self"]],["int32value"]]],[11,"clone","","",81,[[["self"]],["uint32value"]]],[11,"clone","","",82,[[["self"]],["boolvalue"]]],[11,"clone","","",83,[[["self"]],["stringvalue"]]],[11,"clone","","",84,[[["self"]],["bytesvalue"]]],[11,"clone","protobuf","",90,[[["self"]],["cachedsize"]]],[11,"clone","","",1,[[["self"]],["unknownvalues"]]],[11,"clone","","",0,[[["self"]],["unknownfields"]]],[11,"default","protobuf::descriptor","",5,[[],["filedescriptorset"]]],[11,"default","","",6,[[],["filedescriptorproto"]]],[11,"default","","",7,[[],["descriptorproto"]]],[11,"default","","",8,[[],["descriptorproto_extensionrange"]]],[11,"default","","",9,[[],["descriptorproto_reservedrange"]]],[11,"default","","",10,[[],["fielddescriptorproto"]]],[11,"default","","",30,[[],["self"]]],[11,"default","","",31,[[],["self"]]],[11,"default","","",11,[[],["oneofdescriptorproto"]]],[11,"default","","",12,[[],["enumdescriptorproto"]]],[11,"default","","",13,[[],["enumvaluedescriptorproto"]]],[11,"default","","",14,[[],["servicedescriptorproto"]]],[11,"default","","",15,[[],["methoddescriptorproto"]]],[11,"default","","",16,[[],["fileoptions"]]],[11,"default","","",32,[[],["self"]]],[11,"default","","",17,[[],["messageoptions"]]],[11,"default","","",18,[[],["fieldoptions"]]],[11,"default","","",33,[[],["self"]]],[11,"default","","",34,[[],["self"]]],[11,"default","","",19,[[],["oneofoptions"]]],[11,"default","","",20,[[],["enumoptions"]]],[11,"default","","",21,[[],["enumvalueoptions"]]],[11,"default","","",22,[[],["serviceoptions"]]],[11,"default","","",23,[[],["methodoptions"]]],[11,"default","","",24,[[],["uninterpretedoption"]]],[11,"default","","",25,[[],["uninterpretedoption_namepart"]]],[11,"default","","",26,[[],["sourcecodeinfo"]]],[11,"default","","",27,[[],["sourcecodeinfo_location"]]],[11,"default","","",28,[[],["generatedcodeinfo"]]],[11,"default","","",29,[[],["generatedcodeinfo_annotation"]]],[11,"default","protobuf::plugin","",35,[[],["codegeneratorrequest"]]],[11,"default","","",36,[[],["codegeneratorresponse"]]],[11,"default","","",37,[[],["codegeneratorresponse_file"]]],[11,"default","protobuf","",50,[[],["repeatedfield"]]],[11,"default","","",53,[[],["singularfield"]]],[11,"default","","",54,[[],["singularptrfield"]]],[11,"default","protobuf::well_known_types","",59,[[],["any"]]],[11,"default","","",60,[[],["api"]]],[11,"default","","",61,[[],["method"]]],[11,"default","","",62,[[],["mixin"]]],[11,"default","","",63,[[],["duration"]]],[11,"default","","",64,[[],["empty"]]],[11,"default","","",65,[[],["fieldmask"]]],[11,"default","","",66,[[],["sourcecontext"]]],[11,"default","","",67,[[],["struct"]]],[11,"default","","",68,[[],["value"]]],[11,"default","","",69,[[],["listvalue"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",70,[[],["timestamp"]]],[11,"default","","",71,[[],["type"]]],[11,"default","","",72,[[],["field"]]],[11,"default","","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",73,[[],["enum"]]],[11,"default","","",74,[[],["enumvalue"]]],[11,"default","","",75,[[],["option"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",76,[[],["doublevalue"]]],[11,"default","","",77,[[],["floatvalue"]]],[11,"default","","",78,[[],["int64value"]]],[11,"default","","",79,[[],["uint64value"]]],[11,"default","","",80,[[],["int32value"]]],[11,"default","","",81,[[],["uint32value"]]],[11,"default","","",82,[[],["boolvalue"]]],[11,"default","","",83,[[],["stringvalue"]]],[11,"default","","",84,[[],["bytesvalue"]]],[11,"default","protobuf","",90,[[],["cachedsize"]]],[11,"default","","",1,[[],["unknownvalues"]]],[11,"default","","",0,[[],["unknownfields"]]],[11,"eq","protobuf::descriptor","",5,[[["filedescriptorset"],["self"]],["bool"]]],[11,"ne","","",5,[[["filedescriptorset"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["filedescriptorproto"]],["bool"]]],[11,"ne","","",6,[[["self"],["filedescriptorproto"]],["bool"]]],[11,"eq","","",7,[[["descriptorproto"],["self"]],["bool"]]],[11,"ne","","",7,[[["descriptorproto"],["self"]],["bool"]]],[11,"eq","","",8,[[["descriptorproto_extensionrange"],["self"]],["bool"]]],[11,"ne","","",8,[[["descriptorproto_extensionrange"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["descriptorproto_reservedrange"]],["bool"]]],[11,"ne","","",9,[[["self"],["descriptorproto_reservedrange"]],["bool"]]],[11,"eq","","",10,[[["self"],["fielddescriptorproto"]],["bool"]]],[11,"ne","","",10,[[["self"],["fielddescriptorproto"]],["bool"]]],[11,"eq","","",30,[[["fielddescriptorproto_type"],["self"]],["bool"]]],[11,"eq","","",31,[[["fielddescriptorproto_label"],["self"]],["bool"]]],[11,"eq","","",11,[[["oneofdescriptorproto"],["self"]],["bool"]]],[11,"ne","","",11,[[["oneofdescriptorproto"],["self"]],["bool"]]],[11,"eq","","",12,[[["enumdescriptorproto"],["self"]],["bool"]]],[11,"ne","","",12,[[["enumdescriptorproto"],["self"]],["bool"]]],[11,"eq","","",13,[[["enumvaluedescriptorproto"],["self"]],["bool"]]],[11,"ne","","",13,[[["enumvaluedescriptorproto"],["self"]],["bool"]]],[11,"eq","","",14,[[["servicedescriptorproto"],["self"]],["bool"]]],[11,"ne","","",14,[[["servicedescriptorproto"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["methoddescriptorproto"]],["bool"]]],[11,"ne","","",15,[[["self"],["methoddescriptorproto"]],["bool"]]],[11,"eq","","",16,[[["self"],["fileoptions"]],["bool"]]],[11,"ne","","",16,[[["self"],["fileoptions"]],["bool"]]],[11,"eq","","",32,[[["fileoptions_optimizemode"],["self"]],["bool"]]],[11,"eq","","",17,[[["messageoptions"],["self"]],["bool"]]],[11,"ne","","",17,[[["messageoptions"],["self"]],["bool"]]],[11,"eq","","",18,[[["fieldoptions"],["self"]],["bool"]]],[11,"ne","","",18,[[["fieldoptions"],["self"]],["bool"]]],[11,"eq","","",33,[[["fieldoptions_ctype"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["fieldoptions_jstype"]],["bool"]]],[11,"eq","","",19,[[["oneofoptions"],["self"]],["bool"]]],[11,"ne","","",19,[[["oneofoptions"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["enumoptions"]],["bool"]]],[11,"ne","","",20,[[["self"],["enumoptions"]],["bool"]]],[11,"eq","","",21,[[["enumvalueoptions"],["self"]],["bool"]]],[11,"ne","","",21,[[["enumvalueoptions"],["self"]],["bool"]]],[11,"eq","","",22,[[["serviceoptions"],["self"]],["bool"]]],[11,"ne","","",22,[[["serviceoptions"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["methodoptions"]],["bool"]]],[11,"ne","","",23,[[["self"],["methodoptions"]],["bool"]]],[11,"eq","","",24,[[["self"],["uninterpretedoption"]],["bool"]]],[11,"ne","","",24,[[["self"],["uninterpretedoption"]],["bool"]]],[11,"eq","","",25,[[["uninterpretedoption_namepart"],["self"]],["bool"]]],[11,"ne","","",25,[[["uninterpretedoption_namepart"],["self"]],["bool"]]],[11,"eq","","",26,[[["sourcecodeinfo"],["self"]],["bool"]]],[11,"ne","","",26,[[["sourcecodeinfo"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["sourcecodeinfo_location"]],["bool"]]],[11,"ne","","",27,[[["self"],["sourcecodeinfo_location"]],["bool"]]],[11,"eq","","",28,[[["generatedcodeinfo"],["self"]],["bool"]]],[11,"ne","","",28,[[["generatedcodeinfo"],["self"]],["bool"]]],[11,"eq","","",29,[[["generatedcodeinfo_annotation"],["self"]],["bool"]]],[11,"ne","","",29,[[["generatedcodeinfo_annotation"],["self"]],["bool"]]],[11,"eq","protobuf::plugin","",35,[[["codegeneratorrequest"],["self"]],["bool"]]],[11,"ne","","",35,[[["codegeneratorrequest"],["self"]],["bool"]]],[11,"eq","","",36,[[["codegeneratorresponse"],["self"]],["bool"]]],[11,"ne","","",36,[[["codegeneratorresponse"],["self"]],["bool"]]],[11,"eq","","",37,[[["codegeneratorresponse_file"],["self"]],["bool"]]],[11,"ne","","",37,[[["codegeneratorresponse_file"],["self"]],["bool"]]],[11,"eq","protobuf","",50,[[["self"],["repeatedfield"]],["bool"]]],[11,"eq","","",53,[[["self"],["singularfield"]],["bool"]]],[11,"eq","","",54,[[["self"],["singularptrfield"]],["bool"]]],[11,"eq","protobuf::wire_format","",4,[[["self"],["wiretype"]],["bool"]]],[11,"eq","protobuf::well_known_types","",59,[[["self"],["any"]],["bool"]]],[11,"ne","","",59,[[["self"],["any"]],["bool"]]],[11,"eq","","",60,[[["self"],["api"]],["bool"]]],[11,"ne","","",60,[[["self"],["api"]],["bool"]]],[11,"eq","","",61,[[["self"],["method"]],["bool"]]],[11,"ne","","",61,[[["self"],["method"]],["bool"]]],[11,"eq","","",62,[[["self"],["mixin"]],["bool"]]],[11,"ne","","",62,[[["self"],["mixin"]],["bool"]]],[11,"eq","","",63,[[["self"],["duration"]],["bool"]]],[11,"ne","","",63,[[["self"],["duration"]],["bool"]]],[11,"eq","","",64,[[["self"],["empty"]],["bool"]]],[11,"ne","","",64,[[["self"],["empty"]],["bool"]]],[11,"eq","","",65,[[["self"],["fieldmask"]],["bool"]]],[11,"ne","","",65,[[["self"],["fieldmask"]],["bool"]]],[11,"eq","","",66,[[["self"],["sourcecontext"]],["bool"]]],[11,"ne","","",66,[[["self"],["sourcecontext"]],["bool"]]],[11,"eq","","",67,[[["struct"],["self"]],["bool"]]],[11,"ne","","",67,[[["struct"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["value"]],["bool"]]],[11,"ne","","",68,[[["self"],["value"]],["bool"]]],[11,"eq","","",85,[[["value_oneof_kind"],["self"]],["bool"]]],[11,"ne","","",85,[[["value_oneof_kind"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["listvalue"]],["bool"]]],[11,"ne","","",69,[[["self"],["listvalue"]],["bool"]]],[11,"eq","","",86,[[["nullvalue"],["self"]],["bool"]]],[11,"eq","","",70,[[["timestamp"],["self"]],["bool"]]],[11,"ne","","",70,[[["timestamp"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["type"]],["bool"]]],[11,"ne","","",71,[[["self"],["type"]],["bool"]]],[11,"eq","","",72,[[["self"],["field"]],["bool"]]],[11,"ne","","",72,[[["self"],["field"]],["bool"]]],[11,"eq","","",87,[[["self"],["field_kind"]],["bool"]]],[11,"eq","","",88,[[["field_cardinality"],["self"]],["bool"]]],[11,"eq","","",73,[[["enum"],["self"]],["bool"]]],[11,"ne","","",73,[[["enum"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["enumvalue"]],["bool"]]],[11,"ne","","",74,[[["self"],["enumvalue"]],["bool"]]],[11,"eq","","",75,[[["option"],["self"]],["bool"]]],[11,"ne","","",75,[[["option"],["self"]],["bool"]]],[11,"eq","","",89,[[["syntax"],["self"]],["bool"]]],[11,"eq","","",76,[[["doublevalue"],["self"]],["bool"]]],[11,"ne","","",76,[[["doublevalue"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["floatvalue"]],["bool"]]],[11,"ne","","",77,[[["self"],["floatvalue"]],["bool"]]],[11,"eq","","",78,[[["self"],["int64value"]],["bool"]]],[11,"ne","","",78,[[["self"],["int64value"]],["bool"]]],[11,"eq","","",79,[[["uint64value"],["self"]],["bool"]]],[11,"ne","","",79,[[["uint64value"],["self"]],["bool"]]],[11,"eq","","",80,[[["self"],["int32value"]],["bool"]]],[11,"ne","","",80,[[["self"],["int32value"]],["bool"]]],[11,"eq","","",81,[[["uint32value"],["self"]],["bool"]]],[11,"ne","","",81,[[["uint32value"],["self"]],["bool"]]],[11,"eq","","",82,[[["boolvalue"],["self"]],["bool"]]],[11,"ne","","",82,[[["boolvalue"],["self"]],["bool"]]],[11,"eq","","",83,[[["stringvalue"],["self"]],["bool"]]],[11,"ne","","",83,[[["stringvalue"],["self"]],["bool"]]],[11,"eq","","",84,[[["bytesvalue"],["self"]],["bool"]]],[11,"ne","","",84,[[["bytesvalue"],["self"]],["bool"]]],[11,"eq","protobuf","",90,[[["self"],["cachedsize"]],["bool"]]],[11,"eq","","",1,[[["self"],["unknownvalues"]],["bool"]]],[11,"ne","","",1,[[["self"],["unknownvalues"]],["bool"]]],[11,"eq","","",0,[[["self"],["unknownfields"]],["bool"]]],[11,"ne","","",0,[[["self"],["unknownfields"]],["bool"]]],[11,"deref","","",50,[[["self"]]]],[11,"deref_mut","","",50,[[["self"]]]],[11,"fmt","protobuf::descriptor","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf::plugin","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf::error","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf::reflect","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf::wire_format","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf::well_known_types","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","protobuf::error","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"index","protobuf","",50,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",50,[[["self"],["usize"]],["t"]]],[11,"hash","protobuf::descriptor","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","protobuf","",50,[[["self"],["h"]]]],[11,"hash","","",53,[[["self"],["h"]]]],[11,"hash","","",54,[[["self"],["h"]]]],[11,"hash","protobuf::well_known_types","",86,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","protobuf","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"from_iter","","",50,[[["intoiterator"]],["repeatedfield"]]],[11,"borrow","","",50,[[["self"]]]],[11,"description","protobuf::error","",39,[[["self"]],["str"]]],[11,"cause","","",39,[[["self"]],[["error"],["option",["error"]]]]],[11,"fill_buf","protobuf","",56,[[["self"]],["result"]]],[11,"consume","","",56,[[["self"],["usize"]]]],[11,"read","","",56,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",57,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",57,[[["self"]],["result"]]],[11,"pack","protobuf::well_known_types","Pack any message into `well_known_types::Any` value.",59,[[["m"]],[["any"],["protobufresult",["any"]]]]],[11,"pack_dyn","","Pack any message into `well_known_types::Any` value.",59,[[["message"]],[["any"],["protobufresult",["any"]]]]],[11,"is","","Check if `Any` contains a message of given type.",59,[[["self"]],["bool"]]],[11,"is_dyn","","Check if `Any` contains a message of given type.",59,[[["messagedescriptor"],["self"]],["bool"]]],[11,"unpack","","Extract a message from this `Any`.",59,[[["self"]],[["protobufresult",["option"]],["option"]]]],[11,"unpack_dyn","","Extract a message from this `Any`.",59,[[["messagedescriptor"],["self"]],[["protobufresult",["option"]],["option",["box"]]]]],[11,"write_to","protobuf","Write the message to the stream.",92,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"write_length_delimited_to","","Write the message to the stream prepending the message…",92,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"write_length_delimited_to_vec","","Write the message to the vec, prepend the message with…",92,[[["vec"],["self"]],["protobufresult"]]],[11,"merge_from_bytes","","Update this message object with fields read from given…",92,[[["self"]],["protobufresult"]]],[11,"check_initialized","","Check if all required fields of this object are initialized.",92,[[["self"]],["protobufresult"]]],[11,"write_to_writer","","Write the message to the writer.",92,[[["self"],["write"]],["protobufresult"]]],[11,"write_to_vec","","Write the message to bytes vec.",92,[[["vec"],["self"]],["protobufresult"]]],[11,"write_to_bytes","","Write the message to bytes vec.",92,[[["self"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[11,"write_length_delimited_to_writer","","Write the message to the writer, prepend the message with…",92,[[["self"],["write"]],["protobufresult"]]],[11,"write_length_delimited_to_bytes","","Write the message to the bytes vec, prepend the message…",92,[[["self"]],[["vec",["u8"]],["protobufresult",["vec"]]]]],[11,"type_id","","Get type id for downcasting.",92,[[["self"]],["typeid"]]],[11,"as_any_mut","","View self as mutable `Any`.",92,[[["self"]],["any"]]],[11,"into_any","","Convert boxed self to boxed `Any`.",92,[[["box"]],[["any"],["box",["any"]]]]],[11,"descriptor_static","","Get message descriptor for message type.",92,[[],["messagedescriptor"]]],[11,"values","","Get all enum values for enum type.",93,[[]]],[11,"descriptor","","Get enum value descriptor.",93,[[["self"]],["enumvaluedescriptor"]]],[11,"enum_descriptor","","Get enum descriptor.",93,[[["self"]],["enumdescriptor"]]],[11,"enum_descriptor_static","","Get enum descriptor by type.",93,[[],["enumdescriptor"]]],[11,"as_any","protobuf::reflect","Convert to `Any`",49,[[["self"]],["any"]]],[11,"is_non_zero","","Is value non-zero?",49,[[["self"]],["bool"]]],[11,"as_ref_copy","","Return `ProtobufValueRef` if self is `Copy`.",49,[[["self"]],["reflectvalueref"]]]],"p":[[3,"UnknownFields"],[3,"UnknownValues"],[4,"UnknownValue"],[4,"UnknownValueRef"],[4,"WireType"],[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"DescriptorProto_ReservedRange"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"OneofOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"GeneratedCodeInfo"],[3,"GeneratedCodeInfo_Annotation"],[4,"FieldDescriptorProto_Type"],[4,"FieldDescriptorProto_Label"],[4,"FileOptions_OptimizeMode"],[4,"FieldOptions_CType"],[4,"FieldOptions_JSType"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[4,"WireError"],[4,"ProtobufError"],[3,"ExtFieldOptional"],[3,"ExtFieldRepeated"],[3,"Lazy"],[4,"ReflectValueRef"],[4,"ReflectFieldRef"],[3,"EnumValueDescriptor"],[3,"EnumDescriptor"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[8,"ProtobufValue"],[3,"RepeatedField"],[8,"ProtobufVarint"],[8,"ProtobufVarintZigzag"],[3,"SingularField"],[3,"SingularPtrField"],[3,"Tag"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[8,"ProtobufType"],[3,"Any"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"Empty"],[3,"FieldMask"],[3,"SourceContext"],[3,"Struct"],[3,"Value"],[3,"ListValue"],[3,"Timestamp"],[3,"Type"],[3,"Field"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[3,"DoubleValue"],[3,"FloatValue"],[3,"Int64Value"],[3,"UInt64Value"],[3,"Int32Value"],[3,"UInt32Value"],[3,"BoolValue"],[3,"StringValue"],[3,"BytesValue"],[4,"Value_oneof_kind"],[4,"NullValue"],[4,"Field_Kind"],[4,"Field_Cardinality"],[4,"Syntax"],[3,"CachedSize"],[8,"Clear"],[8,"Message"],[8,"ProtobufEnum"],[3,"UnknownFieldsIter"],[3,"UnknownValuesIter"],[3,"ProtobufTypeFloat"],[3,"ProtobufTypeDouble"],[3,"ProtobufTypeInt32"],[3,"ProtobufTypeInt64"],[3,"ProtobufTypeUint32"],[3,"ProtobufTypeUint64"],[3,"ProtobufTypeSint32"],[3,"ProtobufTypeSint64"],[3,"ProtobufTypeFixed32"],[3,"ProtobufTypeFixed64"],[3,"ProtobufTypeSfixed32"],[3,"ProtobufTypeSfixed64"],[3,"ProtobufTypeBool"],[3,"ProtobufTypeString"],[3,"ProtobufTypeBytes"],[3,"ProtobufTypeChars"],[3,"ProtobufTypeEnum"],[3,"ProtobufTypeMessage"]]};
searchIndex["quick_error"] = {"doc":"A macro which makes errors easy to write","i":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current…",1,[[["x"]],[["context"],["result",["context"]]]]],[14,"quick_error","","Main macro that does all the work",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["tokenstream"],["self"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[],["tokenstream"]]],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["error"],["result",["error"]]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["result",["bernoulli","bernoullierror"]],["bernoullierror"],["bernoulli"]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["result",["bernoulli","bernoullierror"]],["bernoullierror"],["bernoulli"]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["vec",["f64"]],["into",["vec"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["result",["weightederror"]],["weightederror"]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["result",["weightedindex","weightederror"]],["weightedindex"],["weightederror"]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["result",["weightederror"]],["weightederror"]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["usize"],["vec",["usize"]]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["error"],["result",["error"]]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","rand::rngs::adapter","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"next_u32","rand::rngs","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["error"],["result",["error"]]]]],[11,"default","","",50,[[],["osrng"]]],[11,"from","rand","",39,[[["nonzerou32"]],["error"]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"source","","",39,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","rand::rngs","",50,[[["self"]],["osrng"]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",34,[[["usize"],["vec",["usize"]]],["self"]]],[11,"len","rand::seq","",55,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",56,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"next","rand::seq","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["smallrng"]]],[11,"clone","","",52,[[["self"]],["stdrng"]]],[11,"clone","","",53,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",57,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",53,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["self"],["bernoullierror"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["weightederror"],["self"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["indexvec"],["self"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",54,[[["formatter"],["self"]],["result"]]],[11,"source","","",54,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,[[["self"]]]],[11,"try_fill_bytes","","",53,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",52,[[],["self"]]],[11,"from_rng","","",52,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",4,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["rand_pcg"] = {"doc":"The PCG random number generators.","i":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",null,null],[3,"Lcg128Xsl64","","A PCG random number generator (XSL RR 128/64 (LCG) variant).",null,null],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",null,null],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed and stream.",1,[[["u128"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",2,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",null,null],[6,"Pcg64","","`Lcg128Xsl64` is also officially known as `pcg64`.",null,null],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64` (also known as…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["lcg128xsl64"]]],[11,"clone","","",2,[[["self"]],["mcg128xsl64"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"Lcg64Xsh32"],[3,"Lcg128Xsl64"],[3,"Mcg128Xsl64"]]};
searchIndex["ring"] = {"doc":"Safe, fast, small crypto using Rust with BoringSSL's…","i":[[0,"test","ring","Testing framework.",null,null],[3,"TestCase","ring::test","A test case. A test case consists of a set of named…",null,null],[3,"File","","A test input file.",null,null],[12,"file_name","","The name (path) of the file.",0,null],[12,"contents","","The contents of the file.",0,null],[5,"compile_time_assert_clone","","`compile_time_assert_clone::<T>();` fails to compile if…",null,[[]]],[5,"compile_time_assert_copy","","`compile_time_assert_copy::<T>();` fails to compile if `T`…",null,[[]]],[5,"compile_time_assert_send","","`compile_time_assert_send::<T>();` fails to compile if `T`…",null,[[]]],[5,"compile_time_assert_sync","","`compile_time_assert_sync::<T>();` fails to compile if `T`…",null,[[]]],[5,"run","","Parses test cases out of the given file, calling `f` on…",null,[[["f"],["file"]]]],[5,"from_hex","","Decode an string of hex digits into a sequence of bytes.…",null,[[["str"]],[["string"],["result",["vec","string"]],["vec",["u8"]]]]],[11,"consume_bool","","Maps the string \"true\" to true and the string \"false\" to…",1,[[["str"],["self"]],["bool"]]],[11,"consume_digest_alg","","Maps the strings \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\"…",1,[[["str"],["self"]],[["algorithm"],["option",["algorithm"]]]]],[11,"consume_bytes","","Returns the value of an attribute that is encoded as a…",1,[[["str"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"consume_usize","","Returns the value of an attribute that is an integer, in…",1,[[["str"],["self"]],["usize"]]],[11,"consume_usize_bits","","Returns the value of an attribute that is an integer, in…",1,[[["str"],["self"]],["bitlength"]]],[11,"consume_string","","Returns the raw value of an attribute, without any…",1,[[["str"],["self"]],["string"]]],[11,"consume_optional_string","","Like `consume_string()` except it returns `None` if the…",1,[[["str"],["self"]],[["option",["string"]],["string"]]]],[0,"aead","ring","Authenticated Encryption with Associated Data (AEAD).",null,null],[3,"Nonce","ring::aead","A nonce for a single AEAD opening or sealing operation.",null,null],[3,"OpeningKey","","An AEAD key for authenticating and decrypting (\"opening\"),…",null,null],[3,"SealingKey","","An AEAD key for encrypting and signing (\"sealing\"), bound…",null,null],[3,"Aad","","The additionally authenticated data (AAD) for an opening…",null,null],[3,"UnboundKey","","An AEAD key without a designated role or nonce sequence.",null,null],[3,"LessSafeKey","","Immutable keys for use in situations where…",null,null],[3,"Algorithm","","An AEAD Algorithm.",null,null],[3,"Tag","","An authentication tag.",null,null],[0,"chacha20_poly1305_openssh","","The [chacha20-poly1305@openssh.com] AEAD-ish construct.",null,null],[3,"SealingKey","ring::aead::chacha20_poly1305_openssh","A key for sealing packets.",null,null],[3,"OpeningKey","","A key for opening packets.",null,null],[17,"KEY_LEN","","The length of key.",null,null],[17,"PACKET_LENGTH_LEN","","The length in bytes of the `packet_length` field in a SSH…",null,null],[17,"TAG_LEN","","The length in bytes of an authentication tag.",null,null],[11,"new","","Constructs a new `SealingKey`.",2,[[],["sealingkey"]]],[11,"seal_in_place","","Seals (encrypts and signs) a packet.",2,[[["u32"],["self"]]]],[11,"new","","Constructs a new `OpeningKey`.",3,[[],["openingkey"]]],[11,"decrypt_packet_length","","Returns the decrypted, but unauthenticated, packet length.",3,[[["u32"],["self"]]]],[11,"open_in_place","","Opens (authenticates and decrypts) a packet.",3,[[["u32"],["self"]],[["unspecified"],["result",["unspecified"]]]]],[11,"try_assume_unique_for_key","ring::aead","Constructs a `Nonce` with the given value, assuming that…",4,[[],[["unspecified"],["result",["unspecified"]]]]],[11,"assume_unique_for_key","","Constructs a `Nonce` with the given value, assuming that…",4,[[],["self"]]],[0,"quic","","QUIC Header Protection.",null,null],[3,"HeaderProtectionKey","ring::aead::quic","A key for generating QUIC Header Protection masks.",null,null],[3,"Algorithm","","A QUIC Header Protection Algorithm.",null,null],[7,"AES_128","","AES-128.",null,null],[7,"AES_256","","AES-256.",null,null],[7,"CHACHA20","","ChaCha20.",null,null],[11,"new","","Create a new header protection key.",5,[[["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"new_mask","","Generate a new QUIC Header Protection mask.",5,[[["self"]],[["unspecified"],["result",["unspecified"]]]]],[11,"algorithm","","The key's algorithm.",5,[[["self"]],["algorithm"]]],[11,"key_len","","The length of the key.",6,[[["self"]],["usize"]]],[11,"sample_len","","The required sample length.",6,[[["self"]],["usize"]]],[7,"AES_128_GCM","ring::aead","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"CHACHA20_POLY1305","","ChaCha20-Poly1305 as described in [RFC 7539].",null,null],[17,"NONCE_LEN","","All the AEADs we support use 96-bit nonces.",null,null],[17,"MAX_TAG_LEN","","The maximum length of a tag for the algorithms in this…",null,null],[8,"NonceSequence","","A sequences of unique nonces.",null,null],[10,"advance","","Returns the next nonce in the sequence.",7,[[["self"]],[["nonce"],["unspecified"],["result",["nonce","unspecified"]]]]],[8,"BoundKey","","An AEAD key bound to a nonce sequence.",null,null],[10,"new","","Constructs a new key from the given `UnboundKey` and…",8,[[["unboundkey"],["n"]],["self"]]],[10,"algorithm","","The key's AEAD algorithm.",8,[[["self"]],["algorithm"]]],[11,"open_in_place","","Authenticates and decrypts (“opens”) data in place.",9,[[["self"],["aad"]],[["result",["unspecified"]],["unspecified"]]]],[11,"open_within","","Authenticates and decrypts (“opens”) data in place, with a…",9,[[["usize"],["self"],["aad"],["rangefrom",["usize"]]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place","","Deprecated. Renamed to `seal_in_place_append_tag()`.",10,[[["self"],["aad"],["inout"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_append_tag","","Encrypts and signs (“seals”) data in place, appending the…",10,[[["self"],["aad"],["inout"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_separate_tag","","Encrypts and signs (“seals”) data in place.",10,[[["self"],["aad"]],[["tag"],["unspecified"],["result",["tag","unspecified"]]]]],[11,"from","","Construct the `Aad` from the given bytes.",11,[[["a"]],["self"]]],[11,"empty","","Construct an empty `Aad`.",11,[[],["self"]]],[11,"new","","Constructs an `UnboundKey`.",12,[[["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"algorithm","","The key's AEAD algorithm.",12,[[["self"]],["algorithm"]]],[11,"new","","Constructs a `LessSafeKey` from an `UnboundKey`.",13,[[["unboundkey"]],["self"]]],[11,"open_in_place","","Like [`OpeningKey::open_in_place()`], except it accepts an…",13,[[["nonce"],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"open_within","","Like [`OpeningKey::open_within()`], except it accepts an…",13,[[["nonce"],["usize"],["rangefrom",["usize"]],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place","","Deprecated. Renamed to `seal_in_place_append_tag()`.",13,[[["nonce"],["inout"],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_append_tag","","Like [`SealingKey::seal_in_place_append_tag()`], except it…",13,[[["nonce"],["inout"],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_separate_tag","","Like `SealingKey::seal_in_place_separate_tag()`, except it…",13,[[["nonce"],["aad"],["self"]],[["tag"],["unspecified"],["result",["tag","unspecified"]]]]],[11,"algorithm","","The key's AEAD algorithm.",13,[[["self"]],["algorithm"]]],[11,"key_len","","The length of the key.",14,[[["self"]],["usize"]]],[11,"tag_len","","The length of a tag.",14,[[["self"]],["usize"]]],[11,"nonce_len","","The length of the nonces.",14,[[["self"]],["usize"]]],[0,"agreement","ring","Key Agreement: ECDH, including X25519.",null,null],[3,"Algorithm","ring::agreement","A key agreement algorithm.",null,null],[3,"EphemeralPrivateKey","","An ephemeral private key for use (only) with…",null,null],[3,"PublicKey","","A public key for key agreement.",null,null],[3,"UnparsedPublicKey","","An unparsed, possibly malformed, public key for key…",null,null],[5,"agree_ephemeral","","Performs a key agreement with an ephemeral private key and…",null,[[["e"],["ephemeralprivatekey"],["unparsedpublickey"],["f"]],["result"]]],[7,"X25519","","X25519 (ECDH using Curve25519) as described in [RFC 7748].",null,null],[7,"ECDH_P256","","ECDH using the NSA Suite B P-256 (secp256r1) curve.",null,null],[7,"ECDH_P384","","ECDH using the NSA Suite B P-384 (secp384r1) curve.",null,null],[11,"generate","","Generate a new ephemeral private key for the given…",15,[[["securerandom"],["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"compute_public_key","","Computes the public key from the private key.",15,[[["self"]],[["publickey"],["result",["publickey","unspecified"]],["unspecified"]]]],[11,"algorithm","","The algorithm for the private key.",15,[[["self"]],["algorithm"]]],[11,"algorithm","","The algorithm for the public key.",16,[[["self"]],["algorithm"]]],[11,"new","","Constructs a new `UnparsedPublicKey`.",17,[[["b"],["algorithm"]],["self"]]],[11,"algorithm","","TODO: doc",17,[[["self"]],["algorithm"]]],[11,"bytes","","TODO: doc",17,[[["self"]],["b"]]],[0,"constant_time","ring","Constant-time operations.",null,null],[5,"verify_slices_are_equal","ring::constant_time","Returns `Ok(())` if `a == b` and `Err(error::Unspecified)`…",null,[[],[["result",["unspecified"]],["unspecified"]]]],[0,"io","ring","Serialization and deserialization.",null,null],[3,"Positive","ring::io","A serialized positive integer.",null,null],[11,"big_endian_without_leading_zero","","Returns the value, ordered from significant byte to least…",18,[[["self"]]]],[11,"first_byte","","Returns the first byte.",18,[[["self"]],["u8"]]],[0,"digest","ring","SHA-2 and the legacy SHA-1 digest algorithm.",null,null],[3,"Context","ring::digest","A context for multi-step (Init-Update-Finish) digest…",null,null],[3,"Digest","","A calculated digest value.",null,null],[3,"Algorithm","","A digest algorithm.",null,null],[12,"output_len","","The length of a finalized digest.",19,null],[12,"chaining_len","","The size of the chaining value of the digest function, in…",19,null],[12,"block_len","","The internal block length.",19,null],[5,"digest","","Returns the digest of `data` using the given digest…",null,[[["algorithm"]],["digest"]]],[7,"SHA1_FOR_LEGACY_USE_ONLY","","SHA-1 as specified in [FIPS 180-4]. Deprecated.",null,null],[7,"SHA256","","SHA-256 as specified in [FIPS 180-4].",null,null],[7,"SHA384","","SHA-384 as specified in [FIPS 180-4].",null,null],[7,"SHA512","","SHA-512 as specified in [FIPS 180-4].",null,null],[7,"SHA512_256","","SHA-512/256 as specified in [FIPS 180-4].",null,null],[17,"MAX_BLOCK_LEN","","The maximum block length (`Algorithm::block_len`) of all…",null,null],[17,"MAX_OUTPUT_LEN","","The maximum output length (`Algorithm::output_len`) of all…",null,null],[17,"MAX_CHAINING_LEN","","The maximum chaining length (`Algorithm::chaining_len`) of…",null,null],[17,"SHA1_OUTPUT_LEN","","The length of the output of SHA-1, in bytes.",null,null],[17,"SHA256_OUTPUT_LEN","","The length of the output of SHA-256, in bytes.",null,null],[17,"SHA384_OUTPUT_LEN","","The length of the output of SHA-384, in bytes.",null,null],[17,"SHA512_OUTPUT_LEN","","The length of the output of SHA-512, in bytes.",null,null],[17,"SHA512_256_OUTPUT_LEN","","The length of the output of SHA-512/256, in bytes.",null,null],[11,"new","","Constructs a new context.",20,[[["algorithm"]],["self"]]],[11,"update","","Updates the digest with all the data in `data`. `update`…",20,[[["self"]]]],[11,"finish","","Finalizes the digest calculation and returns the digest…",20,[[],["digest"]]],[11,"algorithm","","The algorithm that this context is using.",20,[[["self"]],["algorithm"]]],[11,"algorithm","","The algorithm that was used to calculate the digest value.",21,[[["self"]],["algorithm"]]],[0,"error","ring","Error reporting.",null,null],[3,"Unspecified","ring::error","An error with absolutely no details.",null,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[11,"description_","","The value returned from ::description()",22,[[["self"]],["str"]]],[0,"hkdf","ring","HMAC-based Extract-and-Expand Key Derivation Function.",null,null],[3,"Algorithm","ring::hkdf","An HKDF algorithm.",null,null],[3,"Salt","","A salt for HKDF operations.",null,null],[3,"Prk","","A HKDF PRK (pseudorandom key).",null,null],[3,"Okm","","An HKDF OKM (Output Keying Material)",null,null],[7,"HKDF_SHA1_FOR_LEGACY_USE_ONLY","","HKDF using HMAC-SHA-1. Obsolete.",null,null],[7,"HKDF_SHA256","","HKDF using HMAC-SHA-256.",null,null],[7,"HKDF_SHA384","","HKDF using HMAC-SHA-384.",null,null],[7,"HKDF_SHA512","","HKDF using HMAC-SHA-512.",null,null],[8,"KeyType","","The length of the OKM (Output Keying Material) for a…",null,null],[10,"len","","The length that `Prk::expand()` should expand its input to.",23,[[["self"]],["usize"]]],[11,"hmac_algorithm","","The underlying HMAC algorithm.",24,[[["self"]],["algorithm"]]],[11,"new","","Constructs a new `Salt` with the given value based on the…",25,[[["algorithm"]],["self"]]],[11,"extract","","The [HKDF-Extract] operation.",25,[[["self"]],["prk"]]],[11,"algorithm","","The algorithm used to derive this salt.",25,[[["self"]],["algorithm"]]],[11,"new_less_safe","","Construct a new `Prk` directly with the given value.",26,[[["algorithm"]],["self"]]],[11,"expand","","The [HKDF-Expand] operation.",26,[[["keytype"],["self"]],[["okm"],["unspecified"],["result",["okm","unspecified"]]]]],[11,"len","","The `OkmLength` given to `Prk::expand()`.",27,[[["self"]],["l"]]],[11,"fill","","Fills `out` with the output of the HKDF-Expand operation…",27,[[],[["result",["unspecified"]],["unspecified"]]]],[0,"hmac","ring","HMAC is specified in [RFC 2104].",null,null],[3,"Algorithm","ring::hmac","An HMAC algorithm.",null,null],[3,"Tag","","An HMAC tag.",null,null],[3,"Key","","A key to use for HMAC signing.",null,null],[3,"Context","","A context for multi-step (Init-Update-Finish) HMAC signing.",null,null],[5,"sign","","Calculates the HMAC of `data` using the key `key` in one…",null,[[["key"]],["tag"]]],[5,"verify","","Calculates the HMAC of `data` using the signing key `key`,…",null,[[["key"]],[["result",["unspecified"]],["unspecified"]]]],[6,"Signature","","A deprecated alias for `Tag`.",null,null],[6,"SigningKey","","`hmac::SigningKey` was renamed to `hmac::Key`.",null,null],[6,"VerificationKey","","`hmac::VerificationKey` was merged into `hmac::Key`.",null,null],[6,"SigningContext","","`hmac::SigningContext` was renamed to `hmac::Context`.",null,null],[7,"HMAC_SHA1_FOR_LEGACY_USE_ONLY","","HMAC using SHA-1. Obsolete.",null,null],[7,"HMAC_SHA256","","HMAC using SHA-256.",null,null],[7,"HMAC_SHA384","","HMAC using SHA-384.",null,null],[7,"HMAC_SHA512","","HMAC using SHA-512.",null,null],[11,"digest_algorithm","","The digest algorithm this HMAC algorithm is based on.",28,[[["self"]],["algorithm"]]],[11,"generate","","Generate an HMAC signing key using the given digest…",29,[[["securerandom"],["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"new","","Construct an HMAC signing key using the given digest…",29,[[["algorithm"]],["self"]]],[11,"algorithm","","The digest algorithm for the key.",29,[[["self"]],["algorithm"]]],[11,"with_key","","Constructs a new HMAC signing context using the given…",30,[[["key"]],["self"]]],[11,"update","","Updates the HMAC with all the data in `data`. `update` may…",30,[[["self"]]]],[11,"sign","","Finalizes the HMAC calculation and returns the HMAC value.…",30,[[],["tag"]]],[0,"pbkdf2","ring","PBKDF2 derivation and verification.",null,null],[3,"Algorithm","ring::pbkdf2","A PBKDF2 algorithm.",null,null],[5,"derive","","Fills `out` with the key derived using PBKDF2 with the…",null,[[["algorithm"],["nonzerou32"]]]],[5,"verify","","Verifies that a previously-derived (e.g., using `derive`)…",null,[[["algorithm"],["nonzerou32"]],[["result",["unspecified"]],["unspecified"]]]],[7,"PBKDF2_HMAC_SHA1","","PBKDF2 using HMAC-SHA1.",null,null],[7,"PBKDF2_HMAC_SHA256","","PBKDF2 using HMAC-h.",null,null],[7,"PBKDF2_HMAC_SHA384","","PBKDF2 using HMAC-SHA384.",null,null],[7,"PBKDF2_HMAC_SHA512","","PBKDF2 using HMAC-SHA512.",null,null],[0,"pkcs8","ring","PKCS#8 is specified in [RFC 5958].",null,null],[3,"Document","ring::pkcs8","A generated PKCS#8 document.",null,null],[0,"rand","ring","Cryptographic pseudo-random number generation.",null,null],[3,"Random","ring::rand","A random value constructed from a `SecureRandom` that…",null,null],[3,"SystemRandom","","A secure random number generator where the random values…",null,null],[5,"generate","","Generate the new random value using `rng`.",null,[[["securerandom"]],[["unspecified"],["result",["random","unspecified"]],["random"]]]],[8,"SecureRandom","","A secure random number generator.",null,null],[10,"fill","","Fills `dest` with random bytes.",31,[[["self"]],[["result",["unspecified"]],["unspecified"]]]],[8,"RandomlyConstructable","","A type that can be returned by `ring::rand::generate()`.",null,null],[11,"expose","","Expose the random value.",32,[[],["t"]]],[11,"new","","Constructs a new `SystemRandom`.",33,[[],["self"]]],[0,"signature","ring","Public key signatures: signing and verification.",null,null],[3,"Ed25519KeyPair","ring::signature","An Ed25519 key pair, for signing.",null,null],[3,"EdDSAParameters","","Parameters for EdDSA signing and verification.",null,null],[3,"EcdsaKeyPair","","An ECDSA key pair, used for signing.",null,null],[3,"EcdsaSigningAlgorithm","","An ECDSA signing algorithm.",null,null],[3,"EcdsaVerificationAlgorithm","","An ECDSA verification algorithm.",null,null],[3,"RsaKeyPair","","An RSA key pair, used for signing.",null,null],[3,"RsaSubjectPublicKey","","A serialized RSA public key.",null,null],[3,"RsaPublicKeyComponents","","Low-level API for the verification of RSA signatures.",null,null],[12,"n","","The public modulus, encoded in big-endian bytes without…",34,null],[12,"e","","The public exponent, encoded in big-endian bytes without…",34,null],[3,"RsaParameters","","Parameters for RSA verification.",null,null],[3,"Signature","","A public key signature returned from a signing operation.",null,null],[3,"UnparsedPublicKey","","An unparsed, possibly malformed, public key for signature…",null,null],[7,"ED25519","","Verification of [Ed25519] signatures.",null,null],[7,"ECDSA_P256_SHA256_ASN1_SIGNING","","Signing of ASN.1 DER-encoded ECDSA signatures using the…",null,null],[7,"ECDSA_P256_SHA256_FIXED_SIGNING","","Signing of fixed-length (PKCS#11 style) ECDSA signatures…",null,null],[7,"ECDSA_P384_SHA384_ASN1_SIGNING","","Signing of ASN.1 DER-encoded ECDSA signatures using the…",null,null],[7,"ECDSA_P384_SHA384_FIXED_SIGNING","","Signing of fixed-length (PKCS#11 style) ECDSA signatures…",null,null],[7,"ECDSA_P256_SHA256_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using…",null,null],[7,"ECDSA_P256_SHA256_FIXED","","Verification of fixed-length (PKCS#11 style) ECDSA…",null,null],[7,"ECDSA_P256_SHA384_ASN1","","Not recommended. Verification of ASN.1 DER-encoded ECDSA…",null,null],[7,"ECDSA_P384_SHA256_ASN1","","Not recommended. Verification of ASN.1 DER-encoded ECDSA…",null,null],[7,"ECDSA_P384_SHA384_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using…",null,null],[7,"ECDSA_P384_SHA384_FIXED","","Verification of fixed-length (PKCS#11 style) ECDSA…",null,null],[7,"RSA_PKCS1_1024_8192_SHA1_FOR_LEGACY_USE_ONLY","","Verification of signatures using RSA keys of 1024-8192…",null,null],[7,"RSA_PKCS1_1024_8192_SHA256_FOR_LEGACY_USE_ONLY","","Verification of signatures using RSA keys of 1024-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA1_FOR_LEGACY_USE_ONLY","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_3072_8192_SHA384","","Verification of signatures using RSA keys of 3072-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_SHA256","","PKCS#1 1.5 padding using SHA-256 for RSA signatures.",null,null],[7,"RSA_PKCS1_SHA384","","PKCS#1 1.5 padding using SHA-384 for RSA signatures.",null,null],[7,"RSA_PKCS1_SHA512","","PKCS#1 1.5 padding using SHA-512 for RSA signatures.",null,null],[7,"RSA_PSS_SHA256","","RSA PSS padding using SHA-256 for RSA signatures.",null,null],[7,"RSA_PSS_SHA384","","RSA PSS padding using SHA-384 for RSA signatures.",null,null],[7,"RSA_PSS_SHA512","","RSA PSS padding using SHA-512 for RSA signatures.",null,null],[17,"ED25519_PUBLIC_KEY_LEN","","The length of an Ed25519 public key.",null,null],[8,"RsaEncoding","","An RSA signature encoding as described in [RFC 3447…",null,null],[8,"KeyPair","","Key pairs for signing messages (private key and public key).",null,null],[16,"PublicKey","","The type of the public key.",35,null],[10,"public_key","","The public key for the key pair.",35,[[["self"]]]],[8,"VerificationAlgorithm","","A signature verification algorithm.",null,null],[10,"verify","","Verify the signature `signature` of message `msg` with the…",36,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"new","","Construct a new `UnparsedPublicKey`.",37,[[["verificationalgorithm"],["b"]],["self"]]],[11,"verify","","Parses the public key and verifies `signature` is a valid…",37,[[["self"]],[["result",["unspecified"]],["unspecified"]]]],[14,"test_file","ring","References a test input file.",null,null],[11,"from","ring::test","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","ring::aead","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","ring::aead::chacha20_poly1305_openssh","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","ring::aead::quic","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","ring::agreement","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","ring::io","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"from","ring::digest","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","ring::signature","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","ring::error","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"from","ring::hkdf","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","ring::hmac","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"from","ring::pbkdf2","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"from","ring::pkcs8","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","ring::rand","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"fill","","",33,[[["self"]],[["unspecified"],["result",["unspecified"]]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"from","ring::signature","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"new","ring::aead","",9,[[["unboundkey"],["n"]],["self"]]],[11,"algorithm","","",9,[[["self"]],["algorithm"]]],[11,"new","","",10,[[["unboundkey"],["n"]],["self"]]],[11,"algorithm","","",10,[[["self"]],["algorithm"]]],[11,"len","ring::hkdf","",24,[[["self"]],["usize"]]],[11,"len","ring::hmac","",28,[[["self"]],["usize"]]],[11,"public_key","ring::signature","",40,[[["self"]]]],[11,"public_key","","",43,[[["self"]]]],[11,"public_key","","",50,[[["self"]]]],[11,"verify","","",41,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"verify","","",44,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"verify","","",49,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"from","ring::aead","",12,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"from","ring::aead::quic","",5,[[["algorithm"],["okm",["algorithm"]]],["self"]]],[11,"from","ring::error","",45,[[["endofinput"]],["self"]]],[11,"from","","",45,[[["tryfromsliceerror"]],["self"]]],[11,"from","","",45,[[["keyrejected"]],["self"]]],[11,"from","ring::hkdf","",25,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"from","","",26,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"from","ring::hmac","",29,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"fmt","ring::test","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::aead","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::aead::quic","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::agreement","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::digest","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::signature","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::error","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::hkdf","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::hmac","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::rand","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::signature","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::error","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"eq","ring::aead","",14,[[["self"]],["bool"]]],[11,"eq","ring::aead::quic","",6,[[["self"]],["bool"]]],[11,"eq","ring::agreement","",39,[[["self"],["algorithm"]],["bool"]]],[11,"eq","ring::digest","",19,[[["self"]],["bool"]]],[11,"eq","ring::signature","",42,[[["self"]],["bool"]]],[11,"eq","ring::error","",45,[[["unspecified"],["self"]],["bool"]]],[11,"eq","ring::hkdf","",24,[[["algorithm"],["self"]],["bool"]]],[11,"ne","","",24,[[["algorithm"],["self"]],["bool"]]],[11,"eq","ring::hmac","",28,[[["self"],["algorithm"]],["bool"]]],[11,"ne","","",28,[[["self"],["algorithm"]],["bool"]]],[11,"eq","ring::pbkdf2","",47,[[["self"],["algorithm"]],["bool"]]],[11,"ne","","",47,[[["self"],["algorithm"]],["bool"]]],[11,"as_ref","ring::aead","",11,[[["self"]]]],[11,"as_ref","","",38,[[["self"]]]],[11,"as_ref","","",4,[[["self"]]]],[11,"as_ref","ring::agreement","",16,[[["self"]]]],[11,"as_ref","ring::digest","",21,[[["self"]]]],[11,"as_ref","ring::hmac","",46,[[["self"]]]],[11,"as_ref","ring::pkcs8","",48,[[["self"]]]],[11,"as_ref","ring::signature","",51,[[["self"]]]],[11,"as_ref","","",52,[[["self"]]]],[11,"clone","ring::agreement","",16,[[["self"]],["publickey"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","ring::io","",18,[[["self"]],["positive"]]],[11,"clone","ring::digest","",20,[[["self"]],["context"]]],[11,"clone","","",21,[[["self"]],["digest"]]],[11,"clone","ring::error","",45,[[["self"]],["unspecified"]]],[11,"clone","","",22,[[["self"]],["keyrejected"]]],[11,"clone","ring::hkdf","",24,[[["self"]],["algorithm"]]],[11,"clone","","",26,[[["self"]],["prk"]]],[11,"clone","ring::hmac","",28,[[["self"]],["algorithm"]]],[11,"clone","","",46,[[["self"]],["tag"]]],[11,"clone","","",29,[[["self"]],["key"]]],[11,"clone","","",30,[[["self"]],["context"]]],[11,"clone","ring::pbkdf2","",47,[[["self"]],["algorithm"]]],[11,"clone","ring::rand","",33,[[["self"]],["systemrandom"]]],[11,"clone","ring::signature","",34,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["rsasubjectpublickey"]]],[11,"clone","","",52,[[["self"]],["signature"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"generate_pkcs8","","Generates a new key pair and returns the key pair…",40,[[["securerandom"]],[["result",["document","unspecified"]],["document"],["unspecified"]]]],[11,"from_pkcs8","","Constructs an Ed25519 key pair by parsing an unencrypted…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_pkcs8_maybe_unchecked","","Constructs an Ed25519 key pair by parsing an unencrypted…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_seed_and_public_key","","Constructs an Ed25519 key pair from the private key seed…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_seed_unchecked","","Constructs a Ed25519 key pair from the private key seed…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"sign","","Returns the signature of the message `msg`.",40,[[["self"]],["signature"]]],[11,"generate_pkcs8","","Generates a new key pair and returns the key pair…",43,[[["securerandom"],["ecdsasigningalgorithm"]],[["result",["document","unspecified"]],["document"],["unspecified"]]]],[11,"from_pkcs8","","Constructs an ECDSA key pair by parsing an unencrypted…",43,[[["ecdsasigningalgorithm"]],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_private_key_and_public_key","","Constructs an ECDSA key pair directly from the…",43,[[["ecdsasigningalgorithm"]],[["result",["keyrejected"]],["keyrejected"]]]],[11,"sign","","Returns the signature of the `message` using a random…",43,[[["securerandom"],["self"]],[["unspecified"],["result",["signature","unspecified"]],["signature"]]]],[11,"verify","","Verifies that `signature` is a valid signature of…",34,[[["rsaparameters"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"from_pkcs8","","Parses an unencrypted PKCS#8-encoded RSA private key.",50,[[],[["keyrejected"],["result",["keyrejected"]]]]],[11,"from_der","","Parses an RSA private key that is not inside a PKCS#8…",50,[[],[["keyrejected"],["result",["keyrejected"]]]]],[11,"public_modulus_len","","Returns the length in bytes of the key pair's public…",50,[[["self"]],["usize"]]],[11,"modulus","","The public modulus (n).",51,[[["self"]],["positive"]]],[11,"exponent","","The public exponent (e).",51,[[["self"]],["positive"]]],[11,"sign","","Sign `msg`. `msg` is digested using the digest algorithm…",50,[[["rsaencoding"],["securerandom"],["self"]],[["result",["unspecified"]],["unspecified"]]]]],"p":[[3,"File"],[3,"TestCase"],[3,"SealingKey"],[3,"OpeningKey"],[3,"Nonce"],[3,"HeaderProtectionKey"],[3,"Algorithm"],[8,"NonceSequence"],[8,"BoundKey"],[3,"OpeningKey"],[3,"SealingKey"],[3,"Aad"],[3,"UnboundKey"],[3,"LessSafeKey"],[3,"Algorithm"],[3,"EphemeralPrivateKey"],[3,"PublicKey"],[3,"UnparsedPublicKey"],[3,"Positive"],[3,"Algorithm"],[3,"Context"],[3,"Digest"],[3,"KeyRejected"],[8,"KeyType"],[3,"Algorithm"],[3,"Salt"],[3,"Prk"],[3,"Okm"],[3,"Algorithm"],[3,"Key"],[3,"Context"],[8,"SecureRandom"],[3,"Random"],[3,"SystemRandom"],[3,"RsaPublicKeyComponents"],[8,"KeyPair"],[8,"VerificationAlgorithm"],[3,"UnparsedPublicKey"],[3,"Tag"],[3,"Algorithm"],[3,"Ed25519KeyPair"],[3,"EdDSAParameters"],[3,"EcdsaSigningAlgorithm"],[3,"EcdsaKeyPair"],[3,"EcdsaVerificationAlgorithm"],[3,"Unspecified"],[3,"Tag"],[3,"Algorithm"],[3,"Document"],[3,"RsaParameters"],[3,"RsaKeyPair"],[3,"RsaSubjectPublicKey"],[3,"Signature"]]};
searchIndex["rustls"] = {"doc":"Rustls - a modern TLS library Rustls is a TLS library that…","i":[[3,"Stream","rustls","This type implements `io::Read` and `io::Write`,…",null,null],[12,"sess","","Our session",0,null],[12,"sock","","The underlying transport, like a socket",0,null],[3,"StreamOwned","","This type implements `io::Read` and `io::Write`,…",null,null],[12,"sess","","Our session",1,null],[12,"sock","","The underlying transport, like a socket",1,null],[3,"RootCertStore","","A container for root certificates able to provide a…",null,null],[12,"roots","","The list of roots.",2,null],[3,"NoClientSessionStorage","","An implementor of `StoresClientSessions` which does nothing.",null,null],[3,"ClientSessionMemoryCache","","An implementor of `StoresClientSessions` that stores…",null,null],[3,"ClientConfig","","Common configuration for (typically) all connections made…",null,null],[12,"ciphersuites","","List of ciphersuites, in preference order.",3,null],[12,"root_store","","Collection of root certificates.",3,null],[12,"alpn_protocols","","Which ALPN protocols we include in our client hello. If…",3,null],[12,"session_persistence","","How we store session data or tickets.",3,null],[12,"mtu","","Our MTU.  If None, we don't limit TLS message sizes.",3,null],[12,"client_auth_cert_resolver","","How to decide what client auth certificate/keys to use.",3,null],[12,"enable_tickets","","Whether to support RFC5077 tickets. You must provide a…",3,null],[12,"versions","","Supported versions, in no particular order. The default is…",3,null],[12,"ct_logs","","Collection of certificate transparency logs. If this…",3,null],[12,"enable_sni","","Whether to send the Server Name Indication (SNI) extension…",3,null],[12,"key_log","","How to output key material for debugging. The default does…",3,null],[12,"enable_early_data","","Whether to send data on the first flight (\"early data\") in…",3,null],[3,"ClientSession","","This represents a single TLS client session.",null,null],[3,"WriteEarlyData","","Stub that implements io::Write and dispatches to…",null,null],[3,"NoServerSessionStorage","","Something which never stores sessions.",null,null],[3,"ServerSessionMemoryCache","","An implementor of `StoresServerSessions` that stores…",null,null],[3,"ServerConfig","","Common configuration for a set of server sessions.",null,null],[12,"ciphersuites","","List of ciphersuites, in preference order.",4,null],[12,"ignore_client_order","","Ignore the client's ciphersuite order. Instead, choose the…",4,null],[12,"mtu","","Our MTU.  If None, we don't limit TLS message sizes.",4,null],[12,"session_storage","","How to store client sessions.",4,null],[12,"ticketer","","How to produce tickets.",4,null],[12,"cert_resolver","","How to choose a server cert and key.",4,null],[12,"alpn_protocols","","Protocol names we support, most preferred first. If empty…",4,null],[12,"versions","","Supported protocol versions, in no particular order. The…",4,null],[12,"key_log","","How to output key material for debugging. The default does…",4,null],[3,"ServerSession","","This represents a single TLS server session.",null,null],[3,"ResolvesServerCertUsingSNI","","Something that resolves do different cert chains/keys…",null,null],[3,"Ticketer","","A concrete, safe ticket creation mechanism.",null,null],[3,"NoClientAuth","","Turns off client authentication.",null,null],[3,"AllowAnyAuthenticatedClient","","A `ClientCertVerifier` that will ensure that every client…",null,null],[3,"AllowAnyAnonymousOrAuthenticatedClient","","A `ClientCertVerifier` that will allow both anonymous and…",null,null],[3,"SupportedCipherSuite","","A cipher suite supported by rustls.",null,null],[12,"suite","","The TLS enumeration naming this cipher suite.",5,null],[12,"kx","","How to exchange/agree keys.",5,null],[12,"bulk","","How to do bulk encryption.",5,null],[12,"hash","","How to do hashing.",5,null],[12,"sign","","How to sign messages.",5,null],[12,"enc_key_len","","Encryption key length, for the bulk algorithm.",5,null],[12,"fixed_iv_len","","How long the fixed part of the 'IV' is.",5,null],[12,"explicit_nonce_len","","This is a non-standard extension which extends the key…",5,null],[3,"Certificate","","This type contains a single certificate by value.",null,null],[12,"0","","",6,null],[3,"PrivateKey","","This type contains a private key by value.",null,null],[12,"0","","",7,null],[3,"NoKeyLog","","KeyLog that does exactly nothing.",null,null],[3,"KeyLogFile","","`KeyLog` implementation that opens a file whose name is…",null,null],[4,"ProtocolVersion","","The `ProtocolVersion` TLS protocol enum. Values in this…",null,null],[13,"SSLv2","","",8,null],[13,"SSLv3","","",8,null],[13,"TLSv1_0","","",8,null],[13,"TLSv1_1","","",8,null],[13,"TLSv1_2","","",8,null],[13,"TLSv1_3","","",8,null],[13,"Unknown","","",8,null],[4,"SignatureScheme","","The `SignatureScheme` TLS protocol enum. Values in this…",null,null],[13,"RSA_PKCS1_SHA1","","",9,null],[13,"ECDSA_SHA1_Legacy","","",9,null],[13,"RSA_PKCS1_SHA256","","",9,null],[13,"ECDSA_NISTP256_SHA256","","",9,null],[13,"RSA_PKCS1_SHA384","","",9,null],[13,"ECDSA_NISTP384_SHA384","","",9,null],[13,"RSA_PKCS1_SHA512","","",9,null],[13,"ECDSA_NISTP521_SHA512","","",9,null],[13,"RSA_PSS_SHA256","","",9,null],[13,"RSA_PSS_SHA384","","",9,null],[13,"RSA_PSS_SHA512","","",9,null],[13,"ED25519","","",9,null],[13,"ED448","","",9,null],[13,"Unknown","","",9,null],[4,"CipherSuite","","The `CipherSuite` TLS protocol enum. Values in this enum…",null,null],[13,"TLS_NULL_WITH_NULL_NULL","","",10,null],[13,"TLS_RSA_WITH_NULL_MD5","","",10,null],[13,"TLS_RSA_WITH_NULL_SHA","","",10,null],[13,"TLS_RSA_EXPORT_WITH_RC4_40_MD5","","",10,null],[13,"TLS_RSA_WITH_RC4_128_MD5","","",10,null],[13,"TLS_RSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",10,null],[13,"TLS_RSA_WITH_IDEA_CBC_SHA","","",10,null],[13,"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5","","",10,null],[13,"TLS_DH_anon_WITH_RC4_128_MD5","","",10,null],[13,"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"SSL_FORTEZZA_KEA_WITH_NULL_SHA","","",10,null],[13,"SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA","","",10,null],[13,"TLS_KRB5_WITH_DES_CBC_SHA_or_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_KRB5_WITH_RC4_128_SHA","","",10,null],[13,"TLS_KRB5_WITH_IDEA_CBC_SHA","","",10,null],[13,"TLS_KRB5_WITH_DES_CBC_MD5","","",10,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_MD5","","",10,null],[13,"TLS_KRB5_WITH_RC4_128_MD5","","",10,null],[13,"TLS_KRB5_WITH_IDEA_CBC_MD5","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_SHA","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_MD5","","",10,null],[13,"TLS_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_NULL_SHA256","","",10,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECNRA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_NULL_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_NULL_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_NULL_WITH_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA_draft","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_MD5","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_SHA","","",10,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_RC4_128_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_RMD","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_RMD","","",10,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_RMD","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_RMD","","",10,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_RMD","","",10,null],[13,"TLS_RSA_WITH_AES_128_CBC_RMD","","",10,null],[13,"TLS_RSA_WITH_AES_256_CBC_RMD","","",10,null],[13,"TLS_GOSTR341094_WITH_28147_CNT_IMIT","","",10,null],[13,"TLS_GOSTR341001_WITH_28147_CNT_IMIT","","",10,null],[13,"TLS_GOSTR341094_WITH_NULL_GOSTR3411","","",10,null],[13,"TLS_GOSTR341001_WITH_NULL_GOSTR3411","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",10,null],[13,"TLS13_AES_128_GCM_SHA256","","",10,null],[13,"TLS13_AES_256_GCM_SHA384","","",10,null],[13,"TLS13_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS13_AES_128_CCM_SHA256","","",10,null],[13,"TLS13_AES_128_CCM_8_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_PSK_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_PSK_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_WITH_AES_128_CCM","","",10,null],[13,"TLS_RSA_WITH_AES_256_CCM","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM","","",10,null],[13,"TLS_RSA_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_RSA_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_PSK_WITH_AES_128_CCM","","",10,null],[13,"TLS_PSK_WITH_AES_256_CCM","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_CCM","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_CCM","","",10,null],[13,"TLS_PSK_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_PSK_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_PSK_DHE_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_PSK_DHE_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"SSL_RSA_FIPS_WITH_DES_CBC_SHA","","",10,null],[13,"SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"Unknown","","",10,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn't valid right now.…",11,null],[12,"expect_types","rustls::TLSError","Which types we expected",11,null],[12,"got_type","","What type we received",11,null],[13,"InappropriateHandshakeMessage","rustls","We received a TLS handshake message that isn't valid right…",11,null],[12,"expect_types","rustls::TLSError","Which handshake type we expected",11,null],[12,"got_type","","What handshake type we received",11,null],[13,"CorruptMessage","rustls","The peer sent us a syntactically incorrect TLS message.",11,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",11,null],[13,"NoCertificatesPresented","","The peer didn't give us any certificates.",11,null],[13,"DecryptError","","We couldn't decrypt a message.  This is invariably fatal.",11,null],[13,"PeerIncompatibleError","","The peer doesn't support a protocol version/feature we…",11,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The…",11,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is unhappy.",11,null],[13,"WebPKIError","","The presented certificate chain is invalid.",11,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",11,null],[13,"General","","A catch-all error for unlikely errors.",11,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",11,null],[13,"InvalidDNSName","","A syntactically-invalid DNS hostname was given.",11,null],[13,"HandshakeNotComplete","","This function doesn't work until the TLS handshake is…",11,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",11,null],[4,"BulkAlgorithm","","Bulk symmetric encryption scheme used by a cipher suite.",null,null],[13,"AES_128_GCM","","AES with 128-bit keys in Galois counter mode.",12,null],[13,"AES_256_GCM","","AES with 256-bit keys in Galois counter mode.",12,null],[13,"CHACHA20_POLY1305","","Chacha20 for confidentiality with poly1305 for authenticity.",12,null],[11,"get_u16","","",8,[[["self"]],["u16"]]],[11,"get_u16","","",10,[[["self"]],["u16"]]],[11,"get_u16","","",9,[[["self"]],["u16"]]],[11,"new","","Make a new Stream using the Session `sess` and socket-like…",0,[[["s"],["t"]],["stream"]]],[11,"new","","Make a new StreamOwned taking the Session `sess` and…",1,[[["s"],["t"]],["streamowned"]]],[11,"get_ref","","Get a reference to the underlying socket",1,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the underlying socket",1,[[["self"]],["t"]]],[11,"empty","","Make a new, empty `RootCertStore`.",2,[[],["rootcertstore"]]],[11,"is_empty","","Return true if there are no certificates.",2,[[["self"]],["bool"]]],[11,"len","","Say how many certificates are in the container.",2,[[["self"]],["usize"]]],[11,"get_subjects","","Return the Subject Names for certificates in the container.",2,[[["self"]],["distinguishednames"]]],[11,"add","","Add a single DER-encoded certificate to the store.",2,[[["self"],["certificate"]],[["result",["error"]],["error"]]]],[11,"add_server_trust_anchors","","Adds all the given TrustAnchors `anchors`. This does not…",2,[[["self"],["tlsservertrustanchors"]]]],[11,"add_pem_file","","Parse a PEM file and add all certificates found inside.…",2,[[["self"],["bufread"]],["result"]]],[11,"new","","Construct a new `AllowAnyAuthenticatedClient`.",13,[[["rootcertstore"]],[["arc",["clientcertverifier"]],["clientcertverifier"]]]],[11,"new","","Construct a new `AllowAnyAnonymousOrAuthenticatedClient`.",14,[[["rootcertstore"]],[["arc",["clientcertverifier"]],["clientcertverifier"]]]],[11,"new","","Constructs a `NoClientAuth` and wraps it in an `Arc`.",15,[[],[["arc",["clientcertverifier"]],["clientcertverifier"]]]],[11,"get_hash","","Which hash function to use with this suite.",5,[[["self"]],["algorithm"]]],[11,"do_client_kx","","We have parameters and a verified public key in…",5,[[["self"]],[["option",["keyexchangeresult"]],["keyexchangeresult"]]]],[11,"start_server_kx","","Start the KX process with the given group. This generates…",5,[[["namedgroup"],["self"]],[["keyexchange"],["option",["keyexchange"]]]]],[11,"resolve_sig_schemes","","Resolve the set of supported `SignatureScheme`s from the…",5,[[["self"]],[["vec",["signaturescheme"]],["signaturescheme"]]]],[11,"get_aead_alg","","Which AEAD algorithm to use for this suite.",5,[[["self"]],["algorithm"]]],[11,"key_block_len","","Length of key block that needs to be output by the key…",5,[[["self"]],["usize"]]],[11,"usable_for_version","","Return true if this suite is usable for TLS `version`.",5,[[["self"],["protocolversion"]],["bool"]]],[11,"can_resume_to","","Can a session using suite self resume using suite new_suite?",5,[[["self"],["supportedciphersuite"]],["bool"]]],[11,"new","","Make the recommended Ticketer. This produces tickets with…",16,[[],[["producestickets"],["arc",["producestickets"]]]]],[11,"new","","Make a new ServerSessionMemoryCache. `size` is the maximum…",17,[[["usize"]],[["serversessionmemorycache"],["arc",["serversessionmemorycache"]]]]],[11,"new","","Create a new and empty (ie, knows no certificates) resolver.",18,[[],["resolvesservercertusingsni"]]],[11,"add","","Add a new `sign::CertifiedKey` to be used for the given…",18,[[["str"],["self"],["certifiedkey"]],[["tlserror"],["result",["tlserror"]]]]],[11,"new","","Make a `ServerConfig` with a default set of ciphersuites,…",4,[[["arc",["clientcertverifier"]],["clientcertverifier"]],["serverconfig"]]],[11,"set_persistence","","Sets the session persistence layer to `persist`.",4,[[["arc",["storesserversessions"]],["self"],["storesserversessions"]]]],[11,"set_single_cert","","Sets a single certificate chain and matching private key.…",4,[[["vec",["certificate"]],["privatekey"],["self"],["certificate"]],[["tlserror"],["result",["tlserror"]]]]],[11,"set_single_cert_with_ocsp_and_sct","","Sets a single certificate chain, matching private key and…",4,[[["u8"],["vec",["certificate"]],["privatekey"],["self"],["vec",["u8"]],["certificate"]],[["tlserror"],["result",["tlserror"]]]]],[11,"set_protocols","","Set the ALPN protocol list to the given protocol names.…",4,[[["self"]]]],[11,"new","","Make a new ServerSession. `config` controls how we behave…",19,[[["arc"]],["serversession"]]],[11,"get_sni_hostname","","Retrieves the SNI hostname, if any, used to select the…",19,[[["self"]],[["str"],["option",["str"]]]]],[11,"new","","Make a new ClientSessionMemoryCache. `size` is the maximum…",20,[[["usize"]],[["arc",["clientsessionmemorycache"]],["clientsessionmemorycache"]]]],[11,"new","","Make a `ClientConfig` with a default set of ciphersuites,…",3,[[],["clientconfig"]]],[11,"set_protocols","","Set the ALPN protocol list to the given protocol names.…",3,[[["self"]]]],[11,"set_persistence","","Sets persistence layer to `persist`.",3,[[["self"],["arc",["storesclientsessions"]],["storesclientsessions"]]]],[11,"set_mtu","","Sets MTU to `mtu`. If None, the default is used. If…",3,[[["self"],["option"]]]],[11,"set_single_client_cert","","Sets a single client authentication certificate and…",3,[[["vec",["certificate"]],["privatekey"],["self"],["certificate"]]]],[11,"bytes_left","","How many bytes you may send. Writes will become short once…",21,[[["self"]],["usize"]]],[11,"new","","Make a new ClientSession. `config` controls how we behave…",22,[[["arc"],["dnsnameref"]],["clientsession"]]],[11,"early_data","","Returns an `io::Write` implementor you can write bytes to…",22,[[["self"]],[["writeearlydata"],["option",["writeearlydata"]]]]],[11,"is_early_data_accepted","","Returns True if the server signalled it will process early…",22,[[["self"]],["bool"]]],[11,"new","","Makes a new `KeyLogFile`. The environment variable is…",23,[[],["self"]]],[0,"internal","","Internal classes which may be useful outside the library.…",null,null],[0,"pemfile","rustls::internal","Functions for parsing PEM files containing…",null,null],[5,"certs","rustls::internal::pemfile","Extract all the certificates from rd, and return a vec of…",null,[[["bufread"]],[["result",["vec"]],["vec",["certificate"]]]]],[5,"rsa_private_keys","","Extract all RSA private keys from rd, and return a vec of…",null,[[["bufread"]],[["result",["vec"]],["vec",["privatekey"]]]]],[5,"pkcs8_private_keys","","Extract all PKCS8-encoded private keys from rd, and return…",null,[[["bufread"]],[["result",["vec"]],["vec",["privatekey"]]]]],[0,"msgs","rustls::internal","Low-level TLS message parsing and encoding functions.",null,null],[0,"codec","rustls::internal::msgs","",null,null],[3,"Reader","rustls::internal::msgs::codec","Read from a byte slice.",null,null],[3,"u24","","",null,null],[12,"0","","",24,null],[5,"decode_u8","","",null,[[],[["option",["u8"]],["u8"]]]],[5,"put_u16","","",null,[[["u16"]]]],[5,"decode_u16","","",null,[[],[["option",["u16"]],["u16"]]]],[5,"decode_u32","","",null,[[],[["option",["u32"]],["u32"]]]],[5,"put_u64","","",null,[[["u64"]]]],[5,"decode_u64","","",null,[[],[["u64"],["option",["u64"]]]]],[5,"encode_vec_u8","","",null,[[["vec"]]]],[5,"encode_vec_u16","","",null,[[["vec"]]]],[5,"encode_vec_u24","","",null,[[["vec"]]]],[5,"read_vec_u8","","",null,[[["reader"]],[["vec"],["option",["vec"]]]]],[5,"read_vec_u16","","",null,[[["reader"]],[["vec"],["option",["vec"]]]]],[5,"read_vec_u24_limited","","",null,[[["usize"],["reader"]],[["vec"],["option",["vec"]]]]],[8,"Codec","","Things we can encode and read from a Reader.",null,null],[10,"encode","","Encode yourself by appending onto `bytes`.",25,[[["vec"],["self"]]]],[10,"read","","Decode yourself by fiddling with the `Reader`. Return Some…",25,[[["reader"]],["option"]]],[11,"get_encoding","","Convenience function to get the results of `encode()`.",25,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"read_bytes","","Read one of these from the front of `bytes` and return it.",25,[[],["option"]]],[0,"base","rustls::internal::msgs","",null,null],[3,"Payload","rustls::internal::msgs::base","An externally length'd payload",null,null],[12,"0","","",26,null],[3,"PayloadU24","","An arbitrary, unknown-content, u24-length-prefixed payload",null,null],[12,"0","","",27,null],[3,"PayloadU16","","An arbitrary, unknown-content, u16-length-prefixed payload",null,null],[12,"0","","",28,null],[3,"PayloadU8","","An arbitrary, unknown-content, u8-length-prefixed payload",null,null],[12,"0","","",29,null],[0,"enums","rustls::internal::msgs","",null,null],[4,"ProtocolVersion","rustls::internal::msgs::enums","The `ProtocolVersion` TLS protocol enum. Values in this…",null,null],[13,"SSLv2","","",8,null],[13,"SSLv3","","",8,null],[13,"TLSv1_0","","",8,null],[13,"TLSv1_1","","",8,null],[13,"TLSv1_2","","",8,null],[13,"TLSv1_3","","",8,null],[13,"Unknown","","",8,null],[4,"HashAlgorithm","","The `HashAlgorithm` TLS protocol enum. Values in this enum…",null,null],[13,"NONE","","",30,null],[13,"MD5","","",30,null],[13,"SHA1","","",30,null],[13,"SHA224","","",30,null],[13,"SHA256","","",30,null],[13,"SHA384","","",30,null],[13,"SHA512","","",30,null],[13,"Unknown","","",30,null],[4,"SignatureAlgorithm","","The `SignatureAlgorithm` TLS protocol enum. Values in this…",null,null],[13,"Anonymous","","",31,null],[13,"RSA","","",31,null],[13,"DSA","","",31,null],[13,"ECDSA","","",31,null],[13,"Unknown","","",31,null],[4,"ClientCertificateType","","The `ClientCertificateType` TLS protocol enum. Values in…",null,null],[13,"RSASign","","",32,null],[13,"DSSSign","","",32,null],[13,"RSAFixedDH","","",32,null],[13,"DSSFixedDH","","",32,null],[13,"RSAEphemeralDH","","",32,null],[13,"DSSEphemeralDH","","",32,null],[13,"FortezzaDMS","","",32,null],[13,"ECDSASign","","",32,null],[13,"RSAFixedECDH","","",32,null],[13,"ECDSAFixedECDH","","",32,null],[13,"Unknown","","",32,null],[4,"Compression","","The `Compression` TLS protocol enum. Values in this enum…",null,null],[13,"Null","","",33,null],[13,"Deflate","","",33,null],[13,"LSZ","","",33,null],[13,"Unknown","","",33,null],[4,"ContentType","","The `ContentType` TLS protocol enum. Values in this enum…",null,null],[13,"ChangeCipherSpec","","",34,null],[13,"Alert","","",34,null],[13,"Handshake","","",34,null],[13,"ApplicationData","","",34,null],[13,"Heartbeat","","",34,null],[13,"Unknown","","",34,null],[4,"HandshakeType","","The `HandshakeType` TLS protocol enum. Values in this enum…",null,null],[13,"HelloRequest","","",35,null],[13,"ClientHello","","",35,null],[13,"ServerHello","","",35,null],[13,"NewSessionTicket","","",35,null],[13,"EndOfEarlyData","","",35,null],[13,"HelloRetryRequest","","",35,null],[13,"EncryptedExtensions","","",35,null],[13,"Certificate","","",35,null],[13,"ServerKeyExchange","","",35,null],[13,"CertificateRequest","","",35,null],[13,"ServerHelloDone","","",35,null],[13,"CertificateVerify","","",35,null],[13,"ClientKeyExchange","","",35,null],[13,"Finished","","",35,null],[13,"CertificateURL","","",35,null],[13,"CertificateStatus","","",35,null],[13,"KeyUpdate","","",35,null],[13,"MessageHash","","",35,null],[13,"Unknown","","",35,null],[4,"AlertLevel","","The `AlertLevel` TLS protocol enum. Values in this enum…",null,null],[13,"Warning","","",36,null],[13,"Fatal","","",36,null],[13,"Unknown","","",36,null],[4,"AlertDescription","","The `AlertDescription` TLS protocol enum. Values in this…",null,null],[13,"CloseNotify","","",37,null],[13,"UnexpectedMessage","","",37,null],[13,"BadRecordMac","","",37,null],[13,"DecryptionFailed","","",37,null],[13,"RecordOverflow","","",37,null],[13,"DecompressionFailure","","",37,null],[13,"HandshakeFailure","","",37,null],[13,"NoCertificate","","",37,null],[13,"BadCertificate","","",37,null],[13,"UnsupportedCertificate","","",37,null],[13,"CertificateRevoked","","",37,null],[13,"CertificateExpired","","",37,null],[13,"CertificateUnknown","","",37,null],[13,"IllegalParameter","","",37,null],[13,"UnknownCA","","",37,null],[13,"AccessDenied","","",37,null],[13,"DecodeError","","",37,null],[13,"DecryptError","","",37,null],[13,"ExportRestriction","","",37,null],[13,"ProtocolVersion","","",37,null],[13,"InsufficientSecurity","","",37,null],[13,"InternalError","","",37,null],[13,"InappropriateFallback","","",37,null],[13,"UserCanceled","","",37,null],[13,"NoRenegotiation","","",37,null],[13,"MissingExtension","","",37,null],[13,"UnsupportedExtension","","",37,null],[13,"CertificateUnobtainable","","",37,null],[13,"UnrecognisedName","","",37,null],[13,"BadCertificateStatusResponse","","",37,null],[13,"BadCertificateHashValue","","",37,null],[13,"UnknownPSKIdentity","","",37,null],[13,"CertificateRequired","","",37,null],[13,"NoApplicationProtocol","","",37,null],[13,"Unknown","","",37,null],[4,"HeartbeatMessageType","","The `HeartbeatMessageType` TLS protocol enum. Values in…",null,null],[13,"Request","","",38,null],[13,"Response","","",38,null],[13,"Unknown","","",38,null],[4,"ExtensionType","","The `ExtensionType` TLS protocol enum. Values in this enum…",null,null],[13,"ServerName","","",39,null],[13,"MaxFragmentLength","","",39,null],[13,"ClientCertificateUrl","","",39,null],[13,"TrustedCAKeys","","",39,null],[13,"TruncatedHMAC","","",39,null],[13,"StatusRequest","","",39,null],[13,"UserMapping","","",39,null],[13,"ClientAuthz","","",39,null],[13,"ServerAuthz","","",39,null],[13,"CertificateType","","",39,null],[13,"EllipticCurves","","",39,null],[13,"ECPointFormats","","",39,null],[13,"SRP","","",39,null],[13,"SignatureAlgorithms","","",39,null],[13,"UseSRTP","","",39,null],[13,"Heartbeat","","",39,null],[13,"ALProtocolNegotiation","","",39,null],[13,"SCT","","",39,null],[13,"Padding","","",39,null],[13,"ExtendedMasterSecret","","",39,null],[13,"SessionTicket","","",39,null],[13,"PreSharedKey","","",39,null],[13,"EarlyData","","",39,null],[13,"SupportedVersions","","",39,null],[13,"Cookie","","",39,null],[13,"PSKKeyExchangeModes","","",39,null],[13,"TicketEarlyDataInfo","","",39,null],[13,"CertificateAuthorities","","",39,null],[13,"OIDFilters","","",39,null],[13,"PostHandshakeAuth","","",39,null],[13,"SignatureAlgorithmsCert","","",39,null],[13,"KeyShare","","",39,null],[13,"NextProtocolNegotiation","","",39,null],[13,"ChannelId","","",39,null],[13,"RenegotiationInfo","","",39,null],[13,"TransportParameters","","",39,null],[13,"Unknown","","",39,null],[4,"ServerNameType","","The `ServerNameType` TLS protocol enum. Values in this…",null,null],[13,"HostName","","",40,null],[13,"Unknown","","",40,null],[4,"NamedCurve","","The `NamedCurve` TLS protocol enum. Values in this enum…",null,null],[13,"sect163k1","","",41,null],[13,"sect163r1","","",41,null],[13,"sect163r2","","",41,null],[13,"sect193r1","","",41,null],[13,"sect193r2","","",41,null],[13,"sect233k1","","",41,null],[13,"sect233r1","","",41,null],[13,"sect239k1","","",41,null],[13,"sect283k1","","",41,null],[13,"sect283r1","","",41,null],[13,"sect409k1","","",41,null],[13,"sect409r1","","",41,null],[13,"sect571k1","","",41,null],[13,"sect571r1","","",41,null],[13,"secp160k1","","",41,null],[13,"secp160r1","","",41,null],[13,"secp160r2","","",41,null],[13,"secp192k1","","",41,null],[13,"secp192r1","","",41,null],[13,"secp224k1","","",41,null],[13,"secp224r1","","",41,null],[13,"secp256k1","","",41,null],[13,"secp256r1","","",41,null],[13,"secp384r1","","",41,null],[13,"secp521r1","","",41,null],[13,"brainpoolp256r1","","",41,null],[13,"brainpoolp384r1","","",41,null],[13,"brainpoolp512r1","","",41,null],[13,"X25519","","",41,null],[13,"X448","","",41,null],[13,"arbitrary_explicit_prime_curves","","",41,null],[13,"arbitrary_explicit_char2_curves","","",41,null],[13,"Unknown","","",41,null],[4,"NamedGroup","","The `NamedGroup` TLS protocol enum. Values in this enum…",null,null],[13,"secp256r1","","",42,null],[13,"secp384r1","","",42,null],[13,"secp521r1","","",42,null],[13,"X25519","","",42,null],[13,"X448","","",42,null],[13,"FFDHE2048","","",42,null],[13,"FFDHE3072","","",42,null],[13,"FFDHE4096","","",42,null],[13,"FFDHE6144","","",42,null],[13,"FFDHE8192","","",42,null],[13,"Unknown","","",42,null],[4,"CipherSuite","","The `CipherSuite` TLS protocol enum. Values in this enum…",null,null],[13,"TLS_NULL_WITH_NULL_NULL","","",10,null],[13,"TLS_RSA_WITH_NULL_MD5","","",10,null],[13,"TLS_RSA_WITH_NULL_SHA","","",10,null],[13,"TLS_RSA_EXPORT_WITH_RC4_40_MD5","","",10,null],[13,"TLS_RSA_WITH_RC4_128_MD5","","",10,null],[13,"TLS_RSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",10,null],[13,"TLS_RSA_WITH_IDEA_CBC_SHA","","",10,null],[13,"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5","","",10,null],[13,"TLS_DH_anon_WITH_RC4_128_MD5","","",10,null],[13,"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"SSL_FORTEZZA_KEA_WITH_NULL_SHA","","",10,null],[13,"SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA","","",10,null],[13,"TLS_KRB5_WITH_DES_CBC_SHA_or_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_KRB5_WITH_RC4_128_SHA","","",10,null],[13,"TLS_KRB5_WITH_IDEA_CBC_SHA","","",10,null],[13,"TLS_KRB5_WITH_DES_CBC_MD5","","",10,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_MD5","","",10,null],[13,"TLS_KRB5_WITH_RC4_128_MD5","","",10,null],[13,"TLS_KRB5_WITH_IDEA_CBC_MD5","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_SHA","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5","","",10,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_MD5","","",10,null],[13,"TLS_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_NULL_SHA256","","",10,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECNRA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_NULL_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_NULL_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_NULL_WITH_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_WITH_DES_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA_draft","","",10,null],[13,"TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA_draft","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_MD5","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA","","",10,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_SHA","","",10,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_RC4_128_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_RMD","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_RMD","","",10,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_RMD","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_RMD","","",10,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_RMD","","",10,null],[13,"TLS_RSA_WITH_AES_128_CBC_RMD","","",10,null],[13,"TLS_RSA_WITH_AES_256_CBC_RMD","","",10,null],[13,"TLS_GOSTR341094_WITH_28147_CNT_IMIT","","",10,null],[13,"TLS_GOSTR341001_WITH_28147_CNT_IMIT","","",10,null],[13,"TLS_GOSTR341094_WITH_NULL_GOSTR3411","","",10,null],[13,"TLS_GOSTR341001_WITH_NULL_GOSTR3411","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA","","",10,null],[13,"TLS_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DH_DSS_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DH_RSA_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DHE_DSS_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DHE_RSA_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_DH_anon_WITH_SEED_CBC_SHA","","",10,null],[13,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256","","",10,null],[13,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",10,null],[13,"TLS13_AES_128_GCM_SHA256","","",10,null],[13,"TLS13_AES_256_GCM_SHA384","","",10,null],[13,"TLS13_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS13_AES_128_CCM_SHA256","","",10,null],[13,"TLS13_AES_128_CCM_8_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_RC4_128_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA","","",10,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA384","","",10,null],[13,"TLS_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_PSK_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_PSK_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",10,null],[13,"TLS_RSA_WITH_AES_128_CCM","","",10,null],[13,"TLS_RSA_WITH_AES_256_CCM","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM","","",10,null],[13,"TLS_RSA_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_RSA_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_PSK_WITH_AES_128_CCM","","",10,null],[13,"TLS_PSK_WITH_AES_256_CCM","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_128_CCM","","",10,null],[13,"TLS_DHE_PSK_WITH_AES_256_CCM","","",10,null],[13,"TLS_PSK_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_PSK_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_PSK_DHE_WITH_AES_128_CCM_8","","",10,null],[13,"TLS_PSK_DHE_WITH_AES_256_CCM_8","","",10,null],[13,"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256","","",10,null],[13,"SSL_RSA_FIPS_WITH_DES_CBC_SHA","","",10,null],[13,"SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","","",10,null],[13,"Unknown","","",10,null],[4,"ECPointFormat","","The `ECPointFormat` TLS protocol enum. Values in this enum…",null,null],[13,"Uncompressed","","",43,null],[13,"ANSIX962CompressedPrime","","",43,null],[13,"ANSIX962CompressedChar2","","",43,null],[13,"Unknown","","",43,null],[4,"HeartbeatMode","","The `HeartbeatMode` TLS protocol enum. Values in this enum…",null,null],[13,"PeerAllowedToSend","","",44,null],[13,"PeerNotAllowedToSend","","",44,null],[13,"Unknown","","",44,null],[4,"ECCurveType","","The `ECCurveType` TLS protocol enum. Values in this enum…",null,null],[13,"ExplicitPrime","","",45,null],[13,"ExplicitChar2","","",45,null],[13,"NamedCurve","","",45,null],[13,"Unknown","","",45,null],[4,"SignatureScheme","","The `SignatureScheme` TLS protocol enum. Values in this…",null,null],[13,"RSA_PKCS1_SHA1","","",9,null],[13,"ECDSA_SHA1_Legacy","","",9,null],[13,"RSA_PKCS1_SHA256","","",9,null],[13,"ECDSA_NISTP256_SHA256","","",9,null],[13,"RSA_PKCS1_SHA384","","",9,null],[13,"ECDSA_NISTP384_SHA384","","",9,null],[13,"RSA_PKCS1_SHA512","","",9,null],[13,"ECDSA_NISTP521_SHA512","","",9,null],[13,"RSA_PSS_SHA256","","",9,null],[13,"RSA_PSS_SHA384","","",9,null],[13,"RSA_PSS_SHA512","","",9,null],[13,"ED25519","","",9,null],[13,"ED448","","",9,null],[13,"Unknown","","",9,null],[4,"PSKKeyExchangeMode","","The `PSKKeyExchangeMode` TLS protocol enum. Values in this…",null,null],[13,"PSK_KE","","",46,null],[13,"PSK_DHE_KE","","",46,null],[13,"Unknown","","",46,null],[4,"KeyUpdateRequest","","The `KeyUpdateRequest` TLS protocol enum. Values in this…",null,null],[13,"UpdateNotRequested","","",47,null],[13,"UpdateRequested","","",47,null],[13,"Unknown","","",47,null],[4,"CertificateStatusType","","The `CertificateStatusType` TLS protocol enum. Values in…",null,null],[13,"OCSP","","",48,null],[13,"Unknown","","",48,null],[0,"alert","rustls::internal::msgs","",null,null],[3,"AlertMessagePayload","rustls::internal::msgs::alert","",null,null],[12,"level","","",49,null],[12,"description","","",49,null],[0,"handshake","rustls::internal::msgs","",null,null],[3,"Random","rustls::internal::msgs::handshake","",null,null],[3,"SessionID","","",null,null],[3,"UnknownExtension","","",null,null],[12,"typ","","",50,null],[12,"payload","","",50,null],[3,"ServerName","","",null,null],[12,"typ","","",51,null],[12,"payload","","",51,null],[3,"KeyShareEntry","","",null,null],[12,"group","","",52,null],[12,"payload","","",52,null],[3,"PresharedKeyIdentity","","",null,null],[12,"identity","","",53,null],[12,"obfuscated_ticket_age","","",53,null],[3,"PresharedKeyOffer","","",null,null],[12,"identities","","",54,null],[12,"binders","","",54,null],[3,"OCSPCertificateStatusRequest","","",null,null],[12,"responder_ids","","",55,null],[12,"extensions","","",55,null],[3,"ClientHelloPayload","","",null,null],[12,"client_version","","",56,null],[12,"random","","",56,null],[12,"session_id","","",56,null],[12,"cipher_suites","","",56,null],[12,"compression_methods","","",56,null],[12,"extensions","","",56,null],[3,"HelloRetryRequest","","",null,null],[12,"legacy_version","","",57,null],[12,"session_id","","",57,null],[12,"cipher_suite","","",57,null],[12,"extensions","","",57,null],[3,"ServerHelloPayload","","",null,null],[12,"legacy_version","","",58,null],[12,"random","","",58,null],[12,"session_id","","",58,null],[12,"cipher_suite","","",58,null],[12,"compression_method","","",58,null],[12,"extensions","","",58,null],[3,"CertificateEntry","","",null,null],[12,"cert","","",59,null],[12,"exts","","",59,null],[3,"CertificatePayloadTLS13","","",null,null],[12,"context","","",60,null],[12,"entries","","",60,null],[3,"ECParameters","","",null,null],[12,"curve_type","","",61,null],[12,"named_group","","",61,null],[3,"DigitallySignedStruct","","",null,null],[12,"scheme","","",62,null],[12,"sig","","",62,null],[3,"ClientECDHParams","","",null,null],[12,"public","","",63,null],[3,"ServerECDHParams","","",null,null],[12,"curve_params","","",64,null],[12,"public","","",64,null],[3,"ECDHEServerKeyExchange","","",null,null],[12,"params","","",65,null],[12,"dss","","",65,null],[3,"CertificateRequestPayload","","",null,null],[12,"certtypes","","",66,null],[12,"sigschemes","","",66,null],[12,"canames","","",66,null],[3,"CertificateRequestPayloadTLS13","","",null,null],[12,"context","","",67,null],[12,"extensions","","",67,null],[3,"NewSessionTicketPayload","","",null,null],[12,"lifetime_hint","","",68,null],[12,"ticket","","",68,null],[3,"NewSessionTicketPayloadTLS13","","",null,null],[12,"lifetime","","",69,null],[12,"age_add","","",69,null],[12,"nonce","","",69,null],[12,"ticket","","",69,null],[12,"exts","","",69,null],[3,"CertificateStatus","","Only supports OCSP",null,null],[12,"ocsp_response","","",70,null],[3,"HandshakeMessagePayload","","",null,null],[12,"typ","","",71,null],[12,"payload","","",71,null],[4,"ServerNamePayload","","",null,null],[13,"HostName","","",72,null],[13,"Unknown","","",72,null],[4,"CertificateStatusRequest","","",null,null],[13,"OCSP","","",73,null],[13,"Unknown","","",73,null],[4,"ClientExtension","","",null,null],[13,"ECPointFormats","","",74,null],[13,"NamedGroups","","",74,null],[13,"SignatureAlgorithms","","",74,null],[13,"ServerName","","",74,null],[13,"SessionTicketRequest","","",74,null],[13,"SessionTicketOffer","","",74,null],[13,"Protocols","","",74,null],[13,"SupportedVersions","","",74,null],[13,"KeyShare","","",74,null],[13,"PresharedKeyModes","","",74,null],[13,"PresharedKey","","",74,null],[13,"Cookie","","",74,null],[13,"ExtendedMasterSecretRequest","","",74,null],[13,"CertificateStatusRequest","","",74,null],[13,"SignedCertificateTimestampRequest","","",74,null],[13,"TransportParameters","","",74,null],[13,"EarlyData","","",74,null],[13,"Unknown","","",74,null],[4,"ServerExtension","","",null,null],[13,"ECPointFormats","","",75,null],[13,"ServerNameAck","","",75,null],[13,"SessionTicketAck","","",75,null],[13,"RenegotiationInfo","","",75,null],[13,"Protocols","","",75,null],[13,"KeyShare","","",75,null],[13,"PresharedKey","","",75,null],[13,"ExtendedMasterSecretAck","","",75,null],[13,"CertificateStatusAck","","",75,null],[13,"SignedCertificateTimestamp","","",75,null],[13,"SupportedVersions","","",75,null],[13,"TransportParameters","","",75,null],[13,"EarlyData","","",75,null],[13,"Unknown","","",75,null],[4,"HelloRetryExtension","","",null,null],[13,"KeyShare","","",76,null],[13,"Cookie","","",76,null],[13,"SupportedVersions","","",76,null],[13,"Unknown","","",76,null],[4,"CertificateExtension","","",null,null],[13,"CertificateStatus","","",77,null],[13,"SignedCertificateTimestamp","","",77,null],[13,"Unknown","","",77,null],[4,"KeyExchangeAlgorithm","","",null,null],[13,"BulkOnly","","",78,null],[13,"DH","","",78,null],[13,"DHE","","",78,null],[13,"RSA","","",78,null],[13,"ECDH","","",78,null],[13,"ECDHE","","",78,null],[4,"ServerKeyExchangePayload","","",null,null],[13,"ECDHE","","",79,null],[13,"Unknown","","",79,null],[4,"CertReqExtension","","",null,null],[13,"SignatureAlgorithms","","",80,null],[13,"AuthorityNames","","",80,null],[13,"Unknown","","",80,null],[4,"NewSessionTicketExtension","","",null,null],[13,"EarlyData","","",81,null],[13,"Unknown","","",81,null],[4,"HandshakePayload","","",null,null],[13,"HelloRequest","","",82,null],[13,"ClientHello","","",82,null],[13,"ServerHello","","",82,null],[13,"HelloRetryRequest","","",82,null],[13,"Certificate","","",82,null],[13,"CertificateTLS13","","",82,null],[13,"ServerKeyExchange","","",82,null],[13,"CertificateRequest","","",82,null],[13,"CertificateRequestTLS13","","",82,null],[13,"CertificateVerify","","",82,null],[13,"ServerHelloDone","","",82,null],[13,"EarlyData","","",82,null],[13,"EndOfEarlyData","","",82,null],[13,"ClientKeyExchange","","",82,null],[13,"NewSessionTicket","","",82,null],[13,"NewSessionTicketTLS13","","",82,null],[13,"EncryptedExtensions","","",82,null],[13,"KeyUpdate","","",82,null],[13,"Finished","","",82,null],[13,"CertificateStatus","","",82,null],[13,"MessageHash","","",82,null],[13,"Unknown","","",82,null],[6,"VecU16OfPayloadU8","","",null,null],[6,"VecU16OfPayloadU16","","",null,null],[6,"ECPointFormatList","","",null,null],[6,"NamedGroups","","",null,null],[6,"SupportedSignatureSchemes","","",null,null],[6,"ServerNameRequest","","",null,null],[6,"ProtocolNameList","","",null,null],[6,"PresharedKeyIdentities","","",null,null],[6,"PresharedKeyBinder","","",null,null],[6,"PresharedKeyBinders","","",null,null],[6,"SCTList","","",null,null],[6,"PSKKeyExchangeModes","","",null,null],[6,"KeyShareEntries","","",null,null],[6,"ProtocolVersions","","",null,null],[6,"CertificatePayload","","",null,null],[6,"CertificateExtensions","","",null,null],[6,"EncryptedExtensions","","",null,null],[6,"ClientCertificateTypes","","",null,null],[6,"DistinguishedName","","",null,null],[6,"DistinguishedNames","","",null,null],[6,"CertReqExtensions","","",null,null],[6,"NewSessionTicketExtensions","","",null,null],[8,"SupportedPointFormats","","",null,null],[10,"supported","","",83,[[],["ecpointformatlist"]]],[8,"DecomposedSignatureScheme","","",null,null],[10,"sign","","",84,[[["self"]],["signaturealgorithm"]]],[10,"make","","",84,[[["signaturealgorithm"],["hashalgorithm"]],["signaturescheme"]]],[8,"ConvertServerNameList","","",null,null],[10,"get_hostname","","",85,[[["self"]],[["option",["dnsnameref"]],["dnsnameref"]]]],[8,"ConvertProtocolNameList","","",null,null],[10,"from_slices","","",86,[[],["self"]]],[10,"to_vecs","","",86,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[10,"as_single_slice","","",86,[[["self"]],["option"]]],[8,"HasServerExtensions","","",null,null],[10,"get_extensions","","",87,[[["self"]]]],[11,"has_duplicate_extension","","Returns true if there is more than one extension of a…",87,[[["self"]],["bool"]]],[11,"find_extension","","",87,[[["extensiontype"],["self"]],[["serverextension"],["option",["serverextension"]]]]],[11,"get_alpn_protocol","","",87,[[["self"]],["option"]]],[11,"get_quic_params_extension","","",87,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"early_data_extension_offered","","",87,[[["self"]],["bool"]]],[0,"ccs","rustls::internal::msgs","",null,null],[3,"ChangeCipherSpecPayload","rustls::internal::msgs::ccs","",null,null],[0,"message","rustls::internal::msgs","",null,null],[3,"Message","rustls::internal::msgs::message","A TLS frame, named TLSPlaintext in the standard. This type…",null,null],[12,"typ","","",88,null],[12,"version","","",88,null],[12,"payload","","",88,null],[3,"BorrowMessage","","A TLS frame, named TLSPlaintext in the standard.",null,null],[12,"typ","","",89,null],[12,"version","","",89,null],[12,"payload","","",89,null],[4,"MessagePayload","","",null,null],[13,"Alert","","",90,null],[13,"Handshake","","",90,null],[13,"ChangeCipherSpec","","",90,null],[13,"Opaque","","",90,null],[0,"persist","rustls::internal::msgs","",null,null],[3,"ClientSessionKey","rustls::internal::msgs::persist","Keys for session resumption and tickets. Matching value is…",null,null],[3,"ClientSessionValue","","",null,null],[12,"version","","",91,null],[12,"cipher_suite","","",91,null],[12,"session_id","","",91,null],[12,"ticket","","",91,null],[12,"master_secret","","",91,null],[12,"epoch","","",91,null],[12,"lifetime","","",91,null],[12,"age_add","","",91,null],[12,"extended_ms","","",91,null],[12,"max_early_data_size","","",91,null],[3,"ServerSessionValue","","",null,null],[12,"sni","","",92,null],[12,"version","","",92,null],[12,"cipher_suite","","",92,null],[12,"master_secret","","",92,null],[12,"extended_ms","","",92,null],[12,"client_cert_chain","","",92,null],[12,"alpn","","",92,null],[6,"ServerSessionKey","","",null,null],[0,"deframer","rustls::internal::msgs","",null,null],[3,"MessageDeframer","rustls::internal::msgs::deframer","This deframer works to reconstruct TLS messages from…",null,null],[12,"frames","","Completed frames for output.",93,null],[12,"desynced","","Set to true if the peer is not talking TLS, but some other…",93,null],[0,"fragmenter","rustls::internal::msgs","",null,null],[3,"MessageFragmenter","rustls::internal::msgs::fragmenter","",null,null],[17,"MAX_FRAGMENT_LEN","","",null,null],[17,"PACKET_OVERHEAD","","",null,null],[0,"hsjoiner","rustls::internal::msgs","",null,null],[3,"HandshakeJoiner","rustls::internal::msgs::hsjoiner","This works to reconstruct TLS handshake messages from…",null,null],[12,"frames","","Completed handshake frames for output.",94,null],[0,"sign","rustls","Message signing interfaces and implementations.",null,null],[3,"CertifiedKey","rustls::sign","A packaged-together certificate chain, matching…",null,null],[12,"cert","","The certificate chain.",95,null],[12,"key","","The certified key.",95,null],[12,"ocsp","","An optional OCSP response from the certificate issuer,…",95,null],[12,"sct_list","","An optional collection of SCTs from CT logs, proving the…",95,null],[3,"RSASigningKey","","A `SigningKey` for RSA-PKCS1 or RSA-PSS",null,null],[5,"any_supported_type","","Parse `der` as any supported key encoding/type, returning…",null,[[["privatekey"]],[["result",["box"]],["box",["signingkey"]]]]],[5,"any_ecdsa_type","","Parse `der` as any ECDSA key type, returning the first…",null,[[["privatekey"]],[["result",["box"]],["box",["signingkey"]]]]],[5,"supported_sign_tls13","","The set of schemes we support for signatures and that are…",null,[[]]],[8,"SigningKey","","An abstract signing key.",null,null],[10,"choose_scheme","","Choose a `SignatureScheme` from those offered.",96,[[["self"]],[["box",["signer"]],["option",["box"]]]]],[10,"algorithm","","What kind of key we have.",96,[[["self"]],["signaturealgorithm"]]],[8,"Signer","","A thing that can sign a message.",null,null],[10,"sign","","Signs `message` using the selected scheme.",97,[[["self"]],[["result",["vec","tlserror"]],["vec",["u8"]],["tlserror"]]]],[10,"get_scheme","","Reveals which scheme will be used when you call `sign()`.",97,[[["self"]],["signaturescheme"]]],[11,"new","","Make a new CertifiedKey, with the given chain and key.",95,[[["vec",["certificate"]],["box",["signingkey"]],["arc",["box"]],["certificate"]],["certifiedkey"]]],[11,"end_entity_cert","","The end-entity certificate.",95,[[["self"]],[["result",["certificate"]],["certificate"]]]],[11,"take_cert","","Steal ownership of the certificate chain.",95,[[["self"]],[["vec",["certificate"]],["certificate"]]]],[11,"has_ocsp","","Return true if there's an OCSP response.",95,[[["self"]],["bool"]]],[11,"take_ocsp","","Steal ownership of the OCSP response.",95,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"has_sct_list","","Return true if there's an SCT list.",95,[[["self"]],["bool"]]],[11,"take_sct_list","","Steal ownership of the SCT list.",95,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"cross_check_end_entity_cert","","Check the certificate chain for validity: - it should be…",95,[[["option",["dnsnameref"]],["self"],["dnsnameref"]],[["tlserror"],["result",["tlserror"]]]]],[11,"new","","Make a new `RSASigningKey` from a DER encoding, in either…",98,[[["privatekey"]],[["rsasigningkey"],["result",["rsasigningkey"]]]]],[6,"DistinguishedNames","rustls","",null,null],[7,"ALL_CIPHERSUITES","","A list of all the cipher suites supported by rustls.",null,null],[8,"Session","","Generalises `ClientSession` and `ServerSession`",null,null],[10,"read_tls","","Read TLS content from `rd`. This method does internal…",99,[[["self"],["read"]],[["result",["usize","error"]],["usize"],["error"]]]],[10,"write_tls","","Writes TLS messages to `wr`.",99,[[["self"],["write"]],[["result",["usize","error"]],["usize"],["error"]]]],[10,"writev_tls","","Like `write_tls`, but writes potentially many records in…",99,[[["writev"],["self"]],[["result",["usize","error"]],["usize"],["error"]]]],[10,"process_new_packets","","Processes any new packets read by a previous call to…",99,[[["self"]],[["tlserror"],["result",["tlserror"]]]]],[10,"wants_read","","Returns true if the caller should call `read_tls` as soon…",99,[[["self"]],["bool"]]],[10,"wants_write","","Returns true if the caller should call `write_tls` as soon…",99,[[["self"]],["bool"]]],[10,"is_handshaking","","Returns true if the session is currently perform the TLS…",99,[[["self"]],["bool"]]],[10,"set_buffer_limit","","Sets a limit on the internal buffers used to buffer unsent…",99,[[["self"],["usize"]]]],[10,"send_close_notify","","Queues a close_notify fatal alert to be sent in the next…",99,[[["self"]]]],[10,"get_peer_certificates","","Retrieves the certificate chain used by the peer to…",99,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[10,"get_alpn_protocol","","Retrieves the protocol agreed with the peer via ALPN.",99,[[["self"]],["option"]]],[10,"get_protocol_version","","Retrieves the protocol version agreed with the peer.",99,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[10,"export_keying_material","","Derives key material from the agreed session secrets.",99,[[["option"],["self"]],[["tlserror"],["result",["tlserror"]]]]],[10,"get_negotiated_ciphersuite","","Retrieves the ciphersuite agreed with the peer.",99,[[["self"]],[["option",["supportedciphersuite"]],["supportedciphersuite"]]]],[11,"complete_io","","This function uses `io` to complete any outstanding IO for…",99,[[["self"],["t"]],[["result",["error"]],["error"]]]],[8,"StoresClientSessions","","A trait for the ability to store client session data. The…",null,null],[10,"put","","Stores a new `value` for `key`. Returns `true` if the…",100,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[10,"get","","Returns the latest value for `key`. Returns `None` if…",100,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"ResolvesClientCert","","A trait for the ability to choose a certificate chain and…",null,null],[10,"resolve","","With the server-supplied acceptable issuers in…",101,[[["self"]],[["certifiedkey"],["option",["certifiedkey"]]]]],[10,"has_certs","","Return true if any certificates at all are available.",101,[[["self"]],["bool"]]],[8,"StoresServerSessions","","A trait for the ability to store server session data.",null,null],[10,"put","","Store session secrets encoded in `value` against `key`,…",102,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[10,"get","","Find a value with the given `key`. Return it, or None if…",102,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,"take","","Find a value with the given `key`. Return it and delete…",102,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"ResolvesServerCert","","How to choose a certificate chain and signing key for use…",null,null],[10,"resolve","","Choose a certificate chain and matching key given any…",103,[[["option",["dnsnameref"]],["dnsnameref"],["self"]],[["certifiedkey"],["option",["certifiedkey"]]]]],[8,"ProducesTickets","","A trait for the ability to encrypt and decrypt tickets.",null,null],[10,"enabled","","Returns true if this implementation will encrypt/decrypt…",104,[[["self"]],["bool"]]],[10,"get_lifetime","","Returns the lifetime in seconds of tickets produced now.…",104,[[["self"]],["u32"]]],[10,"encrypt","","Encrypt and authenticate `plain`, returning the resulting…",104,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,"decrypt","","Decrypt `cipher`, validating its authenticity protection…",104,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"KeyLog","","This trait represents the ability to do something useful…",null,null],[10,"log","","Log the given `secret`. `client_random` is provided for…",105,[[["str"],["self"]]]],[11,"will_log","","Indicates whether the secret with label `label` will be…",105,[[["str"],["self"]],["bool"]]],[8,"WriteV","","This trait specifies rustls's precise requirements doing…",null,null],[10,"writev","","Writes as much data from `vbytes` as possible, returning…",106,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::codec","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::base","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::enums","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::alert","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::handshake","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::ccs","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::message","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::persist","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::deframer","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::fragmenter","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::hsjoiner","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","rustls::sign","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"encode","rustls::internal::msgs::codec","",24,[[["vec"],["self"]]]],[11,"read","","",24,[[["reader"]],[["option",["u24"]],["u24"]]]],[11,"encode","rustls::internal::msgs::base","",26,[[["vec"],["self"]]]],[11,"read","","",26,[[["reader"]],[["payload"],["option",["payload"]]]]],[11,"encode","rustls","",6,[[["vec"],["self"]]]],[11,"read","","",6,[[["reader"]],[["option",["certificate"]],["certificate"]]]],[11,"encode","rustls::internal::msgs::base","",27,[[["vec"],["self"]]]],[11,"read","","",27,[[["reader"]],[["option",["payloadu24"]],["payloadu24"]]]],[11,"encode","","",28,[[["vec"],["self"]]]],[11,"read","","",28,[[["reader"]],[["option",["payloadu16"]],["payloadu16"]]]],[11,"encode","","",29,[[["vec"],["self"]]]],[11,"read","","",29,[[["reader"]],[["option",["payloadu8"]],["payloadu8"]]]],[11,"encode","rustls","",8,[[["vec"],["self"]]]],[11,"read","","",8,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::enums","",30,[[["vec"],["self"]]]],[11,"read","","",30,[[["reader"]],["option"]]],[11,"encode","","",31,[[["vec"],["self"]]]],[11,"read","","",31,[[["reader"]],["option"]]],[11,"encode","","",32,[[["vec"],["self"]]]],[11,"read","","",32,[[["reader"]],["option"]]],[11,"encode","","",33,[[["vec"],["self"]]]],[11,"read","","",33,[[["reader"]],["option"]]],[11,"encode","","",34,[[["vec"],["self"]]]],[11,"read","","",34,[[["reader"]],["option"]]],[11,"encode","","",35,[[["vec"],["self"]]]],[11,"read","","",35,[[["reader"]],["option"]]],[11,"encode","","",36,[[["vec"],["self"]]]],[11,"read","","",36,[[["reader"]],["option"]]],[11,"encode","","",37,[[["vec"],["self"]]]],[11,"read","","",37,[[["reader"]],["option"]]],[11,"encode","","",38,[[["vec"],["self"]]]],[11,"read","","",38,[[["reader"]],["option"]]],[11,"encode","","",39,[[["vec"],["self"]]]],[11,"read","","",39,[[["reader"]],["option"]]],[11,"encode","","",40,[[["vec"],["self"]]]],[11,"read","","",40,[[["reader"]],["option"]]],[11,"encode","","",41,[[["vec"],["self"]]]],[11,"read","","",41,[[["reader"]],["option"]]],[11,"encode","","",42,[[["vec"],["self"]]]],[11,"read","","",42,[[["reader"]],["option"]]],[11,"encode","rustls","",10,[[["vec"],["self"]]]],[11,"read","","",10,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::enums","",43,[[["vec"],["self"]]]],[11,"read","","",43,[[["reader"]],["option"]]],[11,"encode","","",44,[[["vec"],["self"]]]],[11,"read","","",44,[[["reader"]],["option"]]],[11,"encode","","",45,[[["vec"],["self"]]]],[11,"read","","",45,[[["reader"]],["option"]]],[11,"encode","rustls","",9,[[["vec"],["self"]]]],[11,"read","","",9,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::enums","",46,[[["vec"],["self"]]]],[11,"read","","",46,[[["reader"]],["option"]]],[11,"encode","","",47,[[["vec"],["self"]]]],[11,"read","","",47,[[["reader"]],["option"]]],[11,"encode","","",48,[[["vec"],["self"]]]],[11,"read","","",48,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::alert","",49,[[["vec"],["self"]]]],[11,"read","","",49,[[["reader"]],[["alertmessagepayload"],["option",["alertmessagepayload"]]]]],[11,"encode","rustls","",116,[[["vec"],["self"]]]],[11,"read","","",116,[[["reader"]],[["vecu16ofpayloadu8"],["option",["vecu16ofpayloadu8"]]]]],[11,"encode","","",117,[[["vec"],["self"]]]],[11,"read","","",117,[[["reader"]],[["vecu16ofpayloadu16"],["option",["vecu16ofpayloadu16"]]]]],[11,"encode","rustls::internal::msgs::handshake","",111,[[["vec"],["self"]]]],[11,"read","","",111,[[["reader"]],[["random"],["option",["random"]]]]],[11,"encode","","",112,[[["vec"],["self"]]]],[11,"read","","",112,[[["reader"]],[["option",["sessionid"]],["sessionid"]]]],[11,"encode","rustls","",118,[[["vec"],["self"]]]],[11,"read","","",118,[[["reader"]],[["option",["ecpointformatlist"]],["ecpointformatlist"]]]],[11,"encode","","",119,[[["vec"],["self"]]]],[11,"read","","",119,[[["reader"]],[["option",["namedgroups"]],["namedgroups"]]]],[11,"encode","","",120,[[["vec"],["self"]]]],[11,"read","","",120,[[["reader"]],[["supportedsignatureschemes"],["option",["supportedsignatureschemes"]]]]],[11,"encode","rustls::internal::msgs::handshake","",51,[[["vec"],["self"]]]],[11,"read","","",51,[[["reader"]],[["servername"],["option",["servername"]]]]],[11,"encode","rustls","",121,[[["vec"],["self"]]]],[11,"read","","",121,[[["reader"]],[["option",["servernamerequest"]],["servernamerequest"]]]],[11,"encode","rustls::internal::msgs::handshake","",52,[[["vec"],["self"]]]],[11,"read","","",52,[[["reader"]],[["keyshareentry"],["option",["keyshareentry"]]]]],[11,"encode","","",53,[[["vec"],["self"]]]],[11,"read","","",53,[[["reader"]],[["option",["presharedkeyidentity"]],["presharedkeyidentity"]]]],[11,"encode","rustls","",122,[[["vec"],["self"]]]],[11,"read","","",122,[[["reader"]],[["option",["presharedkeyidentities"]],["presharedkeyidentities"]]]],[11,"encode","rustls::internal::msgs::handshake","",54,[[["vec"],["self"]]]],[11,"read","","",54,[[["reader"]],[["option",["presharedkeyoffer"]],["presharedkeyoffer"]]]],[11,"encode","","",55,[[["vec"],["self"]]]],[11,"read","","",55,[[["reader"]],[["option",["ocspcertificatestatusrequest"]],["ocspcertificatestatusrequest"]]]],[11,"encode","","",73,[[["vec"],["self"]]]],[11,"read","","",73,[[["reader"]],[["option",["certificatestatusrequest"]],["certificatestatusrequest"]]]],[11,"encode","rustls","",123,[[["vec"],["self"]]]],[11,"read","","",123,[[["reader"]],[["pskkeyexchangemodes"],["option",["pskkeyexchangemodes"]]]]],[11,"encode","","",124,[[["vec"],["self"]]]],[11,"read","","",124,[[["reader"]],[["keyshareentries"],["option",["keyshareentries"]]]]],[11,"encode","","",125,[[["vec"],["self"]]]],[11,"read","","",125,[[["reader"]],[["option",["protocolversions"]],["protocolversions"]]]],[11,"encode","rustls::internal::msgs::handshake","",74,[[["vec"],["self"]]]],[11,"read","","",74,[[["reader"]],[["option",["clientextension"]],["clientextension"]]]],[11,"encode","","",75,[[["vec"],["self"]]]],[11,"read","","",75,[[["reader"]],[["option",["serverextension"]],["serverextension"]]]],[11,"encode","","",56,[[["vec"],["self"]]]],[11,"read","","",56,[[["reader"]],[["option",["clienthellopayload"]],["clienthellopayload"]]]],[11,"encode","","",76,[[["vec"],["self"]]]],[11,"read","","",76,[[["reader"]],[["option",["helloretryextension"]],["helloretryextension"]]]],[11,"encode","","",57,[[["vec"],["self"]]]],[11,"read","","",57,[[["reader"]],[["option",["helloretryrequest"]],["helloretryrequest"]]]],[11,"encode","","",58,[[["vec"],["self"]]]],[11,"read","","",58,[[["reader"]],[["option",["serverhellopayload"]],["serverhellopayload"]]]],[11,"encode","rustls","",126,[[["vec"],["self"]]]],[11,"read","","",126,[[["reader"]],[["certificatepayload"],["option",["certificatepayload"]]]]],[11,"encode","rustls::internal::msgs::handshake","",77,[[["vec"],["self"]]]],[11,"read","","",77,[[["reader"]],[["option",["certificateextension"]],["certificateextension"]]]],[11,"encode","rustls","",127,[[["vec"],["self"]]]],[11,"read","","",127,[[["reader"]],[["certificateextensions"],["option",["certificateextensions"]]]]],[11,"encode","rustls::internal::msgs::handshake","",59,[[["vec"],["self"]]]],[11,"read","","",59,[[["reader"]],[["option",["certificateentry"]],["certificateentry"]]]],[11,"encode","","",60,[[["vec"],["self"]]]],[11,"read","","",60,[[["reader"]],[["option",["certificatepayloadtls13"]],["certificatepayloadtls13"]]]],[11,"encode","","",61,[[["vec"],["self"]]]],[11,"read","","",61,[[["reader"]],[["ecparameters"],["option",["ecparameters"]]]]],[11,"encode","","",62,[[["vec"],["self"]]]],[11,"read","","",62,[[["reader"]],[["option",["digitallysignedstruct"]],["digitallysignedstruct"]]]],[11,"encode","","",63,[[["vec"],["self"]]]],[11,"read","","",63,[[["reader"]],[["option",["clientecdhparams"]],["clientecdhparams"]]]],[11,"encode","","",64,[[["vec"],["self"]]]],[11,"read","","",64,[[["reader"]],[["serverecdhparams"],["option",["serverecdhparams"]]]]],[11,"encode","","",65,[[["vec"],["self"]]]],[11,"read","","",65,[[["reader"]],[["ecdheserverkeyexchange"],["option",["ecdheserverkeyexchange"]]]]],[11,"encode","","",79,[[["vec"],["self"]]]],[11,"read","","",79,[[["reader"]],[["serverkeyexchangepayload"],["option",["serverkeyexchangepayload"]]]]],[11,"encode","rustls","",128,[[["vec"],["self"]]]],[11,"read","","",128,[[["reader"]],[["encryptedextensions"],["option",["encryptedextensions"]]]]],[11,"encode","","",129,[[["vec"],["self"]]]],[11,"read","","",129,[[["reader"]],[["clientcertificatetypes"],["option",["clientcertificatetypes"]]]]],[11,"encode","rustls::internal::msgs::handshake","",66,[[["vec"],["self"]]]],[11,"read","","",66,[[["reader"]],[["certificaterequestpayload"],["option",["certificaterequestpayload"]]]]],[11,"encode","","",80,[[["vec"],["self"]]]],[11,"read","","",80,[[["reader"]],[["option",["certreqextension"]],["certreqextension"]]]],[11,"encode","rustls","",130,[[["vec"],["self"]]]],[11,"read","","",130,[[["reader"]],[["option",["certreqextensions"]],["certreqextensions"]]]],[11,"encode","rustls::internal::msgs::handshake","",67,[[["vec"],["self"]]]],[11,"read","","",67,[[["reader"]],[["option",["certificaterequestpayloadtls13"]],["certificaterequestpayloadtls13"]]]],[11,"encode","","",68,[[["vec"],["self"]]]],[11,"read","","",68,[[["reader"]],[["newsessionticketpayload"],["option",["newsessionticketpayload"]]]]],[11,"encode","","",81,[[["vec"],["self"]]]],[11,"read","","",81,[[["reader"]],[["newsessionticketextension"],["option",["newsessionticketextension"]]]]],[11,"encode","rustls","",131,[[["vec"],["self"]]]],[11,"read","","",131,[[["reader"]],[["newsessionticketextensions"],["option",["newsessionticketextensions"]]]]],[11,"encode","rustls::internal::msgs::handshake","",69,[[["vec"],["self"]]]],[11,"read","","",69,[[["reader"]],[["option",["newsessionticketpayloadtls13"]],["newsessionticketpayloadtls13"]]]],[11,"encode","","",70,[[["vec"],["self"]]]],[11,"read","","",70,[[["reader"]],[["option",["certificatestatus"]],["certificatestatus"]]]],[11,"encode","","",71,[[["vec"],["self"]]]],[11,"read","","",71,[[["reader"]],[["option",["handshakemessagepayload"]],["handshakemessagepayload"]]]],[11,"encode","rustls::internal::msgs::ccs","",113,[[["vec"],["self"]]]],[11,"read","","",113,[[["reader"]],[["changecipherspecpayload"],["option",["changecipherspecpayload"]]]]],[11,"read","rustls::internal::msgs::message","",88,[[["reader"]],[["option",["message"]],["message"]]]],[11,"encode","","",88,[[["vec"],["self"]]]],[11,"encode","rustls::internal::msgs::persist","",114,[[["vec"],["self"]]]],[11,"read","","",114,[[["reader"]],[["option",["clientsessionkey"]],["clientsessionkey"]]]],[11,"encode","","",91,[[["vec"],["self"]]]],[11,"read","","",91,[[["reader"]],[["option",["clientsessionvalue"]],["clientsessionvalue"]]]],[11,"encode","","",92,[[["vec"],["self"]]]],[11,"read","","",92,[[["reader"]],[["option",["serversessionvalue"]],["serversessionvalue"]]]],[11,"supported","rustls","",118,[[],["ecpointformatlist"]]],[11,"sign","","",9,[[["self"]],["signaturealgorithm"]]],[11,"make","","",9,[[["signaturealgorithm"],["hashalgorithm"]],["signaturescheme"]]],[11,"get_hostname","","",121,[[["self"]],[["option",["dnsnameref"]],["dnsnameref"]]]],[11,"from_slices","","",132,[[],["protocolnamelist"]]],[11,"to_vecs","","",132,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,"as_single_slice","","",132,[[["self"]],["option"]]],[11,"get_extensions","rustls::internal::msgs::handshake","",58,[[["self"]]]],[11,"get_extensions","rustls","",128,[[["self"]]]],[11,"read_tls","","",19,[[["self"],["read"]],[["result",["usize"]],["usize"]]]],[11,"write_tls","","Writes TLS messages to `wr`.",19,[[["self"],["write"]],[["result",["usize"]],["usize"]]]],[11,"writev_tls","","",19,[[["writev"],["self"]],[["result",["usize"]],["usize"]]]],[11,"process_new_packets","","",19,[[["self"]],[["tlserror"],["result",["tlserror"]]]]],[11,"wants_read","","",19,[[["self"]],["bool"]]],[11,"wants_write","","",19,[[["self"]],["bool"]]],[11,"is_handshaking","","",19,[[["self"]],["bool"]]],[11,"set_buffer_limit","","",19,[[["self"],["usize"]]]],[11,"send_close_notify","","",19,[[["self"]]]],[11,"get_peer_certificates","","",19,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[11,"get_alpn_protocol","","",19,[[["self"]],["option"]]],[11,"get_protocol_version","","",19,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"export_keying_material","","",19,[[["option"],["self"]],[["tlserror"],["result",["tlserror"]]]]],[11,"get_negotiated_ciphersuite","","",19,[[["self"]],[["option",["supportedciphersuite"]],["supportedciphersuite"]]]],[11,"read_tls","","",22,[[["self"],["read"]],[["result",["usize"]],["usize"]]]],[11,"write_tls","","Writes TLS messages to `wr`.",22,[[["self"],["write"]],[["result",["usize"]],["usize"]]]],[11,"writev_tls","","",22,[[["writev"],["self"]],[["result",["usize"]],["usize"]]]],[11,"process_new_packets","","",22,[[["self"]],[["tlserror"],["result",["tlserror"]]]]],[11,"wants_read","","",22,[[["self"]],["bool"]]],[11,"wants_write","","",22,[[["self"]],["bool"]]],[11,"is_handshaking","","",22,[[["self"]],["bool"]]],[11,"set_buffer_limit","","",22,[[["self"],["usize"]]]],[11,"send_close_notify","","",22,[[["self"]]]],[11,"get_peer_certificates","","",22,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[11,"get_alpn_protocol","","",22,[[["self"]],["option"]]],[11,"get_protocol_version","","",22,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"export_keying_material","","",22,[[["option"],["self"]],[["tlserror"],["result",["tlserror"]]]]],[11,"get_negotiated_ciphersuite","","",22,[[["self"]],[["option",["supportedciphersuite"]],["supportedciphersuite"]]]],[11,"put","","",108,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",108,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"take","","",108,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"put","","",17,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",17,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"take","","",17,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"resolve","","",18,[[["option",["dnsnameref"]],["dnsnameref"],["self"]],[["certifiedkey"],["option",["certifiedkey"]]]]],[11,"put","","",107,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",107,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"put","","",20,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",20,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"log","","",109,[[["str"],["self"]]]],[11,"will_log","","",109,[[["str"],["self"]],["bool"]]],[11,"log","","",23,[[["str"],["self"]]]],[11,"choose_scheme","rustls::sign","",98,[[["self"]],[["box",["signer"]],["option",["box"]]]]],[11,"algorithm","","",98,[[["self"]],["signaturealgorithm"]]],[11,"as_ref","rustls","",6,[[["self"]]]],[11,"from","rustls::internal::msgs::base","",29,[[["okm",["payloadu8len"]],["payloadu8len"]],["self"]]],[11,"clone","","",26,[[["self"]],["payload"]]],[11,"clone","","",27,[[["self"]],["payloadu24"]]],[11,"clone","","",28,[[["self"]],["payloadu16"]]],[11,"clone","","",29,[[["self"]],["payloadu8"]]],[11,"clone","rustls","",8,[[["self"]],["protocolversion"]]],[11,"clone","rustls::internal::msgs::enums","",30,[[["self"]],["hashalgorithm"]]],[11,"clone","","",31,[[["self"]],["signaturealgorithm"]]],[11,"clone","","",32,[[["self"]],["clientcertificatetype"]]],[11,"clone","","",33,[[["self"]],["compression"]]],[11,"clone","","",34,[[["self"]],["contenttype"]]],[11,"clone","","",35,[[["self"]],["handshaketype"]]],[11,"clone","","",36,[[["self"]],["alertlevel"]]],[11,"clone","","",37,[[["self"]],["alertdescription"]]],[11,"clone","","",38,[[["self"]],["heartbeatmessagetype"]]],[11,"clone","","",39,[[["self"]],["extensiontype"]]],[11,"clone","","",40,[[["self"]],["servernametype"]]],[11,"clone","","",41,[[["self"]],["namedcurve"]]],[11,"clone","","",42,[[["self"]],["namedgroup"]]],[11,"clone","rustls","",10,[[["self"]],["ciphersuite"]]],[11,"clone","rustls::internal::msgs::enums","",43,[[["self"]],["ecpointformat"]]],[11,"clone","","",44,[[["self"]],["heartbeatmode"]]],[11,"clone","","",45,[[["self"]],["eccurvetype"]]],[11,"clone","rustls","",9,[[["self"]],["signaturescheme"]]],[11,"clone","rustls::internal::msgs::enums","",46,[[["self"]],["pskkeyexchangemode"]]],[11,"clone","","",47,[[["self"]],["keyupdaterequest"]]],[11,"clone","","",48,[[["self"]],["certificatestatustype"]]],[11,"clone","rustls::internal::msgs::handshake","",111,[[["self"]],["random"]]],[11,"clone","","",112,[[["self"]],["sessionid"]]],[11,"clone","","",50,[[["self"]],["unknownextension"]]],[11,"clone","","",72,[[["self"]],["servernamepayload"]]],[11,"clone","","",51,[[["self"]],["servername"]]],[11,"clone","","",52,[[["self"]],["keyshareentry"]]],[11,"clone","","",53,[[["self"]],["presharedkeyidentity"]]],[11,"clone","","",54,[[["self"]],["presharedkeyoffer"]]],[11,"clone","","",55,[[["self"]],["ocspcertificatestatusrequest"]]],[11,"clone","","",73,[[["self"]],["certificatestatusrequest"]]],[11,"clone","","",74,[[["self"]],["clientextension"]]],[11,"clone","","",75,[[["self"]],["serverextension"]]],[11,"clone","","",62,[[["self"]],["digitallysignedstruct"]]],[11,"clone","rustls","",11,[[["self"]],["tlserror"]]],[11,"clone","","",2,[[["self"]],["rootcertstore"]]],[11,"clone","","",4,[[["self"]],["serverconfig"]]],[11,"clone","","",3,[[["self"]],["clientconfig"]]],[11,"clone","","",7,[[["self"]],["privatekey"]]],[11,"clone","","",6,[[["self"]],["certificate"]]],[11,"clone","rustls::sign","",95,[[["self"]],["certifiedkey"]]],[11,"default","rustls::internal::msgs::deframer","",93,[[],["self"]]],[11,"default","rustls::internal::msgs::hsjoiner","",94,[[],["self"]]],[11,"default","rustls","",3,[[],["self"]]],[11,"eq","rustls::internal::msgs::base","",26,[[["self"],["payload"]],["bool"]]],[11,"ne","","",26,[[["self"],["payload"]],["bool"]]],[11,"eq","","",27,[[["payloadu24"],["self"]],["bool"]]],[11,"ne","","",27,[[["payloadu24"],["self"]],["bool"]]],[11,"eq","","",28,[[["payloadu16"],["self"]],["bool"]]],[11,"ne","","",28,[[["payloadu16"],["self"]],["bool"]]],[11,"eq","","",29,[[["payloadu8"],["self"]],["bool"]]],[11,"ne","","",29,[[["payloadu8"],["self"]],["bool"]]],[11,"eq","rustls","",8,[[["self"],["protocolversion"]],["bool"]]],[11,"ne","","",8,[[["self"],["protocolversion"]],["bool"]]],[11,"eq","rustls::internal::msgs::enums","",30,[[["hashalgorithm"],["self"]],["bool"]]],[11,"ne","","",30,[[["hashalgorithm"],["self"]],["bool"]]],[11,"eq","","",31,[[["signaturealgorithm"],["self"]],["bool"]]],[11,"ne","","",31,[[["signaturealgorithm"],["self"]],["bool"]]],[11,"eq","","",32,[[["clientcertificatetype"],["self"]],["bool"]]],[11,"ne","","",32,[[["clientcertificatetype"],["self"]],["bool"]]],[11,"eq","","",33,[[["compression"],["self"]],["bool"]]],[11,"ne","","",33,[[["compression"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",34,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",35,[[["handshaketype"],["self"]],["bool"]]],[11,"ne","","",35,[[["handshaketype"],["self"]],["bool"]]],[11,"eq","","",36,[[["alertlevel"],["self"]],["bool"]]],[11,"ne","","",36,[[["alertlevel"],["self"]],["bool"]]],[11,"eq","","",37,[[["alertdescription"],["self"]],["bool"]]],[11,"ne","","",37,[[["alertdescription"],["self"]],["bool"]]],[11,"eq","","",38,[[["heartbeatmessagetype"],["self"]],["bool"]]],[11,"ne","","",38,[[["heartbeatmessagetype"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["extensiontype"]],["bool"]]],[11,"ne","","",39,[[["self"],["extensiontype"]],["bool"]]],[11,"eq","","",40,[[["self"],["servernametype"]],["bool"]]],[11,"ne","","",40,[[["self"],["servernametype"]],["bool"]]],[11,"eq","","",41,[[["namedcurve"],["self"]],["bool"]]],[11,"ne","","",41,[[["namedcurve"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["namedgroup"]],["bool"]]],[11,"ne","","",42,[[["self"],["namedgroup"]],["bool"]]],[11,"eq","rustls","",10,[[["self"],["ciphersuite"]],["bool"]]],[11,"ne","","",10,[[["self"],["ciphersuite"]],["bool"]]],[11,"eq","rustls::internal::msgs::enums","",43,[[["ecpointformat"],["self"]],["bool"]]],[11,"ne","","",43,[[["ecpointformat"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["heartbeatmode"]],["bool"]]],[11,"ne","","",44,[[["self"],["heartbeatmode"]],["bool"]]],[11,"eq","","",45,[[["self"],["eccurvetype"]],["bool"]]],[11,"ne","","",45,[[["self"],["eccurvetype"]],["bool"]]],[11,"eq","rustls","",9,[[["self"],["signaturescheme"]],["bool"]]],[11,"ne","","",9,[[["self"],["signaturescheme"]],["bool"]]],[11,"eq","rustls::internal::msgs::enums","",46,[[["self"],["pskkeyexchangemode"]],["bool"]]],[11,"ne","","",46,[[["self"],["pskkeyexchangemode"]],["bool"]]],[11,"eq","","",47,[[["keyupdaterequest"],["self"]],["bool"]]],[11,"ne","","",47,[[["keyupdaterequest"],["self"]],["bool"]]],[11,"eq","","",48,[[["certificatestatustype"],["self"]],["bool"]]],[11,"ne","","",48,[[["certificatestatustype"],["self"]],["bool"]]],[11,"eq","rustls::internal::msgs::handshake","",111,[[["random"],["self"]],["bool"]]],[11,"ne","","",111,[[["random"],["self"]],["bool"]]],[11,"eq","","",112,[[["self"]],["bool"]]],[11,"eq","rustls","",11,[[["tlserror"],["self"]],["bool"]]],[11,"ne","","",11,[[["tlserror"],["self"]],["bool"]]],[11,"eq","","",12,[[["bulkalgorithm"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["supportedciphersuite"]],["bool"]]],[11,"eq","","",7,[[["self"],["privatekey"]],["bool"]]],[11,"ne","","",7,[[["self"],["privatekey"]],["bool"]]],[11,"eq","","",6,[[["self"],["certificate"]],["bool"]]],[11,"ne","","",6,[[["self"],["certificate"]],["bool"]]],[11,"fmt","rustls::internal::msgs::codec","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::base","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::enums","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::enums","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::enums","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::alert","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::handshake","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::ccs","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::message","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::persist","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"read","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","Obtain plaintext data received from the peer over this TLS…",19,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","Obtain plaintext data received from the peer over this TLS…",22,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"write","","Send the plaintext `buf` to the peer, encrypting and…",19,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",19,[[["self"]],["result"]]],[11,"write","","",21,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",21,[[["self"]],["result"]]],[11,"write","","Send the plaintext `buf` to the peer, encrypting and…",22,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",22,[[["self"]],["result"]]],[11,"get_encoding","rustls::internal::msgs::codec","Convenience function to get the results of `encode()`.",25,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"read_bytes","","Read one of these from the front of `bytes` and return it.",25,[[],["option"]]],[11,"init","","",110,[[],["reader"]]],[11,"rest","","",110,[[["self"]]]],[11,"take","","",110,[[["self"],["usize"]],["option"]]],[11,"any_left","","",110,[[["self"]],["bool"]]],[11,"left","","",110,[[["self"]],["usize"]]],[11,"used","","",110,[[["self"]],["usize"]]],[11,"sub","","",110,[[["self"],["usize"]],[["option",["reader"]],["reader"]]]],[11,"decode","","",24,[[],[["option",["u24"]],["u24"]]]],[11,"new","rustls::internal::msgs::base","",26,[[["vec",["u8"]],["u8"]],["payload"]]],[11,"empty","","",26,[[],["payload"]]],[11,"from_slice","","",26,[[],["payload"]]],[11,"new","","",27,[[["vec",["u8"]],["u8"]],["payloadu24"]]],[11,"empty","","",27,[[],["payloadu24"]]],[11,"new","","",28,[[["vec",["u8"]],["u8"]],["payloadu16"]]],[11,"empty","","",28,[[],["payloadu16"]]],[11,"encode_slice","","",28,[[["vec"]]]],[11,"new","","",29,[[["vec",["u8"]],["u8"]],["payloadu8"]]],[11,"empty","","",29,[[],["payloadu8"]]],[11,"into_inner","","",29,[[],[["vec",["u8"]],["u8"]]]],[11,"get_u8","rustls::internal::msgs::enums","",30,[[["self"]],["u8"]]],[11,"get_u8","","",31,[[["self"]],["u8"]]],[11,"get_u8","","",32,[[["self"]],["u8"]]],[11,"get_u8","","",33,[[["self"]],["u8"]]],[11,"get_u8","","",34,[[["self"]],["u8"]]],[11,"get_u8","","",35,[[["self"]],["u8"]]],[11,"get_u8","","",36,[[["self"]],["u8"]]],[11,"get_u8","","",37,[[["self"]],["u8"]]],[11,"get_u8","","",38,[[["self"]],["u8"]]],[11,"get_u16","","",39,[[["self"]],["u16"]]],[11,"get_u8","","",40,[[["self"]],["u8"]]],[11,"get_u16","","",41,[[["self"]],["u16"]]],[11,"get_u16","","",42,[[["self"]],["u16"]]],[11,"get_u8","","",43,[[["self"]],["u8"]]],[11,"get_u8","","",44,[[["self"]],["u8"]]],[11,"get_u8","","",45,[[["self"]],["u8"]]],[11,"get_u8","","",46,[[["self"]],["u8"]]],[11,"get_u8","","",47,[[["self"]],["u8"]]],[11,"get_u8","","",48,[[["self"]],["u8"]]],[11,"length","rustls::internal::msgs::alert","",49,[[["self"]],["usize"]]],[11,"has_duplicate_extension","rustls::internal::msgs::handshake","Returns true if there is more than one extension of a…",87,[[["self"]],["bool"]]],[11,"find_extension","","",87,[[["extensiontype"],["self"]],[["serverextension"],["option",["serverextension"]]]]],[11,"get_alpn_protocol","","",87,[[["self"]],["option"]]],[11,"get_quic_params_extension","","",87,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"early_data_extension_offered","","",87,[[["self"]],["bool"]]],[11,"from_slice","","",111,[[],["random"]]],[11,"write_slice","","",111,[[["self"]]]],[11,"new","","",112,[[],["sessionid"]]],[11,"empty","","",112,[[],["sessionid"]]],[11,"len","","",112,[[["self"]],["usize"]]],[11,"is_empty","","",112,[[["self"]],["bool"]]],[11,"new","","",52,[[["namedgroup"]],["keyshareentry"]]],[11,"new","","",53,[[["vec",["u8"]],["u32"],["u8"]],["presharedkeyidentity"]]],[11,"new","","Make a new one with one entry.",54,[[["vec",["u8"]],["presharedkeyidentity"],["u8"]],["presharedkeyoffer"]]],[11,"build_ocsp","","",73,[[],["certificatestatusrequest"]]],[11,"get_type","","",74,[[["self"]],["extensiontype"]]],[11,"make_sni","","Make a basic SNI ServerNameRequest quoting `hostname`.",74,[[["dnsnameref"]],["clientextension"]]],[11,"get_type","","",75,[[["self"]],["extensiontype"]]],[11,"make_alpn","","",75,[[],["serverextension"]]],[11,"make_empty_renegotiation_info","","",75,[[],["serverextension"]]],[11,"make_sct","","",75,[[["vec",["u8"]],["u8"]],["serverextension"]]],[11,"has_duplicate_extension","","Returns true if there is more than one extension of a…",56,[[["self"]],["bool"]]],[11,"find_extension","","",56,[[["extensiontype"],["self"]],[["clientextension"],["option",["clientextension"]]]]],[11,"get_sni_extension","","",56,[[["self"]],[["servernamerequest"],["option",["servernamerequest"]]]]],[11,"get_sigalgs_extension","","",56,[[["self"]],[["supportedsignatureschemes"],["option",["supportedsignatureschemes"]]]]],[11,"get_namedgroups_extension","","",56,[[["self"]],[["namedgroups"],["option",["namedgroups"]]]]],[11,"get_ecpoints_extension","","",56,[[["self"]],[["option",["ecpointformatlist"]],["ecpointformatlist"]]]],[11,"get_alpn_extension","","",56,[[["self"]],[["protocolnamelist"],["option",["protocolnamelist"]]]]],[11,"get_quic_params_extension","","",56,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"get_ticket_extension","","",56,[[["self"]],[["clientextension"],["option",["clientextension"]]]]],[11,"get_versions_extension","","",56,[[["self"]],[["protocolversions"],["option",["protocolversions"]]]]],[11,"get_keyshare_extension","","",56,[[["self"]],[["keyshareentries"],["option",["keyshareentries"]]]]],[11,"has_keyshare_extension_with_duplicates","","",56,[[["self"]],["bool"]]],[11,"get_psk","","",56,[[["self"]],[["option",["presharedkeyoffer"]],["presharedkeyoffer"]]]],[11,"check_psk_ext_is_last","","",56,[[["self"]],["bool"]]],[11,"get_psk_modes","","",56,[[["self"]],[["option",["pskkeyexchangemodes"]],["pskkeyexchangemodes"]]]],[11,"psk_mode_offered","","",56,[[["pskkeyexchangemode"],["self"]],["bool"]]],[11,"set_psk_binder","","",56,[[["self"],["vec",["u8"]],["u8"]]]],[11,"ems_support_offered","","",56,[[["self"]],["bool"]]],[11,"early_data_extension_offered","","",56,[[["self"]],["bool"]]],[11,"get_type","","",76,[[["self"]],["extensiontype"]]],[11,"has_duplicate_extension","","Returns true if there is more than one extension of a…",57,[[["self"]],["bool"]]],[11,"has_unknown_extension","","",57,[[["self"]],["bool"]]],[11,"get_requested_key_share_group","","",57,[[["self"]],[["namedgroup"],["option",["namedgroup"]]]]],[11,"get_cookie","","",57,[[["self"]],[["payloadu16"],["option",["payloadu16"]]]]],[11,"get_supported_versions","","",57,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"get_key_share","","",58,[[["self"]],[["keyshareentry"],["option",["keyshareentry"]]]]],[11,"get_psk_index","","",58,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"get_ecpoints_extension","","",58,[[["self"]],[["option",["ecpointformatlist"]],["ecpointformatlist"]]]],[11,"ems_support_acked","","",58,[[["self"]],["bool"]]],[11,"get_sct_list","","",58,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"get_supported_versions","","",58,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"get_type","","",77,[[["self"]],["extensiontype"]]],[11,"make_sct","","",77,[[["vec",["u8"]],["u8"]],["certificateextension"]]],[11,"get_cert_status","","",77,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"get_sct_list","","",77,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"new","","",59,[[["certificate"]],["certificateentry"]]],[11,"has_duplicate_extension","","",59,[[["self"]],["bool"]]],[11,"has_unknown_extension","","",59,[[["self"]],["bool"]]],[11,"get_ocsp_response","","",59,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"get_scts","","",59,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"new","","",60,[[["certificateentry"],["vec",["certificateentry"]]],["certificatepayloadtls13"]]],[11,"any_entry_has_duplicate_extension","","",60,[[["self"]],["bool"]]],[11,"any_entry_has_unknown_extension","","",60,[[["self"]],["bool"]]],[11,"any_entry_has_extension","","",60,[[["self"]],["bool"]]],[11,"get_end_entity_ocsp","","",60,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"get_end_entity_scts","","",60,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"convert","","",60,[[["self"]],["certificatepayload"]]],[11,"new","","",62,[[["vec",["u8"]],["signaturescheme"],["u8"]],["digitallysignedstruct"]]],[11,"new","","",64,[[["namedgroup"]],["serverecdhparams"]]],[11,"unwrap_given_kxa","","",79,[[["keyexchangealgorithm"],["self"]],[["serverkeyexchangepayload"],["option",["serverkeyexchangepayload"]]]]],[11,"encode_params","","",79,[[["vec"],["self"]]]],[11,"get_sig","","",79,[[["self"]],[["option",["digitallysignedstruct"]],["digitallysignedstruct"]]]],[11,"get_type","","",80,[[["self"]],["extensiontype"]]],[11,"find_extension","","",67,[[["extensiontype"],["self"]],[["option",["certreqextension"]],["certreqextension"]]]],[11,"get_sigalgs_extension","","",67,[[["self"]],[["supportedsignatureschemes"],["option",["supportedsignatureschemes"]]]]],[11,"get_authorities_extension","","",67,[[["self"]],[["option",["distinguishednames"]],["distinguishednames"]]]],[11,"new","","",68,[[["u32"],["vec",["u8"]],["u8"]],["newsessionticketpayload"]]],[11,"get_type","","",81,[[["self"]],["extensiontype"]]],[11,"new","","",69,[[["u32"],["vec",["u8"]],["u8"]],["newsessionticketpayloadtls13"]]],[11,"find_extension","","",69,[[["extensiontype"],["self"]],[["newsessionticketextension"],["option",["newsessionticketextension"]]]]],[11,"get_max_early_data_size","","",69,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"new","","",70,[[["vec",["u8"]],["u8"]],["certificatestatus"]]],[11,"take_ocsp_response","","",70,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"length","","",71,[[["self"]],["usize"]]],[11,"read_version","","",71,[[["protocolversion"],["reader"]],[["option",["handshakemessagepayload"]],["handshakemessagepayload"]]]],[11,"build_key_update_notify","","",71,[[],["handshakemessagepayload"]]],[11,"get_encoding_for_binder_signing","","",71,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"build_handshake_hash","","",71,[[],["handshakemessagepayload"]]],[11,"length","rustls::internal::msgs::ccs","",113,[[["self"]],["usize"]]],[11,"encode","rustls::internal::msgs::message","",90,[[["vec"],["self"]]]],[11,"decode_given_type","","",90,[[["protocolversion"],["self"],["contenttype"]],[["messagepayload"],["option",["messagepayload"]]]]],[11,"length","","",90,[[["self"]],["usize"]]],[11,"new_opaque","","",90,[[["vec",["u8"]],["u8"]],["messagepayload"]]],[11,"check_header","","Do some very lax checks on the header, and return None if…",88,[[],[["option",["usize"]],["usize"]]]],[11,"is_content_type","","",88,[[["self"],["contenttype"]],["bool"]]],[11,"is_handshake_type","","",88,[[["self"],["handshaketype"]],["bool"]]],[11,"decode_payload","","",88,[[["self"]],["bool"]]],[11,"take_payload","","",88,[[],[["vec",["u8"]],["u8"]]]],[11,"take_opaque_payload","","",88,[[["self"]],[["payload"],["option",["payload"]]]]],[11,"into_opaque","","",88,[[],["message"]]],[11,"build_alert","","",88,[[["alertlevel"],["alertdescription"]],["message"]]],[11,"build_key_update_notify","","",88,[[],["message"]]],[11,"to_borrowed","","",88,[[["self"]],["borrowmessage"]]],[11,"session_for_dns_name","rustls::internal::msgs::persist","",114,[[["dnsnameref"]],["clientsessionkey"]]],[11,"hint_for_dns_name","","",114,[[["dnsnameref"]],["clientsessionkey"]]],[11,"new","","",91,[[["u8"],["ciphersuite"],["vec",["u8"]],["sessionid"],["protocolversion"]],["clientsessionvalue"]]],[11,"set_extended_ms_used","","",91,[[["self"]]]],[11,"set_times","","",91,[[["u32"],["self"],["u64"]]]],[11,"has_expired","","",91,[[["self"],["u64"]],["bool"]]],[11,"get_obfuscated_ticket_age","","",91,[[["self"],["u64"]],["u32"]]],[11,"take_ticket","","",91,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_max_early_data_size","","",91,[[["self"],["u32"]]]],[11,"new","","",92,[[["option"],["ciphersuite"],["option",["vec"]],["protocolversion"],["option",["dnsname"]],["dnsname"],["vec",["u8"]],["u8"]],["serversessionvalue"]]],[11,"set_extended_ms_used","","",92,[[["self"]]]],[11,"new","rustls::internal::msgs::deframer","",93,[[],["messagedeframer"]]],[11,"read","","Read some bytes from `rd`, and add them to our internal…",93,[[["self"],["read"]],[["result",["usize"]],["usize"]]]],[11,"has_pending","","Returns true if we have messages for the caller to…",93,[[["self"]],["bool"]]],[11,"new","rustls::internal::msgs::fragmenter","Make a new fragmenter. `max_fragment_len` is the maximum…",115,[[["usize"]],["messagefragmenter"]]],[11,"fragment","","Take the Message `msg` and re-fragment it into new…",115,[[["vecdeque"],["self"],["message"]]]],[11,"fragment_borrow","","Enqueue borrowed fragments of (version, typ, payload)…",115,[[["contenttype"],["vecdeque"],["protocolversion"],["self"]]]],[11,"new","rustls::internal::msgs::hsjoiner","Make a new HandshakeJoiner.",94,[[],["handshakejoiner"]]],[11,"want_message","","Do we want to process this message?",94,[[["message"],["self"]],["bool"]]],[11,"is_empty","","Do we have any buffered data?",94,[[["self"]],["bool"]]],[11,"take_message","","Take the message, and join/split it as needed. Return the…",94,[[["self"],["message"]],[["option",["usize"]],["usize"]]]],[11,"complete_io","rustls","This function uses `io` to complete any outstanding IO for…",99,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"will_log","","Indicates whether the secret with label `label` will be…",105,[[["str"],["self"]],["bool"]]]],"p":[[3,"Stream"],[3,"StreamOwned"],[3,"RootCertStore"],[3,"ClientConfig"],[3,"ServerConfig"],[3,"SupportedCipherSuite"],[3,"Certificate"],[3,"PrivateKey"],[4,"ProtocolVersion"],[4,"SignatureScheme"],[4,"CipherSuite"],[4,"TLSError"],[4,"BulkAlgorithm"],[3,"AllowAnyAuthenticatedClient"],[3,"AllowAnyAnonymousOrAuthenticatedClient"],[3,"NoClientAuth"],[3,"Ticketer"],[3,"ServerSessionMemoryCache"],[3,"ResolvesServerCertUsingSNI"],[3,"ServerSession"],[3,"ClientSessionMemoryCache"],[3,"WriteEarlyData"],[3,"ClientSession"],[3,"KeyLogFile"],[3,"u24"],[8,"Codec"],[3,"Payload"],[3,"PayloadU24"],[3,"PayloadU16"],[3,"PayloadU8"],[4,"HashAlgorithm"],[4,"SignatureAlgorithm"],[4,"ClientCertificateType"],[4,"Compression"],[4,"ContentType"],[4,"HandshakeType"],[4,"AlertLevel"],[4,"AlertDescription"],[4,"HeartbeatMessageType"],[4,"ExtensionType"],[4,"ServerNameType"],[4,"NamedCurve"],[4,"NamedGroup"],[4,"ECPointFormat"],[4,"HeartbeatMode"],[4,"ECCurveType"],[4,"PSKKeyExchangeMode"],[4,"KeyUpdateRequest"],[4,"CertificateStatusType"],[3,"AlertMessagePayload"],[3,"UnknownExtension"],[3,"ServerName"],[3,"KeyShareEntry"],[3,"PresharedKeyIdentity"],[3,"PresharedKeyOffer"],[3,"OCSPCertificateStatusRequest"],[3,"ClientHelloPayload"],[3,"HelloRetryRequest"],[3,"ServerHelloPayload"],[3,"CertificateEntry"],[3,"CertificatePayloadTLS13"],[3,"ECParameters"],[3,"DigitallySignedStruct"],[3,"ClientECDHParams"],[3,"ServerECDHParams"],[3,"ECDHEServerKeyExchange"],[3,"CertificateRequestPayload"],[3,"CertificateRequestPayloadTLS13"],[3,"NewSessionTicketPayload"],[3,"NewSessionTicketPayloadTLS13"],[3,"CertificateStatus"],[3,"HandshakeMessagePayload"],[4,"ServerNamePayload"],[4,"CertificateStatusRequest"],[4,"ClientExtension"],[4,"ServerExtension"],[4,"HelloRetryExtension"],[4,"CertificateExtension"],[4,"KeyExchangeAlgorithm"],[4,"ServerKeyExchangePayload"],[4,"CertReqExtension"],[4,"NewSessionTicketExtension"],[4,"HandshakePayload"],[8,"SupportedPointFormats"],[8,"DecomposedSignatureScheme"],[8,"ConvertServerNameList"],[8,"ConvertProtocolNameList"],[8,"HasServerExtensions"],[3,"Message"],[3,"BorrowMessage"],[4,"MessagePayload"],[3,"ClientSessionValue"],[3,"ServerSessionValue"],[3,"MessageDeframer"],[3,"HandshakeJoiner"],[3,"CertifiedKey"],[8,"SigningKey"],[8,"Signer"],[3,"RSASigningKey"],[8,"Session"],[8,"StoresClientSessions"],[8,"ResolvesClientCert"],[8,"StoresServerSessions"],[8,"ResolvesServerCert"],[8,"ProducesTickets"],[8,"KeyLog"],[8,"WriteV"],[3,"NoClientSessionStorage"],[3,"NoServerSessionStorage"],[3,"NoKeyLog"],[3,"Reader"],[3,"Random"],[3,"SessionID"],[3,"ChangeCipherSpecPayload"],[3,"ClientSessionKey"],[3,"MessageFragmenter"],[6,"VecU16OfPayloadU8"],[6,"VecU16OfPayloadU16"],[6,"ECPointFormatList"],[6,"NamedGroups"],[6,"SupportedSignatureSchemes"],[6,"ServerNameRequest"],[6,"PresharedKeyIdentities"],[6,"PSKKeyExchangeModes"],[6,"KeyShareEntries"],[6,"ProtocolVersions"],[6,"CertificatePayload"],[6,"CertificateExtensions"],[6,"EncryptedExtensions"],[6,"ClientCertificateTypes"],[6,"CertReqExtensions"],[6,"NewSessionTicketExtensions"],[6,"ProtocolNameList"]]};
searchIndex["rustls_native_certs"] = {"doc":"rustls-native-certs allows rustls to use the platform's…","i":[[5,"load_native_certs","rustls_native_certs","Loads root certificates found in the platform's native…",null,[[],[["rootcertstore"],["error"],["result",["rootcertstore","error"]]]]]],"p":[]};
searchIndex["ryu"] = {"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[["f32"]],["usize"]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[["t"],["f"]],[["always"],["scopeguard",["always"]]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[],["t"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["sct"] = {"doc":"SCT.rs: SCT verification library This library implements…","i":[[3,"Log","sct","Describes a CT log",null,null],[12,"description","","The operator's name/description of the log. This field is…",0,null],[12,"url","","The certificate submission url. This field is not used by…",0,null],[12,"operated_by","","Which entity operates the log. This field is not used by…",0,null],[12,"key","","Public key usable for verifying certificates. TODO: fixme…",0,null],[12,"id","","Key hash, which is SHA256 applied to the SPKI encoding.",0,null],[12,"max_merge_delay","","The log's maximum merge delay. This field is not used by…",0,null],[4,"Error","","How sct.rs reports errors.",null,null],[13,"MalformedSCT","","The SCT was somehow misencoded, truncated or otherwise…",1,null],[13,"InvalidSignature","","The SCT contained an invalid signature.",1,null],[13,"TimestampInFuture","","The SCT was signed in the future.  Clock skew?",1,null],[13,"UnsupportedSCTVersion","","The SCT had a version that this library does not handle.",1,null],[13,"UnknownLog","","The SCT was refers to an unknown log.",1,null],[5,"verify_sct","","Verifies that the SCT `sct` (a…",null,[[["u64"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"should_be_fatal","","Applies a suggested policy for error handling:",1,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Log"],[4,"Error"]]};
searchIndex["seahash"] = {"doc":"SeaHash: A blazingly fast, portable hash function with…","i":[[3,"State","seahash","A SeaHash state.",null,null],[3,"SeaHasher","","The streaming version of the algorithm.",null,null],[5,"hash","","Hash some buffer.",null,[[],["u64"]]],[5,"hash_seeded","","Hash some buffer according to a chosen seed.",null,[[["u64"]],["u64"]]],[0,"reference","","A slow, but clear reference implementation of SeaHash.",null,null],[5,"hash","seahash::reference","A reference implementation of SeaHash.",null,[[],["u64"]]],[5,"hash_seeded","","The seeded version of the reference implementation.",null,[[["u64"]],["u64"]]],[11,"new","seahash","Create a new state vector with some initial values.",0,[[["u64"]],["state"]]],[11,"hash","","Hash a buffer with some seed.",0,[[],["state"]]],[11,"push","","Write another 64-bit integer into the state.",0,[[["self"],["u64"]]]],[11,"pop","","Remove the most recently written 64-bit integer from the…",0,[[["self"],["u64"]]]],[11,"finalize","","Finalize the state.",0,[[],["u64"]]],[11,"new","","Create a new `SeaHasher` with default state.",1,[[],["seahasher"]]],[11,"with_seeds","","Construct a new `SeaHasher` given some seed.",1,[[["u64"]],["seahasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",1,[[["self"]]]],[11,"write_u64","","",1,[[["self"],["u64"]]]],[11,"write_u8","","",1,[[["self"],["u8"]]]],[11,"write_u16","","",1,[[["u16"],["self"]]]],[11,"write_u32","","",1,[[["self"],["u32"]]]],[11,"write_usize","","",1,[[["self"],["usize"]]]],[11,"write_i64","","",1,[[["i64"],["self"]]]],[11,"write_i8","","",1,[[["self"],["i8"]]]],[11,"write_i16","","",1,[[["self"],["i16"]]]],[11,"write_i32","","",1,[[["self"],["i32"]]]],[11,"write_isize","","",1,[[["isize"],["self"]]]],[11,"clone","","",0,[[["self"]],["state"]]],[11,"clone","","",1,[[["self"]],["seahasher"]]],[11,"default","","",1,[[],["seahasher"]]]],"p":[[3,"State"],[3,"SeaHasher"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["option"],["result",["option"]]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["ignoredany"],["result",["ignoredany"]]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["result",["option"]],["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["serde_json"] = {"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["result",["value","error"]],["value"],["error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map's keys.",null,null],[3,"Values","","An iterator over a serde_json::Map's values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["string"],["result",["string"]]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["w"],["self"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["w"],["self"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["w"],["self"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["w"],["self"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["w"],["self"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["w"],["self"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["w"],["self"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["w"],["self"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["result",["value","error"]],["value"],["error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["option",["number"]],["number"]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde_json","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"begin_array","serde_json::ser","",12,[[["w"],["self"]],["result"]]],[11,"end_array","","",12,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object","","",12,[[["w"],["self"]],["result"]]],[11,"end_object","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"end_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",14,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",14,[[["self"],["bool"]]]],[11,"next","","",15,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",15,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",15,[[["self"],["bool"]]]],[11,"next","","",16,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",16,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",16,[[["self"],["bool"]]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["string"],["value"],["map",["string","value"]]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,[[],["self"]]],[11,"from","","Convert `()` to `Value`",0,[[],["self"]]],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[["self"]],[["option",["result"]],["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"default","serde_json::map","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["value"],["self"]],["bool"]]],[11,"ne","","",0,[[["value"],["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["string"],["self"]],["bool"]]],[11,"eq","","",0,[[["i8"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["i64"],["self"]],["bool"]]],[11,"eq","","",0,[[["isize"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["u16"],["self"]],["bool"]]],[11,"eq","","",0,[[["u32"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["f32"],["self"]],["bool"]]],[11,"eq","","",0,[[["f64"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["number"],["self"]],["bool"]]],[11,"ne","","",13,[[["number"],["self"]],["bool"]]],[11,"fmt","serde_json::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde_json::ser","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::error","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator"]],["self"]]],[11,"from_str","serde_json","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],[["result",["value","error"]],["value"],["error"]]]],[11,"source","serde_json::error","",4,[[["self"]],[["option",["error"]],["error"]]]],[11,"deserialize_any","serde_json::value","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_option","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_enum","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_newtype_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_char","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_str","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_string","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bytes","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_byte_buf","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_seq","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple","","",0,[[["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple_struct","","",0,[[["str"],["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_map","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_identifier","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_ignored_any","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_any","serde_json","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",13,[[["v"]],["result"]]],[11,"deserialize_char","","",13,[[["v"]],["result"]]],[11,"deserialize_str","","",13,[[["v"]],["result"]]],[11,"deserialize_string","","",13,[[["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["v"]],["result"]]],[11,"deserialize_option","","",13,[[["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["v"]],["result"]]],[11,"deserialize_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",13,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["v"]],["result"]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"serialize","serde_json::map","",6,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json","",13,[[["s"],["self"]],["result"]]],[11,"serialize_bool","serde_json::value","",24,[[["bool"]],[["result",["value"]],["value"]]]],[11,"serialize_i8","","",24,[[["i8"]],[["result",["value"]],["value"]]]],[11,"serialize_i16","","",24,[[["i16"]],[["result",["value"]],["value"]]]],[11,"serialize_i32","","",24,[[["i32"]],[["result",["value"]],["value"]]]],[11,"serialize_i64","","",24,[[["i64"]],[["result",["value"]],["value"]]]],[11,"serialize_u8","","",24,[[["u8"]],[["result",["value"]],["value"]]]],[11,"serialize_u16","","",24,[[["u16"]],[["result",["value"]],["value"]]]],[11,"serialize_u32","","",24,[[["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_u64","","",24,[[["u64"]],[["result",["value"]],["value"]]]],[11,"serialize_f32","","",24,[[["f32"]],[["result",["value"]],["value"]]]],[11,"serialize_f64","","",24,[[["f64"]],[["result",["value"]],["value"]]]],[11,"serialize_char","","",24,[[["char"]],[["result",["value"]],["value"]]]],[11,"serialize_str","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_bytes","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit_struct","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_unit_variant","","",24,[[["str"],["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_struct","","",24,[[["str"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_variant","","",24,[[["str"],["u32"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_none","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_some","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"serialize_seq","","",24,[[["option",["usize"]],["usize"]],["result"]]],[11,"serialize_tuple","","",24,[[["usize"]],["result"]]],[11,"serialize_tuple_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_tuple_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"serialize_map","","",24,[[["option",["usize"]],["usize"]],["result"]]],[11,"serialize_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_struct_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_str","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],[["value"],["result",["value"]]]]],[11,"deserialize","serde_json","",13,[[["d"]],[["result",["number"]],["number"]]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"invalid_type","","",4,[[["unexpected"],["expected"]],["self"]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]};
searchIndex["slab"] = {"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[3,"Drain","","A draining iterator for `Slab`",null,null],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to…",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],[["t"],["option"]]]],[11,"get_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],[["option"],["t"]]]],[11,"get_unchecked","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the…",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"drain","","Return a draining iterator that removes all elements from…",0,[[["self"]],["drain"]]],[11,"insert","","Insert a value in the entry, returning a mutable reference…",1,[[["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]]],"p":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",0,[[["self"]]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",1,null],[10,"size","","Returns the number of items the array can hold.",1,[[],["usize"]]],[8,"ToSmallVec","","Convenience trait for constructing a `SmallVec`",null,null],[10,"to_smallvec","","Construct a new `SmallVec` from a slice.",2,[[["self"]],["smallvec"]]],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["usize"],["maybeuninit"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Creates a draining iterator that removes the specified…",3,[[["self"],["r"]],["drain"]]],[11,"push","","Append an item to the vector.",3,[[["self"]]]],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,[[["self"]]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,[[["self"],["usize"]]]],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,[[["self"],["usize"]]]],[11,"insert","","Insert an element at position `index`, shifting all…",3,[[["self"],["usize"]]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["intoiterator"],["self"],["usize"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,"into_boxed_slice","","Converts a `SmallVec` into a `Box<[T]>` without…",3,[[],["box"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["fnmut"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,[[["usize"]],["smallvec"]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,[[["self"],["usize"]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,[[["self"],["usize"]]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[["usize"]],["self"]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",4,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",4,[[["self"]]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"from","","",3,[[],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"extend_from_slice","","",3,[[["self"]]]],[11,"deref","","",3,[[["self"]]]],[11,"deref_mut","","",3,[[["self"]]]],[11,"from","","",3,[[],["smallvec"]]],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"index","","",3,[[["i"],["self"]]]],[11,"index_mut","","",3,[[["self"],["i"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["smallvec"]]],[11,"into_iter","","",3,[[]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"as_ref","","",3,[[["self"]]]],[11,"as_mut","","",3,[[["self"]]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"clone","","",4,[[["self"]],["intoiter"]]],[11,"default","","",3,[[],["smallvec"]]],[11,"borrow","","",3,[[["self"]]]],[11,"borrow_mut","","",3,[[["self"]]]]],"p":[[8,"ExtendFromSlice"],[8,"Array"],[8,"ToSmallVec"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["spin"] = {"doc":"Synchronization primitives based on spinning","i":[[3,"Mutex","spin","This type provides MUTual EXclusion based on spinning.",null,null],[3,"MutexGuard","","A guard to which the protected data can be accessed",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","A guard from which the protected data can be read",null,null],[3,"RwLockWriteGuard","","A guard to which the protected data can be written",null,null],[3,"RwLockUpgradeableGuard","","A guard from which the protected data can be read, and can…",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[11,"new","","Creates a new spinlock wrapping the supplied data.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[],["t"]]],[11,"lock","","Locks the spinlock and returns a guard.",0,[[["self"]],["mutexguard"]]],[11,"force_unlock","","Force unlock the spinlock.",0,[[["self"]]]],[11,"try_lock","","Tries to lock the mutex. If it is already locked, it will…",0,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"new","","Creates a new spinlock wrapping the supplied data.",1,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",1,[[],["t"]]],[11,"read","","Locks this rwlock with shared read access, blocking the…",1,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempt to acquire this lock with shared read access.",1,[[["self"]],[["option",["rwlockreadguard"]],["rwlockreadguard"]]]],[11,"force_read_decrement","","Force decrement the reader count.",1,[[["self"]]]],[11,"force_write_unlock","","Force unlock exclusive write access.",1,[[["self"]]]],[11,"write","","Lock this rwlock with exclusive write access, blocking the…",1,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempt to lock this rwlock with exclusive write access.",1,[[["self"]],[["rwlockwriteguard"],["option",["rwlockwriteguard"]]]]],[11,"upgradeable_read","","Obtain a readable lock guard that can later be upgraded to…",1,[[["self"]],["rwlockupgradeableguard"]]],[11,"try_upgradeable_read","","Tries to obtain an upgradeable lock guard.",1,[[["self"]],[["option",["rwlockupgradeableguard"]],["rwlockupgradeableguard"]]]],[11,"upgrade","","Upgrades an upgradeable lock guard to a writable lock guard.",2,[[],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to upgrade an upgradeable lock guard to a writable…",2,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"downgrade","","Downgrades the upgradeable lock guard to a readable,…",2,[[],["rwlockreadguard"]]],[11,"downgrade","","Downgrades the writable lock guard to a readable, shared…",3,[[],["rwlockreadguard"]]],[18,"INIT","","Initialization constant of `Once`.",4,null],[11,"new","","Creates a new `Once` value.",4,[[],["once"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",4,[[["self"],["f"]],["t"]]],[11,"try","","Returns a pointer iff the `Once` was previously initialized",4,[[["self"]],[["t"],["option"]]]],[11,"wait","","Like try, but will spin if the `Once` is in the process of…",4,[[["self"]],[["t"],["option"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",6,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref_mut","","",5,[[["self"]],["t"]]],[11,"deref_mut","","",3,[[["self"]],["t"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"drop","","The dropping of the MutexGuard will release the lock it…",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",1,[[],["rwlock"]]]],"p":[[3,"Mutex"],[3,"RwLock"],[3,"RwLockUpgradeableGuard"],[3,"RwLockWriteGuard"],[3,"Once"],[3,"MutexGuard"],[3,"RwLockReadGuard"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tts","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"ident","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"ident","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",10,null],[12,"left","","",10,null],[12,"op","","",10,null],[12,"right","","",10,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",11,null],[12,"func","","",11,null],[12,"paren_token","","",11,null],[12,"args","","",11,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",12,null],[12,"expr","","",12,null],[12,"as_token","","",12,null],[12,"ty","","",12,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",13,null],[12,"base","","",13,null],[12,"dot_token","","",13,null],[12,"member","","",13,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[3,"ExprInPlace","","A placement expression: `place <- value`.",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",14,null],[12,"expr","","",14,null],[12,"bracket_token","","",14,null],[12,"index","","",14,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",15,null],[12,"lit","","",15,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",16,null],[12,"paren_token","","",16,null],[12,"expr","","",16,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",17,null],[12,"qself","","",17,null],[12,"path","","",17,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",18,null],[12,"op","","",18,null],[12,"expr","","",18,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",null,null],[12,"tts","","",19,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",20,null],[12,"span","","",20,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",21,null],[12,"lt_token","","",21,null],[12,"lifetimes","","",21,null],[12,"gt_token","","",21,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",22,null],[12,"const_token","","",22,null],[12,"ident","","",22,null],[12,"colon_token","","",22,null],[12,"ty","","",22,null],[12,"eq_token","","",22,null],[12,"default","","",22,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",23,null],[12,"params","","",23,null],[12,"gt_token","","",23,null],[12,"where_clause","","",23,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",24,null],[12,"lifetime","","",24,null],[12,"colon_token","","",24,null],[12,"bounds","","",24,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",25,null],[12,"eq_token","","",25,null],[12,"rhs_ty","","",25,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",26,null],[12,"colon_token","","",26,null],[12,"bounds","","",26,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",27,null],[12,"bounded_ty","","The type being bounded",27,null],[12,"colon_token","","",27,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",28,null],[12,"modifier","","",28,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",29,null],[12,"ident","","",29,null],[12,"colon_token","","",29,null],[12,"bounds","","",29,null],[12,"eq_token","","",29,null],[12,"default","","",29,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",30,null],[12,"predicates","","",30,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",31,null],[12,"ident","","",31,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",32,null],[12,"span","","",32,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",null,null],[12,"token","","",33,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",34,null],[12,"bang_token","","",34,null],[12,"delimiter","","",34,null],[12,"tts","","",34,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",35,null],[12,"brace_token","","",35,null],[12,"variants","","",35,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",36,null],[12,"fields","","",36,null],[12,"semi_token","","",36,null],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",37,null],[12,"fields","","",37,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,null],[12,"vis","","Visibility of the struct or enum.",38,null],[12,"ident","","Name of the struct or enum.",38,null],[12,"generics","","Generics required to complete the definition.",38,null],[12,"data","","Data within the struct or enum.",38,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",39,null],[12,"name","","",39,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"name","","",40,null],[12,"ty","","",40,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",41,null],[12,"elem","","",41,null],[12,"semi_token","","",41,null],[12,"len","","",41,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",42,null],[12,"unsafety","","",42,null],[12,"abi","","",42,null],[12,"fn_token","","",42,null],[12,"paren_token","","",42,null],[12,"inputs","","",42,null],[12,"variadic","","",42,null],[12,"output","","",42,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",43,null],[12,"elem","","",43,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",44,null],[12,"bounds","","",44,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",45,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",46,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",47,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",48,null],[12,"elem","","",48,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",49,null],[12,"path","","",49,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",50,null],[12,"const_token","","",50,null],[12,"mutability","","",50,null],[12,"elem","","",50,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",51,null],[12,"lifetime","","",51,null],[12,"mutability","","",51,null],[12,"elem","","",51,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",52,null],[12,"elem","","",52,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",53,null],[12,"bounds","","",53,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",54,null],[12,"elems","","",54,null],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",null,null],[12,"tts","","",55,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",56,null],[12,"lt_token","","",56,null],[12,"args","","",56,null],[12,"gt_token","","",56,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",57,null],[12,"eq_token","","",57,null],[12,"ty","","",57,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",58,null],[12,"colon_token","","",58,null],[12,"bounds","","",58,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",59,null],[12,"inputs","","`(A, B)`",59,null],[12,"output","","`C`",59,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",60,null],[12,"segments","","",60,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",61,null],[12,"arguments","","",61,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",62,null],[12,"ty","","",62,null],[12,"position","","",62,null],[12,"as_token","","",62,null],[12,"gt_token","","",62,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",63,null],[13,"Inner","","",63,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Word","","",64,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",64,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",64,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",65,null],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",65,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",66,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",66,null],[13,"Unit","","Unit struct or unit variant such as `None`.",66,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",67,null],[13,"Crate","","A crate-level visibility: `crate`.",67,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",67,null],[13,"Inherited","","An inherited visibility, which usually means private.",67,null],[4,"Expr","","A Rust expression.",null,null],[13,"Box","","A box expression: `box f`.",68,null],[13,"InPlace","","A placement expression: `place <- value`.",68,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,null],[13,"Call","","A function call expression: `invoke(a, b)`.",68,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,null],[13,"Unary","","A unary operation: `!x`, `*x`.",68,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,null],[13,"Cast","","A cast expression: `foo as f64`.",68,null],[13,"Type","","A type ascription expression: `foo: f64`.",68,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",68,null],[13,"While","","A while loop: `while expr { ... }`.",68,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",68,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,null],[13,"Block","","A blocked scope: `{ ... }`.",68,null],[13,"Assign","","An assignment expression: `a = compute()`.",68,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",68,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",68,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,null],[13,"Break","","A `break`, with an optional label to break and an optional…",68,null],[13,"Continue","","A `continue`, with an optional label.",68,null],[13,"Return","","A `return`, with an optional value to be returned.",68,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,null],[13,"Repeat","","An array literal constructed from one repeated element:…",68,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,null],[13,"Group","","An expression contained within invisible delimiters.",68,null],[13,"Try","","A try-expression: `expr?`.",68,null],[13,"Async","","An async block: `async { ... }`.",68,null],[13,"TryBlock","","A try block: `try { ... }`.",68,null],[13,"Yield","","A yield expression: `yield expr`.",68,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",69,null],[13,"Unnamed","","An unnamed field like `self.0`.",69,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",71,null],[13,"Maybe","","",71,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",72,null],[13,"Lifetime","","",72,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",73,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,null],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",null,null],[13,"F32","","",74,null],[13,"F64","","",74,null],[13,"None","","",74,null],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",null,null],[13,"I8","","",75,null],[13,"I16","","",75,null],[13,"I32","","",75,null],[13,"I64","","",75,null],[13,"I128","","",75,null],[13,"Isize","","",75,null],[13,"U8","","",75,null],[13,"U16","","",75,null],[13,"U32","","",75,null],[13,"U64","","",75,null],[13,"U128","","",75,null],[13,"Usize","","",75,null],[13,"None","","",75,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,null],[13,"Byte","","A byte literal: `b'f'`.",76,null],[13,"Char","","A character literal: `'a'`.",76,null],[13,"Int","","An integer literal: `1` or `1u16`.",76,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,null],[13,"Bool","","A boolean literal: `true` or `false`.",76,null],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",76,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",77,null],[13,"Raw","","A raw string like `r##\"data\"##`.",77,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",78,null],[13,"Brace","","",78,null],[13,"Bracket","","",78,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,null],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",80,null],[13,"Sub","","The `-` operator (subtraction)",80,null],[13,"Mul","","The `*` operator (multiplication)",80,null],[13,"Div","","The `/` operator (division)",80,null],[13,"Rem","","The `%` operator (modulus)",80,null],[13,"And","","The `&&` operator (logical and)",80,null],[13,"Or","","The `||` operator (logical or)",80,null],[13,"BitXor","","The `^` operator (bitwise xor)",80,null],[13,"BitAnd","","The `&` operator (bitwise and)",80,null],[13,"BitOr","","The `|` operator (bitwise or)",80,null],[13,"Shl","","The `<<` operator (shift left)",80,null],[13,"Shr","","The `>>` operator (shift right)",80,null],[13,"Eq","","The `==` operator (equality)",80,null],[13,"Lt","","The `<` operator (less than)",80,null],[13,"Le","","The `<=` operator (less than or equal to)",80,null],[13,"Ne","","The `!=` operator (not equal to)",80,null],[13,"Ge","","The `>=` operator (greater than or equal to)",80,null],[13,"Gt","","The `>` operator (greater than)",80,null],[13,"AddEq","","The `+=` operator",80,null],[13,"SubEq","","The `-=` operator",80,null],[13,"MulEq","","The `*=` operator",80,null],[13,"DivEq","","The `/=` operator",80,null],[13,"RemEq","","The `%=` operator",80,null],[13,"BitXorEq","","The `^=` operator",80,null],[13,"BitAndEq","","The `&=` operator",80,null],[13,"BitOrEq","","The `|=` operator",80,null],[13,"ShlEq","","The `<<=` operator",80,null],[13,"ShrEq","","The `>>=` operator",80,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",81,null],[13,"Not","","The `!` operator for logical inversion",81,null],[13,"Neg","","The `-` operator for negation",81,null],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",null,null],[13,"Named","","Argument given a name.",82,null],[13,"Wild","","Argument not given a name, matched with `_`.",82,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",83,null],[13,"Type","","A particular type is returned.",83,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,null],[13,"Array","","A fixed size array type: `[T; n]`.",84,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,null],[13,"Never","","The never type: `!`.",84,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",84,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",84,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",84,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,null],[13,"Group","","A type contained within invisible delimiters.",84,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",84,null],[13,"Macro","","A macro in the type position.",84,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",85,null],[13,"Type","","A type argument.",85,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",85,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,null],[13,"Const","","A const expression. Must be inside of a block.",85,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",86,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["result"],["parse"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["result"],["parse"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["result"],["parse"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",87,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",88,null],[3,"As","","`as`",null,null],[12,"span","","",89,null],[3,"Async","","`async`",null,null],[12,"span","","",90,null],[3,"Auto","","`auto`",null,null],[12,"span","","",91,null],[3,"Become","","`become`",null,null],[12,"span","","",92,null],[3,"Box","","`box`",null,null],[12,"span","","",93,null],[3,"Break","","`break`",null,null],[12,"span","","",94,null],[3,"Const","","`const`",null,null],[12,"span","","",95,null],[3,"Continue","","`continue`",null,null],[12,"span","","",96,null],[3,"Crate","","`crate`",null,null],[12,"span","","",97,null],[3,"Default","","`default`",null,null],[12,"span","","",98,null],[3,"Do","","`do`",null,null],[12,"span","","",99,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",100,null],[3,"Else","","`else`",null,null],[12,"span","","",101,null],[3,"Enum","","`enum`",null,null],[12,"span","","",102,null],[3,"Existential","","`existential`",null,null],[12,"span","","",103,null],[3,"Extern","","`extern`",null,null],[12,"span","","",104,null],[3,"Final","","`final`",null,null],[12,"span","","",105,null],[3,"Fn","","`fn`",null,null],[12,"span","","",106,null],[3,"For","","`for`",null,null],[12,"span","","",107,null],[3,"If","","`if`",null,null],[12,"span","","",108,null],[3,"Impl","","`impl`",null,null],[12,"span","","",109,null],[3,"In","","`in`",null,null],[12,"span","","",110,null],[3,"Let","","`let`",null,null],[12,"span","","",111,null],[3,"Loop","","`loop`",null,null],[12,"span","","",112,null],[3,"Macro","","`macro`",null,null],[12,"span","","",113,null],[3,"Match","","`match`",null,null],[12,"span","","",114,null],[3,"Mod","","`mod`",null,null],[12,"span","","",115,null],[3,"Move","","`move`",null,null],[12,"span","","",116,null],[3,"Mut","","`mut`",null,null],[12,"span","","",117,null],[3,"Override","","`override`",null,null],[12,"span","","",118,null],[3,"Priv","","`priv`",null,null],[12,"span","","",119,null],[3,"Pub","","`pub`",null,null],[12,"span","","",120,null],[3,"Ref","","`ref`",null,null],[12,"span","","",121,null],[3,"Return","","`return`",null,null],[12,"span","","",122,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",123,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",124,null],[3,"Static","","`static`",null,null],[12,"span","","",125,null],[3,"Struct","","`struct`",null,null],[12,"span","","",126,null],[3,"Super","","`super`",null,null],[12,"span","","",127,null],[3,"Trait","","`trait`",null,null],[12,"span","","",128,null],[3,"Try","","`try`",null,null],[12,"span","","",129,null],[3,"Type","","`type`",null,null],[12,"span","","",130,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",131,null],[3,"Union","","`union`",null,null],[12,"span","","",132,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",133,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",134,null],[3,"Use","","`use`",null,null],[12,"span","","",135,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",136,null],[3,"Where","","`where`",null,null],[12,"span","","",137,null],[3,"While","","`while`",null,null],[12,"span","","",138,null],[3,"Yield","","`yield`",null,null],[12,"span","","",139,null],[3,"Add","","`+`",null,null],[12,"spans","","",140,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",141,null],[3,"And","","`&`",null,null],[12,"spans","","",142,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",143,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",144,null],[3,"At","","`@`",null,null],[12,"spans","","",145,null],[3,"Bang","","`!`",null,null],[12,"spans","","",146,null],[3,"Caret","","`^`",null,null],[12,"spans","","",147,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",148,null],[3,"Colon","","`:`",null,null],[12,"spans","","",149,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",150,null],[3,"Comma","","`,`",null,null],[12,"spans","","",151,null],[3,"Div","","`/`",null,null],[12,"spans","","",152,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",153,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",154,null],[3,"Dot","","`.`",null,null],[12,"spans","","",155,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",156,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",157,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",158,null],[3,"Eq","","`=`",null,null],[12,"spans","","",159,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",160,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",161,null],[3,"Gt","","`>`",null,null],[12,"spans","","",162,null],[3,"Le","","`<=`",null,null],[12,"spans","","",163,null],[3,"Lt","","`<`",null,null],[12,"spans","","",164,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",165,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",166,null],[3,"Or","","`|`",null,null],[12,"spans","","",167,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",168,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",169,null],[3,"Pound","","`#`",null,null],[12,"spans","","",170,null],[3,"Question","","`?`",null,null],[12,"spans","","",171,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",172,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",173,null],[3,"Rem","","`%`",null,null],[12,"spans","","",174,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",175,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",176,null],[3,"Semi","","`;`",null,null],[12,"spans","","",177,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",178,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",179,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",180,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",181,null],[3,"Star","","`*`",null,null],[12,"spans","","",182,null],[3,"Sub","","`-`",null,null],[12,"spans","","",183,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",184,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",185,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",186,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",187,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",188,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",189,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",186,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",187,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",188,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",189,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"name","","Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],[["iter",["field"]],["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",23,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",23,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],["turbofish"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"value","","",191,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",191,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",191,[[["parser"],["self"]],["result"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["span"],["self"]]]],[11,"new","","",192,[[["span"]],["self"]]],[11,"value","","",192,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["span"],["self"]]]],[11,"new","","",193,[[["span"],["u8"]],["self"]]],[11,"value","","",193,[[["self"]],["u8"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["span"],["self"]]]],[11,"new","","",194,[[["span"],["char"]],["self"]]],[11,"value","","",194,[[["self"]],["char"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["span"],["self"]]]],[11,"new","","",195,[[["intsuffix"],["span"],["u64"]],["self"]]],[11,"value","","",195,[[["self"]],["u64"]]],[11,"suffix","","",195,[[["self"]],["intsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["span"],["self"]]]],[11,"new","","",196,[[["span"],["f64"],["floatsuffix"]],["self"]]],[11,"value","","",196,[[["self"]],["f64"]]],[11,"suffix","","",196,[[["self"]],["floatsuffix"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"set_span","","",196,[[["span"],["self"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["span"],["self"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",34,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",34,[[["parser"],["self"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+`…",84,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",60,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",60,[[["i"],["self"]],["bool"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",198,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",198,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",198,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",198,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",198,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",198,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",198,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",198,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",198,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",199,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",199,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",199,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",200,null],[13,"End","","",200,null],[11,"new","","Creates an empty punctuated sequence.",201,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",201,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",201,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",201,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",201,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",201,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",201,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",200,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],[["p"],["option"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",200,[[["option"],["t"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",200,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments"],["v"]]]],[5,"visit_attr_style","","",null,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",null,[[["attribute"],["v"]]]],[5,"visit_bare_fn_arg","","",null,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",null,[[["barefnargname"],["v"]]]],[5,"visit_bin_op","","",null,[[["v"],["binop"]]]],[5,"visit_binding","","",null,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",null,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",null,[[["v"],["constparam"]]]],[5,"visit_constraint","","",null,[[["v"],["constraint"]]]],[5,"visit_data","","",null,[[["v"],["data"]]]],[5,"visit_data_enum","","",null,[[["dataenum"],["v"]]]],[5,"visit_data_struct","","",null,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",null,[[["dataunion"],["v"]]]],[5,"visit_derive_input","","",null,[[["deriveinput"],["v"]]]],[5,"visit_expr","","",null,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",null,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",null,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",null,[[["exprcast"],["v"]]]],[5,"visit_expr_field","","",null,[[["exprfield"],["v"]]]],[5,"visit_expr_index","","",null,[[["exprindex"],["v"]]]],[5,"visit_expr_lit","","",null,[[["exprlit"],["v"]]]],[5,"visit_expr_paren","","",null,[[["exprparen"],["v"]]]],[5,"visit_expr_path","","",null,[[["exprpath"],["v"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",null,[[["exprverbatim"],["v"]]]],[5,"visit_field","","",null,[[["field"],["v"]]]],[5,"visit_fields","","",null,[[["v"],["fields"]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed"],["v"]]]],[5,"visit_fields_unnamed","","",null,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",null,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",null,[[["genericparam"],["v"]]]],[5,"visit_generics","","",null,[[["v"],["generics"]]]],[5,"visit_index","","",null,[[["v"],["index"]]]],[5,"visit_lifetime","","",null,[[["lifetime"],["v"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["litbool"],["v"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["litchar"],["v"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["v"],["litint"]]]],[5,"visit_lit_str","","",null,[[["litstr"],["v"]]]],[5,"visit_lit_verbatim","","",null,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",null,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter"],["v"]]]],[5,"visit_member","","",null,[[["member"],["v"]]]],[5,"visit_meta","","",null,[[["v"],["meta"]]]],[5,"visit_meta_list","","",null,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",null,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",null,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments"],["v"]]]],[5,"visit_path","","",null,[[["path"],["v"]]]],[5,"visit_path_arguments","","",null,[[["patharguments"],["v"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime"],["v"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["qself"],["v"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_trait_bound","","",null,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",null,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",null,[[["v"],["type"]]]],[5,"visit_type_array","","",null,[[["typearray"],["v"]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn"],["v"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait"],["v"]]]],[5,"visit_type_infer","","",null,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["v"],["typenever"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",null,[[["typeparen"],["v"]]]],[5,"visit_type_path","","",null,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",null,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",null,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",null,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject"],["v"]]]],[5,"visit_type_tuple","","",null,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",null,[[["typeverbatim"],["v"]]]],[5,"visit_un_op","","",null,[[["v"],["unop"]]]],[5,"visit_variant","","",null,[[["variant"],["v"]]]],[5,"visit_vis_crate","","",null,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",null,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted"],["v"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate"],["v"]]]],[5,"visit_span","","",null,[[["v"],["span"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",203,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["anglebracketedgenericarguments"],["self"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["dataenum"],["self"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["exprcast"],["self"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["exprindex"],["self"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["exprparen"],["self"]]]],[11,"visit_expr_path","","",203,[[["exprpath"],["self"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["field"],["self"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["fieldsnamed"],["self"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",203,[[["lit"],["self"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["litchar"],["self"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["member"],["self"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["parenthesizedgenericarguments"],["self"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["patharguments"],["self"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["wherepredicate"],["self"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",204,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",205,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",206,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",206,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",206,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",206,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",207,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",208,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",208,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",208,[[["peek"],["self"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",208,[[["peek"],["self"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",208,[[["peek"],["self"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",208,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",208,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",208,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",208,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",208,[[["display"],["self"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",208,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",208,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",209,[[["span"],["display"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",209,[[["totokens"],["display"]],["self"]]],[11,"span","","The source location of the error.",209,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",209,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"to_string","","",210,[[["self"]],["string"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"into_iter","","",201,[[],["i"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"into_iter","","",243,[[],["i"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"into_iter","","",244,[[],["i"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"into_iter","","",245,[[],["i"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"into_iter","","",246,[[],["i"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"into_iter","","",247,[[],["i"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"into_iter","","",248,[[],["i"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"from","syn::parse","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_string","","",208,[[["self"]],["string"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"eq","syn","",210,[[["t"],["self"]],["bool"]]],[11,"eq","","",210,[[["ident"],["self"]],["bool"]]],[11,"cmp","","",210,[[["ident"],["self"]],["ordering"]]],[11,"clone","","",210,[[["self"]],["ident"]]],[11,"fmt","","",210,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",210,[[["ident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",210,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","syn","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"parse_any","","",210,[[["parsestream"]],["result"]]],[11,"unraw","","",210,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",208,[[["self"]]]],[11,"parse","syn::token","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","syn","",210,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"drop","syn::parse","",208,[[["self"]]]],[11,"from","syn","",210,[[["selfvalue"]],["ident"]]],[11,"from","","",210,[[["selftype"]],["ident"]]],[11,"from","","",210,[[["super"]],["ident"]]],[11,"from","","",210,[[["crate"]],["ident"]]],[11,"from","","",210,[[["extern"]],["ident"]]],[11,"from","","",210,[[["underscore"]],["ident"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"from","","",209,[[["lexerror"]],["self"]]],[11,"len","syn::punctuated","",243,[[["self"]],["usize"]]],[11,"len","","",244,[[["self"]],["usize"]]],[11,"len","","",245,[[["self"]],["usize"]]],[11,"len","","",246,[[["self"]],["usize"]]],[11,"len","","",247,[[["self"]],["usize"]]],[11,"len","","",248,[[["self"]],["usize"]]],[11,"extend","","",201,[[["self"],["intoiterator"]]]],[11,"extend","","",201,[[["self"],["intoiterator"]]]],[11,"into_iter","","",201,[[]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","","",245,[[["self"]],["option"]]],[11,"next","","",246,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"next","","",248,[[["self"]],["option"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"clone","","",95,[[["self"]],["const"]]],[11,"clone","","",96,[[["self"]],["continue"]]],[11,"clone","","",97,[[["self"]],["crate"]]],[11,"clone","","",98,[[["self"]],["default"]]],[11,"clone","","",99,[[["self"]],["do"]]],[11,"clone","","",100,[[["self"]],["dyn"]]],[11,"clone","","",101,[[["self"]],["else"]]],[11,"clone","","",102,[[["self"]],["enum"]]],[11,"clone","","",103,[[["self"]],["existential"]]],[11,"clone","","",104,[[["self"]],["extern"]]],[11,"clone","","",105,[[["self"]],["final"]]],[11,"clone","","",106,[[["self"]],["fn"]]],[11,"clone","","",107,[[["self"]],["for"]]],[11,"clone","","",108,[[["self"]],["if"]]],[11,"clone","","",109,[[["self"]],["impl"]]],[11,"clone","","",110,[[["self"]],["in"]]],[11,"clone","","",111,[[["self"]],["let"]]],[11,"clone","","",112,[[["self"]],["loop"]]],[11,"clone","","",113,[[["self"]],["macro"]]],[11,"clone","","",114,[[["self"]],["match"]]],[11,"clone","","",115,[[["self"]],["mod"]]],[11,"clone","","",116,[[["self"]],["move"]]],[11,"clone","","",117,[[["self"]],["mut"]]],[11,"clone","","",118,[[["self"]],["override"]]],[11,"clone","","",119,[[["self"]],["priv"]]],[11,"clone","","",120,[[["self"]],["pub"]]],[11,"clone","","",121,[[["self"]],["ref"]]],[11,"clone","","",122,[[["self"]],["return"]]],[11,"clone","","",123,[[["self"]],["selftype"]]],[11,"clone","","",124,[[["self"]],["selfvalue"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",216,[[["self"]],["exprbox"]]],[11,"clone","","",223,[[["self"]],["exprinplace"]]],[11,"clone","","",211,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",228,[[["self"]],["exprmethodcall"]]],[11,"clone","","",236,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",237,[[["self"]],["exprtype"]]],[11,"clone","","",224,[[["self"]],["exprlet"]]],[11,"clone","","",222,[[["self"]],["exprif"]]],[11,"clone","","",239,[[["self"]],["exprwhile"]]],[11,"clone","","",220,[[["self"]],["exprforloop"]]],[11,"clone","","",225,[[["self"]],["exprloop"]]],[11,"clone","","",227,[[["self"]],["exprmatch"]]],[11,"clone","","",218,[[["self"]],["exprclosure"]]],[11,"clone","","",238,[[["self"]],["exprunsafe"]]],[11,"clone","","",215,[[["self"]],["exprblock"]]],[11,"clone","","",212,[[["self"]],["exprassign"]]],[11,"clone","","",213,[[["self"]],["exprassignop"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",229,[[["self"]],["exprrange"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",230,[[["self"]],["exprreference"]]],[11,"clone","","",217,[[["self"]],["exprbreak"]]],[11,"clone","","",219,[[["self"]],["exprcontinue"]]],[11,"clone","","",232,[[["self"]],["exprreturn"]]],[11,"clone","","",226,[[["self"]],["exprmacro"]]],[11,"clone","","",233,[[["self"]],["exprstruct"]]],[11,"clone","","",231,[[["self"]],["exprrepeat"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",221,[[["self"]],["exprgroup"]]],[11,"clone","","",234,[[["self"]],["exprtry"]]],[11,"clone","","",214,[[["self"]],["exprasync"]]],[11,"clone","","",235,[[["self"]],["exprtryblock"]]],[11,"clone","","",240,[[["self"]],["expryield"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"clone","","",241,[[["self"]],["implgenerics"]]],[11,"clone","","",190,[[["self"]],["typegenerics"]]],[11,"clone","","",242,[[["self"]],["turbofish"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litstr"]]],[11,"clone","","",192,[[["self"]],["litbytestr"]]],[11,"clone","","",193,[[["self"]],["litbyte"]]],[11,"clone","","",194,[[["self"]],["litchar"]]],[11,"clone","","",195,[[["self"]],["litint"]]],[11,"clone","","",196,[[["self"]],["litfloat"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",198,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",201,[[["self"]],["punctuated"]]],[11,"clone","","",243,[[["self"]],["self"]]],[11,"clone","","",245,[[["self"]],["intopairs"]]],[11,"clone","","",246,[[["self"]],["intoiter"]]],[11,"clone","","",247,[[["self"]],["self"]]],[11,"clone","","",200,[[["self"]],["pair"]]],[11,"clone","syn::parse","",207,[[["self"]],["stepcursor"]]],[11,"clone","syn","",209,[[["self"]],["self"]]],[11,"default","syn::token","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","syn","",23,[[],["generics"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"default","","",86,[[],["self"]]],[11,"default","syn::punctuated","",201,[[],["self"]]],[11,"cmp","syn","",31,[[["lifetime"],["self"]],["ordering"]]],[11,"eq","syn::token","",87,[[["underscore"],["self"]],["bool"]]],[11,"eq","","",88,[[["abstract"],["self"]],["bool"]]],[11,"eq","","",89,[[["as"],["self"]],["bool"]]],[11,"eq","","",90,[[["self"],["async"]],["bool"]]],[11,"eq","","",91,[[["self"],["auto"]],["bool"]]],[11,"eq","","",92,[[["self"],["become"]],["bool"]]],[11,"eq","","",93,[[["self"],["box"]],["bool"]]],[11,"eq","","",94,[[["self"],["break"]],["bool"]]],[11,"eq","","",95,[[["self"],["const"]],["bool"]]],[11,"eq","","",96,[[["self"],["continue"]],["bool"]]],[11,"eq","","",97,[[["self"],["crate"]],["bool"]]],[11,"eq","","",98,[[["default"],["self"]],["bool"]]],[11,"eq","","",99,[[["self"],["do"]],["bool"]]],[11,"eq","","",100,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",101,[[["else"],["self"]],["bool"]]],[11,"eq","","",102,[[["self"],["enum"]],["bool"]]],[11,"eq","","",103,[[["self"],["existential"]],["bool"]]],[11,"eq","","",104,[[["self"],["extern"]],["bool"]]],[11,"eq","","",105,[[["self"],["final"]],["bool"]]],[11,"eq","","",106,[[["self"],["fn"]],["bool"]]],[11,"eq","","",107,[[["for"],["self"]],["bool"]]],[11,"eq","","",108,[[["if"],["self"]],["bool"]]],[11,"eq","","",109,[[["self"],["impl"]],["bool"]]],[11,"eq","","",110,[[["in"],["self"]],["bool"]]],[11,"eq","","",111,[[["let"],["self"]],["bool"]]],[11,"eq","","",112,[[["loop"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["macro"]],["bool"]]],[11,"eq","","",114,[[["match"],["self"]],["bool"]]],[11,"eq","","",115,[[["mod"],["self"]],["bool"]]],[11,"eq","","",116,[[["move"],["self"]],["bool"]]],[11,"eq","","",117,[[["self"],["mut"]],["bool"]]],[11,"eq","","",118,[[["self"],["override"]],["bool"]]],[11,"eq","","",119,[[["priv"],["self"]],["bool"]]],[11,"eq","","",120,[[["pub"],["self"]],["bool"]]],[11,"eq","","",121,[[["ref"],["self"]],["bool"]]],[11,"eq","","",122,[[["return"],["self"]],["bool"]]],[11,"eq","","",123,[[["selftype"],["self"]],["bool"]]],[11,"eq","","",124,[[["selfvalue"],["self"]],["bool"]]],[11,"eq","","",125,[[["self"],["static"]],["bool"]]],[11,"eq","","",126,[[["struct"],["self"]],["bool"]]],[11,"eq","","",127,[[["self"],["super"]],["bool"]]],[11,"eq","","",128,[[["trait"],["self"]],["bool"]]],[11,"eq","","",129,[[["self"],["try"]],["bool"]]],[11,"eq","","",130,[[["type"],["self"]],["bool"]]],[11,"eq","","",131,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",132,[[["self"],["union"]],["bool"]]],[11,"eq","","",133,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",134,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",135,[[["self"],["use"]],["bool"]]],[11,"eq","","",136,[[["virtual"],["self"]],["bool"]]],[11,"eq","","",137,[[["where"],["self"]],["bool"]]],[11,"eq","","",138,[[["self"],["while"]],["bool"]]],[11,"eq","","",139,[[["self"],["yield"]],["bool"]]],[11,"eq","","",140,[[["self"],["add"]],["bool"]]],[11,"eq","","",141,[[["addeq"],["self"]],["bool"]]],[11,"eq","","",142,[[["and"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["andand"]],["bool"]]],[11,"eq","","",144,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",145,[[["self"],["at"]],["bool"]]],[11,"eq","","",146,[[["self"],["bang"]],["bool"]]],[11,"eq","","",147,[[["self"],["caret"]],["bool"]]],[11,"eq","","",148,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",149,[[["self"],["colon"]],["bool"]]],[11,"eq","","",150,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",151,[[["comma"],["self"]],["bool"]]],[11,"eq","","",152,[[["self"],["div"]],["bool"]]],[11,"eq","","",153,[[["diveq"],["self"]],["bool"]]],[11,"eq","","",154,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",155,[[["self"],["dot"]],["bool"]]],[11,"eq","","",156,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",157,[[["dot3"],["self"]],["bool"]]],[11,"eq","","",158,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",159,[[["eq"],["self"]],["bool"]]],[11,"eq","","",160,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",161,[[["self"],["ge"]],["bool"]]],[11,"eq","","",162,[[["self"],["gt"]],["bool"]]],[11,"eq","","",163,[[["le"],["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["lt"]],["bool"]]],[11,"eq","","",165,[[["muleq"],["self"]],["bool"]]],[11,"eq","","",166,[[["self"],["ne"]],["bool"]]],[11,"eq","","",167,[[["self"],["or"]],["bool"]]],[11,"eq","","",168,[[["oreq"],["self"]],["bool"]]],[11,"eq","","",169,[[["oror"],["self"]],["bool"]]],[11,"eq","","",170,[[["self"],["pound"]],["bool"]]],[11,"eq","","",171,[[["question"],["self"]],["bool"]]],[11,"eq","","",172,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",173,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",174,[[["self"],["rem"]],["bool"]]],[11,"eq","","",175,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",177,[[["self"],["semi"]],["bool"]]],[11,"eq","","",178,[[["shl"],["self"]],["bool"]]],[11,"eq","","",179,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",180,[[["self"],["shr"]],["bool"]]],[11,"eq","","",181,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",182,[[["star"],["self"]],["bool"]]],[11,"eq","","",183,[[["sub"],["self"]],["bool"]]],[11,"eq","","",184,[[["subeq"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",186,[[["self"],["brace"]],["bool"]]],[11,"eq","","",187,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",188,[[["self"],["paren"]],["bool"]]],[11,"eq","","",189,[[["group"],["self"]],["bool"]]],[11,"eq","syn","",0,[[["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",64,[[["self"],["meta"]],["bool"]]],[11,"ne","","",64,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["metalist"],["self"]],["bool"]]],[11,"ne","","",1,[[["metalist"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",66,[[["self"],["fields"]],["bool"]]],[11,"ne","","",66,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["fieldsunnamed"],["self"]],["bool"]]],[11,"ne","","",5,[[["fieldsunnamed"],["self"]],["bool"]]],[11,"eq","","",3,[[["field"],["self"]],["bool"]]],[11,"ne","","",3,[[["field"],["self"]],["bool"]]],[11,"eq","","",67,[[["visibility"],["self"]],["bool"]]],[11,"ne","","",67,[[["visibility"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"ne","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"eq","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"ne","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["expr"]],["bool"]]],[11,"ne","","",68,[[["self"],["expr"]],["bool"]]],[11,"eq","","",216,[[["exprbox"],["self"]],["bool"]]],[11,"ne","","",216,[[["exprbox"],["self"]],["bool"]]],[11,"eq","","",223,[[["exprinplace"],["self"]],["bool"]]],[11,"ne","","",223,[[["exprinplace"],["self"]],["bool"]]],[11,"eq","","",211,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",211,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",228,[[["exprmethodcall"],["self"]],["bool"]]],[11,"ne","","",228,[[["exprmethodcall"],["self"]],["bool"]]],[11,"eq","","",236,[[["exprtuple"],["self"]],["bool"]]],[11,"ne","","",236,[[["exprtuple"],["self"]],["bool"]]],[11,"eq","","",10,[[["exprbinary"],["self"]],["bool"]]],[11,"ne","","",10,[[["exprbinary"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",237,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",237,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",224,[[["exprlet"],["self"]],["bool"]]],[11,"ne","","",224,[[["exprlet"],["self"]],["bool"]]],[11,"eq","","",222,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",239,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",239,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",220,[[["exprforloop"],["self"]],["bool"]]],[11,"ne","","",220,[[["exprforloop"],["self"]],["bool"]]],[11,"eq","","",225,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",225,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",227,[[["exprmatch"],["self"]],["bool"]]],[11,"ne","","",227,[[["exprmatch"],["self"]],["bool"]]],[11,"eq","","",218,[[["exprclosure"],["self"]],["bool"]]],[11,"ne","","",218,[[["exprclosure"],["self"]],["bool"]]],[11,"eq","","",238,[[["exprunsafe"],["self"]],["bool"]]],[11,"ne","","",238,[[["exprunsafe"],["self"]],["bool"]]],[11,"eq","","",215,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",215,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",213,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",213,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",13,[[["exprfield"],["self"]],["bool"]]],[11,"ne","","",13,[[["exprfield"],["self"]],["bool"]]],[11,"eq","","",14,[[["exprindex"],["self"]],["bool"]]],[11,"ne","","",14,[[["exprindex"],["self"]],["bool"]]],[11,"eq","","",229,[[["exprrange"],["self"]],["bool"]]],[11,"ne","","",229,[[["exprrange"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",230,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",217,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",217,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",219,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",219,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",232,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",232,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",226,[[["exprmacro"],["self"]],["bool"]]],[11,"ne","","",226,[[["exprmacro"],["self"]],["bool"]]],[11,"eq","","",233,[[["exprstruct"],["self"]],["bool"]]],[11,"ne","","",233,[[["exprstruct"],["self"]],["bool"]]],[11,"eq","","",231,[[["exprrepeat"],["self"]],["bool"]]],[11,"ne","","",231,[[["exprrepeat"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",221,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",221,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",234,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",234,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",214,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",235,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",235,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",240,[[["expryield"],["self"]],["bool"]]],[11,"ne","","",240,[[["expryield"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",69,[[["member"],["self"]],["bool"]]],[11,"ne","","",69,[[["member"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["generics"]],["bool"]]],[11,"ne","","",23,[[["self"],["generics"]],["bool"]]],[11,"eq","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",22,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",22,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",241,[[["implgenerics"],["self"]],["bool"]]],[11,"ne","","",241,[[["implgenerics"],["self"]],["bool"]]],[11,"eq","","",190,[[["typegenerics"],["self"]],["bool"]]],[11,"ne","","",190,[[["typegenerics"],["self"]],["bool"]]],[11,"eq","","",242,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",242,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",21,[[["boundlifetimes"],["self"]],["bool"]]],[11,"ne","","",21,[[["boundlifetimes"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",71,[[["traitboundmodifier"],["self"]],["bool"]]],[11,"ne","","",71,[[["traitboundmodifier"],["self"]],["bool"]]],[11,"eq","","",30,[[["whereclause"],["self"]],["bool"]]],[11,"ne","","",30,[[["whereclause"],["self"]],["bool"]]],[11,"eq","","",73,[[["wherepredicate"],["self"]],["bool"]]],[11,"ne","","",73,[[["wherepredicate"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",31,[[["lifetime"],["self"]],["bool"]]],[11,"eq","","",76,[[["self"],["lit"]],["bool"]]],[11,"ne","","",76,[[["self"],["lit"]],["bool"]]],[11,"eq","","",191,[[["self"]],["bool"]]],[11,"eq","","",192,[[["self"]],["bool"]]],[11,"eq","","",193,[[["self"]],["bool"]]],[11,"eq","","",194,[[["self"]],["bool"]]],[11,"eq","","",195,[[["self"]],["bool"]]],[11,"eq","","",196,[[["self"]],["bool"]]],[11,"eq","","",32,[[["self"]],["bool"]]],[11,"eq","","",33,[[["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",75,[[["intsuffix"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",78,[[["macrodelimiter"],["self"]],["bool"]]],[11,"ne","","",78,[[["macrodelimiter"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",79,[[["self"],["data"]],["bool"]]],[11,"ne","","",79,[[["self"],["data"]],["bool"]]],[11,"eq","","",36,[[["datastruct"],["self"]],["bool"]]],[11,"ne","","",36,[[["datastruct"],["self"]],["bool"]]],[11,"eq","","",35,[[["dataenum"],["self"]],["bool"]]],[11,"ne","","",35,[[["dataenum"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",80,[[["binop"],["self"]],["bool"]]],[11,"ne","","",80,[[["binop"],["self"]],["bool"]]],[11,"eq","","",81,[[["unop"],["self"]],["bool"]]],[11,"ne","","",81,[[["unop"],["self"]],["bool"]]],[11,"eq","","",84,[[["self"],["type"]],["bool"]]],[11,"ne","","",84,[[["self"],["type"]],["bool"]]],[11,"eq","","",52,[[["typeslice"],["self"]],["bool"]]],[11,"ne","","",52,[[["typeslice"],["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",41,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",51,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",51,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",42,[[["typebarefn"],["self"]],["bool"]]],[11,"ne","","",42,[[["typebarefn"],["self"]],["bool"]]],[11,"eq","","",47,[[["typenever"],["self"]],["bool"]]],[11,"ne","","",47,[[["typenever"],["self"]],["bool"]]],[11,"eq","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",49,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",49,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",48,[[["typeparen"],["self"]],["bool"]]],[11,"ne","","",48,[[["typeparen"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",55,[[["self"]],["bool"]]],[11,"eq","","",39,[[["abi"],["self"]],["bool"]]],[11,"ne","","",39,[[["abi"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",83,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",83,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",60,[[["path"],["self"]],["bool"]]],[11,"ne","","",60,[[["path"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",85,[[["genericargument"],["self"]],["bool"]]],[11,"ne","","",85,[[["genericargument"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",57,[[["binding"],["self"]],["bool"]]],[11,"ne","","",57,[[["binding"],["self"]],["bool"]]],[11,"eq","","",58,[[["constraint"],["self"]],["bool"]]],[11,"ne","","",58,[[["constraint"],["self"]],["bool"]]],[11,"eq","","",59,[[["parenthesizedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",59,[[["parenthesizedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",62,[[["self"],["qself"]],["bool"]]],[11,"ne","","",62,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",198,[[["cursor"],["self"]],["bool"]]],[11,"ne","","",198,[[["cursor"],["self"]],["bool"]]],[11,"eq","syn::punctuated","",201,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",201,[[["self"],["punctuated"]],["bool"]]],[11,"partial_cmp","syn","",31,[[["lifetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",87,[[["self"]]]],[11,"deref","","",140,[[["self"]]]],[11,"deref","","",142,[[["self"]]]],[11,"deref","","",145,[[["self"]]]],[11,"deref","","",146,[[["self"]]]],[11,"deref","","",147,[[["self"]]]],[11,"deref","","",149,[[["self"]]]],[11,"deref","","",151,[[["self"]]]],[11,"deref","","",152,[[["self"]]]],[11,"deref","","",154,[[["self"]]]],[11,"deref","","",155,[[["self"]]]],[11,"deref","","",159,[[["self"]]]],[11,"deref","","",162,[[["self"]]]],[11,"deref","","",164,[[["self"]]]],[11,"deref","","",167,[[["self"]]]],[11,"deref","","",170,[[["self"]]]],[11,"deref","","",171,[[["self"]]]],[11,"deref","","",174,[[["self"]]]],[11,"deref","","",177,[[["self"]]]],[11,"deref","","",182,[[["self"]]]],[11,"deref","","",183,[[["self"]]]],[11,"deref","","",185,[[["self"]]]],[11,"deref","syn::parse","",207,[[["self"]]]],[11,"deref_mut","syn::token","",87,[[["self"]]]],[11,"deref_mut","","",140,[[["self"]]]],[11,"deref_mut","","",142,[[["self"]]]],[11,"deref_mut","","",145,[[["self"]]]],[11,"deref_mut","","",146,[[["self"]]]],[11,"deref_mut","","",147,[[["self"]]]],[11,"deref_mut","","",149,[[["self"]]]],[11,"deref_mut","","",151,[[["self"]]]],[11,"deref_mut","","",152,[[["self"]]]],[11,"deref_mut","","",154,[[["self"]]]],[11,"deref_mut","","",155,[[["self"]]]],[11,"deref_mut","","",159,[[["self"]]]],[11,"deref_mut","","",162,[[["self"]]]],[11,"deref_mut","","",164,[[["self"]]]],[11,"deref_mut","","",167,[[["self"]]]],[11,"deref_mut","","",170,[[["self"]]]],[11,"deref_mut","","",171,[[["self"]]]],[11,"deref_mut","","",174,[[["self"]]]],[11,"deref_mut","","",177,[[["self"]]]],[11,"deref_mut","","",182,[[["self"]]]],[11,"deref_mut","","",183,[[["self"]]]],[11,"deref_mut","","",185,[[["self"]]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::punctuated","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",209,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",201,[[["self"],["usize"]]]],[11,"index_mut","","",201,[[["self"],["usize"]]]],[11,"hash","syn::token","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",92,[[["self"],["h"]]]],[11,"hash","","",93,[[["self"],["h"]]]],[11,"hash","","",94,[[["self"],["h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"hash","","",98,[[["self"],["h"]]]],[11,"hash","","",99,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",103,[[["self"],["h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",105,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["h"]]]],[11,"hash","","",107,[[["self"],["h"]]]],[11,"hash","","",108,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["h"]]]],[11,"hash","","",110,[[["self"],["h"]]]],[11,"hash","","",111,[[["self"],["h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["h"]]]],[11,"hash","","",115,[[["self"],["h"]]]],[11,"hash","","",116,[[["self"],["h"]]]],[11,"hash","","",117,[[["self"],["h"]]]],[11,"hash","","",118,[[["self"],["h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",120,[[["self"],["h"]]]],[11,"hash","","",121,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["h"]]]],[11,"hash","","",123,[[["self"],["h"]]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"hash","","",125,[[["self"],["h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",130,[[["self"],["h"]]]],[11,"hash","","",131,[[["self"],["h"]]]],[11,"hash","","",132,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["h"]]]],[11,"hash","","",135,[[["self"],["h"]]]],[11,"hash","","",136,[[["self"],["h"]]]],[11,"hash","","",137,[[["self"],["h"]]]],[11,"hash","","",138,[[["self"],["h"]]]],[11,"hash","","",139,[[["self"],["h"]]]],[11,"hash","","",140,[[["self"],["h"]]]],[11,"hash","","",141,[[["self"],["h"]]]],[11,"hash","","",142,[[["self"],["h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","","",144,[[["self"],["h"]]]],[11,"hash","","",145,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["h"]]]],[11,"hash","","",147,[[["self"],["h"]]]],[11,"hash","","",148,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",151,[[["self"],["h"]]]],[11,"hash","","",152,[[["self"],["h"]]]],[11,"hash","","",153,[[["self"],["h"]]]],[11,"hash","","",154,[[["self"],["h"]]]],[11,"hash","","",155,[[["self"],["h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["h"]]]],[11,"hash","","",159,[[["self"],["h"]]]],[11,"hash","","",160,[[["self"],["h"]]]],[11,"hash","","",161,[[["self"],["h"]]]],[11,"hash","","",162,[[["self"],["h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["h"]]]],[11,"hash","","",170,[[["self"],["h"]]]],[11,"hash","","",171,[[["self"],["h"]]]],[11,"hash","","",172,[[["self"],["h"]]]],[11,"hash","","",173,[[["self"],["h"]]]],[11,"hash","","",174,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"hash","","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",216,[[["self"],["__h"]]]],[11,"hash","","",223,[[["self"],["__h"]]]],[11,"hash","","",211,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",228,[[["self"],["__h"]]]],[11,"hash","","",236,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",237,[[["self"],["__h"]]]],[11,"hash","","",224,[[["self"],["__h"]]]],[11,"hash","","",222,[[["self"],["__h"]]]],[11,"hash","","",239,[[["self"],["__h"]]]],[11,"hash","","",220,[[["self"],["__h"]]]],[11,"hash","","",225,[[["self"],["__h"]]]],[11,"hash","","",227,[[["self"],["__h"]]]],[11,"hash","","",218,[[["self"],["__h"]]]],[11,"hash","","",238,[[["self"],["__h"]]]],[11,"hash","","",215,[[["self"],["__h"]]]],[11,"hash","","",212,[[["self"],["__h"]]]],[11,"hash","","",213,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",229,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",230,[[["self"],["__h"]]]],[11,"hash","","",217,[[["self"],["__h"]]]],[11,"hash","","",219,[[["self"],["__h"]]]],[11,"hash","","",232,[[["self"],["__h"]]]],[11,"hash","","",226,[[["self"],["__h"]]]],[11,"hash","","",233,[[["self"],["__h"]]]],[11,"hash","","",231,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",221,[[["self"],["__h"]]]],[11,"hash","","",234,[[["self"],["__h"]]]],[11,"hash","","",214,[[["self"],["__h"]]]],[11,"hash","","",235,[[["self"],["__h"]]]],[11,"hash","","",240,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",241,[[["self"],["__h"]]]],[11,"hash","","",190,[[["self"],["__h"]]]],[11,"hash","","",242,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",73,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",32,[[["self"],["h"]]]],[11,"hash","","",33,[[["self"],["h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","","",74,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",79,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","syn::punctuated","",201,[[["self"],["__h"]]]],[11,"from_iter","","",201,[[["intoiterator"]],["self"]]],[11,"from_iter","","",201,[[["intoiterator"]],["self"]]],[11,"description","syn","",209,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",103,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",104,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",105,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",148,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",149,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",155,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",160,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",162,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",166,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",167,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",169,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",170,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",171,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",182,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",183,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",184,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",210,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",210,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",210,[[["span"],["self"]]]],[11,"visit_abi","syn::visit","",203,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["anglebracketedgenericarguments"],["self"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["dataenum"],["self"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["exprcast"],["self"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["exprindex"],["self"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["exprparen"],["self"]]]],[11,"visit_expr_path","","",203,[[["exprpath"],["self"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["field"],["self"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["fieldsnamed"],["self"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",203,[[["lit"],["self"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["litchar"],["self"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["member"],["self"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["parenthesizedgenericarguments"],["self"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["patharguments"],["self"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["wherepredicate"],["self"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",249,[[["peek"],["self"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",249,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["time"] = {"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",null,null],[3,"Timespec","","A record specifying a time value in seconds and…",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its…",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format…",null,[[["str"]],[["result",["tm","parseerror"]],["tm"],["parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",null,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",null,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",null,[[],["f64"]]],[5,"tzset","","",null,[[]]],[5,"empty_tm","","",null,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",null,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",null,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",null,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",null,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",null,[[["str"],["tm"]],[["parseerror"],["string"],["result",["string","parseerror"]]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],[["outofrangeerror"],["duration"],["result",["duration","outofrangeerror"]]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],[["outofrangeerror"],["result",["stdduration","outofrangeerror"]],["stdduration"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["precisetime"],["self"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["str"],["self"]],[["tmfmt"],["result",["tmfmt","parseerror"]],["parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["outofrangeerror"],["self"]],["bool"]]],[11,"ne","","",6,[[["outofrangeerror"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",2,[[["parseerror"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"div","","",3,[[["i32"]],["duration"]]],[11,"sub","","",3,[[["duration"]],["duration"]]],[11,"sub","","",0,[[["duration"]],["timespec"]]],[11,"sub","","",0,[[["timespec"]],["duration"]]],[11,"sub","","",5,[[["steadytime"]],["duration"]]],[11,"sub","","",5,[[["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["duration"]],["tm"]]],[11,"sub","","",1,[[["tm"]],["duration"]]],[11,"add","","",3,[[["duration"]],["duration"]]],[11,"add","","",0,[[["duration"]],["timespec"]]],[11,"add","","",5,[[["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["duration"]],["tm"]]],[11,"mul","","",3,[[["i32"]],["duration"]]],[11,"neg","","",3,[[],["duration"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["tokio"] = {"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio","Marks async function to be executed by selected runtime.",null,null],[23,"test","","Marks async function to be executed by runtime, suitable…",null,null],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[["t"]],["joinhandle"]]],[0,"fs","","Asynchronous file and standard stream adaptation.",null,null],[3,"File","tokio::fs","A reference to an open file on the filesystem.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"DirEntry","","Entries returned by the [`ReadDir`] stream.",null,null],[3,"ReadDir","","Stream of the entries in a directory.",null,null],[5,"canonicalize","","Returns the canonical, absolute form of a path with all…",null,[[]]],[5,"create_dir","","Creates a new, empty directory at the provided path",null,[[]]],[5,"create_dir_all","","Recursively creates a directory and all of its parent…",null,[[]]],[5,"hard_link","","Creates a new hard link on the filesystem.",null,[[]]],[5,"metadata","","Given a path, queries the file system to get information…",null,[[]]],[5,"read","","Reads the entire contents of a file into a bytes vector.",null,[[]]],[5,"read_dir","","Returns a stream over the entries within a directory.",null,[[]]],[5,"read_link","","Reads a symbolic link, returning the file that the link…",null,[[]]],[5,"read_to_string","","Creates a future which will open a file for reading and…",null,[[]]],[5,"remove_dir","","Removes an existing, empty directory.",null,[[]]],[5,"remove_dir_all","","Removes a directory at this path, after removing all its…",null,[[]]],[5,"remove_file","","Removes a file from the filesystem.",null,[[]]],[5,"rename","","Renames a file or directory to a new name, replacing the…",null,[[]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,[[["permissions"]]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",null,[[]]],[5,"write","","Creates a future that will open a file for writing and…",null,[[["asref"],["unpin"]]]],[5,"copy","","Copies the contents of one file to another. This function…",null,[[["path"],["asref",["path"]]]]],[11,"open","","Attempts to open a file in read-only mode.",0,[[]]],[11,"create","","Opens a file in write-only mode.",0,[[]]],[11,"from_std","","Converts a [`std::fs::File`][std] to a…",0,[[["file"]],["file"]]],[11,"seek","","Seeks to an offset, in bytes, in a stream.",0,[[["seekfrom"],["self"]]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",0,[[["self"]]]],[11,"sync_data","","This function is similar to `sync_all`, except that it may…",0,[[["self"]]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",0,[[["u64"],["self"]]]],[11,"metadata","","Queries metadata about the underlying file.",0,[[["self"]]]],[11,"try_clone","","Create a new `File` instance that shares the same…",0,[[["self"]]]],[11,"into_std","","Destructures `File` into a [`std::fs::File`][std]. This…",0,[[]]],[11,"try_into_std","","Tries to immediately destructure `File` into a…",0,[[],[["result",["file"]],["file"]]]],[11,"set_permissions","","Changes the permissions on the underlying file.",0,[[["permissions"],["self"]]]],[11,"new","","Creates a blank new set of options ready for configuration.",1,[[],["openoptions"]]],[11,"read","","Sets the option for read access.",1,[[["self"],["bool"]],["openoptions"]]],[11,"write","","Sets the option for write access.",1,[[["self"],["bool"]],["openoptions"]]],[11,"append","","Sets the option for the append mode.",1,[[["self"],["bool"]],["openoptions"]]],[11,"truncate","","Sets the option for truncating a previous file.",1,[[["self"],["bool"]],["openoptions"]]],[11,"create","","Sets the option for creating a new file.",1,[[["self"],["bool"]],["openoptions"]]],[11,"create_new","","Sets the option to always create a new file.",1,[[["self"],["bool"]],["openoptions"]]],[11,"open","","Opens a file at `path` with the options specified by `self`.",1,[[["self"]]]],[0,"os","","OS-specific functionality.",null,null],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",null,null],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",null,[[]]],[11,"next_entry","tokio::fs","Returns the next entry in the directory stream.",2,[[["self"]]]],[11,"path","","Returns the full path to the file that this entry…",3,[[["self"]],["pathbuf"]]],[11,"file_name","","Returns the bare file name of this directory entry without…",3,[[["self"]],["osstring"]]],[11,"metadata","","Returns the metadata for the file that this entry points at.",3,[[["self"]]]],[11,"file_type","","Returns the file type for the file that this entry points…",3,[[["self"]]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous I/O…",null,null],[3,"Error","tokio::io","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",4,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",4,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",4,null],[13,"ConnectionReset","","The connection was reset by the remote server.",4,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",4,null],[13,"NotConnected","","The network operation failed because it was not connected…",4,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",4,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",4,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",4,null],[13,"AlreadyExists","","An entity already exists, often a file.",4,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",4,null],[13,"InvalidInput","","A parameter was incorrect.",4,null],[13,"InvalidData","","Data not valid for the operation were encountered.",4,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",4,null],[13,"WriteZero","","An error returned when an operation could not be completed…",4,null],[13,"Interrupted","","This operation was interrupted.",4,null],[13,"Other","","Any I/O error not part of this list.",4,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",4,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[3,"PollEvented","","Associates an I/O resource that implements the…",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that…",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[3,"ReadHalf","","The readable half of a value returned from `split`.",null,null],[3,"WriteHalf","","The writable half of a value returned from `split`.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufStream","","Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Copy","","A future that asynchronously copies the entire contents of…",null,null],[3,"Empty","","An async reader which is always at EOF.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Repeat","","An async reader which yields one byte over and over and…",null,null],[3,"Sink","","An async writer which will move data into the void.",null,null],[3,"Split","","Stream for the `split` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"StreamReader","","Convert a stream of byte chunks into an [`AsyncRead`].",null,null],[5,"stderr","","Constructs a new handle to the standard error of the…",null,[[],["stderr"]]],[5,"stdin","","Constructs a new handle to the standard input of the…",null,[[],["stdin"]]],[5,"stdout","","Constructs a new handle to the standard output of the…",null,[[],["stdout"]]],[5,"split","","Splits a single value implementing `AsyncRead +…",null,[[["t"]]]],[5,"copy","","Asynchronously copies the entire contents of a reader into…",null,[[["w"],["r"]],[["copy"],["sized"]]]],[5,"empty","","Creates a new empty async reader.",null,[[],["empty"]]],[5,"repeat","","Creates an instance of an async reader that infinitely…",null,[[["u8"]],["repeat"]]],[5,"sink","","Creates an instance of an async writer which will…",null,[[],["sink"]]],[5,"stream_reader","","Convert a stream of byte chunks into an `AsyncRead`.",null,[[["s"]],["streamreader"]]],[11,"new","","Creates a new `PollEvented` associated with the default…",5,[[["e"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",5,[[],["result"]]],[11,"poll_read_ready","","Checks the I/O resource's read readiness state.",5,[[["context"],["self"],["ready"]],[["poll",["result"]],["result",["ready"]]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",5,[[["context"],["self"],["ready"]],["result"]]],[11,"poll_write_ready","","Checks the I/O resource's write readiness state.",5,[[["context"],["self"]],[["poll",["result"]],["result",["ready"]]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",5,[[["context"],["self"]],["result"]]],[11,"new","","Registers the I/O resource with the default reactor.",6,[[["t"]],[["result",["registration"]],["registration"]]]],[11,"deregister","","Deregisters the I/O resource from the reactor it is…",6,[[["self"],["t"]],["result"]]],[11,"poll_read_ready","","Polls for events on the I/O resource's read readiness…",6,[[["context"],["self"]],[["poll",["result"]],["result",["ready"]]]]],[11,"take_read_ready","","Consume any pending read readiness event.",6,[[["self"]],[["option",["ready"]],["result",["option"]]]]],[11,"poll_write_ready","","Polls for events on the I/O resource's write readiness…",6,[[["context"],["self"]],[["poll",["result"]],["result",["ready"]]]]],[11,"take_write_ready","","Consumes any pending write readiness event.",6,[[["self"]],[["option",["ready"]],["result",["option"]]]]],[11,"is_pair_of","","Checks if this `ReadHalf` and some `WriteHalf` were split…",7,[[["self"],["writehalf"]],["bool"]]],[11,"unsplit","","Reunites with a previously split `WriteHalf`.",7,[[["writehalf"]],["t"]]],[11,"is_pair_of","","Check if this `WriteHalf` and some `ReadHalf` were split…",8,[[["self"],["readhalf"]],["bool"]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",9,[[["r"]],["self"]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",9,[[["usize"],["r"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying reader.",9,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",9,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",9,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying reader.",9,[[],["r"]]],[11,"buffer","","Returns a reference to the internally buffered data.",9,[[["self"]]]],[11,"new","","Wraps a type in both [`BufWriter`] and [`BufReader`].",10,[[["rw"]],["bufstream"]]],[11,"with_capacity","","Creates a `BufStream` with the specified [`BufReader`]…",10,[[["rw"],["usize"]],["bufstream"]]],[11,"get_ref","","Gets a reference to the underlying I/O object.",10,[[["self"]],["rw"]]],[11,"get_mut","","Gets a mutable reference to the underlying I/O object.",10,[[["self"]],["rw"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying I/O…",10,[[["pin"],["self"]],[["pin"],["rw"]]]],[11,"into_inner","","Consumes this `BufStream`, returning the underlying I/O…",10,[[],["rw"]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",11,[[["w"]],["self"]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",11,[[["w"],["usize"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying writer.",11,[[["self"]],["w"]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",11,[[["self"]],["w"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",11,[[["pin"],["self"]],[["w"],["pin"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",11,[[],["w"]]],[11,"buffer","","Returns a reference to the internally buffered data.",11,[[["self"]]]],[11,"next_line","","Returns the next line in the stream.",12,[[["self"]]]],[11,"next_segment","","Returns the next segment in the stream.",13,[[["self"]]]],[11,"limit","","Returns the remaining number of bytes that can be read…",14,[[["self"]],["u64"]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",14,[[["self"],["u64"]]]],[11,"get_ref","","Gets a reference to the underlying reader.",14,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",14,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",14,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",14,[[],["r"]]],[8,"AsyncBufRead","","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",15,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",15,[[["pin"],["self"],["usize"]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",16,[[["self"]],["bool"]]],[10,"poll_read","","Attempts to read from the `AsyncRead` into `buf`.",16,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",16,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"start_seek","","Attempts to seek to an offset, in bytes, in a stream.",17,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_complete","","Waits for a seek operation to complete.",17,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",18,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Reads all bytes into `buf` until the delimiter `byte` or…",19,[[["vec"],["self"],["u8"]],["readuntil"]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is reached,…",19,[[["self"],["string"]],["readline"]]],[11,"split","","Returns a stream of the contents of this reader split on…",19,[[["u8"]],["split"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",19,[[],["lines"]]],[8,"AsyncReadExt","","Reads bytes from a source.",null,null],[11,"chain","","Creates a new `AsyncRead` instance that chains this stream…",20,[[["r"]],["chain"]]],[11,"read","","Pulls some bytes from this source into the specified…",20,[[["self"]],["read"]]],[11,"read_buf","","Pulls some bytes from this source into the specified…",20,[[["self"],["b"]],["readbuf"]]],[11,"read_exact","","Reads the exact number of bytes required to fill `buf`.",20,[[["self"]],["readexact"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",20,[[["self"]],[["self"],["readu8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",20,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",20,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readu32"]]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",20,[[["self"]],[["readi32"],["self"]]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readi64"]]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order from…",20,[[["self"]],[["readu128"],["self"]]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from…",20,[[["self"]],[["readi128"],["self"]]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them…",20,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them…",20,[[["self"],["string"]],["readtostring"]]],[11,"take","","Creates an adaptor which reads at most `limit` bytes from…",20,[[["u64"]],["take"]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",21,[[["seekfrom"],["self"]],["seek"]]],[8,"AsyncWriteExt","","Writes bytes to a sink.",null,null],[11,"write","","Writes a buffer into this writer, returning how many bytes…",22,[[["self"]],["write"]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer's…",22,[[["self"],["b"]],["writebuf"]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",22,[[["self"]],["writeall"]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",22,[[["self"],["u8"]],[["self"],["writeu8"]]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",22,[[["self"],["i8"]],[["self"],["writei8"]]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to…",22,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the…",22,[[["self"],["i16"]],[["self"],["writei16"]]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to…",22,[[["self"],["u32"]],[["writeu32"],["self"]]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the…",22,[[["self"],["i32"]],[["self"],["writei32"]]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to…",22,[[["self"],["u64"]],[["writeu64"],["self"]]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",22,[[["i64"],["self"]],[["self"],["writei64"]]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to…",22,[[["self"],["u128"]],[["writeu128"],["self"]]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to…",22,[[["self"],["i128"]],[["self"],["writei128"]]]],[11,"flush","","Flushes this output stream, ensuring that all…",22,[[["self"]],["flush"]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can…",22,[[["self"]],["shutdown"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",null,null],[3,"TcpListener","tokio::net","A TCP socket server, listening for connections.",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[0,"tcp","","TCP utility types",null,null],[3,"Incoming","tokio::net::tcp","Stream returned by the `TcpListener::incoming` function…",null,null],[3,"ReadHalf","","Read half of a `TcpStream`.",null,null],[3,"WriteHalf","","Write half of a `TcpStream`.",null,null],[11,"bind","tokio::net","Creates a new TcpListener which will be bound to the…",23,[[["tosocketaddrs"]]]],[11,"accept","","Accepts a new incoming connection from this listener.",23,[[["self"]]]],[11,"poll_accept","","Attempts to poll `SocketAddr` and `TcpStream` bound to…",23,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"from_std","","Creates a new TCP listener from the standard library's TCP…",23,[[["tcplistener"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",23,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"incoming","","Returns a stream over the connections being received on…",23,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",23,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",23,[[["u32"],["self"]],["result"]]],[11,"poll_accept","tokio::net::tcp","Attempts to poll `TcpStream` by polling inner…",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["tcpstream"]]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",25,[[["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",25,[[["self"]]]],[11,"connect","tokio::net","Opens a TCP connection to a remote host.",26,[[["tosocketaddrs"]]]],[11,"from_std","","Creates new `TcpStream` from a `std::net::TcpStream`.",26,[[["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",26,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_addr","","Returns the remote address that this stream is connected to.",26,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"poll_peek","","Attempts to receive data on the socket, without removing…",26,[[["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",26,[[["self"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",26,[[["self"],["shutdown"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",26,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",26,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",26,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",26,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",26,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",26,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",26,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",26,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",26,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",26,[[["u32"],["self"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",26,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",26,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"split","","Splits a `TcpStream` into a read half and a write half,…",26,[[["self"]]]],[8,"ToSocketAddrs","","Converts or resolves without blocking to one or more…",null,null],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",null,null],[8,"AsyncBufRead","tokio::prelude","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",15,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",15,[[["pin"],["self"],["usize"]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…",16,[[["self"]],["bool"]]],[10,"poll_read","tokio::prelude","Attempts to read from the `AsyncRead` into `buf`.",16,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","tokio::io","Pulls some bytes from this source into the specified…",16,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[8,"AsyncWrite","tokio::prelude","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","tokio::io","Writes a `Buf` into this value, returning how many bytes…",18,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[0,"runtime","tokio","The Tokio runtime.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[3,"TryCurrentError","","Error returned by `try_current` when no Runtime has been…",null,null],[3,"Runtime","","The Tokio runtime.",null,null],[11,"new","","Returns a new runtime builder initialized with default…",27,[[],["builder"]]],[11,"enable_all","","Enables both I/O and time drivers.",27,[[["self"]],["self"]]],[11,"num_threads","","Sets the maximum number of worker threads for the…",27,[[["self"],["usize"]],["self"]]],[11,"core_threads","","Sets the core number of worker threads for the `Runtime`'s…",27,[[["self"],["usize"]],["self"]]],[11,"max_threads","","Specifies limit for threads, spawned by the Runtime.",27,[[["self"],["usize"]],["self"]]],[11,"thread_name","","Sets name of threads spawned by the `Runtime`'s thread pool.",27,[[["self"]],["self"]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",27,[[["self"],["usize"]],["self"]]],[11,"on_thread_start","","Executes function `f` after each thread is started but…",27,[[["self"],["f"]],["self"]]],[11,"on_thread_stop","","Executes function `f` before each thread stops.",27,[[["self"],["f"]],["self"]]],[11,"build","","Creates the configured `Runtime`.",27,[[["self"]],[["runtime"],["result",["runtime"]]]]],[11,"enable_io","","Enables the I/O driver.",27,[[["self"]],["self"]]],[11,"enable_time","","Enables the time driver.",27,[[["self"]],["self"]]],[11,"basic_scheduler","","Sets runtime to use a simpler scheduler that runs all…",27,[[["self"]],["self"]]],[11,"enter","","Enter the runtime context.",28,[[["self"],["f"]],["r"]]],[11,"current","","Returns a Handle view over the currently running Runtime",28,[[],["self"]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",28,[[],[["trycurrenterror"],["result",["trycurrenterror"]]]]],[11,"spawn","","Spawns a future onto the Tokio runtime.",28,[[["self"],["f"]],["joinhandle"]]],[11,"new","","Create a new runtime instance with default configuration…",29,[[],[["runtime"],["result",["runtime"]]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",29,[[["self"],["f"]],["joinhandle"]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is…",29,[[["self"],["future"]]]],[11,"enter","","Enter the runtime context.",29,[[["self"],["f"]],["r"]]],[11,"handle","","Return a handle to the runtime's spawner.",29,[[["self"]],["handle"]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most `duration` for…",29,[[["duration"]]]],[0,"stream","tokio","Stream utilities for Tokio.",null,null],[8,"Stream","tokio::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",30,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",30,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",30,[[["self"]]]],[3,"Empty","","Stream for the [`empty`] function.",null,null],[3,"Iter","","Stream for the [`iter`] function.",null,null],[3,"Once","","Stream for the [`once`] function.",null,null],[3,"Pending","","Stream for the [`pending`] function.",null,null],[3,"StreamMap","","Combine many streams into one, indexing each source stream…",null,null],[5,"empty","","Creates a stream that yields nothing.",null,[[],["empty"]]],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iter"]]],[5,"once","","Creates a stream that emits an element exactly once.",null,[[["t"]],["once"]]],[5,"pending","","Creates a stream that is never ready",null,[[],["pending"]]],[11,"new","","Creates an empty `StreamMap`.",31,[[],["streammap"]]],[11,"with_capacity","","Creates an empty `StreamMap` with the specified capacity.",31,[[["usize"]],["streammap"]]],[11,"keys","","Returns an iterator visiting all keys in arbitrary order.",31,[[["self"]]]],[11,"values","","An iterator visiting all values in arbitrary order.",31,[[["self"]]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.",31,[[["self"]]]],[11,"capacity","","Returns the number of streams the map can hold without…",31,[[["self"]],["usize"]]],[11,"len","","Returns the number of streams in the map.",31,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the map contains no elements.",31,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-stream pairs. Keeps the…",31,[[["self"]]]],[11,"insert","","Insert a key-stream pair into the map.",31,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the stream at the…",31,[[["self"],["q"]],["option"]]],[11,"contains_key","","Returns `true` if the map contains a stream for the…",31,[[["self"],["q"]],["bool"]]],[8,"FromStream","","Convert from a `Stream`.",null,null],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Consumes and returns the next value in the stream or…",32,[[["self"]],["next"]]],[11,"try_next","","Consumes and returns the next item in the stream. If an…",32,[[["self"]],["trynext"]]],[11,"map","","Maps this stream's items to a different type, returning a…",32,[[["f"]],["map"]]],[11,"merge","","Combine two streams into one by interleaving the output of…",32,[[["u"]],["merge"]]],[11,"filter","","Filters the values produced by this stream according to…",32,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",32,[[["f"]],["filtermap"]]],[11,"fuse","","Creates a stream which ends after the first `None`.",32,[[],["fuse"]]],[11,"take","","Creates a new stream of at most `n` items of the…",32,[[["usize"]],["take"]]],[11,"take_while","","Take elements from this stream while the provided…",32,[[["f"]],["takewhile"]]],[11,"skip","","Creates a new stream that will skip the `n` first items of…",32,[[["usize"]],["skip"]]],[11,"skip_while","","Skip elements from the underlying stream while the…",32,[[["f"]],["skipwhile"]]],[11,"all","","Tests if every element of the stream matches a predicate.",32,[[["self"],["f"]],["allfuture"]]],[11,"any","","Tests if any element of the stream matches a predicate.",32,[[["self"],["f"]],["anyfuture"]]],[11,"chain","","Combine two streams into one by first returning all values…",32,[[["u"]],["chain"]]],[11,"fold","","A combinator that applies a function to every element in a…",32,[[["b"],["f"]],["foldfuture"]]],[11,"collect","","Drain stream pushing all emitted values into a collection.",32,[[],["collect"]]],[11,"timeout","","Applies a per-item timeout to the passed stream.",32,[[["duration"]],["timeout"]]],[0,"sync","tokio","Synchronization primitives for use in asynchronous contexts.",null,null],[3,"Barrier","tokio::sync","A barrier enables multiple threads to synchronize the…",null,null],[3,"BarrierWaitResult","","A `BarrierWaitResult` is returned by `wait` when all…",null,null],[3,"Mutex","","An asynchronous mutual exclusion primitive useful for…",null,null],[3,"MutexGuard","","A handle to a held `Mutex`.",null,null],[3,"Notify","","Notify a single task to wake up.",null,null],[3,"Semaphore","","Counting semaphore performing asynchronous permit…",null,null],[3,"SemaphorePermit","","A permit from the semaphore",null,null],[3,"RwLock","","An asynchronous reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[11,"new","","Creates a new barrier that can block a given number of…",33,[[["usize"]],["barrier"]]],[11,"wait","","Does not resolve until all tasks have rendezvoused here.",33,[[["self"]]]],[11,"is_leader","","Returns `true` if this thread from wait is the \"leader…",34,[[["self"]],["bool"]]],[0,"broadcast","","A multi-producer, multi-consumer broadcast queue. Each…",null,null],[3,"Sender","tokio::sync::broadcast","Sending-half of the [`broadcast`] channel.",null,null],[3,"Receiver","","Receiving-half of the [`broadcast`] channel.",null,null],[3,"SendError","","Error returned by [`Sender::send`][Sender::send].",null,null],[12,"0","","",35,null],[4,"RecvError","","An error returned from the [`recv`] function on a…",null,null],[13,"Closed","","There are no more active senders implying no further…",36,null],[13,"Lagged","","The receiver lagged too far behind. Attempting to receive…",36,null],[4,"TryRecvError","","An error returned from the [`try_recv`] function on a…",null,null],[13,"Empty","","The channel is currently empty. There are still active…",37,null],[13,"Closed","","There are no more active senders implying no further…",37,null],[13,"Lagged","","The receiver lagged too far behind and has been forcibly…",37,null],[5,"channel","","Create a bounded, multi-producer, multi-consumer channel…",null,[[["usize"]]]],[11,"send","","Attempts to send a value to all active [`Receiver`]…",38,[[["self"],["t"]],[["senderror"],["result",["usize","senderror"]],["usize"]]]],[11,"subscribe","","Creates a new [`Receiver`] handle that will receive values…",38,[[["self"]],["receiver"]]],[11,"receiver_count","","Returns the number of active receivers",38,[[["self"]],["usize"]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",39,[[["self"]],[["result",["tryrecverror"]],["tryrecverror"]]]],[11,"recv","","Receives the next value for this receiver.",39,[[["self"]]]],[0,"mpsc","tokio::sync","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Receiver","tokio::sync::mpsc","Receive values from the associated `Sender`.",null,null],[3,"Sender","","Send values to the associated `Receiver`.",null,null],[3,"UnboundedReceiver","","Receive values from the associated `UnboundedSender`.",null,null],[3,"UnboundedSender","","Send values to the associated `UnboundedReceiver`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded_channel","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[11,"recv","","Receives the next value for this receiver.",40,[[["self"]]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",40,[[["self"]],[["tryrecverror"],["result",["tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",40,[[["self"]]]],[11,"send","","Sends a value, waiting until there is capacity.",41,[[["t"],["self"]]]],[11,"try_send","","Attempts to immediately send a message on this `Sender`",41,[[["self"],["t"]],[["result",["trysenderror"]],["trysenderror"]]]],[11,"send_timeout","","Sends a value, waiting until there is capacity, but only…",41,[[["duration"],["t"],["self"]]]],[11,"poll_ready","","Returns `Poll::Ready(Ok(()))` when the channel is able to…",41,[[["self"],["context"]],[["result",["closederror"]],["poll",["result"]]]]],[11,"disarm","","Undo a successful call to `poll_ready`.",41,[[["self"]],["bool"]]],[11,"recv","","Receives the next value for this receiver.",42,[[["self"]]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",42,[[["self"]],[["tryrecverror"],["result",["tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",42,[[["self"]]]],[11,"send","","Attempts to send a message on this `UnboundedSender`…",43,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[0,"error","","Channel error types",null,null],[3,"SendError","tokio::sync::mpsc::error","Error returned by the `Sender`.",null,null],[12,"0","","",44,null],[3,"RecvError","","Error returned by `Receiver`.",null,null],[3,"ClosedError","","Error returned by `Sender::poll_ready`.",null,null],[4,"TrySendError","","This enumeration is the list of the possible error…",null,null],[13,"Full","","The data could not be sent on the channel because the…",45,null],[13,"Closed","","The receive half of the channel was explicitly closed or…",45,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that…",null,null],[13,"Empty","","This channel is currently empty, but the Sender(s) have…",46,null],[13,"Closed","","The channel's sending half has been closed, and there will…",46,null],[4,"SendTimeoutError","","Error returned by `Sender::send_timeout`].",null,null],[13,"Timeout","","The data could not be sent on the channel because the…",47,null],[13,"Closed","","The receive half of the channel was explicitly closed or…",47,null],[11,"new","tokio::sync","Creates a new lock in an unlocked state ready for use.",48,[[["t"]],["self"]]],[11,"lock","","A future that resolves on acquiring the lock and returns…",48,[[["self"]]]],[11,"try_lock","","Tries to acquire the lock",48,[[["self"]],[["mutexguard"],["trylockerror"],["result",["mutexguard","trylockerror"]]]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",48,[[],["t"]]],[11,"new","","Create a new `Notify`, initialized without a permit.",49,[[],["notify"]]],[11,"notified","","Wait for a notification.",49,[[["self"]]]],[11,"notify","","Notifies a waiting task",49,[[["self"]]]],[0,"oneshot","","A channel for sending a single message between…",null,null],[3,"Sender","tokio::sync::oneshot","Sends a value to the associated `Receiver`.",null,null],[3,"Receiver","","Receive a value from the associated `Sender`.",null,null],[5,"channel","","Create a new one-shot channel for sending single values…",null,[[]]],[0,"error","","Oneshot error types",null,null],[3,"RecvError","tokio::sync::oneshot::error","Error returned by the `Future` implementation for…",null,null],[4,"TryRecvError","","Error returned by the `try_recv` function on `Receiver`.",null,null],[13,"Empty","","The send half of the channel has not yet sent a value.",50,null],[13,"Closed","","The send half of the channel was dropped without sending a…",50,null],[11,"send","tokio::sync::oneshot","Attempts to send a value on this channel, returning it…",51,[[["t"]],["result"]]],[11,"closed","","Waits for the associated [`Receiver`] handle to close.",51,[[["self"]]]],[11,"is_closed","","Returns `true` if the associated [`Receiver`] handle has…",51,[[["self"]],["bool"]]],[11,"close","","Prevents the associated [`Sender`] handle from sending a…",52,[[["self"]]]],[11,"try_recv","","Attempts to receive a value.",52,[[["self"]],[["result",["tryrecverror"]],["tryrecverror"]]]],[11,"new","tokio::sync","Creates a new semaphore with the initial number of permits",53,[[["usize"]],["self"]]],[11,"available_permits","","Returns the current number of available permits",53,[[["self"]],["usize"]]],[11,"add_permits","","Adds `n` new permits to the semaphore.",53,[[["self"],["usize"]]]],[11,"acquire","","Acquires permit from the semaphore",53,[[["self"]]]],[11,"try_acquire","","Tries to acquire a permit form the semaphore",53,[[["self"]],[["tryacquireerror"],["result",["semaphorepermit","tryacquireerror"]],["semaphorepermit"]]]],[11,"forget","","Forgets the permit without releasing it back to the…",54,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",55,[[["t"]],["rwlock"]]],[11,"read","","Locks this rwlock with shared read access, causing the…",55,[[["self"]]]],[11,"write","","Locks this rwlock with exclusive write access, causing the…",55,[[["self"]]]],[11,"into_inner","","Consumes the lock, returning the underlying data.",55,[[],["t"]]],[0,"watch","","A single-producer, multi-consumer channel that only…",null,null],[3,"Receiver","tokio::sync::watch","Receives values from the associated `Sender`.",null,null],[3,"Sender","","Sends values to the associated `Receiver`.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Creates a new watch channel, returning the \"send\" and…",null,[[["clone"]]]],[0,"error","","Watch error types",null,null],[3,"SendError","tokio::sync::watch::error","Error produced when sending a value fails.",null,null],[11,"borrow","tokio::sync::watch","Returns a reference to the most recently sent value",56,[[["self"]],["ref"]]],[11,"recv","","Attempts to clone the latest value sent via the channel.",56,[[["self"]]]],[11,"broadcast","","Broadcasts a new value via the channel, notifying all…",57,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"closed","","Completes when all receivers have dropped.",57,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",null,null],[3,"JoinError","tokio::task","Task failed to execute to completion.",null,null],[3,"JoinHandle","","An owned permission to join on a task (await its…",null,null],[5,"spawn_blocking","","Runs the provided closure on a thread where blocking is…",null,[[["f"]],["joinhandle"]]],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[["t"]],["joinhandle"]]],[5,"yield_now","","Yields execution back to the Tokio runtime.",null,[[]]],[0,"time","tokio","Utilities for tracking time.",null,null],[3,"Duration","tokio::time","A `Duration` type to represent a span of time, typically…",null,null],[3,"DelayQueue","","A queue of delayed elements.",null,null],[3,"Delay","","Future returned by `delay_until` and `delay_for`.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Instant","","A measurement of the system clock, useful for talking to…",null,null],[3,"Interval","","Stream returned by `interval` and `interval_at`.",null,null],[3,"Elapsed","","Error returned by `Timeout`.",null,null],[3,"Timeout","","Future returned by `timeout` and `timeout_at`.",null,null],[3,"Throttle","","Stream for the `throttle` function.",null,null],[5,"delay_for","","Waits until `duration` has elapsed.",null,[[["duration"]],["delay"]]],[5,"delay_until","","Waits until `deadline` is reached.",null,[[["instant"]],["delay"]]],[5,"interval","","Creates new `Interval` that yields with interval of…",null,[[["duration"]],["interval"]]],[5,"interval_at","","Creates new `Interval` that yields with interval of…",null,[[["duration"],["instant"]],["interval"]]],[5,"timeout","","Require a `Future` to complete before the specified…",null,[[["t"],["duration"]],["timeout"]]],[5,"timeout_at","","Require a `Future` to complete before the specified…",null,[[["t"],["instant"]],["timeout"]]],[5,"throttle","","Slows down a stream by enforcing a delay between items.…",null,[[["t"],["duration"]],["throttle"]]],[0,"delay_queue","","A queue of delayed elements.",null,null],[3,"DelayQueue","tokio::time::delay_queue","A queue of delayed elements.",null,null],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",null,null],[3,"Key","","Token to a value stored in a `DelayQueue`.",null,null],[11,"new","","Creates a new, empty, `DelayQueue`",58,[[],["delayqueue"]]],[11,"with_capacity","","Creates a new, empty, `DelayQueue` with the specified…",58,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Inserts `value` into the queue set to expire at a specific…",58,[[["self"],["t"],["instant"]],["key"]]],[11,"poll_expired","","Attempts to pull out the next value of the delay queue,…",58,[[["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"insert","","Inserts `value` into the queue set to expire after the…",58,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Removes the item associated with `key` from the queue.",58,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",58,[[["instant"],["self"],["key"]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",58,[[["duration"],["self"],["key"]]]],[11,"clear","","Clears the queue, removing all items.",58,[[["self"]]]],[11,"capacity","","Returns the number of elements the queue can hold without…",58,[[["self"]],["usize"]]],[11,"len","","Returns the number of elements currently in the queue.",58,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more items to…",58,[[["self"],["usize"]]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",58,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the inner value.",59,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",59,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",59,[[],["t"]]],[11,"deadline","","Returns the deadline that the expiration was set to.",59,[[["self"]],["instant"]]],[11,"deadline","tokio::time","Returns the instant at which the future will complete.",60,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns `true` if the `Delay` has elapsed",60,[[["self"]],["bool"]]],[11,"reset","","Resets the `Delay` instance to a new deadline.",60,[[["self"],["instant"]]]],[11,"shutdown","","Creates an error representing a shutdown timer.",61,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",61,[[["self"]],["bool"]]],[11,"at_capacity","","Creates an error representing a timer at capacity.",61,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",61,[[["self"]],["bool"]]],[11,"now","","Returns an instant corresponding to \"now\".",62,[[],["instant"]]],[11,"from_std","","Create a `tokio::time::Instant` from a `std::time::Instant`.",62,[[["instant"]],["instant"]]],[11,"into_std","","Convert the value into a `std::time::Instant`.",62,[[],["instant"]]],[11,"duration_since","","Returns the amount of time elapsed from another instant to…",62,[[["self"],["instant"]],["duration"]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant to…",62,[[["self"],["instant"]],[["option",["duration"]],["duration"]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant to…",62,[[["self"],["instant"]],["duration"]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was…",62,[[["self"]],["duration"]]],[11,"checked_add","","Returns `Some(t)` where `t` is the time `self + duration`…",62,[[["self"],["duration"]],[["option",["instant"]],["instant"]]]],[11,"checked_sub","","Returns `Some(t)` where `t` is the time `self - duration`…",62,[[["self"],["duration"]],[["option",["instant"]],["instant"]]]],[11,"tick","","Completes when the next instant in the interval has been…",63,[[["self"]]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",64,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",64,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",64,[[],["t"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",65,[[["self"]],["t"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",65,[[["self"]],["t"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",65,[[],["t"]]],[14,"pin","tokio","Pins a value on the stack.",null,null],[14,"scoped_thread_local","","Set a reference as a thread-local",null,null],[14,"select","","Wait on multiple concurrent branches, returning when the…",null,null],[14,"join","","Wait on multiple concurrent branches, returning when all…",null,null],[14,"try_join","","Wait on multiple concurrent branches, returning when all…",null,null],[11,"from","tokio::fs","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_poll_next","","",2,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","tokio::io","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"try_poll","","",70,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"try_poll","","",71,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"try_poll_next","","",12,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"try_poll_next","","",13,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","tokio::net","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"try_poll_next","","",23,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","tokio::net::tcp","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"try_poll_next","","",24,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","tokio::runtime","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","tokio::task","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"try_poll","","",79,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tokio::stream","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"try_poll_next","","",80,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"try_poll_next","","",81,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"try_poll_next","","",82,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"try_poll_next","","",83,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","tokio::sync","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"from","","",48,[[],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_string","","",84,[[["self"]],["string"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"from","","",55,[[],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","tokio::sync::broadcast","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"try_poll_next","","",39,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","tokio::sync::mpsc","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"try_poll_next","","",40,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"try_poll_next","","",42,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","tokio::sync::mpsc::error","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_string","","",87,[[["self"]],["string"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","tokio::sync::oneshot","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"try_poll","","",52,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tokio::sync::oneshot::error","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","tokio::sync::watch","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"try_poll_next","","",56,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","tokio::sync::watch::error","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_string","","",91,[[["self"]],["string"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","tokio::time","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","tokio::time::delay_queue","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"try_poll_next","","",58,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","tokio::time","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"try_poll","","",64,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"try_poll_next","","",65,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","tokio::time::delay_queue","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"cmp","tokio::io","",4,[[["errorkind"],["self"]],["ordering"]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",66,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",66,[[["nulerror"]],["error"]]],[11,"from","","",66,[[["intoinnererror"]],["error"]]],[11,"description","","",66,[[["self"]],["str"]]],[11,"cause","","",66,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",66,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",4,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",4,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",4,[[["errorkind"],["self"]],["bool"]]],[11,"sub_assign","tokio::time","",92,[[["self"],["duration"]]]],[11,"clone","","",92,[[["self"]],["duration"]]],[11,"eq","","",92,[[["self"],["duration"]],["bool"]]],[11,"ne","","",92,[[["self"],["duration"]],["bool"]]],[11,"fmt","","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"div","","",92,[[["u32"]],["duration"]]],[11,"cmp","","",92,[[["self"],["duration"]],["ordering"]]],[11,"mul","","",92,[[["u32"]],["duration"]]],[11,"mul_assign","","",92,[[["self"],["u32"]]]],[11,"sum","","",92,[[["i"]],["duration"]]],[11,"sum","","",92,[[["i"]],["duration"]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"sub","","",92,[[["duration"]],["duration"]]],[11,"add","","",92,[[["duration"]],["duration"]]],[11,"default","","",92,[[],["duration"]]],[11,"div_assign","","",92,[[["self"],["u32"]]]],[11,"add_assign","","",92,[[["self"],["duration"]]]],[11,"partial_cmp","","",92,[[["self"],["duration"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",92,[[["self"],["duration"]],["bool"]]],[11,"le","","",92,[[["self"],["duration"]],["bool"]]],[11,"gt","","",92,[[["self"],["duration"]],["bool"]]],[11,"ge","","",92,[[["self"],["duration"]],["bool"]]],[11,"poll_fill_buf","tokio::io","",9,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",9,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",10,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",10,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",11,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",11,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",72,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",72,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",75,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",75,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",14,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",14,[[["pin"],["self"],["usize"]]]],[11,"poll_read","tokio::fs","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","tokio::io","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",68,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",7,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","","",7,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","","",9,[[["self"]],["bool"]]],[11,"poll_read","","",10,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","","",10,[[["self"]],["bool"]]],[11,"poll_read","","",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","","",11,[[["self"]],["bool"]]],[11,"poll_read","","",72,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",73,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",75,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","","",75,[[["pin"],["bm"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","","",75,[[["self"]],["bool"]]],[11,"prepare_uninitialized_buffer","","",14,[[["self"]],["bool"]]],[11,"poll_read","","",14,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"prepare_uninitialized_buffer","tokio::net::tcp","",25,[[["self"]],["bool"]]],[11,"poll_read","","",25,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","tokio::net","",26,[[["self"]],["bool"]]],[11,"poll_read","","",26,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"start_seek","tokio::fs","",0,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_complete","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_write","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","tokio::io","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",67,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",67,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",67,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",69,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",69,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",69,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",8,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",8,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",8,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","","",8,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",10,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",10,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",10,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",74,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",74,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",74,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","tokio::net::tcp","",76,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","",76,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",76,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",76,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","tokio::net","",26,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","",26,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",26,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",26,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"drop","tokio::io","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","tokio::task","",79,[[["self"]]]],[11,"drop","tokio::sync::broadcast","",38,[[["self"]]]],[11,"drop","","",39,[[["self"]]]],[11,"drop","tokio::sync","",84,[[["self"]]]],[11,"drop","tokio::sync::oneshot","",51,[[["self"]]]],[11,"drop","","",52,[[["self"]]]],[11,"drop","tokio::sync","",54,[[["self"]]]],[11,"drop","tokio::sync::watch","",56,[[["self"]]]],[11,"drop","","",57,[[["self"]]]],[11,"as_ref","tokio::net::tcp","",25,[[["self"]],["tcpstream"]]],[11,"as_ref","","",76,[[["self"]],["tcpstream"]]],[11,"from","tokio::fs","",0,[[["file"]],["self"]]],[11,"from","","",1,[[["openoptions"]],["openoptions"]]],[11,"from","tokio::io","",10,[[["bufreader",["bufwriter"]],["bufwriter"]],["self"]]],[11,"from","","",10,[[["bufreader"],["bufwriter",["bufreader"]]],["self"]]],[11,"from","","",66,[[["joinerror"]],["error"]]],[11,"from","tokio::sync::mpsc::error","",44,[[],["senderror"]]],[11,"from","","",45,[[],["trysenderror"]]],[11,"from","","",45,[[["senderror"]],["trysenderror"]]],[11,"from","tokio::sync","",48,[[["t"]],["self"]]],[11,"from","","",55,[[["t"]],["self"]]],[11,"from","tokio::time","",62,[[["instant"]],["instant"]]],[11,"from","tokio::io","",66,[[["elapsed"]],["error"]]],[11,"clone","tokio::fs","",1,[[["self"]],["openoptions"]]],[11,"clone","tokio::runtime","",28,[[["self"]],["handle"]]],[11,"clone","tokio::sync","",34,[[["self"]],["barrierwaitresult"]]],[11,"clone","tokio::sync::broadcast","",38,[[["self"]],["sender"]]],[11,"clone","tokio::sync::mpsc","",41,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","tokio::sync::watch","",56,[[["self"]],["self"]]],[11,"clone","tokio::time::delay_queue","",94,[[["self"]],["key"]]],[11,"clone","tokio::time","",62,[[["self"]],["instant"]]],[11,"default","tokio::fs","",1,[[],["self"]]],[11,"default","tokio::runtime","",27,[[],["self"]]],[11,"default","tokio::stream","",31,[[],["streammap"]]],[11,"default","tokio::sync","",48,[[],["self"]]],[11,"default","","",49,[[],["notify"]]],[11,"default","","",55,[[],["self"]]],[11,"default","tokio::time::delay_queue","",58,[[],["delayqueue"]]],[11,"cmp","tokio::time","",62,[[["self"],["instant"]],["ordering"]]],[11,"eq","tokio::sync::broadcast","",36,[[["recverror"],["self"]],["bool"]]],[11,"ne","","",36,[[["recverror"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["tryrecverror"]],["bool"]]],[11,"ne","","",37,[[["self"],["tryrecverror"]],["bool"]]],[11,"eq","tokio::sync::mpsc::error","",46,[[["tryrecverror"],["self"]],["bool"]]],[11,"eq","tokio::sync::oneshot::error","",89,[[["recverror"],["self"]],["bool"]]],[11,"ne","","",89,[[["recverror"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["tryrecverror"]],["bool"]]],[11,"eq","tokio::time","",62,[[["self"],["instant"]],["bool"]]],[11,"ne","","",62,[[["self"],["instant"]],["bool"]]],[11,"eq","","",93,[[["self"],["elapsed"]],["bool"]]],[11,"ne","","",93,[[["self"],["elapsed"]],["bool"]]],[11,"partial_cmp","","",62,[[["self"],["instant"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",62,[[["self"],["instant"]],["bool"]]],[11,"le","","",62,[[["self"],["instant"]],["bool"]]],[11,"gt","","",62,[[["self"],["instant"]],["bool"]]],[11,"ge","","",62,[[["self"],["instant"]],["bool"]]],[11,"deref","tokio::sync","",84,[[["self"]]]],[11,"deref","","",85,[[["self"]],["t"]]],[11,"deref","","",86,[[["self"]],["t"]]],[11,"deref","tokio::sync::watch","",90,[[["self"]],["t"]]],[11,"deref_mut","tokio::sync","",84,[[["self"]]]],[11,"deref_mut","","",86,[[["self"]],["t"]]],[11,"fmt","tokio::fs","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::io","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::tcp","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::runtime","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::stream","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::broadcast","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::mpsc","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::mpsc::error","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::oneshot","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::oneshot::error","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::watch","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::watch::error","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time::delay_queue","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::runtime","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::broadcast","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::mpsc::error","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::oneshot::error","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::watch::error","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"sub","","",62,[[["instant"]],["duration"]]],[11,"sub","","",62,[[["duration"]],["instant"]]],[11,"add","","",62,[[["duration"]],["instant"]]],[11,"add_assign","","",62,[[["self"],["duration"]]]],[11,"sub_assign","","",62,[[["self"],["duration"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"try_from","tokio::net","Consumes stream, returning the tokio I/O object.",23,[[["tcplistener"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",26,[[["tcpstream"]],["result"]]],[11,"ino","tokio::fs","",3,[[["self"]],["u64"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"as_raw_fd","tokio::io","",67,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",68,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",69,[[["self"]],["rawfd"]]],[11,"as_raw_fd","tokio::net","",23,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",26,[[["self"]],["rawfd"]]],[11,"poll","tokio::io","",70,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",71,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll","tokio::task","",79,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::sync::oneshot","",52,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::time","",60,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",64,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll_next","tokio::fs","",2,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::io","",12,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",13,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::net","",23,[[["self"],["pin"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::net::tcp","",24,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::stream","",80,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",80,[[["self"]]]],[11,"poll_next","","",81,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",81,[[["self"]]]],[11,"poll_next","","",82,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",82,[[["self"]]]],[11,"poll_next","","",83,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",83,[[["self"]]]],[11,"poll_next","","",31,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",31,[[["self"]]]],[11,"poll_next","tokio::sync::broadcast","",39,[[["self"],["pin"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"poll_next","tokio::sync::mpsc","",40,[[["self"],["pin"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",42,[[["self"],["pin"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::sync::watch","",56,[[["self"],["pin"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::time::delay_queue","",58,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::time","",63,[[["pin"],["self"],["context"]],[["option",["instant"]],["poll",["option"]]]]],[11,"poll_next","","",65,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"new","tokio::io","Creates a new I/O error from a known kind of error as well…",66,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",66,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",66,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",66,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",66,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",66,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",66,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",66,[[["self"]],["errorkind"]]],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",16,[[["self"]],["bool"]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",16,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",18,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"read_until","","Reads all bytes into `buf` until the delimiter `byte` or…",19,[[["vec"],["self"],["u8"]],["readuntil"]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is reached,…",19,[[["self"],["string"]],["readline"]]],[11,"split","","Returns a stream of the contents of this reader split on…",19,[[["u8"]],["split"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",19,[[],["lines"]]],[11,"chain","","Creates a new `AsyncRead` instance that chains this stream…",20,[[["r"]],["chain"]]],[11,"read","","Pulls some bytes from this source into the specified…",20,[[["self"]],["read"]]],[11,"read_buf","","Pulls some bytes from this source into the specified…",20,[[["self"],["b"]],["readbuf"]]],[11,"read_exact","","Reads the exact number of bytes required to fill `buf`.",20,[[["self"]],["readexact"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",20,[[["self"]],[["self"],["readu8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",20,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",20,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readu32"]]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",20,[[["self"]],[["readi32"],["self"]]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from…",20,[[["self"]],[["self"],["readi64"]]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order from…",20,[[["self"]],[["readu128"],["self"]]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from…",20,[[["self"]],[["readi128"],["self"]]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them…",20,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them…",20,[[["self"],["string"]],["readtostring"]]],[11,"take","","Creates an adaptor which reads at most `limit` bytes from…",20,[[["u64"]],["take"]]],[11,"seek","","Creates a future which will seek an IO object, and then…",21,[[["seekfrom"],["self"]],["seek"]]],[11,"write","","Writes a buffer into this writer, returning how many bytes…",22,[[["self"]],["write"]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer's…",22,[[["self"],["b"]],["writebuf"]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",22,[[["self"]],["writeall"]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",22,[[["self"],["u8"]],[["self"],["writeu8"]]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",22,[[["self"],["i8"]],[["self"],["writei8"]]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to…",22,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the…",22,[[["self"],["i16"]],[["self"],["writei16"]]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to…",22,[[["self"],["u32"]],[["writeu32"],["self"]]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the…",22,[[["self"],["i32"]],[["self"],["writei32"]]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to…",22,[[["self"],["u64"]],[["writeu64"],["self"]]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",22,[[["i64"],["self"]],[["self"],["writei64"]]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to…",22,[[["self"],["u128"]],[["writeu128"],["self"]]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to…",22,[[["self"],["i128"]],[["self"],["writei128"]]]],[11,"flush","","Flushes this output stream, ensuring that all…",22,[[["self"]],["flush"]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can…",22,[[["self"]],["shutdown"]]],[11,"is_cancelled","tokio::task","Returns true if the error was caused by the task being…",78,[[["self"]],["bool"]]],[11,"is_panic","","Returns true if the error was caused by the task panicking",78,[[["self"]],["bool"]]],[11,"into_panic","","Consumes the join error, returning the object with which…",78,[[],[["any"],["box",["any"]]]]],[11,"try_into_panic","","Consumes the join error, returning the object with which…",78,[[],[["result",["box","joinerror"]],["box",["any"]],["joinerror"]]]],[18,"SECOND","tokio::time","The duration of one second.",92,null],[18,"MILLISECOND","","The duration of one millisecond.",92,null],[18,"MICROSECOND","","The duration of one microsecond.",92,null],[18,"NANOSECOND","","The duration of one nanosecond.",92,null],[11,"new","","Creates a new `Duration` from the specified number of…",92,[[["u32"],["u64"]],["duration"]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",92,[[["u64"]],["duration"]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",92,[[["u64"]],["duration"]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",92,[[["u64"]],["duration"]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",92,[[["u64"]],["duration"]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",92,[[["self"]],["u64"]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",92,[[["self"]],["u32"]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",92,[[["self"]],["u32"]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",92,[[["self"]],["u32"]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",92,[[["self"]],["u128"]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",92,[[["self"]],["u128"]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",92,[[["self"]],["u128"]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",92,[[["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",92,[[["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",92,[[["u32"]],[["option",["duration"]],["duration"]]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",92,[[["u32"]],[["option",["duration"]],["duration"]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this `Duration`…",92,[[["self"]],["f64"]]],[11,"as_secs_f32","","Returns the number of seconds contained by this `Duration`…",92,[[["self"]],["f32"]]],[11,"from_secs_f64","","Creates a new `Duration` from the specified number of…",92,[[["f64"]],["duration"]]],[11,"from_secs_f32","","Creates a new `Duration` from the specified number of…",92,[[["f32"]],["duration"]]],[11,"mul_f64","","Multiplies `Duration` by `f64`.",92,[[["f64"]],["duration"]]],[11,"mul_f32","","Multiplies `Duration` by `f32`.",92,[[["f32"]],["duration"]]],[11,"div_f64","","Divide `Duration` by `f64`.",92,[[["f64"]],["duration"]]],[11,"div_f32","","Divide `Duration` by `f32`.",92,[[["f32"]],["duration"]]],[11,"div_duration_f64","","Divide `Duration` by `Duration` and return `f64`.",92,[[["duration"]],["f64"]]],[11,"div_duration_f32","","Divide `Duration` by `Duration` and return `f32`.",92,[[["duration"]],["f32"]]]],"p":[[3,"File"],[3,"OpenOptions"],[3,"ReadDir"],[3,"DirEntry"],[4,"ErrorKind"],[3,"PollEvented"],[3,"Registration"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"BufReader"],[3,"BufStream"],[3,"BufWriter"],[3,"Lines"],[3,"Split"],[3,"Take"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[8,"AsyncBufReadExt"],[8,"AsyncReadExt"],[8,"AsyncSeekExt"],[8,"AsyncWriteExt"],[3,"TcpListener"],[3,"Incoming"],[3,"ReadHalf"],[3,"TcpStream"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[8,"Stream"],[3,"StreamMap"],[8,"StreamExt"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"SendError"],[4,"RecvError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Receiver"],[3,"Sender"],[3,"UnboundedReceiver"],[3,"UnboundedSender"],[3,"SendError"],[4,"TrySendError"],[4,"TryRecvError"],[4,"SendTimeoutError"],[3,"Mutex"],[3,"Notify"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"SemaphorePermit"],[3,"RwLock"],[3,"Receiver"],[3,"Sender"],[3,"DelayQueue"],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Throttle"],[3,"Error"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Seek"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StreamReader"],[3,"WriteHalf"],[3,"TryCurrentError"],[3,"JoinError"],[3,"JoinHandle"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RecvError"],[3,"ClosedError"],[3,"RecvError"],[3,"Ref"],[3,"SendError"],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]};
searchIndex["tokio_codec"] = {"doc":"Utilities for encoding and decoding frames.","i":[[8,"Decoder","tokio_codec","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",0,null],[16,"Error","","The type of unrecoverable frame decoding errors.",0,null],[10,"decode","","Attempts to decode a frame from the provided buffer of…",0,[[["bytesmut"],["self"]],[["result",["option"]],["option"]]]],[11,"decode_eof","","A default method available to be called when there are no…",0,[[["bytesmut"],["self"]],[["result",["option"]],["option"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",0,[[["t"]],["framed"]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes,…",null,null],[16,"Item","","The type of items consumed by the `Encoder`",1,null],[16,"Error","","The type of encoding errors.",1,null],[10,"encode","","Encodes a frame into the buffer provided.",1,[[["bytesmut"],["self"]],["result"]]],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying…",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed…",null,null],[12,"io","","The inner transport used to read bytes to and write bytes to",2,null],[12,"codec","","The codec",2,null],[12,"read_buf","","The buffer with read but unprocessed data.",2,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",2,null],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",null,null],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",null,null],[3,"BytesCodec","","A simple `Codec` implementation that just ships bytes…",null,null],[3,"LinesCodec","","A simple `Codec` implementation that splits up data into…",null,null],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",3,[[],["bytescodec"]]],[11,"new","","Returns a `LinesCodec` for splitting up data into lines.",4,[[],["linescodec"]]],[11,"new_with_max_length","","Returns a `LinesCodec` with a maximum line length limit.",4,[[["usize"]],["self"]]],[11,"max_length","","Returns the maximum line length when decoding.",4,[[["self"]],["usize"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"poll","","",6,[[["self"]],[["async",["option"]],["result",["async"]]]]],[11,"poll","","",5,[[["self"]],[["async",["option"]],["result",["async"]]]]],[11,"poll","","",7,[[["self"]],[["result",["async"]],["async",["option"]]]]],[11,"start_send","","",6,[[["self"]],[["result",["asyncsink"]],["asyncsink"]]]],[11,"poll_complete","","",6,[[["self"]],[["async"],["result",["async"]]]]],[11,"close","","",6,[[["self"]],[["async"],["result",["async"]]]]],[11,"start_send","","",5,[[["self"]],[["asyncsink"],["result",["asyncsink"]]]]],[11,"poll_complete","","",5,[[["self"]],[["async"],["result",["async"]]]]],[11,"close","","",5,[[["self"]],[["async"],["result",["async"]]]]],[11,"start_send","","",7,[[["self"]],[["result",["asyncsink"]],["asyncsink"]]]],[11,"poll_complete","","",7,[[["self"]],[["async"],["result",["async"]]]]],[11,"close","","",7,[[["self"]],[["async"],["result",["async"]]]]],[11,"clone","","",3,[[["self"]],["bytescodec"]]],[11,"clone","","",4,[[["self"]],["linescodec"]]],[11,"cmp","","",3,[[["bytescodec"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["linescodec"],["self"]],["ordering"]]],[11,"eq","","",3,[[["bytescodec"],["self"]],["bool"]]],[11,"ne","","",3,[[["bytescodec"],["self"]],["bool"]]],[11,"eq","","",4,[[["linescodec"],["self"]],["bool"]]],[11,"ne","","",4,[[["linescodec"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["bytescodec"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["bytescodec"],["self"]],["bool"]]],[11,"le","","",3,[[["bytescodec"],["self"]],["bool"]]],[11,"gt","","",3,[[["bytescodec"],["self"]],["bool"]]],[11,"ge","","",3,[[["bytescodec"],["self"]],["bool"]]],[11,"partial_cmp","","",4,[[["linescodec"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["linescodec"],["self"]],["bool"]]],[11,"le","","",4,[[["linescodec"],["self"]],["bool"]]],[11,"gt","","",4,[[["linescodec"],["self"]],["bool"]]],[11,"ge","","",4,[[["linescodec"],["self"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"decode","","",3,[[["self"],["bytesmut"]],[["result",["option","error"]],["option",["bytesmut"]],["error"]]]],[11,"decode","","",4,[[["self"],["bytesmut"]],[["option",["string"]],["result",["option","error"]],["error"]]]],[11,"decode_eof","","",4,[[["self"],["bytesmut"]],[["option",["string"]],["result",["option","error"]],["error"]]]],[11,"encode","","",3,[[["self"],["bytesmut"],["bytes"]],[["result",["error"]],["error"]]]],[11,"encode","","",4,[[["self"],["string"],["bytesmut"]],[["result",["error"]],["error"]]]],[11,"new","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["u"],["t"]],["framed"]]],[11,"from_parts","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["framedparts"]],["framed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",5,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",5,[[["self"]],["t"]]],[11,"codec","","Returns a reference to the underlying codec wrapped by…",5,[[["self"]],["u"]]],[11,"codec_mut","","Returns a mutable reference to the underlying codec…",5,[[["self"]],["u"]]],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",5,[[],["t"]]],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream,…",5,[[],["framedparts"]]],[11,"new","","Create a new, default, `FramedParts`",2,[[["u"],["t"]],["framedparts"]]],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",6,[[["d"],["t"]],["framedread"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",6,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",6,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O…",6,[[],["t"]]],[11,"decoder","","Returns a reference to the underlying decoder.",6,[[["self"]],["d"]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",6,[[["self"]],["d"]]],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",7,[[["t"],["e"]],["framedwrite"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",7,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",7,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O…",7,[[],["t"]]],[11,"encoder","","Returns a reference to the underlying decoder.",7,[[["self"]],["e"]]],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",7,[[["self"]],["e"]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[3,"BytesCodec"],[3,"LinesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"]]};
searchIndex["tokio_current_thread"] = {"doc":"A single-threaded executor which executes tasks on the…","i":[[3,"CurrentThread","tokio_current_thread","Executes tasks on the current thread",null,null],[3,"TaskExecutor","","Executes futures on the current thread.",null,null],[3,"Turn","","Returned by the `turn` function.",null,null],[3,"Entered","","A `CurrentThread` instance bound to a supplied execution…",null,null],[3,"RunError","","Error returned by the `run` function.",null,null],[3,"RunTimeoutError","","Error returned by the `run_timeout` function.",null,null],[3,"TurnError","","Error returned by the `turn` function.",null,null],[3,"BlockError","","Error returned by the `block_on` function.",null,null],[3,"Handle","","Handle to spawn a future on the corresponding…",null,null],[5,"block_on_all","","Run the executor bootstrapping the execution with the…",null,[[["f"]],["result"]]],[5,"spawn","","Executes a future on the current thread.",null,[[["f"]]]],[11,"has_polled","","`true` if any futures were polled at all and `false`…",0,[[["self"]],["bool"]]],[11,"new","","Create a new instance of `CurrentThread`.",1,[[],["self"]]],[11,"new_with_park","","Create a new instance of `CurrentThread` backed by the…",1,[[["p"]],["self"]]],[11,"is_idle","","Returns `true` if the executor is currently idle.",1,[[["self"]],["bool"]]],[11,"spawn","","Spawn the future on the executor.",1,[[["self"],["f"]],["self"]]],[11,"block_on","","Synchronously waits for the provided `future` to complete.",1,[[["self"],["f"]],[["result",["blockerror"]],["blockerror"]]]],[11,"run","","Run the executor to completion, blocking the thread until…",1,[[["self"]],[["runerror"],["result",["runerror"]]]]],[11,"run_timeout","","Run the executor to completion, blocking the thread until…",1,[[["self"],["duration"]],[["result",["runtimeouterror"]],["runtimeouterror"]]]],[11,"turn","","Perform a single iteration of the event loop.",1,[[["option",["duration"]],["self"],["duration"]],[["turn"],["turnerror"],["result",["turn","turnerror"]]]]],[11,"enter","","Bind `CurrentThread` instance with an execution context.",1,[[["self"],["enter"]],["entered"]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",1,[[["self"]],["p"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",1,[[["self"]],["p"]]],[11,"handle","","Get a new handle to spawn futures on the executor",1,[[["self"]],["handle"]]],[11,"spawn","","Spawn the future on the executor.",2,[[["self"],["f"]],["self"]]],[11,"block_on","","Synchronously waits for the provided `future` to complete.",2,[[["self"],["f"]],[["result",["blockerror"]],["blockerror"]]]],[11,"run","","Run the executor to completion, blocking the thread until…",2,[[["self"]],[["runerror"],["result",["runerror"]]]]],[11,"run_timeout","","Run the executor to completion, blocking the thread until…",2,[[["self"],["duration"]],[["result",["runtimeouterror"]],["runtimeouterror"]]]],[11,"turn","","Perform a single iteration of the event loop.",2,[[["option",["duration"]],["self"],["duration"]],[["turn"],["turnerror"],["result",["turn","turnerror"]]]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",2,[[["self"]],["p"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",2,[[["self"]],["p"]]],[11,"spawn","","Spawn a future onto the `CurrentThread` instance…",3,[[["self"],["f"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",3,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"current","","Returns an executor that executes futures on the current…",4,[[],["taskexecutor"]]],[11,"spawn_local","","Spawn a future onto the current `CurrentThread` instance.",4,[[["future"],["self"],["box",["future"]]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"is_timeout","","Returns `true` if the error was caused by the operation…",5,[[["self"]],["bool"]]],[11,"into_inner","","Returns the error yielded by the future being blocked on",6,[[],["option"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"from","","",5,[[["entererror"]],["self"]]],[11,"from","","",6,[[["entererror"]],["self"]]],[11,"clone","","",4,[[["self"]],["taskexecutor"]]],[11,"clone","","",3,[[["self"]],["handle"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"execute","","",4,[[["self"],["f"]],[["result",["executeerror"]],["executeerror"]]]],[11,"spawn","","",1,[[["self"],["future"],["box",["future"]]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn","","",4,[[["self"],["future"],["box",["future"]]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn","","",1,[[["self"],["t"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn","","",4,[[["self"],["f"]],[["result",["spawnerror"]],["spawnerror"]]]]],"p":[[3,"Turn"],[3,"CurrentThread"],[3,"Entered"],[3,"Handle"],[3,"TaskExecutor"],[3,"RunTimeoutError"],[3,"BlockError"],[3,"RunError"],[3,"TurnError"]]};
searchIndex["tokio_executor"] = {"doc":"Task execution related traits and utilities.","i":[[3,"Enter","tokio_executor","Represents an executor context.",null,null],[3,"EnterError","","An error returned by `enter` if an execution scope has…",null,null],[3,"SpawnError","","Errors returned by `Executor::spawn`.",null,null],[3,"DefaultExecutor","","Executes futures on the default executor for the current…",null,null],[3,"DefaultGuard","","Ensures that the executor is removed from the thread-local…",null,null],[5,"enter","","Marks the current thread as being within the dynamic…",null,[[],[["result",["enter","entererror"]],["enter"],["entererror"]]]],[5,"set_default","","Sets `executor` as the default executor, returning a guard…",null,[[["t"]],["defaultguard"]]],[5,"spawn","","Submits a future for execution on the default executor --…",null,[[["t"]]]],[5,"with_default","","Set the default executor for the duration of the closure",null,[[["enter"],["t"],["f"]],["r"]]],[11,"on_exit","","Register a callback to be invoked if and when the thread…",0,[[["self"],["f"]]]],[11,"make_permanent","","Treat the remainder of execution on this thread as part of…",0,[[]]],[11,"block_on","","Blocks the thread on the specified future, returning the…",0,[[["self"],["future"]],["result"]]],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor…",1,[[],["self"]]],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at…",1,[[],["self"]]],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor…",1,[[["self"]],["bool"]]],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at…",1,[[["self"]],["bool"]]],[11,"current","","Returns a handle to the default executor for the current…",2,[[],["defaultexecutor"]]],[0,"park","","Abstraction over blocking and unblocking the current thread.",null,null],[3,"ParkThread","tokio_executor::park","Blocks the current thread using a condition variable.",null,null],[3,"ParkError","","Error returned by [`ParkThread`]",null,null],[3,"UnparkThread","","Unblocks a thread that was blocked by `ParkThread`.",null,null],[8,"Park","","Block the current thread.",null,null],[16,"Unpark","","Unpark handle type for the `Park` implementation.",3,null],[16,"Error","","Error returned by `park`",3,null],[10,"unpark","","Get a new `Unpark` handle associated with this `Park`…",3,[[["self"]]]],[10,"park","","Block the current thread unless or until the token is…",3,[[["self"]],["result"]]],[10,"park_timeout","","Park the current thread for at most `duration`.",3,[[["self"],["duration"]],["result"]]],[8,"Unpark","","Unblock a thread blocked by the associated [`Park`]…",null,null],[10,"unpark","","Unblock a thread that is blocked by the associated `Park`…",4,[[["self"]]]],[11,"new","","Create a new `ParkThread` handle for the current thread.",5,[[],["parkthread"]]],[8,"Executor","tokio_executor","A value that executes futures.",null,null],[10,"spawn","","Spawns a future object to run on this executor.",6,[[["future"],["self"],["box",["future"]]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",6,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[8,"TypedExecutor","","A value that spawns futures of a specific type.",null,null],[10,"spawn","","Spawns a future to run on this executor.",7,[[["self"],["t"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",7,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","tokio_executor::park","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"spawn","tokio_executor","",2,[[["future"],["self"],["box",["future"]]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","",2,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"unpark","tokio_executor::park","",5,[[["self"]]]],[11,"park","","",5,[[["self"]],["result"]]],[11,"park_timeout","","",5,[[["self"],["duration"]],["result"]]],[11,"unpark","","",11,[[["self"]]]],[11,"spawn","tokio_executor","",2,[[["self"],["t"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","",2,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"clone","","",2,[[["self"]],["defaultexecutor"]]],[11,"clone","tokio_executor::park","",11,[[["self"]],["unparkthread"]]],[11,"fmt","tokio_executor","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor::park","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"execute","","",2,[[["self"],["t"]],[["result",["executeerror"]],["executeerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",6,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",7,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]]],"p":[[3,"Enter"],[3,"SpawnError"],[3,"DefaultExecutor"],[8,"Park"],[8,"Unpark"],[3,"ParkThread"],[8,"Executor"],[8,"TypedExecutor"],[3,"EnterError"],[3,"DefaultGuard"],[3,"ParkError"],[3,"UnparkThread"]]};
searchIndex["tokio_fs"] = {"doc":"Asynchronous file and standard stream adaptation.","i":[[3,"CreateDirFuture","tokio_fs","Future returned by `create_dir`.",null,null],[3,"CreateDirAllFuture","","Future returned by `create_dir_all`.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"HardLinkFuture","","Future returned by `hard_link`.",null,null],[3,"MetadataFuture","","Future returned by `metadata`.",null,null],[3,"ReadFile","","A future used to open a file and read its entire contents…",null,null],[3,"DirEntry","","Entries returned by the [`ReadDir`] stream.",null,null],[3,"ReadDir","","Stream of the entries in a directory.",null,null],[3,"ReadDirFuture","","Future returned by `read_dir`.",null,null],[3,"ReadLinkFuture","","Future returned by `read_link`.",null,null],[3,"RemoveDirFuture","","Future returned by `remove_dir`.",null,null],[3,"RemoveFileFuture","","Future returned by `remove_file`.",null,null],[3,"RenameFuture","","Future returned by `rename`.",null,null],[3,"SetPermissionsFuture","","Future returned by `set_permissions`.",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[3,"SymlinkMetadataFuture","","Future returned by `symlink_metadata`.",null,null],[3,"WriteFile","","A future used to open a file for writing and write the…",null,null],[5,"create_dir","","Creates a new, empty directory at the provided path",null,[[["path"],["asref",["path"]]],[["path"],["createdirfuture"],["asref",["path"]]]]],[5,"create_dir_all","","Recursively create a directory and all of its parent…",null,[[["path"],["asref",["path"]]],[["createdirallfuture"],["path"],["asref",["path"]]]]],[5,"hard_link","","Creates a new hard link on the filesystem.",null,[[["path"],["asref",["path"]]],[["hardlinkfuture"],["asref",["path"]],["path"]]]],[5,"metadata","","Queries the file system metadata for a path.",null,[[["p"]],["metadatafuture"]]],[5,"read","","Creates a future which will open a file for reading and…",null,[[["p"]],["readfile"]]],[5,"read_dir","","Returns a stream over the entries within a directory.",null,[[["p"]],["readdirfuture"]]],[5,"read_link","","Reads a symbolic link, returning the file that the link…",null,[[["path"],["asref",["path"]]],[["readlinkfuture"],["path"],["asref",["path"]]]]],[5,"remove_dir","","Removes an existing, empty directory.",null,[[["path"],["asref",["path"]]],[["path"],["removedirfuture"],["asref",["path"]]]]],[5,"remove_file","","Removes a file from the filesystem.",null,[[["path"],["asref",["path"]]],[["removefilefuture"],["path"],["asref",["path"]]]]],[5,"rename","","Rename a file or directory to a new name, replacing the…",null,[[["path"],["asref",["path"]]],[["renamefuture"],["asref",["path"]],["path"]]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,[[["path"],["permissions"],["asref",["path"]]],[["path"],["setpermissionsfuture"],["asref",["path"]]]]],[5,"stderr","","Constructs a new handle to the standard error of the…",null,[[],["stderr"]]],[5,"stdin","","Constructs a new handle to the standard input of the…",null,[[],["stdin"]]],[5,"stdout","","Constructs a new handle to the standard output of the…",null,[[],["stdout"]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",null,[[["p"]],["symlinkmetadatafuture"]]],[5,"write","","Creates a future that will open a file for writing and…",null,[[["asref"],["p"]],[["writefile"],["asref"]]]],[0,"file","","Types for working with [`File`].",null,null],[3,"CloneFuture","tokio_fs::file","Future returned by `File::try_clone`.",null,null],[3,"CreateFuture","","Future returned by `File::create` and resolves to a `File`…",null,null],[3,"MetadataFuture","","Future returned by `File::metadata` and resolves to a…",null,null],[3,"OpenFuture","","Future returned by `File::open` and resolves to a `File`…",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"SeekFuture","","Future returned by `File::seek`.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[11,"new","tokio_fs","Creates a blank new set of options ready for configuration.",0,[[],["openoptions"]]],[11,"read","","See the underlying [`read`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"write","","See the underlying [`write`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"append","","See the underlying [`append`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"truncate","","See the underlying [`truncate`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"create","","See the underlying [`create`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"create_new","","See the underlying [`create_new`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"open","","Opens a file at `path` with the options specified by `self`.",0,[[["self"],["p"]],["openfuture"]]],[11,"open","tokio_fs::file","Attempts to open a file in read-only mode.",1,[[["p"]],["openfuture"]]],[11,"create","","Opens a file in write-only mode.",1,[[["p"]],["createfuture"]]],[11,"from_std","","Convert a [`std::fs::File`][std] to a…",1,[[["stdfile"]],["file"]]],[11,"poll_seek","","Seek to an offset, in bytes, in a stream.",1,[[["self"],["seekfrom"]],[["error"],["poll",["u64","error"]],["u64"]]]],[11,"seek","","Seek to an offset, in bytes, in a stream.",1,[[["seekfrom"]],["seekfuture"]]],[11,"poll_sync_all","","Attempts to sync all OS-internal metadata to disk.",1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll_sync_data","","This function is similar to `poll_sync_all`, except that…",1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll_set_len","","Truncates or extends the underlying file, updating the…",1,[[["self"],["u64"]],[["poll",["error"]],["error"]]]],[11,"metadata","","Queries metadata about the underlying file.",1,[[],["metadatafuture"]]],[11,"poll_metadata","","Queries metadata about the underlying file.",1,[[["self"]],[["poll",["metadata","error"]],["metadata"],["error"]]]],[11,"poll_try_clone","","Create a new `File` instance that shares the same…",1,[[["self"]],[["poll",["file","error"]],["file"],["error"]]]],[11,"try_clone","","Create a new `File` instance that shares the same…",1,[[],["clonefuture"]]],[11,"poll_set_permissions","","Changes the permissions on the underlying file.",1,[[["permissions"],["self"]],[["poll",["error"]],["error"]]]],[11,"into_std","","Destructures the `tokio_fs::File` into a…",1,[[],["stdfile"]]],[0,"os","tokio_fs","OS-specific functionality.",null,null],[0,"unix","tokio_fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",null,null],[3,"SymlinkFuture","tokio_fs::os::unix","Future returned by `symlink`.",null,null],[5,"symlink","","Creates a new symbolic link on the filesystem.",null,[[["path"],["asref",["path"]]],[["symlinkfuture"],["asref",["path"]],["path"]]]],[11,"into_std","tokio_fs","Destructures the `tokio_fs::DirEntry` into a…",2,[[],["stddirentry"]]],[11,"path","","Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name","","Returns the bare file name of this directory entry without…",2,[[["self"]],["osstring"]]],[11,"poll_metadata","","Return the metadata for the file that this entry points at.",2,[[["self"]],[["poll",["metadata","error"]],["metadata"],["error"]]]],[11,"poll_file_type","","Return the file type for the file that this entry points at.",2,[[["self"]],[["poll",["filetype","error"]],["filetype"],["error"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[],["f"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[],["f"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[],["f"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[],["f"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_future","","",9,[[],["f"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[],["f"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[],["f"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_future","","",12,[[],["f"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_future","","",13,[[],["f"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_future","","",14,[[],["f"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[],["f"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",19,[[],["f"]]],[11,"from","tokio_fs::file","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[],["f"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_future","","",21,[[],["f"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_future","","",22,[[],["f"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_future","","",23,[[],["f"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_future","","",24,[[],["f"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tokio_fs::os::unix","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_future","","",25,[[],["f"]]],[11,"drop","tokio_fs::file","",1,[[["self"]]]],[11,"from","tokio_fs","",0,[[["stdopenoptions"]],["openoptions"]]],[11,"clone","","",0,[[["self"]],["openoptions"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs::file","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs::file","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs::os::unix","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"read","tokio_fs::file","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","tokio_fs","",16,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","tokio_fs::file","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"write","tokio_fs","",15,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",15,[[["self"]],["result"]]],[11,"write","","",17,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",17,[[["self"]],["result"]]],[11,"ino","","",2,[[["self"]],["u64"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",4,[[["self"]],["poll"]]],[11,"poll","tokio_fs::file","",20,[[["self"]],["poll"]]],[11,"poll","","",21,[[["self"]],["poll"]]],[11,"poll","","",22,[[["self"]],["poll"]]],[11,"poll","","",23,[[["self"]],["poll"]]],[11,"poll","","",24,[[["self"]],["poll"]]],[11,"poll","tokio_fs","",5,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","tokio_fs::os::unix","",25,[[["self"]],["poll"]]],[11,"poll","tokio_fs","",7,[[["self"]],["poll"]]],[11,"poll","","",9,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",10,[[["self"]],["poll"]]],[11,"poll","","",11,[[["self"]],["poll"]]],[11,"poll","","",12,[[["self"]],["poll"]]],[11,"poll","","",13,[[["self"]],["poll"]]],[11,"poll","","",14,[[["self"]],["poll"]]],[11,"poll","","",18,[[["self"]],["poll"]]],[11,"poll","","",19,[[["self"]],["poll"]]],[11,"poll","","",8,[[["self"]],[["option"],["poll",["option"]]]]],[11,"prepare_uninitialized_buffer","tokio_fs::file","",1,[[["self"]],["bool"]]],[11,"prepare_uninitialized_buffer","tokio_fs","",16,[[["self"]],["bool"]]],[11,"shutdown","tokio_fs::file","",1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"shutdown","tokio_fs","",15,[[["self"]],[["poll",["error"]],["error"]]]],[11,"shutdown","","",17,[[["self"]],[["poll",["error"]],["error"]]]]],"p":[[3,"OpenOptions"],[3,"File"],[3,"DirEntry"],[3,"CreateDirFuture"],[3,"CreateDirAllFuture"],[3,"HardLinkFuture"],[3,"MetadataFuture"],[3,"ReadFile"],[3,"ReadDir"],[3,"ReadDirFuture"],[3,"ReadLinkFuture"],[3,"RemoveDirFuture"],[3,"RemoveFileFuture"],[3,"RenameFuture"],[3,"SetPermissionsFuture"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"SymlinkMetadataFuture"],[3,"WriteFile"],[3,"CloneFuture"],[3,"CreateFuture"],[3,"MetadataFuture"],[3,"OpenFuture"],[3,"SeekFuture"],[3,"SymlinkFuture"]]};
searchIndex["tokio_io"] = {"doc":"Core I/O traits and combinators when working with Tokio.","i":[[0,"io","tokio_io","I/O conveniences when working with primitives in…",null,null],[3,"Copy","tokio_io::io","A future which will copy all data from a reader into a…",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"Read","","A future which can be used to easily read available number…",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough…",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire…",null,null],[3,"ReadUntil","","A future which can be used to easily read the contents of…",null,null],[3,"Shutdown","","A future used to fully shutdown an I/O object.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to…",null,null],[3,"AllowStdIo","","A simple wrapper type which allows types that only…",null,null],[3,"Lines","","Combinator created by the top-level `lines` method which…",null,null],[3,"ReadHalf","","The readable half of an object returned from…",null,null],[3,"WriteHalf","","The writable half of an object returned from…",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[5,"copy","","Creates a future which represents copying all the bytes…",null,[[["w"],["r"]],["copy"]]],[5,"flush","","Creates a future which will entirely flush an I/O object…",null,[[["a"]],["flush"]]],[5,"read","","Tries to read some bytes directly into the given `buf` in…",null,[[["t"],["r"]],["read"]]],[5,"read_exact","","Creates a future which will read exactly enough bytes to…",null,[[["a"],["t"]],["readexact"]]],[5,"read_to_end","","Creates a future which will read all the bytes associated…",null,[[["a"],["vec",["u8"]],["u8"]],["readtoend"]]],[5,"read_until","","Creates a future which will read all the bytes associated…",null,[[["a"],["vec",["u8"]],["u8"]],["readuntil"]]],[5,"shutdown","","Creates a future which will entirely shutdown an I/O…",null,[[["a"]],["shutdown"]]],[5,"write_all","","Creates a future that will write the entire contents of…",null,[[["a"],["t"]],["writeall"]]],[5,"lines","","Creates a new stream from the I/O object given…",null,[[["a"]],["lines"]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",0,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",0,[[],["t"]]],[11,"into_inner","","Returns the underlying I/O object.",1,[[],["a"]]],[11,"unsplit","","Reunite with a previously split `WriteHalf`.",2,[[["writehalf"]],["t"]]],[11,"unsplit","","Reunite with a previously split `ReadHalf`.",3,[[["readhalf"]],["t"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",4,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",4,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",4,[[],["t"]]],[11,"start","","Returns the starting index of this window into the…",4,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",4,[[["self"]],["usize"]]],[11,"set_start","","Changes the starting index of this window to the index…",4,[[["self"],["usize"]],["window"]]],[11,"set_end","","Changes the end index of this window to the index specified.",4,[[["self"],["usize"]],["window"]]],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error…",null,null],[6,"IoStream","","A convenience typedef around a `Stream` whose error…",null,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",5,[[["self"]],["bool"]]],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",5,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"read_buf","","Pull some bytes from this source into the specified…",5,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["encoder"],["decoder"]],[["decoder"],["framed"],["encoder"]]]],[11,"split","","Helper method for splitting this read/write object into…",5,[[]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",6,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",6,[[["self"]],[["poll",["error"]],["error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",6,[[["self"]],[["poll",["error"]],["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",6,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from…",null,null],[11,"from","tokio_io::io","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[],["f"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_future","","",9,[[],["f"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[],["f"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[],["f"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_future","","",12,[[],["f"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_future","","",13,[[],["f"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_future","","",14,[[],["f"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_buf","","",2,[[["self"],["b"]],[["poll",["usize","error"]],["usize"],["error"]]]],[11,"shutdown","","",0,[[["self"]],[["poll",["error"]],["error"]]]],[11,"shutdown","","",3,[[["self"]],[["poll",["error"]],["error"]]]],[11,"write_buf","","",3,[[["self"],["b"]],[["poll",["usize","error"]],["usize"],["error"]]]],[11,"as_mut","","",4,[[["self"]]]],[11,"as_ref","","",4,[[["self"]]]],[11,"clone","","",0,[[["self"]],["allowstdio"]]],[11,"cmp","","",0,[[["self"],["allowstdio"]],["ordering"]]],[11,"eq","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["allowstdio"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"read","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_to_end","","",0,[[["vec"],["self"]],[["result",["usize"]],["usize"]]]],[11,"read_to_string","","",0,[[["self"],["string"]],[["result",["usize"]],["usize"]]]],[11,"read_exact","","",0,[[["self"]],["result"]]],[11,"read","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write_all","","",0,[[["self"]],["result"]]],[11,"write_fmt","","",0,[[["self"],["arguments"]],["result"]]],[11,"write","","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",3,[[["self"]],["result"]]],[11,"poll","","",7,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",8,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",10,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",11,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",12,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",13,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",14,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",1,[[["self"]],[["poll",["option","error"]],["option",["string"]],["error"]]]],[11,"prepare_uninitialized_buffer","tokio_io","Prepares an uninitialized buffer to be safe to pass to…",5,[[["self"]],["bool"]]],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",5,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"read_buf","","Pull some bytes from this source into the specified…",5,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["encoder"],["decoder"]],[["decoder"],["framed"],["encoder"]]]],[11,"split","","Helper method for splitting this read/write object into…",5,[[]]],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",6,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",6,[[["self"]],[["poll",["error"]],["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",6,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]]],"p":[[3,"AllowStdIo"],[3,"Lines"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"WriteAll"]]};
searchIndex["tokio_macros"] = {"doc":"Macros for use with Tokio","i":[[23,"main_threaded","tokio_macros","Marks async function to be executed by selected runtime.",null,null],[23,"main","","Marks async function to be executed by selected runtime.",null,null],[23,"main_basic","","Marks async function to be executed by selected runtime.",null,null],[23,"test_threaded","","Marks async function to be executed by runtime, suitable…",null,null],[23,"test","","Marks async function to be executed by runtime, suitable…",null,null],[23,"test_basic","","Marks async function to be executed by runtime, suitable…",null,null]],"p":[]};
searchIndex["tokio_reactor"] = {"doc":"Event loop that drives Tokio I/O resources.","i":[[3,"Background","tokio_reactor","Handle to the reactor running on a background thread.",null,null],[3,"Shutdown","","Future that resolves when the reactor thread has shutdown.",null,null],[3,"PollEvented","","Associates an I/O resource that implements the…",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that…",null,null],[3,"Reactor","","The core reactor, or event loop.",null,null],[3,"Handle","","A reference to a reactor.",null,null],[3,"Turn","","Return value from the `turn` method on `Reactor`.",null,null],[3,"SetFallbackError","","Error returned from `Handle::set_fallback`.",null,null],[3,"DefaultGuard","","Ensure that the default reactor is removed from the…",null,null],[5,"with_default","","Set the default reactor for the duration of the closure",null,[[["handle"],["enter"],["f"]],["r"]]],[5,"set_default","","Sets `handle` as the default reactor, returning a guard…",null,[[["handle"]],["defaultguard"]]],[11,"handle","","Returns a reference to the reactor handle.",0,[[["self"]],["handle"]]],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",0,[[],["shutdown"]]],[11,"shutdown_now","","Shutdown the reactor immediately",0,[[],["shutdown"]]],[11,"forget","","Run the reactor on its thread until the process terminates.",0,[[]]],[11,"new","","Creates a new `PollEvented` associated with the default…",1,[[["e"]],["pollevented"]]],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified…",1,[[["handle"],["e"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",1,[[],["result"]]],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",1,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",1,[[["ready"],["self"]],["result"]]],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",1,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",1,[[["self"]],["result"]]],[11,"new","","Create a new `Registration`.",2,[[],["registration"]]],[11,"register","","Register the I/O resource with the default reactor.",2,[[["t"],["self"]],[["result",["bool"]],["bool"]]]],[11,"deregister","","Deregister the I/O resource from the reactor it is…",2,[[["self"],["t"]],["result"]]],[11,"register_with","","Register the I/O resource with the specified reactor.",2,[[["handle"],["t"],["self"]],[["result",["bool"]],["bool"]]]],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",2,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"take_read_ready","","Consume any pending read readiness event.",2,[[["self"]],[["option",["ready"]],["result",["option"]]]]],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness…",2,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"take_write_ready","","Consume any pending write readiness event.",2,[[["self"]],[["option",["ready"]],["result",["option"]]]]],[11,"new","","Creates a new event loop, returning any error that…",3,[[],[["reactor"],["result",["reactor"]]]]],[11,"handle","","Returns a handle to this event loop which can be sent…",3,[[["self"]],["handle"]]],[11,"set_fallback","","Configures the fallback handle to be returned from…",3,[[["self"]],[["setfallbackerror"],["result",["setfallbackerror"]]]]],[11,"turn","","Performs one iteration of the event loop, blocking on…",3,[[["option",["duration"]],["self"],["duration"]],[["result",["turn"]],["turn"]]]],[11,"is_idle","","Returns true if the reactor is currently idle.",3,[[["self"]],["bool"]]],[11,"background","","Run this reactor on a background thread.",3,[[],[["result",["background"]],["background"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[],["f"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"clone","","",5,[[["self"]],["handle"]]],[11,"clone","","",7,[[["self"]],["setfallbackerror"]]],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily…",5,[[],["handle"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"poll","","",4,[[["self"]],["poll"]]],[11,"unpark","","",3,[[["self"]]]],[11,"park","","",3,[[["self"]],["result"]]],[11,"park_timeout","","",3,[[["self"],["duration"]],["result"]]],[11,"unpark","","",5,[[["self"]]]],[11,"shutdown","","",1,[[["self"]],[["poll",["error"]],["error"]]]]],"p":[[3,"Background"],[3,"PollEvented"],[3,"Registration"],[3,"Reactor"],[3,"Shutdown"],[3,"Handle"],[3,"Turn"],[3,"SetFallbackError"],[3,"DefaultGuard"]]};
searchIndex["tokio_rustls"] = {"doc":"Asynchronous TLS/SSL streams for Tokio using Rustls.","i":[[3,"TlsConnector","tokio_rustls","A wrapper around a `rustls::ClientConfig`, providing an…",null,null],[3,"TlsAcceptor","","A wrapper around a `rustls::ServerConfig`, providing an…",null,null],[3,"Connect","","Future returned from `TlsConnector::connect` which will…",null,null],[3,"Accept","","Future returned from `TlsAcceptor::accept` which will…",null,null],[3,"FailableConnect","","Like [Connect], but returns `IO` on failure.",null,null],[3,"FailableAccept","","Like [Accept], but returns `IO` on failure.",null,null],[4,"TlsStream","","Unified TLS stream type",null,null],[13,"Client","","",0,null],[13,"Server","","",0,null],[0,"client","","",null,null],[3,"TlsStream","tokio_rustls::client","A wrapper around an underlying raw stream which implements…",null,null],[11,"get_ref","","",1,[[["self"]]]],[11,"get_mut","","",1,[[["self"]]]],[11,"into_inner","","",1,[[]]],[0,"server","tokio_rustls","",null,null],[3,"TlsStream","tokio_rustls::server","A wrapper around an underlying raw stream which implements…",null,null],[11,"get_ref","","",2,[[["self"]]]],[11,"get_mut","","",2,[[["self"]]]],[11,"into_inner","","",2,[[]]],[11,"connect","tokio_rustls","",3,[[["io"],["dnsnameref"],["self"]],["connect"]]],[11,"connect_with","","",3,[[["io"],["dnsnameref"],["self"],["f"]],["connect"]]],[11,"accept","","",4,[[["io"],["self"]],["accept"]]],[11,"accept_with","","",4,[[["io"],["self"],["f"]],["accept"]]],[11,"into_failable","","",5,[[],["failableconnect"]]],[11,"into_failable","","",6,[[],["failableaccept"]]],[11,"get_ref","","",0,[[["self"]]]],[11,"get_mut","","",0,[[["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"try_poll","","",6,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_poll","","",8,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","tokio_rustls::client","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tokio_rustls::server","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tokio_rustls","",3,[[["arc",["clientconfig"]],["clientconfig"]],["tlsconnector"]]],[11,"from","","",4,[[["serverconfig"],["arc",["serverconfig"]]],["tlsacceptor"]]],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"clone","","",3,[[["self"]],["tlsconnector"]]],[11,"clone","","",4,[[["self"]],["tlsacceptor"]]],[11,"fmt","tokio_rustls::client","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_rustls::server","",2,[[["formatter"],["self"]],["result"]]],[11,"poll","tokio_rustls","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",6,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",7,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",8,[[["pin"],["self"],["context"]],["poll"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"is_terminated","","",6,[[["self"]],["bool"]]],[11,"is_terminated","","",7,[[["self"]],["bool"]]],[11,"is_terminated","","",8,[[["self"]],["bool"]]],[11,"poll_read","tokio_rustls::client","",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","tokio_rustls::server","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","tokio_rustls","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write","tokio_rustls::client","Note: that it does not guarantee the final data to be…",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","tokio_rustls::server","Note: that it does not guarantee the final data to be…",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","tokio_rustls","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]]],"p":[[4,"TlsStream"],[3,"TlsStream"],[3,"TlsStream"],[3,"TlsConnector"],[3,"TlsAcceptor"],[3,"Connect"],[3,"Accept"],[3,"FailableConnect"],[3,"FailableAccept"]]};
searchIndex["tokio_sync"] = {"doc":"Asynchronous synchronization primitives.","i":[[0,"lock","tokio_sync","An asynchronous `Mutex`-like type.",null,null],[3,"Lock","tokio_sync::lock","An asynchronous mutual exclusion primitive useful for…",null,null],[3,"LockGuard","","A handle to a held `Lock`.",null,null],[11,"new","","Creates a new lock in an unlocked state ready for use.",0,[[["t"]],["self"]]],[11,"poll_lock","","Try to acquire the lock.",0,[[["self"]],[["lockguard"],["async",["lockguard"]]]]],[0,"mpsc","tokio_sync","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Receiver","tokio_sync::mpsc","Receive values from the associated `Sender`.",null,null],[3,"Sender","","Send values to the associated `Receiver`.",null,null],[3,"UnboundedReceiver","","Receive values from the associated `UnboundedSender`.",null,null],[3,"UnboundedSender","","Send values to the associated `UnboundedReceiver`.",null,null],[5,"channel","","Create a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded_channel","","Create an unbounded mpsc channel for communicating between…",null,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",1,[[["self"]]]],[11,"poll_ready","","Check if the `Sender` is ready to handle a value.",2,[[["self"]],[["senderror"],["poll",["senderror"]]]]],[11,"try_send","","Attempts to send a message on this `Sender`, returning the…",2,[[["self"],["t"]],[["result",["trysenderror"]],["trysenderror"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",3,[[["self"]]]],[11,"try_send","","Attempts to send a message on this `UnboundedSender`…",4,[[["self"],["t"]],[["result",["unboundedtrysenderror"]],["unboundedtrysenderror"]]]],[0,"error","","Channel error types",null,null],[3,"RecvError","tokio_sync::mpsc::error","Error returned by `Receiver`.",null,null],[3,"SendError","","Error returned by the `Sender`.",null,null],[3,"TrySendError","","Error returned by `Sender::try_send`.",null,null],[3,"UnboundedRecvError","","Error returned by `UnboundedReceiver`.",null,null],[3,"UnboundedSendError","","Error returned by the `UnboundedSender`.",null,null],[3,"UnboundedTrySendError","","Returned by `UnboundedSender::try_send` when the channel…",null,null],[0,"oneshot","tokio_sync","A channel for sending a single message between…",null,null],[3,"Sender","tokio_sync::oneshot","Sends a value to the associated `Receiver`.",null,null],[3,"Receiver","","Receive a value from the associated `Sender`.",null,null],[5,"channel","","Create a new one-shot channel for sending single values…",null,[[]]],[0,"error","","Oneshot error types",null,null],[3,"RecvError","tokio_sync::oneshot::error","Error returned by the `Future` implementation for…",null,null],[3,"TryRecvError","","Error returned by the `try_recv` function on `Receiver`.",null,null],[11,"send","tokio_sync::oneshot","Completes this oneshot with a successful result.",5,[[["t"]],["result"]]],[11,"poll_close","","Check if the associated [`Receiver`] handle has been…",5,[[["self"]],["poll"]]],[11,"is_closed","","Check if the associated [`Receiver`] handle has been…",5,[[["self"]],["bool"]]],[11,"close","","Prevent the associated [`Sender`] handle from sending a…",6,[[["self"]]]],[11,"try_recv","","Attempts to receive a value outside of the context of a…",6,[[["self"]],[["tryrecverror"],["result",["tryrecverror"]]]]],[0,"semaphore","tokio_sync","Thread-safe, asynchronous counting semaphore.",null,null],[3,"Semaphore","tokio_sync::semaphore","Futures-aware semaphore.",null,null],[3,"Permit","","A semaphore permit",null,null],[3,"AcquireError","","Error returned by `Permit::poll_acquire`.",null,null],[3,"TryAcquireError","","Error returned by `Permit::try_acquire`.",null,null],[11,"new","","Creates a new semaphore with the initial number of permits",7,[[["usize"]],["semaphore"]]],[11,"available_permits","","Returns the current number of available permits",7,[[["self"]],["usize"]]],[11,"close","","Close the semaphore. This prevents the semaphore from…",7,[[["self"]]]],[11,"add_permits","","Add `n` new permits to the semaphore.",7,[[["self"],["usize"]]]],[11,"new","","Create a new `Permit`.",8,[[],["permit"]]],[11,"is_acquired","","Returns true if the permit has been acquired",8,[[["self"]],["bool"]]],[11,"poll_acquire","","Try to acquire the permit. If no permits are available,…",8,[[["semaphore"],["self"]],[["acquireerror"],["poll",["acquireerror"]]]]],[11,"try_acquire","","Try to acquire the permit.",8,[[["semaphore"],["self"]],[["tryacquireerror"],["result",["tryacquireerror"]]]]],[11,"release","","Release a permit back to the semaphore",8,[[["semaphore"],["self"]]]],[11,"forget","","Forget the permit without releasing it back to the…",8,[[["self"]]]],[11,"is_closed","","Returns true if the error was caused by a closed semaphore.",9,[[["self"]],["bool"]]],[11,"is_no_permits","","Returns true if the error was caused by calling…",9,[[["self"]],["bool"]]],[0,"task","tokio_sync","Thread-safe task notification primitives.",null,null],[3,"AtomicTask","tokio_sync::task","A synchronization primitive for task notification.",null,null],[11,"new","","Create an `AtomicTask` initialized with the given `Task`",10,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",10,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",10,[[["task"],["self"]]]],[11,"notify","","Notifies the task that last called `register`.",10,[[["self"]]]],[11,"take_task","","Attempts to take the `Task` value out of the `AtomicTask`…",10,[[["self"]],[["option",["task"]],["task"]]]],[0,"watch","tokio_sync","A single-producer, multi-consumer channel that only…",null,null],[3,"Receiver","tokio_sync::watch","Receives values from the associated `Sender`.",null,null],[3,"Sender","","Sends values to the associated `Receiver`.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Create a new watch channel, returning the \"send\" and…",null,[[["t"]]]],[0,"error","","Watch error types",null,null],[3,"RecvError","tokio_sync::watch::error","Error produced when receiving a value fails.",null,null],[3,"SendError","","Error produced when sending a value fails.",null,null],[11,"get_ref","tokio_sync::watch","Returns a reference to the most recently sent value",11,[[["self"]],["ref"]]],[11,"poll_ref","","Attempts to receive the latest value sent via the channel.",11,[[["self"]],[["poll",["option","recverror"]],["recverror"],["option",["ref"]]]]],[11,"broadcast","","Broadcast a new value via the channel, notifying all…",12,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"poll_close","","Returns `Ready` when all receivers have dropped.",12,[[["self"]],["poll"]]],[11,"from","tokio_sync::lock","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","tokio_sync::mpsc","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","tokio_sync::mpsc::error","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","tokio_sync::oneshot","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[],["f"]]],[11,"from","tokio_sync::oneshot::error","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","tokio_sync::semaphore","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","tokio_sync::task","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","tokio_sync::watch","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","tokio_sync::watch::error","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"drop","tokio_sync::lock","",13,[[["self"]]]],[11,"drop","tokio_sync::oneshot","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","tokio_sync::watch","",11,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"from","tokio_sync::lock","",0,[[["t"]],["self"]]],[11,"from","tokio_sync::mpsc::error","",15,[[],["trysenderror"]]],[11,"from","","",18,[[],["unboundedtrysenderror"]]],[11,"clone","tokio_sync::lock","",0,[[["self"]],["self"]]],[11,"clone","tokio_sync::mpsc","",2,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","tokio_sync::watch","",11,[[["self"]],["self"]]],[11,"default","tokio_sync::lock","",0,[[],["self"]]],[11,"default","tokio_sync::task","",10,[[],["self"]]],[11,"deref","tokio_sync::lock","",13,[[["self"]]]],[11,"deref","tokio_sync::watch","",23,[[["self"]],["t"]]],[11,"deref_mut","tokio_sync::lock","",13,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot::error","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::semaphore","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::task","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::watch","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch::error","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::lock","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::oneshot::error","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::semaphore","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_sync::watch::error","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"description","tokio_sync::mpsc::error","",14,[[["self"]],["str"]]],[11,"description","","",15,[[["self"]],["str"]]],[11,"description","","",16,[[["self"]],["str"]]],[11,"description","","",17,[[["self"]],["str"]]],[11,"description","","",18,[[["self"]],["str"]]],[11,"description","","",19,[[["self"]],["str"]]],[11,"description","tokio_sync::oneshot::error","",20,[[["self"]],["str"]]],[11,"description","","",21,[[["self"]],["str"]]],[11,"description","tokio_sync::semaphore","",22,[[["self"]],["str"]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"description","tokio_sync::watch::error","",24,[[["self"]],["str"]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"poll","tokio_sync::oneshot","",6,[[["self"]],[["recverror"],["poll",["recverror"]]]]],[11,"poll","tokio_sync::mpsc","",1,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","","",3,[[["self"]],[["poll",["option"]],["option"]]]],[11,"poll","tokio_sync::watch","",11,[[["self"]],[["recverror"],["poll",["option","recverror"]],["option"]]]],[11,"start_send","tokio_sync::mpsc","",2,[[["self"],["t"]],["startsend"]]],[11,"poll_complete","","",2,[[["self"]],["poll"]]],[11,"close","","",2,[[["self"]],["poll"]]],[11,"start_send","","",4,[[["self"],["t"]],["startsend"]]],[11,"poll_complete","","",4,[[["self"]],["poll"]]],[11,"close","","",4,[[["self"]],["poll"]]],[11,"start_send","tokio_sync::watch","",12,[[["self"],["t"]],[["startsend",["senderror"]],["senderror"]]]],[11,"poll_complete","","",12,[[["self"]],[["poll",["senderror"]],["senderror"]]]],[11,"into_inner","tokio_sync::mpsc::error","Get the inner value.",15,[[],["t"]]],[11,"is_closed","","Did the send fail because the channel has been closed?",15,[[["self"]],["bool"]]],[11,"is_full","","Did the send fail because the channel was at capacity?",15,[[["self"]],["bool"]]],[11,"into_inner","","Get the inner value.",18,[[],["t"]]]],"p":[[3,"Lock"],[3,"Receiver"],[3,"Sender"],[3,"UnboundedReceiver"],[3,"UnboundedSender"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"Permit"],[3,"TryAcquireError"],[3,"AtomicTask"],[3,"Receiver"],[3,"Sender"],[3,"LockGuard"],[3,"SendError"],[3,"TrySendError"],[3,"RecvError"],[3,"UnboundedSendError"],[3,"UnboundedTrySendError"],[3,"UnboundedRecvError"],[3,"RecvError"],[3,"TryRecvError"],[3,"AcquireError"],[3,"Ref"],[3,"RecvError"],[3,"SendError"]]};
searchIndex["tokio_tcp"] = {"doc":"TCP bindings for `tokio`.","i":[[3,"Incoming","tokio_tcp","Stream returned by the `TcpListener::incoming` function…",null,null],[3,"TcpListener","","An I/O object representing a TCP socket listening for…",null,null],[3,"ConnectFuture","","Future returned by `TcpStream::connect` which will resolve…",null,null],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",null,null],[11,"bind","","Create a new TCP listener associated with this event loop.",0,[[["socketaddr"]],[["tcplistener"],["result",["tcplistener"]]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",0,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",0,[[["self"]],[["poll",["error"]],["error"]]]],[11,"from_std","","Create a new TCP listener from the standard library's TCP…",0,[[["tcplistener"],["handle"]],[["tcplistener"],["result",["tcplistener"]]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",0,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",0,[[],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["u32"],["self"]],["result"]]],[11,"connect","","Create a new TCP stream connected to the specified address.",1,[[["socketaddr"]],["connectfuture"]]],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",1,[[["handle"],["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside…",1,[[["socketaddr"],["handle"],["tcpstream"]],["connectfuture"]]],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",1,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",1,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",1,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"peer_addr","","Returns the remote address that this stream is connected…",1,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"poll_peek","","Receives data on the socket from the remote address to…",1,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",1,[[["shutdown"],["self"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",1,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",1,[[["option",["duration"]],["duration"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["u32"],["self"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",1,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",1,[[["option",["duration"]],["duration"],["self"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[],["f"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"poll","","",3,[[["self"]],[["error"],["tcpstream"],["poll",["tcpstream","error"]]]]],[11,"poll","","",2,[[["self"]],[["error"],["poll",["option","error"]],["option"]]]],[11,"prepare_uninitialized_buffer","","",1,[[["self"]],["bool"]]],[11,"read_buf","","",1,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"shutdown","","",1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"write_buf","","",1,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]]],"p":[[3,"TcpListener"],[3,"TcpStream"],[3,"Incoming"],[3,"ConnectFuture"]]};
searchIndex["tokio_threadpool"] = {"doc":"A work-stealing based thread pool for executing futures.","i":[[3,"BlockingError","tokio_threadpool","Error raised by `blocking`.",null,null],[3,"Builder","","Builds a thread pool with custom configuration values.",null,null],[3,"Sender","","Submit futures to the associated thread pool for execution.",null,null],[3,"Shutdown","","Future that resolves when the thread pool is shutdown.",null,null],[3,"SpawnHandle","","Handle returned from ThreadPool::spawn_handle.",null,null],[3,"ThreadPool","","Work-stealing based thread pool for executing futures.",null,null],[3,"Worker","","Thread worker",null,null],[3,"WorkerId","","Identifies a thread pool worker.",null,null],[5,"blocking","","Enter a blocking section of code.",null,[[["f"]],[["poll",["blockingerror"]],["blockingerror"]]]],[11,"new","","Returns a new thread pool builder initialized with default…",0,[[],["builder"]]],[11,"pool_size","","Set the maximum number of worker threads for the thread…",0,[[["self"],["usize"]],["self"]]],[11,"max_blocking","","Set the maximum number of concurrent blocking sections.",0,[[["self"],["usize"]],["self"]]],[11,"keep_alive","","Set the thread keep alive duration",0,[[["option",["duration"]],["self"],["duration"]],["self"]]],[11,"panic_handler","","Sets a callback to be triggered when a panic during a…",0,[[["self"],["f"]],["self"]]],[11,"name_prefix","","Set name prefix of threads spawned by the scheduler",0,[[["into",["string"]],["self"],["string"]],["self"]]],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",0,[[["self"],["usize"]],["self"]]],[11,"around_worker","","Execute function `f` on each worker thread.",0,[[["self"],["f"]],["self"]]],[11,"after_start","","Execute function `f` after each thread is started but…",0,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each thread stops.",0,[[["self"],["f"]],["self"]]],[11,"custom_park","","Customize the `park` instance used by each worker thread.",0,[[["self"],["f"]],["self"]]],[11,"build","","Create the configured `ThreadPool`.",0,[[["self"]],["threadpool"]]],[0,"park","","Thread parking utilities.",null,null],[3,"DefaultPark","tokio_threadpool::park","Parks the thread.",null,null],[3,"DefaultUnpark","","Unparks threads that were parked by `DefaultPark`.",null,null],[3,"ParkError","","Error returned by [`ParkThread`]",null,null],[11,"new","","Creates a new `DefaultPark` instance.",1,[[],["defaultpark"]]],[11,"spawn","tokio_threadpool","Spawn a future onto the thread pool",2,[[["self"],["f"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"new","","Create a new `ThreadPool` with default values.",3,[[],["threadpool"]]],[11,"spawn","","Spawn a future onto the thread pool.",3,[[["self"],["f"]]]],[11,"spawn_handle","","Spawn a future on to the thread pool, return a future…",3,[[["self"],["f"]],["spawnhandle"]]],[11,"sender","","Return a reference to the sender handle",3,[[["self"]],["sender"]]],[11,"sender_mut","","Return a mutable reference to the sender handle",3,[[["self"]],["sender"]]],[11,"shutdown_on_idle","","Shutdown the pool once it becomes idle.",3,[[],["shutdown"]]],[11,"shutdown","","Shutdown the pool",3,[[],["shutdown"]]],[11,"shutdown_now","","Shutdown the pool immediately",3,[[],["shutdown"]]],[11,"id","","Returns a reference to the worker's identifier.",4,[[["self"]],["workerid"]]],[11,"run","","Run the worker",4,[[["self"]]]],[11,"to_usize","","Returns this identifier represented as an integer.",5,[[["self"]],["usize"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","tokio_threadpool::park","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","tokio_threadpool","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"clone","","",5,[[["self"]],["workerid"]]],[11,"eq","","",5,[[["self"],["workerid"]],["bool"]]],[11,"ne","","",5,[[["self"],["workerid"]],["bool"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_threadpool::park","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_threadpool::park","",10,[[["formatter"],["self"]],["result"]]],[11,"hash","tokio_threadpool","",5,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","tokio_threadpool::park","",10,[[["self"]],["str"]]],[11,"poll","tokio_threadpool","",7,[[["self"]],["poll"]]],[11,"poll","","",8,[[["self"]],["poll"]]],[11,"execute","","",2,[[["self"],["t"]],[["result",["executeerror"]],["executeerror"]]]],[11,"status","","",2,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn","","",2,[[["box",["future"]],["self"],["future"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"unpark","tokio_threadpool::park","",1,[[["self"]]]],[11,"park","","",1,[[["self"]],["result"]]],[11,"park_timeout","","",1,[[["self"],["duration"]],["result"]]],[11,"unpark","","",9,[[["self"]]]],[11,"status","tokio_threadpool","",2,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn","","",2,[[["self"],["t"]],[["result",["spawnerror"]],["spawnerror"]]]]],"p":[[3,"Builder"],[3,"DefaultPark"],[3,"Sender"],[3,"ThreadPool"],[3,"Worker"],[3,"WorkerId"],[3,"BlockingError"],[3,"Shutdown"],[3,"SpawnHandle"],[3,"DefaultUnpark"],[3,"ParkError"]]};
searchIndex["tokio_timer"] = {"doc":"Utilities for tracking time.","i":[[3,"Delay","tokio_timer","A future that completes at a specified instant in time.",null,null],[3,"DelayQueue","","A queue of delayed elements.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Interval","","A stream representing notifications at fixed interval",null,null],[3,"Timeout","","Allows a `Future` or `Stream` to execute for a limited…",null,null],[5,"with_default","","Set the default timer for the duration of the closure.",null,[[["handle"],["enter"],["f"]],["r"]]],[5,"sleep","","Create a Future that completes in `duration` from now.",null,[[["duration"]],["delay"]]],[0,"clock","","A configurable source of time.",null,null],[3,"Clock","tokio_timer::clock","A handle to a source of time.",null,null],[3,"DefaultGuard","","A guard that resets the current `Clock` to `None` when…",null,null],[5,"now","","Returns an `Instant` corresponding to \"now\".",null,[[],["instant"]]],[5,"set_default","","Sets `clock` as the default clock, returning a guard that…",null,[[["clock"]],["defaultguard"]]],[5,"with_default","","Set the default clock for the duration of the closure.",null,[[["clock"],["enter"],["f"]],["r"]]],[11,"new","","Return a new `Clock` instance that uses the current…",0,[[],["clock"]]],[11,"new_with_now","","Return a new `Clock` instance that uses `now` as the…",0,[[["now"]],["clock"]]],[11,"system","","Return a new `Clock` instance that uses [`Instant::now`]…",0,[[],["clock"]]],[11,"now","","Returns an instant corresponding to \"now\" by using the…",0,[[["self"]],["instant"]]],[8,"Now","","Returns [`Instant`] values representing the current…",null,null],[10,"now","","Returns an instant corresponding to \"now\".",1,[[["self"]],["instant"]]],[0,"delay_queue","tokio_timer","A queue of delayed elements.",null,null],[3,"DelayQueue","tokio_timer::delay_queue","A queue of delayed elements.",null,null],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",null,null],[3,"Key","","Token to a value stored in a `DelayQueue`.",null,null],[11,"new","","Create a new, empty, `DelayQueue`",2,[[],["delayqueue"]]],[11,"with_capacity_and_handle","","Create a new, empty, `DelayQueue` backed by the specified…",2,[[["handle"],["usize"]],["delayqueue"]]],[11,"with_capacity","","Create a new, empty, `DelayQueue` with the specified…",2,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Insert `value` into the queue set to expire at a specific…",2,[[["self"],["t"],["instant"]],["key"]]],[11,"insert","","Insert `value` into the queue set to expire after the…",2,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Remove the item associated with `key` from the queue.",2,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",2,[[["self"],["key"],["instant"]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",2,[[["self"],["key"],["duration"]]]],[11,"clear","","Clears the queue, removing all items.",2,[[["self"]]]],[11,"capacity","","Returns the number of elements the queue can hold without…",2,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more items to…",2,[[["self"],["usize"]]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",2,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the inner value.",3,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",3,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",3,[[],["t"]]],[0,"throttle","tokio_timer","Slow down a stream by enforcing a delay between items.",null,null],[3,"Throttle","tokio_timer::throttle","Slow down a stream by enforcing a delay between items.",null,null],[3,"ThrottleError","","Either the error of the underlying stream, or an error…",null,null],[11,"new","","Slow down a stream by enforcing a delay between items.",4,[[["duration"],["t"]],["self"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",4,[[["self"]],["t"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",4,[[],["t"]]],[11,"from_stream_err","","Creates a new `ThrottleError` from the given stream error.",5,[[["t"]],["self"]]],[11,"from_timer_err","","Creates a new `ThrottleError` from the given tokio timer…",5,[[["error"]],["self"]]],[11,"get_stream_error","","Attempts to get the underlying stream error, if it is…",5,[[["self"]],[["option"],["t"]]]],[11,"get_timer_error","","Attempts to get the underlying timer error, if it is…",5,[[["self"]],[["error"],["option",["error"]]]]],[11,"into_stream_error","","Attempts to extract the underlying stream error, if it is…",5,[[],["option"]]],[11,"into_timer_error","","Attempts to extract the underlying timer error, if it is…",5,[[],[["option",["error"]],["error"]]]],[11,"is_stream_error","","Returns whether the throttle error has occured because of…",5,[[["self"]],["bool"]]],[11,"is_timer_error","","Returns whether the throttle error has occured because of…",5,[[["self"]],["bool"]]],[0,"timeout","tokio_timer","Allows a future or stream to execute for a maximum amount…",null,null],[3,"Timeout","tokio_timer::timeout","Allows a `Future` or `Stream` to execute for a limited…",null,null],[3,"Error","","Error returned by `Timeout`.",null,null],[11,"new","","Create a new `Timeout` that allows `value` to execute for…",6,[[["duration"],["t"]],["timeout"]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",6,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",6,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",6,[[],["t"]]],[11,"new_at","","Create a new `Timeout` that completes when `future`…",6,[[["instant"],["t"]],["timeout"]]],[11,"inner","","Create a new `Error` representing the inner value…",7,[[["t"]],["error"]]],[11,"is_inner","","Returns `true` if the error was caused by the inner value…",7,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self`, returning the inner future error.",7,[[],["option"]]],[11,"elapsed","","Create a new `Error` representing the inner value not…",7,[[],["error"]]],[11,"is_elapsed","","Returns `true` if the error was caused by the inner value…",7,[[["self"]],["bool"]]],[11,"timer","","Creates a new `Error` representing an error encountered by…",7,[[["error"]],["error"]]],[11,"is_timer","","Returns `true` if the error was caused by the timer.",7,[[["self"]],["bool"]]],[11,"into_timer","","Consumes `self`, returning the error raised by the timer…",7,[[],[["error"],["option",["error"]]]]],[0,"timer","tokio_timer","Timer implementation.",null,null],[3,"DefaultGuard","tokio_timer::timer","A guard that resets the current timer to `None` when…",null,null],[3,"Handle","","Handle to timer instance.",null,null],[3,"SystemNow","","A handle to a source of time.",null,null],[3,"Timer","","Timer implementation that drives [`Delay`], [`Interval`],…",null,null],[3,"Turn","","Return value from the `turn` method on `Timer`.",null,null],[5,"set_default","","Sets `handle` as the default timer, returning a guard that…",null,[[["handle"]],["defaultguard"]]],[5,"with_default","","Set the default timer for the duration of the closure.",null,[[["handle"],["enter"],["f"]],["r"]]],[11,"current","","Returns a handle to the current timer.",8,[[],["handle"]]],[11,"delay","","Create a `Delay` driven by this handle's associated `Timer`.",8,[[["instant"],["self"]],["delay"]]],[11,"timeout","","Create a `Timeout` driven by this handle's associated…",8,[[["instant"],["self"],["t"]],["timeout"]]],[11,"interval","","Create a new `Interval` that starts at `at` and yields…",8,[[["instant"],["self"],["duration"]],["interval"]]],[11,"new","","Create a new `Timer` instance that uses `park` to block…",9,[[["t"]],["self"]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",9,[[["self"]],["t"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",9,[[["self"]],["t"]]],[11,"new_with_now","","Create a new `Timer` instance that uses `park` to block…",9,[[["t"],["n"]],["self"]]],[11,"handle","","Returns a handle to the timer.",9,[[["self"]],["handle"]]],[11,"turn","","Performs one iteration of the timer loop.",9,[[["option",["duration"]],["self"],["duration"]],[["turn"],["result",["turn"]]]]],[11,"new","tokio_timer","Create a new `Delay` instance that elapses at `deadline`.",10,[[["instant"]],["delay"]]],[11,"deadline","","Returns the instant at which the future will complete.",10,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",10,[[["self"]],["bool"]]],[11,"reset","","Reset the `Delay` instance to a new deadline.",10,[[["self"],["instant"]]]],[11,"shutdown","","Create an error representing a shutdown timer.",11,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",11,[[["self"]],["bool"]]],[11,"at_capacity","","Create an error representing a timer at capacity.",11,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",11,[[["self"]],["bool"]]],[11,"new","","Create a new `Interval` that starts at `at` and yields…",12,[[["instant"],["duration"]],["interval"]]],[11,"new_interval","","Creates new `Interval` that yields with interval of…",12,[[["duration"]],["interval"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[],["f"]]],[11,"from","tokio_timer::delay_queue","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tokio_timer","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","tokio_timer::timeout","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[],["f"]]],[11,"from","tokio_timer::clock","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","tokio_timer::delay_queue","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","tokio_timer::throttle","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","tokio_timer::timeout","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","tokio_timer::timer","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"drop","tokio_timer::clock","",13,[[["self"]]]],[11,"drop","tokio_timer::timer","",15,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"clone","tokio_timer::clock","",0,[[["self"]],["clock"]]],[11,"clone","tokio_timer::delay_queue","",14,[[["self"]],["key"]]],[11,"clone","tokio_timer::timer","",8,[[["self"]],["handle"]]],[11,"default","tokio_timer::clock","",0,[[],["clock"]]],[11,"default","tokio_timer::timer","",8,[[],["handle"]]],[11,"default","","",9,[[],["self"]]],[11,"fmt","tokio_timer::clock","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_timer::delay_queue","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::throttle","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timeout","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timer","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::throttle","",5,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","tokio_timer::timeout","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_timer","",11,[[["formatter"],["self"]],["result"]]],[11,"description","tokio_timer::throttle","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,"description","tokio_timer::timeout","",7,[[["self"]],["str"]]],[11,"description","tokio_timer","",11,[[["self"]],["str"]]],[11,"poll","tokio_timer::timeout","",6,[[["self"]],["poll"]]],[11,"poll","tokio_timer","",10,[[["self"]],["poll"]]],[11,"poll","tokio_timer::delay_queue","",2,[[["self"]],[["poll",["option","error"]],["error"],["option"]]]],[11,"poll","tokio_timer::throttle","",4,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","tokio_timer::timeout","",6,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","tokio_timer","",12,[[["self"]],[["option"],["poll",["option"]]]]],[11,"unpark","tokio_timer::timer","",9,[[["self"]]]],[11,"park","","",9,[[["self"]],["result"]]],[11,"park_timeout","","",9,[[["self"],["duration"]],["result"]]]],"p":[[3,"Clock"],[8,"Now"],[3,"DelayQueue"],[3,"Expired"],[3,"Throttle"],[3,"ThrottleError"],[3,"Timeout"],[3,"Error"],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,"DefaultGuard"],[3,"Key"],[3,"DefaultGuard"],[3,"Turn"]]};
searchIndex["tokio_udp"] = {"doc":"UDP bindings for `tokio`.","i":[[3,"UdpFramed","tokio_udp","A unified `Stream` and `Sink` interface to an underlying…",null,null],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",null,null],[3,"SendDgram","","A future used to write the entire contents of some data to…",null,null],[3,"UdpSocket","","An I/O object representing a UDP socket.",null,null],[11,"new","","Create a new `UdpFramed` backed by the given socket and…",0,[[["c"],["udpsocket"]],["udpframed"]]],[11,"with_decode","","Create a new `UdpFramed` backed by the given socket and…",0,[[["c"],["udpsocket"],["bool"]],["udpframed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",0,[[["self"]],["udpsocket"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",0,[[["self"]],["udpsocket"]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",0,[[],["udpsocket"]]],[11,"into_parts","","Consume the `RecvDgram`, returning the socket and buffer.",1,[[],["parts"]]],[11,"bind","","This function will create a new UDP socket and attempt to…",2,[[["socketaddr"]],[["udpsocket"],["result",["udpsocket"]]]]],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket…",2,[[["handle"],["udpsocket"]],[["udpsocket"],["result",["udpsocket"]]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",2,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"connect","","Connects the UDP socket setting the default destination…",2,[[["self"],["socketaddr"]],["result"]]],[11,"poll_send","","Sends data on the socket to the remote address to which it…",2,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"poll_recv","","Receives a single datagram message on the socket from the…",2,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"poll_send_to","","Sends data on the socket to the given address. On success,…",2,[[["self"],["socketaddr"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"send_dgram","","Creates a future that will write the entire contents of…",2,[[["t"],["socketaddr"]],["senddgram"]]],[11,"poll_recv_from","","Receives data from the socket. On success, returns the…",2,[[["self"]],[["poll",["error"]],["error"]]]],[11,"recv_dgram","","Creates a future that receive a datagram to be written to…",2,[[["t"]],["recvdgram"]]],[11,"poll_read_ready","","Check the UDP socket's read readiness state.",2,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"poll_write_ready","","Check the UDP socket's write readiness state.",2,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",2,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",2,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",2,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",2,[[["self"],["bool"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",2,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",2,[[["u32"],["self"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",2,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",2,[[["self"],["bool"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",2,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",2,[[["u32"],["self"]],["result"]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",2,[[["self"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",2,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",2,[[["self"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",2,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_future","","",1,[[],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[],["f"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"as_raw_fd","","",2,[[["self"]],["rawfd"]]],[11,"poll","","",1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll","","",3,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll","","",0,[[["self"]],[["option"],["poll",["option"]]]]],[11,"start_send","","",0,[[["self"]],["startsend"]]],[11,"poll_complete","","",0,[[["self"]],["poll"]]],[11,"close","","",0,[[["self"]],["poll"]]]],"p":[[3,"UdpFramed"],[3,"RecvDgram"],[3,"UdpSocket"],[3,"SendDgram"]]};
searchIndex["tokio_uds"] = {"doc":"Unix Domain Sockets for Tokio.","i":[[3,"UnixDatagram","tokio_uds","An I/O object representing a Unix datagram socket.",null,null],[3,"UnixDatagramFramed","","A unified `Stream` and `Sink` interface to an underlying…",null,null],[3,"Incoming","","Stream of listeners",null,null],[3,"UnixListener","","A Unix socket which can accept connections from other Unix…",null,null],[3,"RecvDgram","","A future for receiving datagrams from a Unix datagram…",null,null],[3,"SendDgram","","A future for writing a buffer to a Unix datagram socket.",null,null],[3,"ConnectFuture","","Future returned by `UnixStream::connect` which will…",null,null],[3,"UnixStream","","A structure representing a connected Unix socket.",null,null],[3,"UCred","","Credentials of a process",null,null],[12,"uid","","UID (user ID) of the process",0,null],[12,"gid","","GID (group ID) of the process",0,null],[11,"bind","","Creates a new `UnixDatagram` bound to the specified path.",1,[[["p"]],[["unixdatagram"],["result",["unixdatagram"]]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",1,[[],["result"]]],[11,"from_std","","Consumes a `UnixDatagram` in the standard library and…",1,[[["unixdatagram"],["handle"]],[["unixdatagram"],["result",["unixdatagram"]]]]],[11,"unbound","","Creates a new `UnixDatagram` which is not bound to any…",1,[[],[["unixdatagram"],["result",["unixdatagram"]]]]],[11,"connect","","Connects the socket to the specified address.",1,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",1,[[["self"],["ready"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,"poll_write_ready","","Test whether this socket is ready to be written to or not.",1,[[["self"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",1,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_addr","","Returns the address of this socket's peer.",1,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"poll_recv_from","","Receives data from the socket.",1,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll_recv","","Receives data from the socket.",1,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"recv_dgram","","Returns a future for receiving a datagram. See the…",1,[[["t"]],["recvdgram"]]],[11,"poll_send_to","","Sends data on the socket to the specified address.",1,[[["self"],["p"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"poll_send","","Sends data on the socket to the socket's peer.",1,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"send_dgram","","Returns a future sending the data in buf to the socket at…",1,[[["t"],["p"]],["senddgram"]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",1,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"shutdown","","Shut down the read, write, or both halves of this…",1,[[["shutdown"],["self"]],["result"]]],[11,"new","","Create a new `UnixDatagramFramed` backed by the given…",2,[[["c"],["unixdatagram"]],["unixdatagramframed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",2,[[["self"]],["unixdatagram"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",2,[[["self"]],["unixdatagram"]]],[11,"bind","","Creates a new `UnixListener` bound to the specified path.",3,[[["p"]],[["result",["unixlistener"]],["unixlistener"]]]],[11,"from_std","","Consumes a `UnixListener` in the standard library and…",3,[[["unixlistener"],["handle"]],[["result",["unixlistener"]],["unixlistener"]]]],[11,"local_addr","","Returns the local socket address of this listener.",3,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",3,[[["self"],["ready"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",3,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",3,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",3,[[["self"]],[["poll",["error"]],["error"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",3,[[],["incoming"]]],[11,"connect","","Connects to the socket named by `path`.",4,[[["p"]],["connectfuture"]]],[11,"from_std","","Consumes a `UnixStream` in the standard library and…",4,[[["handle"],["unixstream"]],[["result",["unixstream"]],["unixstream"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",4,[[],["result"]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",4,[[["self"],["ready"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,"poll_write_ready","","Test whether this socket is ready to be written to or not.",4,[[["self"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,"local_addr","","Returns the socket address of the local half of this…",4,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",4,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_cred","","Returns effective credentials of the process which called…",4,[[["self"]],[["ucred"],["result",["ucred"]]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",4,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",4,[[["shutdown"],["self"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[],["f"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[],["f"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["ucred"]]],[11,"eq","","",0,[[["ucred"],["self"]],["bool"]]],[11,"ne","","",0,[[["ucred"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"read","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",4,[[["self"]],["rawfd"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"poll","","",8,[[["self"]],[["error"],["unixstream"],["poll",["unixstream","error"]]]]],[11,"poll","","",2,[[["self"]],[["option"],["poll",["option"]]]]],[11,"poll","","",5,[[["self"]],[["error"],["poll",["option","error"]],["option"]]]],[11,"start_send","","",2,[[["self"]],["startsend"]]],[11,"poll_complete","","",2,[[["self"]],["poll"]]],[11,"close","","",2,[[["self"]],["poll"]]],[11,"prepare_uninitialized_buffer","","",4,[[["self"]],["bool"]]],[11,"read_buf","","",4,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,"shutdown","","",4,[[["self"]],[["poll",["error"]],["error"]]]],[11,"write_buf","","",4,[[["self"],["b"]],[["error"],["usize"],["poll",["usize","error"]]]]]],"p":[[3,"UCred"],[3,"UnixDatagram"],[3,"UnixDatagramFramed"],[3,"UnixListener"],[3,"UnixStream"],[3,"Incoming"],[3,"RecvDgram"],[3,"SendDgram"],[3,"ConnectFuture"]]};
searchIndex["tokio_util"] = {"doc":"Utilities for working with Tokio.","i":[[0,"codec","tokio_util","Utilities for encoding and decoding frames.",null,null],[3,"BytesCodec","tokio_util::codec","A simple `Codec` implementation that just ships bytes…",null,null],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying…",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed…",null,null],[12,"io","","The inner transport used to read bytes to and write bytes to",0,null],[12,"codec","","The codec",0,null],[12,"read_buf","","The buffer with read but unprocessed data.",0,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",0,null],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",null,null],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",null,null],[3,"LinesCodec","","A simple `Codec` implementation that splits up data into…",null,null],[4,"LinesCodecError","","An error occured while encoding or decoding a line.",null,null],[13,"MaxLineLengthExceeded","","The maximum line length was exceeded.",1,null],[13,"Io","","An IO error occured.",1,null],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],["bytescodec"]]],[11,"new","","Provides a `Stream` and `Sink` interface for reading and…",3,[[["u"],["t"]],["framed"]]],[11,"from_parts","","Provides a `Stream` and `Sink` interface for reading and…",3,[[["framedparts"]],["framed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",3,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",3,[[["self"]],["t"]]],[11,"codec","","Returns a reference to the underlying codec wrapped by…",3,[[["self"]],["u"]]],[11,"codec_mut","","Returns a mutable reference to the underlying codec…",3,[[["self"]],["u"]]],[11,"read_buffer","","Returns a reference to the read buffer.",3,[[["self"]],["bytesmut"]]],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",3,[[],["t"]]],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream,…",3,[[],["framedparts"]]],[11,"new","","Create a new, default, `FramedParts`",0,[[["u"],["t"]],["framedparts"]]],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",4,[[["d"],["t"]],["framedread"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",4,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O…",4,[[],["t"]]],[11,"decoder","","Returns a reference to the underlying decoder.",4,[[["self"]],["d"]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",4,[[["self"]],["d"]]],[11,"read_buffer","","Returns a reference to the read buffer.",4,[[["self"]],["bytesmut"]]],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",5,[[["t"],["e"]],["framedwrite"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",5,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",5,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O…",5,[[],["t"]]],[11,"encoder","","Returns a reference to the underlying decoder.",5,[[["self"]],["e"]]],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",5,[[["self"]],["e"]]],[0,"length_delimited","","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_util::codec::length_delimited","Configure length delimited `LengthDelimitedCodec`s.",null,null],[3,"LengthDelimitedCodecError","","An error when the number of bytes read is more than max…",null,null],[3,"LengthDelimitedCodec","","A codec for frames delimited by a frame head specifying…",null,null],[11,"new","","Creates a new `LengthDelimitedCodec` with the default…",6,[[],["self"]]],[11,"builder","","Creates a new length delimited codec builder with default…",6,[[],["builder"]]],[11,"max_frame_length","","Returns the current max frame setting",6,[[["self"]],["usize"]]],[11,"set_max_frame_length","","Updates the max frame setting.",6,[[["self"],["usize"]]]],[11,"new","","Creates a new length delimited codec builder with default…",7,[[],["builder"]]],[11,"big_endian","","Read the length field as a big endian integer",7,[[["self"]],["self"]]],[11,"little_endian","","Read the length field as a little endian integer",7,[[["self"]],["self"]]],[11,"native_endian","","Read the length field as a native endian integer",7,[[["self"]],["self"]]],[11,"max_frame_length","","Sets the max frame length",7,[[["self"],["usize"]],["self"]]],[11,"length_field_length","","Sets the number of bytes used to represent the length field",7,[[["self"],["usize"]],["self"]]],[11,"length_field_offset","","Sets the number of bytes in the header before the length…",7,[[["self"],["usize"]],["self"]]],[11,"length_adjustment","","Delta between the payload length specified in the header…",7,[[["isize"],["self"]],["self"]]],[11,"num_skip","","Sets the number of bytes to skip before reading the payload",7,[[["self"],["usize"]],["self"]]],[11,"new_codec","","Create a configured length delimited `LengthDelimitedCodec`",7,[[["self"]],["lengthdelimitedcodec"]]],[11,"new_read","","Create a configured length delimited `FramedRead`",7,[[["self"],["t"]],[["framedread",["lengthdelimitedcodec"]],["lengthdelimitedcodec"]]]],[11,"new_write","","Create a configured length delimited `FramedWrite`",7,[[["self"],["t"]],[["framedwrite",["lengthdelimitedcodec"]],["lengthdelimitedcodec"]]]],[11,"new_framed","","Create a configured length delimited `Framed`",7,[[["self"],["t"]],[["lengthdelimitedcodec"],["framed",["lengthdelimitedcodec"]]]]],[11,"new","tokio_util::codec","Returns a `LinesCodec` for splitting up data into lines.",8,[[],["linescodec"]]],[11,"new_with_max_length","","Returns a `LinesCodec` with a maximum line length limit.",8,[[["usize"]],["self"]]],[11,"max_length","","Returns the maximum line length when decoding.",8,[[["self"]],["usize"]]],[8,"Decoder","","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",9,null],[16,"Error","","The type of unrecoverable frame decoding errors.",9,null],[10,"decode","","Attempts to decode a frame from the provided buffer of…",9,[[["self"],["bytesmut"]],[["option"],["result",["option"]]]]],[11,"decode_eof","","A default method available to be called when there are no…",9,[[["self"],["bytesmut"]],[["option"],["result",["option"]]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",9,[[["asyncread"],["asyncwrite"],["sized"]],[["framed"],["asyncread"],["asyncwrite"],["sized"]]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes,…",null,null],[16,"Item","","The type of items consumed by the `Encoder`",10,null],[16,"Error","","The type of encoding errors.",10,null],[10,"encode","","Encodes a frame into the buffer provided.",10,[[["self"],["bytesmut"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll_next","","",3,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll_next","","",4,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tokio_util::codec::length_delimited","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"decode","tokio_util::codec","",2,[[["self"],["bytesmut"]],[["result",["option","error"]],["option",["bytesmut"]],["error"]]]],[11,"decode","tokio_util::codec::length_delimited","",6,[[["self"],["bytesmut"]],[["option",["bytesmut"]],["result",["option"]]]]],[11,"decode","tokio_util::codec","",8,[[["self"],["bytesmut"]],[["result",["option","linescodecerror"]],["linescodecerror"],["option",["string"]]]]],[11,"decode_eof","","",8,[[["self"],["bytesmut"]],[["result",["option","linescodecerror"]],["linescodecerror"],["option",["string"]]]]],[11,"encode","","",2,[[["self"],["bytes"],["bytesmut"]],[["error"],["result",["error"]]]]],[11,"encode","tokio_util::codec::length_delimited","",6,[[["self"],["bytes"],["bytesmut"]],[["error"],["result",["error"]]]]],[11,"encode","tokio_util::codec","",8,[[["self"],["string"],["bytesmut"]],[["linescodecerror"],["result",["linescodecerror"]]]]],[11,"from","","",1,[[["error"]],["linescodecerror"]]],[11,"clone","","",2,[[["self"]],["bytescodec"]]],[11,"clone","tokio_util::codec::length_delimited","",7,[[["self"]],["builder"]]],[11,"clone","tokio_util::codec","",8,[[["self"]],["linescodec"]]],[11,"default","","",2,[[],["bytescodec"]]],[11,"default","tokio_util::codec::length_delimited","",6,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","tokio_util::codec","",8,[[],["self"]]],[11,"cmp","","",2,[[["bytescodec"],["self"]],["ordering"]]],[11,"cmp","","",8,[[["linescodec"],["self"]],["ordering"]]],[11,"eq","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"ne","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"eq","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"ne","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["bytescodec"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"le","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"gt","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"ge","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"partial_cmp","","",8,[[["linescodec"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"le","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"gt","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"ge","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec::length_delimited","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec::length_delimited","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"poll_next","","",3,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",4,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",5,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_ready","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",3,[[["pin"],["self"],["i"]],["result"]]],[11,"poll_flush","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",4,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",4,[[["pin"],["self"],["i"]],["result"]]],[11,"poll_flush","","",4,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",4,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",5,[[["pin"],["self"],["i"]],["result"]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"decode_eof","","A default method available to be called when there are no…",9,[[["self"],["bytesmut"]],[["option"],["result",["option"]]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",9,[[["asyncread"],["asyncwrite"],["sized"]],[["framed"],["asyncread"],["asyncwrite"],["sized"]]]]],"p":[[3,"FramedParts"],[4,"LinesCodecError"],[3,"BytesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"LengthDelimitedCodec"],[3,"Builder"],[3,"LinesCodec"],[8,"Decoder"],[8,"Encoder"],[3,"LengthDelimitedCodecError"]]};
searchIndex["tonic"] = {"doc":"A Rust implementation of [gRPC], a high performance, open…","i":[[23,"async_trait","tonic","A re-export of `async-trait` for use with codegen.",null,null],[3,"Streaming","","Streaming requests and responses.",null,null],[3,"Interceptor","","Represents a gRPC interceptor.",null,null],[3,"Request","","A gRPC request and metadata from an RPC call.",null,null],[3,"Response","","A gRPC response and metadata from an RPC call.",null,null],[3,"Status","","A gRPC status describing the result of an RPC call.",null,null],[4,"Code","","gRPC status codes used by [`Status`].",null,null],[13,"Ok","","The operation completed successfully.",0,null],[13,"Cancelled","","The operation was cancelled.",0,null],[13,"Unknown","","Unknown error.",0,null],[13,"InvalidArgument","","Client specified an invalid argument.",0,null],[13,"DeadlineExceeded","","Deadline expired before operation could complete.",0,null],[13,"NotFound","","Some requested entity was not found.",0,null],[13,"AlreadyExists","","Some entity that we attempted to create already exists.",0,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",0,null],[13,"ResourceExhausted","","Some resource has been exhausted.",0,null],[13,"FailedPrecondition","","The system is not in a state required for the operation's…",0,null],[13,"Aborted","","The operation was aborted.",0,null],[13,"OutOfRange","","Operation was attempted past the valid range.",0,null],[13,"Unimplemented","","Operation is not implemented or not supported.",0,null],[13,"Internal","","Internal error.",0,null],[13,"Unavailable","","The service is currently unavailable.",0,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",0,null],[13,"Unauthenticated","","The request does not have valid authentication credentials",0,null],[0,"body","","HTTP specific body utilities.",null,null],[3,"BoxBody","tonic::body","A type erased http body.",null,null],[8,"Body","","A trait alias for [`http_body::Body`].",null,null],[16,"Data","","The body data type.",1,null],[16,"Error","","The errors produced from the body.",1,null],[10,"is_end_stream","","Check if the stream is over or not.",1,[[["self"]],["bool"]]],[10,"poll_data","","Poll for more data from the body.",1,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[10,"poll_trailers","","Poll for the trailing headers.",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["option"]]]]],[11,"new","","Create a new `BoxBody` mapping item and error to the…",2,[[["b"]],["self"]]],[11,"map_from","","Create a new `BoxBody` mapping item and error to the…",2,[[["b"]],["self"]]],[11,"empty","","Create a new `BoxBody` that is empty.",2,[[],["self"]]],[0,"client","tonic","Generic client implementation.",null,null],[3,"Grpc","tonic::client","A gRPC client dispatcher.",null,null],[11,"new","","Creates a new gRPC client with the provided [`GrpcService`].",3,[[["t"]],["self"]]],[11,"with_interceptor","","Creates a new gRPC client with the provided…",3,[[["t"]],["self"]]],[11,"ready","","Check if the inner [`GrpcService`] is able to accept a new…",3,[[["self"]]]],[11,"unary","","Send a single unary gRPC request.",3,[[["pathandquery"],["request"],["c"],["self"]]]],[11,"client_streaming","","Send a client side streaming gRPC request.",3,[[["self"],["pathandquery"],["c"],["request"]]]],[11,"server_streaming","","Send a server side streaming gRPC request.",3,[[["pathandquery"],["request"],["c"],["self"]]]],[11,"streaming","","Send a bi-directional streaming gRPC request.",3,[[["self"],["pathandquery"],["c"],["request"]]]],[8,"GrpcService","","Definition of the gRPC trait alias for [`tower_service`].",null,null],[16,"ResponseBody","","Responses body given by the service.",4,null],[16,"Error","","Errors produced by the service.",4,null],[16,"Future","","The future response value.",4,null],[10,"poll_ready","","Returns `Ready` when the service is able to process…",4,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"call","","Process the request and return the response asynchronously.",4,[[["self"],["request"]]]],[0,"codec","tonic","Generic encoding and decoding.",null,null],[3,"Streaming","tonic::codec","Streaming requests and responses.",null,null],[3,"ProstCodec","","A [`Codec`] that implements `application/grpc+proto` via…",null,null],[3,"DecodeBuf","","A specialized buffer to decode gRPC messages from.",null,null],[3,"EncodeBuf","","A specialized buffer to encode gRPC messages into.",null,null],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",5,[[["self"],["usize"]]]],[11,"message","tonic","Fetch the next message from this stream. `rust # use…",6,[[["self"]]]],[11,"trailers","","Fetch the trailing metadata.",6,[[["self"]]]],[8,"Codec","tonic::codec","Trait that knows how to encode and decode gRPC messages.",null,null],[16,"Encode","","The encodable message.",7,null],[16,"Decode","","The decodable message.",7,null],[16,"Encoder","","The encoder that can encode a message.",7,null],[16,"Decoder","","The encoder that can decode a message.",7,null],[10,"encoder","","Fetch the encoder.",7,[[["self"]]]],[10,"decoder","","Fetch the decoder.",7,[[["self"]]]],[8,"Encoder","","Encodes gRPC message types",null,null],[16,"Item","","The type that is encoded.",8,null],[16,"Error","","The type of encoding errors.",8,null],[10,"encode","","Encodes a message into the provided buffer.",8,[[["self"],["encodebuf"]],["result"]]],[8,"Decoder","","Decodes gRPC message types",null,null],[16,"Item","","The type that is decoded.",9,null],[16,"Error","","The type of unrecoverable frame decoding errors.",9,null],[10,"decode","","Decode a message from the buffer.",9,[[["self"],["decodebuf"]],[["option"],["result",["option"]]]]],[0,"metadata","tonic","Contains data structures and utilities for handling gRPC…",null,null],[3,"MetadataKey","tonic::metadata","Represents a custom metadata field name.",null,null],[3,"GetAll","","A view to all values stored in a single entry.",null,null],[3,"Iter","","`MetadataMap` entry iterator.",null,null],[3,"Keys","","An iterator over `MetadataMap` keys.",null,null],[3,"MetadataMap","","A set of gRPC custom metadata entries.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `MetadataMap`.",null,null],[3,"VacantEntry","","A view into a single empty location in a `MetadataMap`.",null,null],[3,"ValueDrain","","A drain iterator of all values associated with a single…",null,null],[3,"ValueIter","","An iterator of all values associated with a single…",null,null],[3,"Values","","`MetadataMap` value iterator.",null,null],[3,"MetadataValue","","Represents a custom metadata field value.",null,null],[4,"Entry","","A view into a single location in a `MetadataMap`, which…",null,null],[13,"Occupied","","An occupied entry",10,null],[13,"Vacant","","A vacant entry",10,null],[4,"KeyAndMutValueRef","","Reference to a key and an associated value in a…",null,null],[13,"Ascii","","An ascii metadata key and value.",11,null],[13,"Binary","","A binary metadata key and value.",11,null],[4,"KeyAndValueRef","","Reference to a key and an associated value in a…",null,null],[13,"Ascii","","An ascii metadata key and value.",12,null],[13,"Binary","","A binary metadata key and value.",12,null],[4,"KeyRef","","Reference to a key in a `MetadataMap`. It can point to…",null,null],[13,"Ascii","","An ascii metadata key and value.",13,null],[13,"Binary","","A binary metadata key and value.",13,null],[4,"ValueRef","","Reference to a value in a `MetadataMap`. It can point to…",null,null],[13,"Ascii","","An ascii metadata key and value.",14,null],[13,"Binary","","A binary metadata key and value.",14,null],[4,"ValueRefMut","","Reference to a value in a `MetadataMap`. It can point to…",null,null],[13,"Ascii","","An ascii metadata key and value.",15,null],[13,"Binary","","A binary metadata key and value.",15,null],[11,"from_bytes","","Converts a slice of bytes to a `MetadataKey`.",16,[[],[["invalidmetadatakey"],["result",["invalidmetadatakey"]]]]],[11,"from_static","","Converts a static string to a `MetadataKey`.",16,[[["str"]],["self"]]],[11,"as_str","","Returns a `str` representation of the metadata key.",16,[[["self"]],["str"]]],[11,"new","","Create an empty `MetadataMap`.",17,[[],["self"]]],[11,"from_headers","","Convert an HTTP HeaderMap to a MetadataMap",17,[[["headermap"]],["self"]]],[11,"into_headers","","Convert a MetadataMap into a HTTP HeaderMap",17,[[],["headermap"]]],[11,"with_capacity","","Create an empty `MetadataMap` with the specified capacity.",17,[[["usize"]],["metadatamap"]]],[11,"len","","Returns the number of metadata entries (ascii and binary)…",17,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys (ascii and binary) stored in…",17,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",17,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",17,[[["self"]]]],[11,"capacity","","Returns the number of custom metadata entries the map can…",17,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more custom…",17,[[["self"],["usize"]]]],[11,"get","","Returns a reference to the value associated with the key.…",17,[[["self"],["k"]],[["option",["metadatavalue"]],["metadatavalue"]]]],[11,"get_bin","","Like get, but for Binary keys (for example…",17,[[["self"],["k"]],[["metadatavalue"],["option",["metadatavalue"]]]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",17,[[["self"],["k"]],[["metadatavalue"],["option",["metadatavalue"]]]]],[11,"get_bin_mut","","Like get_mut, but for Binary keys (for example…",17,[[["self"],["k"]],[["option",["metadatavalue"]],["metadatavalue"]]]],[11,"get_all","","Returns a view of all values associated with a key. This…",17,[[["self"],["k"]],[["ascii"],["getall",["ascii"]]]]],[11,"get_all_bin","","Like get_all, but for Binary keys (for example…",17,[[["self"],["k"]],[["getall",["binary"]],["binary"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",17,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs (both ascii and…",17,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",17,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",17,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values (both ascii and binary).",17,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",17,[[["self"]],["valuesmut"]]],[11,"entry","","Gets the given ascii key's corresponding entry in the map…",17,[[["self"],["k"]],[["result",["entry","invalidmetadatakey"]],["entry",["ascii"]],["invalidmetadatakey"]]]],[11,"entry_bin","","Gets the given Binary key's corresponding entry in the map…",17,[[["self"],["k"]],[["result",["entry","invalidmetadatakey"]],["entry",["binary"]],["invalidmetadatakey"]]]],[11,"insert","","Inserts an ascii key-value pair into the map. To insert a…",17,[[["ascii"],["self"],["k"],["metadatavalue",["ascii"]]],[["option",["metadatavalue"]],["metadatavalue",["ascii"]]]]],[11,"insert_bin","","Like insert, but for Binary keys (for example…",17,[[["binary"],["metadatavalue",["binary"]],["self"],["k"]],[["metadatavalue",["binary"]],["option",["metadatavalue"]]]]],[11,"append","","Inserts an ascii key-value pair into the map. To insert a…",17,[[["ascii"],["self"],["k"],["metadatavalue",["ascii"]]],["bool"]]],[11,"append_bin","","Like append, but for binary keys (for example…",17,[[["binary"],["metadatavalue",["binary"]],["self"],["k"]],["bool"]]],[11,"remove","","Removes an ascii key from the map, returning the value…",17,[[["self"],["k"]],[["option",["metadatavalue"]],["metadatavalue",["ascii"]]]]],[11,"remove_bin","","Like remove, but for Binary keys (for example…",17,[[["self"],["k"]],[["metadatavalue",["binary"]],["option",["metadatavalue"]]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",10,[[["metadatavalue"]],["metadatavalue"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",10,[[["fnonce"]],["metadatavalue"]]],[11,"key","","Returns a reference to the entry's key",10,[[["self"]],["metadatakey"]]],[11,"key","","Returns a reference to the entry's key",18,[[["self"]],["metadatakey"]]],[11,"into_key","","Take ownership of the key",18,[[],["metadatakey"]]],[11,"insert","","Insert the value into the entry.",18,[[["metadatavalue"]],["metadatavalue"]]],[11,"insert_entry","","Insert the value into the entry.",18,[[["metadatavalue"]],[["occupiedentry",["ascii"]],["ascii"]]]],[11,"key","","Returns a reference to the entry's key.",19,[[["self"]],["metadatakey"]]],[11,"get","","Get a reference to the first value in the entry.",19,[[["self"]],["metadatavalue"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",19,[[["self"]],["metadatavalue"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",19,[[],["metadatavalue"]]],[11,"insert","","Sets the value of the entry.",19,[[["self"],["metadatavalue"]],["metadatavalue"]]],[11,"insert_mult","","Sets the value of the entry.",19,[[["self"],["metadatavalue"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",19,[[["self"],["metadatavalue"]]]],[11,"remove","","Remove the entry from the map.",19,[[],["metadatavalue"]]],[11,"remove_entry","","Remove the entry from the map.",19,[[]]],[11,"remove_entry_mult","","Remove the entry from the map.",19,[[]]],[11,"iter","","Returns an iterator visiting all values associated with…",19,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",19,[[["self"]],["valueitermut"]]],[11,"iter","","Returns an iterator visiting all values associated with…",20,[[["self"]],["valueiter"]]],[11,"from_static","","Convert a static string to a `MetadataValue`.",21,[[["str"]],["self"]]],[11,"try_from_bytes","","Attempt to convert a byte slice to a `MetadataValue`.",21,[[],[["invalidmetadatavaluebytes"],["result",["invalidmetadatavaluebytes"]]]]],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `MetadataValue`.",21,[[["bytes"]],[["invalidmetadatavaluebytes"],["result",["invalidmetadatavaluebytes"]]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `MetadataValue` without…",21,[[["bytes"]],["self"]]],[11,"is_empty","","Returns true if the `MetadataValue` has a length of zero…",21,[[["self"]],["bool"]]],[11,"to_bytes","","Converts a `MetadataValue` to a Bytes buffer. This method…",21,[[["self"]],[["invalidmetadatavaluebytes"],["bytes"],["result",["bytes","invalidmetadatavaluebytes"]]]]],[11,"set_sensitive","","Mark that the metadata value represents sensitive…",21,[[["self"],["bool"]]]],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",21,[[["self"]],["bool"]]],[11,"as_encoded_bytes","","Converts a `MetadataValue` to a byte slice. For Binary…",21,[[["self"]]]],[11,"from_str","","Attempt to convert a string to a `MetadataValue<Ascii>`.",21,[[["str"]],[["result",["invalidmetadatavalue"]],["invalidmetadatavalue"]]]],[11,"from_key","","Converts a MetadataKey into a MetadataValue.",21,[[["valueencoding"],["metadatakey"]],["self"]]],[11,"len","","Returns the length of `self`, in bytes.",21,[[["self"]],["usize"]]],[11,"to_str","","Yields a `&str` slice if the `MetadataValue` only contains…",21,[[["self"]],[["str"],["result",["str","tostrerror"]],["tostrerror"]]]],[11,"as_bytes","","Converts a `MetadataValue` to a byte slice. For Binary…",21,[[["self"]]]],[11,"from_bytes","","Convert a byte slice to a `MetadataValue<Binary>`.",21,[[],["self"]]],[0,"errors","","The metadata::errors module contains types for errors that…",null,null],[3,"InvalidMetadataValue","tonic::metadata::errors","A possible error when converting a `MetadataValue` from a…",null,null],[3,"InvalidMetadataValueBytes","","A possible error when converting a `MetadataValue` from a…",null,null],[3,"InvalidMetadataKey","","A possible error when converting a `MetadataKey` from…",null,null],[3,"ToStrError","","A possible error when converting a `MetadataValue` to a…",null,null],[6,"AsciiMetadataKey","tonic::metadata","An ascii metadata key.",null,null],[6,"BinaryMetadataKey","","A binary metadata key.",null,null],[6,"AsciiMetadataValue","","An ascii metadata value.",null,null],[6,"BinaryMetadataValue","","A binary metadata value.",null,null],[0,"server","tonic","Generic server implementation.",null,null],[3,"Grpc","tonic::server","A gRPC Server handler.",null,null],[11,"new","","Creates a new gRPC server with the provided [`Codec`].",22,[[["t"]],["self"]]],[11,"with_interceptor","","Creates a new gRPC server with the provided [`Codec`] and…",22,[[["t"]],["self"]]],[11,"unary","","Handle a single unary gRPC request.",22,[[["request"],["s"],["self"]]]],[11,"server_streaming","","Handle a server side streaming request.",22,[[["request"],["s"],["self"]]]],[11,"client_streaming","","Handle a client side streaming gRPC request.",22,[[["request"],["s"],["self"]]]],[11,"streaming","","Handle a bi-directional streaming gRPC request.",22,[[["request"],["s"],["self"]]]],[8,"ClientStreamingService","","A specialization of tower_service::Service.",null,null],[16,"Response","","Protobuf response message type",23,null],[16,"Future","","Response future",23,null],[10,"call","","Call the service",23,[[["self"],["request",["streaming"]],["streaming"]]]],[8,"ServerStreamingService","","A specialization of tower_service::Service.",null,null],[16,"Response","","Protobuf response message type",24,null],[16,"ResponseStream","","Stream of outbound response messages",24,null],[16,"Future","","Response future",24,null],[10,"call","","Call the service",24,[[["request"],["self"]]]],[8,"StreamingService","","A specialization of tower_service::Service.",null,null],[16,"Response","","Protobuf response message type",25,null],[16,"ResponseStream","","Stream of outbound response messages",25,null],[16,"Future","","Response future",25,null],[10,"call","","Call the service",25,[[["self"],["request",["streaming"]],["streaming"]]]],[8,"UnaryService","","A specialization of tower_service::Service.",null,null],[16,"Response","","Protobuf response message type",26,null],[16,"Future","","Response future",26,null],[10,"call","","Call the service",26,[[["request"],["self"]]]],[0,"transport","tonic","Batteries included server and client.",null,null],[3,"Body","tonic::transport","A stream of `Bytes`, used when receiving bodies.",null,null],[3,"Uri","","The URI component of a request.",null,null],[3,"Channel","","A default batteries included `transport` channel.",null,null],[3,"Endpoint","","Channel builder.",null,null],[3,"Error","","Error's that originate from the client or server;",null,null],[3,"Server","","A default batteries included `transport` server.",null,null],[3,"Certificate","","Represents a X509 certificate.",null,null],[3,"Identity","","Represents a private key and X509 certificate.",null,null],[3,"ClientTlsConfig","","Configures TLS settings for endpoints.",null,null],[3,"ServerTlsConfig","","Configures TLS settings for servers.",null,null],[0,"channel","","Client implementation and builder.",null,null],[3,"Endpoint","tonic::transport::channel","Channel builder.",null,null],[3,"ClientTlsConfig","","Configures TLS settings for endpoints.",null,null],[3,"Channel","","A default batteries included `transport` channel.",null,null],[3,"ResponseFuture","","A future that resolves to an HTTP response.",null,null],[11,"from_static","tonic::transport","Convert an `Endpoint` from a static string.",27,[[["str"]],["self"]]],[11,"from_shared","","Convert an `Endpoint` from shared bytes.",27,[[],[["result",["invaliduri"]],["invaliduri"]]]],[11,"timeout","","Apply a timeout to each request.",27,[[["duration"]],["self"]]],[11,"tcp_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",27,[[["option",["duration"]],["duration"]],["self"]]],[11,"concurrency_limit","","Apply a concurrency limit to each request.",27,[[["usize"]],["self"]]],[11,"rate_limit","","Apply a rate limit to each request.",27,[[["u64"],["duration"]],["self"]]],[11,"initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",27,[[],["self"]]],[11,"initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",27,[[],["self"]]],[11,"tls_config","","Configures TLS for the endpoint.",27,[[["clienttlsconfig"]],["self"]]],[11,"tcp_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",27,[[["bool"]],["self"]]],[11,"connect","","Create a channel from this config.",27,[[["self"]]]],[11,"connect_with_connector","","Connect with a custom connector.",27,[[["c"],["self"]]]],[11,"new","","Creates a new `ClientTlsConfig` using Rustls.",28,[[],["self"]]],[11,"domain_name","","Sets the domain name against which to verify the server's…",28,[[],["self"]]],[11,"ca_certificate","","Sets the CA Certificate against which to verify the…",28,[[["certificate"]],["self"]]],[11,"identity","","Sets the client identity to present to the server.",28,[[["identity"]],["self"]]],[11,"rustls_client_config","","Use options specified by the given `ClientConfig` to…",28,[[["clientconfig"]],["self"]]],[11,"builder","tonic::transport::channel","Create a [`Endpoint`] builder that can create a…",29,[[["uri"]],["endpoint"]]],[11,"from_static","","Create an `Endpoint` from a static string.",29,[[["str"]],["endpoint"]]],[11,"from_shared","","Create an `Endpoint` from shared bytes.",29,[[],[["result",["endpoint","invaliduri"]],["endpoint"],["invaliduri"]]]],[11,"balance_list","","Balance a list of [`Endpoint`]'s.",29,[[],["self"]]],[0,"server","tonic::transport","Server implementation and builder.",null,null],[3,"ServerTlsConfig","tonic::transport::server","Configures TLS settings for servers.",null,null],[3,"Server","","A default batteries included `transport` server.",null,null],[3,"Router","","A stack based `Service` router.",null,null],[11,"new","tonic::transport","Creates a new `ServerTlsConfig`.",30,[[],["self"]]],[11,"identity","","Sets the [`Identity`] of the server.",30,[[["identity"]],["self"]]],[11,"client_ca_root","","Sets a certificate against which to validate client TLS…",30,[[["certificate"]],["self"]]],[11,"rustls_server_config","","Use options specified by the given `ServerConfig` to…",30,[[["self"],["serverconfig"]],["self"]]],[8,"Connected","tonic::transport::server","Trait that connected IO resources implement.",null,null],[11,"remote_addr","","Return the remote address this IO resource is connected too.",31,[[["self"]],[["option",["socketaddr"]],["socketaddr"]]]],[11,"peer_certs","","Return the set of connected peer TLS certificates.",31,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[8,"NamedService","","A trait to provide a static reference to the service's…",null,null],[18,"NAME","","The `Service-Name` as described [here].",32,null],[11,"builder","","Create a new server builder that can configure a [`Server`].",33,[[],["self"]]],[11,"tls_config","","Configure TLS for this server.",33,[[["servertlsconfig"]],["self"]]],[11,"concurrency_limit_per_connection","","Set the concurrency limit applied to on requests inbound…",33,[[["usize"]],["self"]]],[11,"timeout","","Set a timeout on for all request handlers.",33,[[["self"],["duration"]],["self"]]],[11,"initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",33,[[],["self"]]],[11,"initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",33,[[],["self"]]],[11,"max_concurrent_streams","","Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option…",33,[[],["self"]]],[11,"tcp_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",33,[[["option",["duration"]],["duration"]],["self"]]],[11,"tcp_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",33,[[["bool"]],["self"]]],[11,"trace_fn","","Intercept inbound headers and add a [`tracing::Span`] to…",33,[[["f"]],["self"]]],[11,"add_service","","Create a router with the `S` typed service as the first…",33,[[["self"],["s"]],[["router",["unimplemented"]],["unimplemented"]]]],[11,"add_service","","Add a new service to this router.",34,[[["s"]],[["router",["or"]],["or",["request"]]]]],[11,"serve","","Consume this [`Server`] creating a future that will…",34,[[["socketaddr"]]]],[11,"serve_with_shutdown","","Consume this [`Server`] creating a future that will…",34,[[["socketaddr"],["future"]]]],[11,"serve_with_incoming","","Consume this [`Server`] creating a future that will…",34,[[["i"]]]],[11,"serve_with_incoming_shutdown","","Consume this [`Server`] creating a future that will…",34,[[["i"],["f"]]]],[11,"from_pem","tonic::transport","Parse a PEM encoded X509 Certificate.",35,[[],["self"]]],[11,"from_pem","","Parse a PEM encoded certificate and private key.",36,[[],["self"]]],[8,"NamedService","","A trait to provide a static reference to the service's…",null,null],[18,"NAME","","The `Service-Name` as described [here].",32,null],[11,"new","tonic","Create a new `Interceptor` from the provided function.",37,[[],["self"]]],[11,"new","","Create a new gRPC request.",38,[[["t"]],["self"]]],[11,"get_ref","","Get a reference to the message",38,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the message",38,[[["self"]],["t"]]],[11,"metadata","","Get a reference to the custom request metadata.",38,[[["self"]],["metadatamap"]]],[11,"metadata_mut","","Get a mutable reference to the request metadata.",38,[[["self"]],["metadatamap"]]],[11,"into_inner","","Consumes `self`, returning the message",38,[[],["t"]]],[11,"from_http","","Convert an HTTP request to a gRPC request",38,[[["request"]],["self"]]],[11,"remote_addr","","Get the remote address of this connection.",38,[[["self"]],[["option",["socketaddr"]],["socketaddr"]]]],[11,"peer_certs","","Get the peer certificates of the connected client.",38,[[["self"]],[["arc",["vec"]],["option",["arc"]]]]],[11,"new","","Create a new gRPC response.",39,[[["t"]],["self"]]],[11,"get_ref","","Get a immutable reference to `T`.",39,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the message",39,[[["self"]],["t"]]],[11,"metadata","","Get a reference to the custom response metadata.",39,[[["self"]],["metadatamap"]]],[11,"metadata_mut","","Get a mutable reference to the response metadata.",39,[[["self"]],["metadatamap"]]],[11,"into_inner","","Consumes `self`, returning the message",39,[[],["t"]]],[11,"new","","Create a new `Status` with the associated code and message.",40,[[["code"]],["status"]]],[11,"ok","","The operation completed successfully.",40,[[],["status"]]],[11,"cancelled","","The operation was cancelled (typically by the caller).",40,[[],["status"]]],[11,"unknown","","Unknown error. An example of where this error may be…",40,[[],["status"]]],[11,"invalid_argument","","Client specified an invalid argument. Note that this…",40,[[],["status"]]],[11,"deadline_exceeded","","Deadline expired before operation could complete. For…",40,[[],["status"]]],[11,"not_found","","Some requested entity (e.g., file or directory) was not…",40,[[],["status"]]],[11,"already_exists","","Some entity that we attempted to create (e.g., file or…",40,[[],["status"]]],[11,"permission_denied","","The caller does not have permission to execute the…",40,[[],["status"]]],[11,"resource_exhausted","","Some resource has been exhausted, perhaps a per-user…",40,[[],["status"]]],[11,"failed_precondition","","Operation was rejected because the system is not in a…",40,[[],["status"]]],[11,"aborted","","The operation was aborted, typically due to a concurrency…",40,[[],["status"]]],[11,"out_of_range","","Operation was attempted past the valid range. E.g.,…",40,[[],["status"]]],[11,"unimplemented","","Operation is not implemented or not supported/enabled in…",40,[[],["status"]]],[11,"internal","","Internal errors. Means some invariants expected by…",40,[[],["status"]]],[11,"unavailable","","The service is currently unavailable. This is a most…",40,[[],["status"]]],[11,"data_loss","","Unrecoverable data loss or corruption.",40,[[],["status"]]],[11,"unauthenticated","","The request does not have valid authentication credentials…",40,[[],["status"]]],[11,"code","","Get the gRPC `Code` of this `Status`.",40,[[["self"]],["code"]]],[11,"message","","Get the text error message of this `Status`.",40,[[["self"]],["str"]]],[11,"details","","Get the opaque error details of this `Status`.",40,[[["self"]]]],[11,"from_i32","","Get the `Code` that represents the integer, if known.",0,[[["i32"]],["code"]]],[8,"IntoRequest","","Trait implemented by RPC request types.",null,null],[10,"into_request","","Wrap the input message `T` in a `tonic::Request`",41,[[],["request"]]],[8,"IntoStreamingRequest","","Trait implemented by RPC streaming request types.",null,null],[16,"Stream","","The RPC request stream type",42,null],[16,"Message","","The RPC request type",42,null],[10,"into_streaming_request","","Wrap the stream of messages in a `tonic::Request`",42,[[],["request"]]],[14,"include_proto","","Include generated proto server and client items.",null,null],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"try_poll_next","","",6,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"vzip","","",0,[[],["v"]]],[11,"is_end_stream","tonic::body","",2,[[["self"]],["bool"]]],[11,"poll_data","","",2,[[["pin"],["context"],["t"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_trailers","","",2,[[["pin"],["context"],["t"]],[["poll",["result"]],["result",["option"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","tonic::client","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","tonic::codec","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","tonic::metadata","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","tonic::metadata::errors","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","tonic::server","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"is_end_stream","tonic::transport","",54,[[["self"]],["bool"]]],[11,"poll_data","","",54,[[["pin"],["context"],["t"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_trailers","","",54,[[["pin"],["context"],["t"]],[["poll",["result"]],["result",["option"]]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"try_poll_next","","",54,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"equivalent","","",55,[[["k"],["self"]],["bool"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","tonic::transport::channel","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","tonic::transport","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","tonic::transport::server","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","tonic::transport","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","tonic::transport::channel","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"try_poll","","",57,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","tonic::transport::server","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from_str","tonic::transport","",55,[[["str"]],[["result",["uri","invaliduri"]],["invaliduri"],["uri"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"eq","","",55,[[["str"],["self"]],["bool"]]],[11,"eq","","",55,[[["str"],["self"]],["bool"]]],[11,"eq","","",55,[[["uri"],["self"]],["bool"]]],[11,"try_from","","",55,[[["string"]],[["result",["uri"]],["uri"]]]],[11,"try_from","","",55,[[["uri"]],[["result",["uri"]],["uri"]]]],[11,"try_from","","",55,[[],[["uri"],["result",["uri"]]]]],[11,"try_from","","",55,[[["string"]],[["uri"],["result",["uri"]]]]],[11,"try_from","","",55,[[["parts"]],[["result",["uri"]],["uri"]]]],[11,"try_from","","",55,[[["str"]],[["result",["uri"]],["uri"]]]],[11,"clone","","",55,[[["self"]],["uri"]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",55,[[],["uri"]]],[11,"hash","","",55,[[["self"],["h"]]]],[11,"poll_next","","",54,[[["context"],["pin",["body"]],["body"]],[["option"],["poll",["option"]]]]],[11,"poll_data","","",54,[[["context"],["pin",["body"]],["body"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_trailers","","",54,[[["context"],["pin",["body"]],["body"]],[["poll",["result"]],["result",["option"]]]]],[11,"is_end_stream","","",54,[[["self"]],["bool"]]],[11,"size_hint","","",54,[[["self"]],["sizehint"]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","Returns `Body::empty()`.",54,[[],["body"]]],[11,"from","","",54,[[["string"]],["body"]]],[11,"from","","",54,[[["vec",["u8"]],["u8"]],["body"]]],[11,"from","","",54,[[["bytes"]],["body"]]],[11,"from","","",54,[[["str"]],["body"]]],[11,"from","","",54,[[],["body"]]],[11,"from","","",54,[[["stream"],["box",["stream"]]],["body"]]],[11,"from","","",54,[[["str"],["cow",["str"]]],["body"]]],[11,"from","","",54,[[["cow"]],["body"]]],[11,"poll_ready","tonic::transport::channel","",29,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",29,[[["self"],["request",["boxbody"]],["boxbody"]]]],[11,"encoder","tonic::codec","",43,[[["self"]]]],[11,"decoder","","",43,[[["self"]]]],[11,"into_request","tonic","",38,[[],["request"]]],[11,"into_streaming_request","","",38,[[],["self"]]],[11,"as_ref","tonic::metadata","",16,[[["self"]],["str"]]],[11,"as_ref","","",16,[[["self"]]]],[11,"as_ref","","",21,[[["self"]]]],[11,"from","","",16,[[["metadatakey"]],["metadatakey"]]],[11,"from","","",21,[[["metadatakey"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["u16"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["i16"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["u32"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["i32"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["u64"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["i64"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["usize"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["isize"]],[["ascii"],["metadatavalue",["ascii"]]]]],[11,"from","","",21,[[["metadatavalue"]],["self"]]],[11,"from","tonic::transport","",27,[[["uri"]],["self"]]],[11,"from","tonic","",37,[[["f"]],["self"]]],[11,"from","","",40,[[["error"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"next_back","tonic::metadata","",48,[[["self"]],["option"]]],[11,"into_iter","","",19,[[],["valueitermut"]]],[11,"into_iter","","",20,[[],["valueiter"]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,[[["self"]]]],[11,"clone","tonic::client","",3,[[["self"]],["self"]]],[11,"clone","tonic::codec","",43,[[["self"]],["prostcodec"]]],[11,"clone","tonic::metadata","",16,[[["self"]],["metadatakey"]]],[11,"clone","","",17,[[["self"]],["metadatamap"]]],[11,"clone","","",21,[[["self"]],["metadatavalue"]]],[11,"clone","tonic::transport","",27,[[["self"]],["endpoint"]]],[11,"clone","","",28,[[["self"]],["clienttlsconfig"]]],[11,"clone","tonic::transport::channel","",29,[[["self"]],["channel"]]],[11,"clone","tonic::transport","",30,[[["self"]],["servertlsconfig"]]],[11,"clone","tonic::transport::server","",33,[[["self"]],["server"]]],[11,"clone","tonic::transport","",35,[[["self"]],["certificate"]]],[11,"clone","","",36,[[["self"]],["identity"]]],[11,"clone","tonic","",37,[[["self"]],["interceptor"]]],[11,"clone","","",40,[[["self"]],["status"]]],[11,"clone","","",0,[[["self"]],["code"]]],[11,"default","tonic::codec","",43,[[],["self"]]],[11,"default","tonic::metadata","",17,[[],["metadatamap"]]],[11,"default","tonic::transport::server","",33,[[],["server"]]],[11,"cmp","tonic::metadata","",21,[[["self"]],["ordering"]]],[11,"eq","","",16,[[["self"],["metadatakey"]],["bool"]]],[11,"ne","","",16,[[["self"],["metadatakey"]],["bool"]]],[11,"eq","","",16,[[["metadatakey"],["self"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",16,[[["str"],["self"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",16,[[["str"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"]],["bool"]]],[11,"eq","","",21,[[["metadatavalue"],["self"]],["bool"]]],[11,"eq","","",21,[[["str"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"]],["bool"]]],[11,"eq","","",21,[[["string"],["self"]],["bool"]]],[11,"eq","","",21,[[["t"],["self"]],["bool"]]],[11,"eq","tonic","",0,[[["code"],["self"]],["bool"]]],[11,"partial_cmp","tonic::metadata","",21,[[["metadatavalue"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",21,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",21,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",21,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",21,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","tonic::body","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::client","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::codec","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::codec","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata::errors","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata::errors","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::server","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::transport","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::transport::channel","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::transport","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::transport::server","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::transport","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata::errors","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::metadata::errors","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic::transport","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","tonic","",40,[[["formatter"],["self"]],["result"]]],[11,"hash","tonic::metadata","",16,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"try_from","tonic::transport","",27,[[["bytes"]],["result"]]],[11,"try_from","","",27,[[["string"]],["result"]]],[11,"try_from","","",27,[[["str"]],["result"]]],[11,"from_str","tonic::metadata","",16,[[["str"]],[["invalidmetadatakey"],["result",["invalidmetadatakey"]]]]],[11,"from_str","","",21,[[["str"]],[["metadatavalue",["ascii"]],["result",["metadatavalue"]]]]],[11,"borrow","","",16,[[["self"]],["str"]]],[11,"description","tonic::metadata::errors","",50,[[["self"]],["str"]]],[11,"description","","",51,[[["self"]],["str"]]],[11,"description","","",52,[[["self"]],["str"]]],[11,"description","","",53,[[["self"]],["str"]]],[11,"source","tonic::transport","",56,[[["self"]],[["option",["stderror"]],["stderror"]]]],[11,"poll","tonic::transport::channel","",57,[[["pin"],["self"],["context"]],["poll"]]],[11,"remaining","tonic::codec","",44,[[["self"]],["usize"]]],[11,"bytes","","",44,[[["self"]]]],[11,"advance","","",44,[[["self"],["usize"]]]],[11,"remaining_mut","","",5,[[["self"]],["usize"]]],[11,"advance_mut","","",5,[[["self"],["usize"]]]],[11,"bytes_mut","","",5,[[["self"]]]],[11,"is_end_stream","tonic::body","",2,[[["self"]],["bool"]]],[11,"poll_data","","",2,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_trailers","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["option"]]]]],[11,"poll_next","tonic","",6,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"empty","tonic::transport","Create an empty `Body` stream.",54,[[],["body"]]],[11,"channel","","Create a `Body` stream with an associated sender half.",54,[[]]],[11,"wrap_stream","","Wrap a futures `Stream` in a box inside `Body`.",54,[[["s"]],["body"]]],[11,"on_upgrade","","Converts this `Body` into a `Future` of a pending HTTP…",54,[[],["onupgrade"]]],[11,"builder","","Creates a new builder-style object to manufacture a `Uri`.",55,[[],["builder"]]],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",55,[[["parts"]],[["uri"],["invaliduriparts"],["result",["uri","invaliduriparts"]]]]],[11,"from_maybe_shared","","Attempt to convert a `Bytes` buffer to a `Uri`.",55,[[["t"]],[["result",["uri","invaliduri"]],["invaliduri"],["uri"]]]],[11,"from_static","","Convert a `Uri` from a static string.",55,[[["str"]],["uri"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",55,[[],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",55,[[["self"]],[["pathandquery"],["option",["pathandquery"]]]]],[11,"path","","Get the path of this `Uri`.",55,[[["self"]],["str"]]],[11,"scheme","","Get the scheme of this `Uri`.",55,[[["self"]],[["option",["scheme"]],["scheme"]]]],[11,"scheme_str","","Get the scheme of this `Uri` as a `&str`.",55,[[["self"]],[["str"],["option",["str"]]]]],[11,"authority","","Get the authority of this `Uri`.",55,[[["self"]],[["authority"],["option",["authority"]]]]],[11,"host","","Get the host of this `Uri`.",55,[[["self"]],[["str"],["option",["str"]]]]],[11,"port","","Get the port part of this `Uri`.",55,[[["self"]],[["port",["str"]],["option",["port"]]]]],[11,"port_u16","","Get the port of this `Uri` as a `u16`.",55,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",55,[[["self"]],[["str"],["option",["str"]]]]],[11,"remote_addr","tonic::transport::server","Return the remote address this IO resource is connected too.",31,[[["self"]],[["option",["socketaddr"]],["socketaddr"]]]],[11,"peer_certs","","Return the set of connected peer TLS certificates.",31,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]]],"p":[[4,"Code"],[8,"Body"],[3,"BoxBody"],[3,"Grpc"],[8,"GrpcService"],[3,"EncodeBuf"],[3,"Streaming"],[8,"Codec"],[8,"Encoder"],[8,"Decoder"],[4,"Entry"],[4,"KeyAndMutValueRef"],[4,"KeyAndValueRef"],[4,"KeyRef"],[4,"ValueRef"],[4,"ValueRefMut"],[3,"MetadataKey"],[3,"MetadataMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"GetAll"],[3,"MetadataValue"],[3,"Grpc"],[8,"ClientStreamingService"],[8,"ServerStreamingService"],[8,"StreamingService"],[8,"UnaryService"],[3,"Endpoint"],[3,"ClientTlsConfig"],[3,"Channel"],[3,"ServerTlsConfig"],[8,"Connected"],[8,"NamedService"],[3,"Server"],[3,"Router"],[3,"Certificate"],[3,"Identity"],[3,"Interceptor"],[3,"Request"],[3,"Response"],[3,"Status"],[8,"IntoRequest"],[8,"IntoStreamingRequest"],[3,"ProstCodec"],[3,"DecodeBuf"],[3,"Iter"],[3,"Keys"],[3,"ValueDrain"],[3,"ValueIter"],[3,"Values"],[3,"InvalidMetadataValue"],[3,"InvalidMetadataValueBytes"],[3,"InvalidMetadataKey"],[3,"ToStrError"],[3,"Body"],[3,"Uri"],[3,"Error"],[3,"ResponseFuture"]]};
searchIndex["tower"] = {"doc":"`fn(Request) -> Future<Response>`","i":[[0,"error","tower::buffer","Error types",null,null],[3,"ServiceError","tower::buffer::error","An error produced by a `Service` wrapped by a `Buffer`",null,null],[3,"Closed","","An error when the buffer's worker closes unexpectedly.",null,null],[0,"future","tower::buffer","Future types",null,null],[3,"ResponseFuture","tower::buffer::future","Future eventually completed with the response to the…",null,null],[3,"BufferLayer","tower::buffer","Buffer requests with a bounded buffer",null,null],[3,"Buffer","","Adds a buffer in front of an inner service.",null,null],[8,"Discover","tower::discover","Provide a uniform set of services able to satisfy a request.",null,null],[16,"Key","","NewService key",0,null],[16,"Service","","The type of `Service` yielded by this `Discover`.",0,null],[16,"Error","","Error produced during discovery",0,null],[10,"poll_discover","","Yields the next discovery change set.",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["change"]]]]],[4,"Change","","A change in the service set",null,null],[13,"Insert","","A new service identified by key `K` was identified.",1,null],[13,"Remove","","The service identified by key `K` disappeared.",1,null],[3,"ServiceList","","Static service discovery based on a predetermined list of…",null,null],[3,"ServiceStream","","Dynamic service discovery based on a stream of service…",null,null],[0,"concurrency","tower::limit","Limit the max number of requests being concurrently…",null,null],[0,"future","tower::limit::concurrency","Future types",null,null],[3,"ResponseFuture","tower::limit::concurrency::future","Future for the `ConcurrencyLimit` service.",null,null],[3,"ConcurrencyLimitLayer","tower::limit::concurrency","Enforces a limit on the concurrent number of requests the…",null,null],[3,"ConcurrencyLimit","","Enforces a limit on the concurrent number of requests the…",null,null],[0,"rate","tower::limit","Limit the rate at which requests are processed.",null,null],[3,"RateLimitLayer","tower::limit::rate","Enforces a rate limit on the number of requests the…",null,null],[3,"Rate","","A rate of requests per time period.",null,null],[3,"RateLimit","","Enforces a rate limit on the number of requests the…",null,null],[0,"error","tower::load_shed","Error types",null,null],[3,"Overloaded","tower::load_shed::error","An error returned by `Overload` when the underlying…",null,null],[0,"future","tower::load_shed","Future types",null,null],[3,"ResponseFuture","tower::load_shed::future","Future for the `LoadShed` service.",null,null],[3,"LoadShed","tower::load_shed","A `Service` that sheds load when the inner service isn't…",null,null],[3,"LoadShedLayer","","A `tower-layer` to wrap services in `LoadShed` middleware.",null,null],[0,"budget","tower::retry","A retry \"budget\" for allowing only a certain amount of…",null,null],[3,"Budget","tower::retry::budget","Represents a \"budget\" for retrying requests.",null,null],[3,"Overdrawn","","Indicates that it is not currently allowed to \"withdraw\"…",null,null],[0,"future","tower::retry","Future types",null,null],[3,"ResponseFuture","tower::retry::future","The `Future` returned by a `Retry` service.",null,null],[3,"Retry","tower::retry","Configure retrying requests of \"failed\" responses.",null,null],[3,"RetryLayer","","Retry requests based on a policy",null,null],[8,"Policy","","A \"retry policy\" to classify if a request should be retried.",null,null],[16,"Future","","The `Future` type returned by `Policy::retry()`.",2,null],[10,"retry","","Check the policy if a certain request should be retried.",2,[[["result"],["res"],["req"],["self"],["e"]],["option"]]],[10,"clone_request","","Tries to clone a request before being passed to the inner…",2,[[["req"],["self"]],["option"]]],[0,"error","tower::timeout","Error types",null,null],[3,"Elapsed","tower::timeout::error","The timeout elapsed.",null,null],[0,"future","tower::timeout","Future types",null,null],[3,"ResponseFuture","tower::timeout::future","`Timeout` response future",null,null],[3,"Timeout","tower::timeout","Applies a timeout to requests.",null,null],[3,"TimeoutLayer","","Applies a timeout to requests via the supplied inner…",null,null],[8,"Layer","tower::layer","Decorates a `Service`, transforming either the request or…",null,null],[16,"Service","","The wrapped service",3,null],[10,"layer","","Wrap the given service with the middleware, returning a…",3,[[["s"],["self"]]]],[3,"Identity","","A no-op middleware.",null,null],[3,"Stack","","Two middlewares chained together.",null,null],[8,"ServiceExt","tower","An extension trait for `Service`s that provides a variety…",null,null],[11,"ready","","Resolves when the service is ready to accept a request.",4,[[["self"]],["ready"]]],[11,"ready_and","","Yields a mutable reference to the service when it is ready…",4,[[["self"]],["readyand"]]],[11,"ready_oneshot","","Yields the service when it is ready to accept a request.",4,[[],["readyoneshot"]]],[11,"oneshot","","Consume this `Service`, calling with the providing request…",4,[[["request"]],["oneshot"]]],[11,"call_all","","Process all requests from the given `Stream`, and produce…",4,[[["s"]],["callall"]]],[8,"Service","","An asynchronous function from a `Request` to a `Response`.",null,null],[16,"Response","","Responses given by the service.",5,null],[16,"Error","","Errors produced by the service.",5,null],[16,"Future","","The future response value.",5,null],[10,"poll_ready","","Returns `Poll::Ready(Ok(()))` when the service is able to…",5,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[10,"call","","Process the request and return the response asynchronously.",5,[[["self"],["request"]]]],[5,"service_fn","","Returns a new `ServiceFn` with the given closure.",null,[[["t"]],["servicefn"]]],[0,"builder","","Builder types to compose layers and services",null,null],[3,"ServiceBuilder","tower::builder","Declaratively construct Service values.",null,null],[11,"new","","Create a new `ServiceBuilder`.",6,[[],["self"]]],[11,"layer","","Add a new layer `T` into the `ServiceBuilder`.",6,[[["t"]],[["servicebuilder",["stack"]],["stack"]]]],[11,"buffer","","Buffer requests when when the next layer is out of capacity.",6,[[["usize"]],[["stack",["bufferlayer"]],["servicebuilder",["stack"]]]]],[11,"concurrency_limit","","Limit the max number of in-flight requests.",6,[[["usize"]],[["stack",["concurrencylimitlayer"]],["servicebuilder",["stack"]]]]],[11,"load_shed","","Drop requests when the next layer is unable to respond to…",6,[[],[["stack",["loadshedlayer"]],["servicebuilder",["stack"]]]]],[11,"rate_limit","","Limit requests to at most `num` per the given duration",6,[[["u64"],["duration"]],[["servicebuilder",["stack"]],["stack",["ratelimitlayer"]]]]],[11,"retry","","Retry failed requests.",6,[[["p"]],[["stack",["retrylayer"]],["servicebuilder",["stack"]]]]],[11,"timeout","","Fail requests that take longer than `timeout`.",6,[[["duration"]],[["stack",["timeoutlayer"]],["servicebuilder",["stack"]]]]],[11,"into_inner","","Obtains the underlying `Layer` implementation.",6,[[],["l"]]],[11,"service","","Wrap the service `S` with the layers.",6,[[["s"]]]],[0,"util","tower","Combinators for working with `Service`s",null,null],[3,"BoxService","tower::util","A boxed `Service + Send` trait object.",null,null],[3,"CallAll","","This is a `futures::Stream` of responses resulting from…",null,null],[3,"CallAllUnordered","","A stream of responses received from the inner service in…",null,null],[4,"Either","","Combine two different service types into a single type.",null,null],[13,"A","","One type of backing `Service`.",7,null],[13,"B","","The other type of backing `Service`.",7,null],[3,"Oneshot","","A `Future` consuming a `Service` and request, waiting…",null,null],[3,"Optional","","Optionally forwards requests to an inner service.",null,null],[3,"Ready","","A future that resolves when a `Service` is ready to accept…",null,null],[8,"ServiceExt","","An extension trait for `Service`s that provides a variety…",null,null],[11,"ready","","Resolves when the service is ready to accept a request.",4,[[["self"]],["ready"]]],[11,"ready_and","","Yields a mutable reference to the service when it is ready…",4,[[["self"]],["readyand"]]],[11,"ready_oneshot","","Yields the service when it is ready to accept a request.",4,[[],["readyoneshot"]]],[11,"oneshot","","Consume this `Service`, calling with the providing request…",4,[[["request"]],["oneshot"]]],[11,"call_all","","Process all requests from the given `Stream`, and produce…",4,[[["s"]],["callall"]]],[3,"UnsyncBoxService","","A boxed `Service` trait object.",null,null],[11,"from","tower::buffer::error","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","tower::buffer::future","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"try_poll","","",10,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower::buffer","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","tower::discover","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","tower::limit::concurrency::future","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"try_poll","","",15,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower::limit::concurrency","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","tower::limit::rate","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","tower::load_shed::error","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","tower::load_shed::future","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"try_poll","","",22,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower::load_shed","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","tower::retry::budget","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","tower::retry::future","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"try_poll","","",27,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower::retry","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","tower::timeout::error","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","tower::timeout::future","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"try_poll","","",31,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower::timeout","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","tower::layer","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","tower::builder","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tower::util","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"try_poll_next","","",37,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"try_poll_next","","",38,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"try_poll","","",39,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"try_poll","","",41,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"source","tower::buffer::error","",8,[[["self"]],[["option",["error"]],["error"]]]],[11,"clone","tower::buffer","",12,[[["self"]],["buffer"]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::buffer::future","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::buffer::error","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::buffer","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::buffer::error","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"layer","tower::buffer","",11,[[["s"],["self"]]]],[11,"fmt","tower::buffer::error","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","tower::buffer::future","",10,[[["pin",["responsefuture"]],["context"],["responsefuture"]],["poll"]]],[11,"poll_ready","tower::buffer","",12,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"call","","",12,[[["self"],["request"]]]],[11,"fmt","tower::layer","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"layer","","",34,[[["s"],["self"]]]],[11,"layer","","",35,[[["s"],["self"]]]],[11,"default","","",34,[[],["identity"]]],[11,"clone","","",34,[[["self"]],["identity"]]],[11,"clone","","",35,[[["self"]],["stack"]]],[11,"fmt","tower::discover","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_discover","","",13,[[["context"],["servicelist"],["pin",["servicelist"]]],[["result",["change"]],["poll",["result"]]]]],[11,"poll_discover","","",14,[[["context"],["pin",["servicestream"]],["servicestream"]],[["poll",["result"]],["result",["change"]]]]],[11,"clone","tower::limit::concurrency","",17,[[["self"]],["concurrencylimit"]]],[11,"clone","","",16,[[["self"]],["concurrencylimitlayer"]]],[11,"clone","tower::limit::rate","",19,[[["self"]],["rate"]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::limit::concurrency","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::limit::concurrency::future","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"load","tower::limit::concurrency","",17,[[["self"]]]],[11,"load","tower::limit::rate","",20,[[["self"]]]],[11,"poll","tower::limit::concurrency::future","",15,[[["context"],["pin",["responsefuture"]],["responsefuture"]],["poll"]]],[11,"layer","tower::limit::rate","",18,[[["s"],["self"]]]],[11,"layer","tower::limit::concurrency","",16,[[["s"],["self"]]]],[11,"drop","tower::limit::concurrency::future","",15,[[["self"]]]],[11,"poll_ready","tower::limit::concurrency","",17,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"call","","",17,[[["self"],["request"]]]],[11,"poll_ready","tower::limit::rate","",20,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"call","","",20,[[["self"],["request"]]]],[11,"clone","tower::load_shed","",23,[[["self"]],["loadshed"]]],[11,"clone","","",24,[[["self"]],["loadshedlayer"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::load_shed::error","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::load_shed","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::load_shed::future","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::load_shed::error","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_ready","tower::load_shed","",23,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"call","","",23,[[["self"],["req"]]]],[11,"poll","tower::load_shed::future","",22,[[["responsefuture"],["context"],["pin",["responsefuture"]]],["poll"]]],[11,"layer","tower::load_shed","",24,[[["s"],["self"]]]],[11,"layer","tower::retry","",29,[[["s"],["self"]]]],[11,"default","tower::retry::budget","",25,[[],["budget"]]],[11,"clone","tower::retry","",28,[[["self"]],["retry"]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::retry::budget","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::retry","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::retry::future","",27,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::retry::budget","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","tower::retry::future","",27,[[["context"],["pin",["responsefuture"]],["responsefuture"]],["poll"]]],[11,"poll_ready","tower::retry","",28,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"call","","",28,[[["self"],["request"]]]],[11,"clone","tower::timeout","",32,[[["self"]],["timeout"]]],[11,"fmt","","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::timeout::future","",31,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::timeout","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tower::timeout::error","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_ready","tower::timeout","",32,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"call","","",32,[[["self"],["request"]]]],[11,"poll","tower::timeout::future","",31,[[["context"],["responsefuture"],["pin",["responsefuture"]]],["poll"]]],[11,"layer","tower::timeout","",33,[[["s"],["self"]]]],[11,"clone","tower::util","",7,[[["self"]],["either"]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_ready","","",42,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"call","","",42,[[["self"],["t"]],[["box",["future"]],["pin",["box"]]]]],[11,"poll_ready","","",7,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"call","","",7,[[["self"],["request"]]]],[11,"poll_ready","","",36,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"call","","",36,[[["self"],["t"]],[["box",["future"]],["pin",["box"]]]]],[11,"poll_ready","","",40,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"call","","",40,[[["self"],["request"]]]],[11,"poll","","",7,[[["pin",["either"]],["context"],["either"]],["poll"]]],[11,"poll","","",41,[[["context"],["ready"],["pin",["ready"]]],["poll"]]],[11,"poll","","",39,[[["pin",["oneshot"]],["context"],["oneshot"]],["poll"]]],[11,"poll_next","","",37,[[["context"],["pin",["callall"]],["callall"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",38,[[["callallunordered"],["context"],["pin",["callallunordered"]]],[["poll",["option"]],["option"]]]],[11,"clone","tower::builder","",6,[[["self"]],["servicebuilder"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"new","tower::buffer","Create a new `BufferLayer` with the provided `bound`.",11,[[["usize"]],["bufferlayer"]]],[11,"new","","Creates a new `Buffer` wrapping `service`.",12,[[["t"],["usize"]],["buffer"]]],[11,"pair","","Creates a new `Buffer` wrapping `service` but returns the…",12,[[["t"],["usize"]]]],[11,"new","tower::discover","",13,[[["t"]],["servicelist"]]],[11,"new","","",14,[[["s"]],["servicestream"]]],[11,"new","tower::limit::concurrency","Create a new concurrency limit layer.",16,[[["usize"]],["concurrencylimitlayer"]]],[11,"new","","Create a new concurrency limiter.",17,[[["t"],["usize"]],["concurrencylimit"]]],[11,"get_ref","","Get a reference to the inner service",17,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the inner service",17,[[["self"]],["t"]]],[11,"into_inner","","Consume `self`, returning the inner service",17,[[],["t"]]],[11,"new","tower::limit::rate","Create new rate limit layer.",18,[[["u64"],["duration"]],["ratelimitlayer"]]],[11,"new","","Create a new rate.",19,[[["u64"],["duration"]],["rate"]]],[11,"new","","Create a new rate limiter",20,[[["t"],["rate"]],["ratelimit"]]],[11,"get_ref","","Get a reference to the inner service",20,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the inner service",20,[[["self"]],["t"]]],[11,"into_inner","","Consume `self`, returning the inner service",20,[[],["t"]]],[11,"new","tower::load_shed","Wraps a service in `LoadShed` middleware.",23,[[["s"]],["loadshed"]]],[11,"new","","Creates a new layer.",24,[[],["loadshedlayer"]]],[11,"new","tower::retry::budget","Create a `Budget` that allows for a certain percent of the…",25,[[["f32"],["u32"],["duration"]],["budget"]]],[11,"deposit","","Store a \"deposit\" in the budget, which will be used to…",25,[[["self"]]]],[11,"withdraw","","Check whether there is enough \"balance\" in the budget to…",25,[[["self"]],[["overdrawn"],["result",["overdrawn"]]]]],[11,"new","tower::retry","Retry the inner service depending on this `Policy`.",28,[[["s"],["p"]],["retry"]]],[11,"new","","Create a new `RetryLayer` from a retry policy",29,[[["p"]],["retrylayer"]]],[11,"new","tower::timeout::error","Construct a new elapsed error",30,[[],["elapsed"]]],[11,"new","tower::timeout","Creates a new Timeout",32,[[["t"],["duration"]],["timeout"]]],[11,"new","","Create a timeout from a duration",33,[[["duration"]],["timeoutlayer"]]],[11,"new","tower::layer","Create a new `Identity` value",34,[[],["identity"]]],[11,"new","","Create a new `Stack`.",35,[[["inner"],["outer"]],["stack"]]],[11,"new","tower::util","",36,[[["s"]],["boxservice"]]],[11,"new","","Create new `CallAll` combinator.",37,[[["s"],["svc"]],["callall"]]],[11,"into_inner","","Extract the wrapped `Service`.",37,[[],["svc"]]],[11,"take_service","","Extract the wrapped `Service`.",37,[[["pin",["callall"]],["callall"]],["svc"]]],[11,"unordered","","Return responses as they are ready, regardless of the…",37,[[],["callallunordered"]]],[11,"new","","Create new `CallAllUnordered` combinator.",38,[[["s"],["svc"]],["callallunordered"]]],[11,"into_inner","","Extract the wrapped `Service`.",38,[[],["svc"]]],[11,"take_service","","Extract the wrapped `Service`.",38,[[["callallunordered"],["pin",["callallunordered"]]],["svc"]]],[11,"new","","",39,[[["s"],["req"]],["oneshot"]]],[11,"new","","Create a new `OptionService`",40,[[["option"]],["optional"]]],[11,"new","","",41,[[["t"]],["ready"]]],[11,"new","","",42,[[["s"]],["unsyncboxservice"]]]],"p":[[8,"Discover"],[4,"Change"],[8,"Policy"],[8,"Layer"],[8,"ServiceExt"],[8,"Service"],[3,"ServiceBuilder"],[4,"Either"],[3,"ServiceError"],[3,"Closed"],[3,"ResponseFuture"],[3,"BufferLayer"],[3,"Buffer"],[3,"ServiceList"],[3,"ServiceStream"],[3,"ResponseFuture"],[3,"ConcurrencyLimitLayer"],[3,"ConcurrencyLimit"],[3,"RateLimitLayer"],[3,"Rate"],[3,"RateLimit"],[3,"Overloaded"],[3,"ResponseFuture"],[3,"LoadShed"],[3,"LoadShedLayer"],[3,"Budget"],[3,"Overdrawn"],[3,"ResponseFuture"],[3,"Retry"],[3,"RetryLayer"],[3,"Elapsed"],[3,"ResponseFuture"],[3,"Timeout"],[3,"TimeoutLayer"],[3,"Identity"],[3,"Stack"],[3,"BoxService"],[3,"CallAll"],[3,"CallAllUnordered"],[3,"Oneshot"],[3,"Optional"],[3,"Ready"],[3,"UnsyncBoxService"]]};
searchIndex["tower_balance"] = {"doc":"Load balancing middlewares.","i":[[0,"error","tower_balance","Error types",null,null],[3,"Discover","tower_balance::error","An error returned when the balancer's endpoint discovery…",null,null],[0,"p2c","tower_balance","A Power-of-Two-Choices Load Balancer",null,null],[3,"BalanceLayer","tower_balance::p2c","Efficiently distributes requests across an arbitrary…",null,null],[3,"BalanceMake","","Makes `Balancer`s given an inner service that makes…",null,null],[3,"MakeFuture","","Makes a balancer instance.",null,null],[3,"Balance","","Distributes requests across inner services using the…",null,null],[11,"new","","Builds a balancer using the system entropy.",0,[[],["self"]]],[11,"from_rng","","Builds a balancer from the provided RNG.",0,[[["r"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Initializes a P2C load balancer from the OS's entropy…",1,[[["s"]],["self"]]],[11,"new","","Initializes a P2C load balancer from the provided…",2,[[["d"],["smallrng"]],["self"]]],[11,"from_entropy","","Initializes a P2C load balancer from the OS's entropy…",2,[[["d"]],["self"]]],[11,"len","","Returns the number of endpoints currently tracked by the…",2,[[["self"]],["usize"]]],[0,"pool","tower_balance","This module defines a load-balanced pool of services that…",null,null],[3,"PoolDiscoverer","tower_balance::pool","A wrapper around `MakeService` that discovers a new…",null,null],[3,"Builder","","A [builder] that lets you configure how a [`Pool`]…",null,null],[3,"Pool","","A dynamically sized, load-balanced pool of `Service`…",null,null],[11,"new","","Create a new builder with default values for all load…",3,[[],["self"]]],[11,"underutilized_below","","When the estimated load (see the module-level docs) drops…",3,[[["self"],["f64"]],["self"]]],[11,"loaded_above","","When the estimated load (see the module-level docs)…",3,[[["self"],["f64"]],["self"]]],[11,"initial","","The initial estimated load average.",3,[[["self"],["f64"]],["self"]]],[11,"urgency","","How aggressively the estimated load average is updated.",3,[[["self"],["f64"]],["self"]]],[11,"max_services","","The maximum number of backing `Service` instances to…",3,[[["self"],["option",["usize"]],["usize"]],["self"]]],[11,"build","","See [`Pool::new`].",3,[[["ms"],["self"],["target"]],["pool"]]],[11,"new","","Construct a new dynamically sized `Pool`.",4,[[["ms"],["target"]],["self"]]],[11,"from","tower_balance::error","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","tower_balance::p2c","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"poll_ready","","",1,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"make_service","","",1,[[["self"],["target"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"try_poll","","",6,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"poll_ready","","",2,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"make_connection","","",2,[[["self"],["target"]]]],[11,"poll_ready","","",2,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"make_service","","",2,[[["self"],["target"]]]],[11,"from","tower_balance::pool","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"poll_ready","","",4,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"make_connection","","",4,[[["self"],["target"]]]],[11,"poll_ready","","",4,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[11,"make_service","","",4,[[["self"],["target"]]]],[11,"clone","tower_balance::p2c","",0,[[["self"]],["balancelayer"]]],[11,"clone","","",1,[[["self"]],["balancemake"]]],[11,"clone","tower_balance::pool","",3,[[["self"]],["builder"]]],[11,"default","","",3,[[],["self"]]],[11,"fmt","tower_balance::error","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_balance::p2c","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_balance::pool","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_balance::error","",5,[[["formatter"],["self"]],["result"]]],[11,"source","","",5,[[["self"]],[["option",["error"]],["error"]]]],[11,"poll","tower_balance::p2c","",6,[[["pin"],["self"],["context"]],["poll"]]],[11,"layer","","",0,[[["s"],["self"]]]],[11,"drop","","",6,[[["self"],["pin"]]]],[11,"drop","tower_balance::pool","",7,[[["self"],["pin"]]]],[11,"poll_discover","","",7,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"poll_ready","tower_balance::p2c","",1,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",1,[[["self"],["target"]]]],[11,"poll_ready","","",2,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",2,[[["self"],["req"]]]],[11,"poll_ready","tower_balance::pool","",4,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",4,[[["self"],["req"]]]]],"p":[[3,"BalanceLayer"],[3,"BalanceMake"],[3,"Balance"],[3,"Builder"],[3,"Pool"],[3,"Discover"],[3,"MakeFuture"],[3,"PoolDiscoverer"]]};
searchIndex["tower_buffer"] = {"doc":"Buffer requests when the inner service is out of capacity.","i":[[3,"BufferLayer","tower_buffer","Buffer requests with a bounded buffer",null,null],[3,"Buffer","","Adds a buffer in front of an inner service.",null,null],[0,"error","","Error types",null,null],[3,"ServiceError","tower_buffer::error","An error produced by a `Service` wrapped by a `Buffer`",null,null],[3,"Closed","","An error when the buffer's worker closes unexpectedly.",null,null],[0,"future","tower_buffer","Future types",null,null],[3,"ResponseFuture","tower_buffer::future","Future eventually completed with the response to the…",null,null],[11,"new","tower_buffer","Create a new `BufferLayer` with the provided `bound`.",0,[[["usize"]],["self"]]],[11,"new","","Creates a new `Buffer` wrapping `service`.",1,[[["t"],["usize"]],["self"]]],[11,"pair","","Creates a new `Buffer` wrapping `service` but returns the…",1,[[["t"],["usize"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tower_buffer::error","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","tower_buffer::future","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll","","",4,[[["pin"],["f"],["context"]],["poll"]]],[11,"clone","tower_buffer","",1,[[["self"]],["self"]]],[11,"fmt","tower_buffer::error","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_buffer::future","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_buffer","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_buffer::error","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"source","","",2,[[["self"]],[["option",["error"]],["error"]]]],[11,"poll","tower_buffer::future","",4,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",4,[[["self"],["pin"]]]],[11,"layer","tower_buffer","",0,[[["s"],["self"]]]],[11,"poll_ready","","",1,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",1,[[["self"],["request"]]]]],"p":[[3,"BufferLayer"],[3,"Buffer"],[3,"ServiceError"],[3,"Closed"],[3,"ResponseFuture"]]};
searchIndex["tower_discover"] = {"doc":"Tower service discovery","i":[[3,"ServiceList","tower_discover","Static service discovery based on a predetermined list of…",null,null],[3,"ServiceStream","","Dynamic service discovery based on a stream of service…",null,null],[4,"Change","","A change in the service set",null,null],[13,"Insert","","A new service identified by key `K` was identified.",0,null],[13,"Remove","","The service identified by key `K` disappeared.",0,null],[11,"new","","",1,[[["t"]],["servicelist"]]],[11,"new","","",2,[[["s"]],["self"]]],[8,"Discover","","Provide a uniform set of services able to satisfy a request.",null,null],[16,"Key","","NewService key",3,null],[16,"Service","","The type of `Service` yielded by this `Discover`.",3,null],[16,"Error","","Error produced during discovery",3,null],[10,"poll_discover","","Yields the next discovery change set.",3,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"poll_discover","","",1,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"poll_discover","","",2,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"drop","","",1,[[["self"],["pin"]]]],[11,"drop","","",2,[[["self"],["pin"]]]]],"p":[[4,"Change"],[3,"ServiceList"],[3,"ServiceStream"],[8,"Discover"]]};
searchIndex["tower_layer"] = {"doc":"Layer traits and extensions.","i":[[3,"Identity","tower_layer","A no-op middleware.",null,null],[3,"Stack","","Two middlewares chained together.",null,null],[11,"new","","Create a new `Identity` value",0,[[],["identity"]]],[11,"new","","Create a new `Stack`.",1,[[["inner"],["outer"]],["self"]]],[8,"Layer","","Decorates a `Service`, transforming either the request or…",null,null],[16,"Service","","The wrapped service",2,null],[10,"layer","","Wrap the given service with the middleware, returning a…",2,[[["s"],["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"layer","","",0,[[["s"],["self"]]]],[11,"layer","","",1,[[["s"],["self"]]]],[11,"clone","","",0,[[["self"]],["identity"]]],[11,"clone","","",1,[[["self"]],["stack"]]],[11,"default","","",0,[[],["identity"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Identity"],[3,"Stack"],[8,"Layer"]]};
searchIndex["tower_limit"] = {"doc":"Tower middleware for limiting requests.","i":[[3,"ConcurrencyLimit","tower_limit","Enforces a limit on the concurrent number of requests the…",null,null],[3,"ConcurrencyLimitLayer","","Enforces a limit on the concurrent number of requests the…",null,null],[3,"RateLimit","","Enforces a rate limit on the number of requests the…",null,null],[3,"RateLimitLayer","","Enforces a rate limit on the number of requests the…",null,null],[0,"concurrency","","Limit the max number of requests being concurrently…",null,null],[3,"ConcurrencyLimitLayer","tower_limit::concurrency","Enforces a limit on the concurrent number of requests the…",null,null],[3,"ConcurrencyLimit","","Enforces a limit on the concurrent number of requests the…",null,null],[0,"future","","Future types",null,null],[3,"ResponseFuture","tower_limit::concurrency::future","Future for the `ConcurrencyLimit` service.",null,null],[11,"new","tower_limit","Create a new concurrency limit layer.",0,[[["usize"]],["self"]]],[11,"new","","Create a new concurrency limiter.",1,[[["t"],["usize"]],["self"]]],[11,"get_ref","","Get a reference to the inner service",1,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the inner service",1,[[["self"]],["t"]]],[11,"into_inner","","Consume `self`, returning the inner service",1,[[],["t"]]],[0,"rate","","Limit the rate at which requests are processed.",null,null],[3,"RateLimitLayer","tower_limit::rate","Enforces a rate limit on the number of requests the…",null,null],[3,"Rate","","A rate of requests per time period.",null,null],[3,"RateLimit","","Enforces a rate limit on the number of requests the…",null,null],[11,"new","tower_limit","Create new rate limit layer.",2,[[["u64"],["duration"]],["self"]]],[11,"new","tower_limit::rate","Create a new rate.",3,[[["u64"],["duration"]],["self"]]],[11,"new","tower_limit","Create a new rate limiter",4,[[["rate"],["t"]],["self"]]],[11,"get_ref","","Get a reference to the inner service",4,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the inner service",4,[[["self"]],["t"]]],[11,"into_inner","","Consume `self`, returning the inner service",4,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tower_limit::concurrency::future","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower_limit::rate","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"drop","tower_limit::concurrency::future","",5,[[["self"]]]],[11,"clone","tower_limit","",0,[[["self"]],["concurrencylimitlayer"]]],[11,"clone","","",1,[[["self"]],["concurrencylimit"]]],[11,"clone","tower_limit::rate","",3,[[["self"]],["rate"]]],[11,"fmt","tower_limit::concurrency::future","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_limit","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_limit::rate","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_limit","",4,[[["formatter"],["self"]],["result"]]],[11,"poll","tower_limit::concurrency::future","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",5,[[["pin"],["self"]]]],[11,"layer","tower_limit","",0,[[["s"],["self"]]]],[11,"layer","","",2,[[["s"],["self"]]]],[11,"poll_ready","","",1,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",1,[[["self"],["request"]]]],[11,"poll_ready","","",4,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",4,[[["self"],["request"]]]],[11,"load","","",1,[[["self"]]]],[11,"load","","",4,[[["self"]]]]],"p":[[3,"ConcurrencyLimitLayer"],[3,"ConcurrencyLimit"],[3,"RateLimitLayer"],[3,"Rate"],[3,"RateLimit"],[3,"ResponseFuture"]]};
searchIndex["tower_load"] = {"doc":"Abstractions and utilties for measuring a service's load.","i":[[3,"Constant","tower_load","Wraps a type so that `Load::load` returns a constant value.",null,null],[3,"InstrumentFuture","","Attaches a `I`-typed instruments to the result of an…",null,null],[3,"NoInstrument","","A `Instrument` implementation that drops each instrument…",null,null],[11,"new","","Wraps a `T`-typed service with a constant `M`-typed load…",0,[[["m"],["t"]],["self"]]],[11,"new","","Wraps a future, instrumenting its value if successful.",1,[[["i"],["f"],["h"]],["self"]]],[0,"peak_ewma","","A `Load` implementation that PeakEWMA on response latency.",null,null],[3,"PeakEwma","tower_load::peak_ewma","Wraps an `S`-typed Service with Peak-EWMA load measurement.",null,null],[3,"PeakEwmaDiscover","","Wraps a `D`-typed stream of discovery updates with…",null,null],[3,"Cost","","Represents the relative cost of communicating with a…",null,null],[3,"Handle","","Tracks an in-flight request and updates the RTT-estimate…",null,null],[11,"new","","Wraps a `D`-typed `Discover` so that services have a…",2,[[["d"],["i"],["duration"]],["self"]]],[0,"pending_requests","tower_load","A `Load` implementation that uses the count of in-flight…",null,null],[3,"PendingRequests","tower_load::pending_requests","Expresses load based on the number of currently-pending…",null,null],[3,"PendingRequestsDiscover","","Wraps `inner`'s services with `PendingRequests`.",null,null],[3,"Count","","Represents the number of currently-pending requests to a…",null,null],[3,"Handle","","Tracks an in-flight request by reference count.",null,null],[11,"new","","Wraps a `Discover``, wrapping all of its services with…",3,[[["d"],["i"]],["self"]]],[8,"Instrument","tower_load","Attaches `I`-typed instruments to `V` typed values.",null,null],[16,"Output","","The instrumented value type.",4,null],[10,"instrument","","Attaches an `H`-typed handle to a `V`-typed value.",4,[[["v"],["self"],["h"]]]],[8,"Load","","Exposes a load metric.",null,null],[16,"Metric","","A comparable load metric. Lesser values are \"preferable\"…",5,null],[10,"load","","Obtains a service's load.",5,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"try_poll","","",1,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tower_load::peak_ewma","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","tower_load::pending_requests","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"instrument","tower_load","",6,[[["v"],["self"],["h"]],["v"]]],[11,"load","","",0,[[["self"]],["m"]]],[11,"load","tower_load::peak_ewma","",7,[[["self"]]]],[11,"load","tower_load::pending_requests","",10,[[["self"]],["count"]]],[11,"drop","tower_load::peak_ewma","",9,[[["self"]]]],[11,"clone","tower_load","",6,[[["self"]],["noinstrument"]]],[11,"clone","tower_load::peak_ewma","",8,[[["self"]],["cost"]]],[11,"clone","tower_load::pending_requests","",11,[[["self"]],["count"]]],[11,"default","","",11,[[],["count"]]],[11,"cmp","","",11,[[["count"],["self"]],["ordering"]]],[11,"eq","tower_load::peak_ewma","",8,[[["self"],["cost"]],["bool"]]],[11,"ne","","",8,[[["self"],["cost"]],["bool"]]],[11,"eq","tower_load::pending_requests","",11,[[["count"],["self"]],["bool"]]],[11,"ne","","",11,[[["count"],["self"]],["bool"]]],[11,"partial_cmp","tower_load::peak_ewma","",8,[[["self"],["cost"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",8,[[["self"],["cost"]],["bool"]]],[11,"le","","",8,[[["self"],["cost"]],["bool"]]],[11,"gt","","",8,[[["self"],["cost"]],["bool"]]],[11,"ge","","",8,[[["self"],["cost"]],["bool"]]],[11,"partial_cmp","tower_load::pending_requests","",11,[[["count"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",11,[[["count"],["self"]],["bool"]]],[11,"le","","",11,[[["count"],["self"]],["bool"]]],[11,"gt","","",11,[[["count"],["self"]],["bool"]]],[11,"ge","","",11,[[["count"],["self"]],["bool"]]],[11,"fmt","tower_load","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_load::peak_ewma","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_load::pending_requests","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"poll","tower_load","",1,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",0,[[["self"],["pin"]]]],[11,"drop","","",1,[[["self"],["pin"]]]],[11,"drop","tower_load::peak_ewma","",2,[[["self"],["pin"]]]],[11,"drop","tower_load::pending_requests","",3,[[["self"],["pin"]]]],[11,"poll_discover","tower_load","Yields the next discovery change set.",0,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"poll_discover","tower_load::peak_ewma","",2,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"poll_discover","tower_load::pending_requests","Yields the next discovery change set.",3,[[["pin"],["self"],["context"]],[["result",["change"]],["poll",["result"]]]]],[11,"poll_ready","tower_load","",0,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",0,[[["self"],["request"]]]],[11,"poll_ready","tower_load::peak_ewma","",7,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",7,[[["self"],["request"]]]],[11,"poll_ready","tower_load::pending_requests","",10,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",10,[[["self"],["request"]]]]],"p":[[3,"Constant"],[3,"InstrumentFuture"],[3,"PeakEwmaDiscover"],[3,"PendingRequestsDiscover"],[8,"Instrument"],[8,"Load"],[3,"NoInstrument"],[3,"PeakEwma"],[3,"Cost"],[3,"Handle"],[3,"PendingRequests"],[3,"Count"],[3,"Handle"]]};
searchIndex["tower_load_shed"] = {"doc":"Tower middleware for shedding load when inner services…","i":[[3,"LoadShedLayer","tower_load_shed","A `tower-layer` to wrap services in `LoadShed` middleware.",null,null],[3,"LoadShed","","A `Service` that sheds load when the inner service isn't…",null,null],[0,"error","","Error types",null,null],[3,"Overloaded","tower_load_shed::error","An error returned by `Overload` when the underlying…",null,null],[0,"future","tower_load_shed","Future types",null,null],[3,"ResponseFuture","tower_load_shed::future","Future for the `LoadShed` service.",null,null],[11,"new","tower_load_shed","Creates a new layer.",0,[[],["self"]]],[11,"new","","Wraps a service in `LoadShed` middleware.",1,[[["s"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tower_load_shed::error","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tower_load_shed::future","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll","","",3,[[["pin"],["f"],["context"]],["poll"]]],[11,"clone","tower_load_shed","",0,[[["self"]],["loadshedlayer"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"fmt","tower_load_shed::error","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_load_shed::future","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_load_shed","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_load_shed::error","",2,[[["formatter"],["self"]],["result"]]],[11,"poll","tower_load_shed::future","",3,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll_ready","tower_load_shed","",1,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",1,[[["self"],["req"]]]],[11,"drop","tower_load_shed::future","",3,[[["self"],["pin"]]]],[11,"layer","tower_load_shed","",0,[[["s"],["self"]]]]],"p":[[3,"LoadShedLayer"],[3,"LoadShed"],[3,"Overloaded"],[3,"ResponseFuture"]]};
searchIndex["tower_make"] = {"doc":"Trait aliases for Services that produce specific types of…","i":[[8,"MakeConnection","tower_make","The MakeConnection trait is used to create transports.",null,null],[16,"Connection","","The transport provided by this service",0,null],[16,"Error","","Errors produced by the connecting service",0,null],[16,"Future","","The future that eventually produces the transport",0,null],[10,"poll_ready","","Returns `Poll::Ready(Ok(()))` when it is able to make more…",0,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"make_connection","","Connect and return a transport asynchronously",0,[[["self"],["target"]]]],[8,"MakeService","","Creates new `Service` values.",null,null],[16,"Response","","Responses given by the service",1,null],[16,"Error","","Errors produced by the service",1,null],[16,"Service","","The `Service` value created by this factory",1,null],[16,"MakeError","","Errors produced while building a service.",1,null],[16,"Future","","The future of the `Service` instance.",1,null],[10,"poll_ready","","Returns `Ready` when the factory is able to create more…",1,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"make_service","","Create and return a new service value asynchronously.",1,[[["self"],["target"]]]]],"p":[[8,"MakeConnection"],[8,"MakeService"]]};
searchIndex["tower_ready_cache"] = {"doc":"A cache of services","i":[[0,"cache","tower_ready_cache","A cache of services.",null,null],[8,"Equivalent","tower_ready_cache::cache","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",0,[[["k"],["self"]],["bool"]]],[3,"ReadyCache","","Drives readiness over a set of services.",null,null],[11,"len","","Returns the total number of services in the cache.",1,[[["self"]],["usize"]]],[11,"ready_len","","Returns the number of services in the ready set.",1,[[["self"]],["usize"]]],[11,"pending_len","","Returns the number of services in the unready set.",1,[[["self"]],["usize"]]],[11,"pending_contains","","Returns true iff the given key is in the unready set.",1,[[["self"],["q"]],["bool"]]],[11,"get_ready","","Obtains a reference to a service in the ready set by key.",1,[[["self"],["q"]],["option"]]],[11,"get_ready_mut","","Obtains a mutable reference to a service in the ready set…",1,[[["self"],["q"]],["option"]]],[11,"get_ready_index","","Obtains a reference to a service in the ready set by index.",1,[[["self"],["usize"]],["option"]]],[11,"get_ready_index_mut","","Obtains a mutable reference to a service in the ready set…",1,[[["self"],["usize"]],["option"]]],[11,"evict","","Evicts an item from the cache.",1,[[["self"],["q"]],["bool"]]],[11,"push","","Pushes a new service onto the pending set.",1,[[["self"],["k"],["s"]]]],[11,"poll_pending","","Polls services pending readiness, adding ready services to…",1,[[["self"],["context"]],[["poll",["result"]],["result",["failed"]]]]],[11,"check_ready","","Checks whether the referenced endpoint is ready.",1,[[["self"],["context"],["q"]],[["result",["bool","failed"]],["failed"],["bool"]]]],[11,"check_ready_index","","Checks whether the referenced endpoint is ready.",1,[[["self"],["context"],["usize"]],[["result",["bool","failed"]],["failed"],["bool"]]]],[11,"call_ready","","Calls a ready service by key.",1,[[["req"],["self"],["q"]]]],[11,"call_ready_index","","Calls a ready service by index.",1,[[["self"],["usize"],["req"]]]],[0,"error","tower_ready_cache","Errors",null,null],[3,"Failed","tower_ready_cache::error","An error indicating that the service with a `K`-typed key…",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[6,"Error","","A generic error type.",null,null],[11,"from","tower_ready_cache::cache","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tower_ready_cache::error","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"default","tower_ready_cache::cache","",1,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_ready_cache::error","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"source","","",2,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[8,"Equivalent"],[3,"ReadyCache"],[3,"Failed"]]};
searchIndex["tower_retry"] = {"doc":"Tower middleware for retrying \"failed\" requests.","i":[[3,"RetryLayer","tower_retry","Retry requests based on a policy",null,null],[3,"Retry","","Configure retrying requests of \"failed\" responses.",null,null],[0,"budget","","A retry \"budget\" for allowing only a certain amount of…",null,null],[3,"Budget","tower_retry::budget","Represents a \"budget\" for retrying requests.",null,null],[3,"Overdrawn","","Indicates that it is not currently allowed to \"withdraw\"…",null,null],[11,"new","","Create a `Budget` that allows for a certain percent of the…",0,[[["f32"],["u32"],["duration"]],["self"]]],[11,"deposit","","Store a \"deposit\" in the budget, which will be used to…",0,[[["self"]]]],[11,"withdraw","","Check whether there is enough \"balance\" in the budget to…",0,[[["self"]],[["result",["overdrawn"]],["overdrawn"]]]],[0,"future","tower_retry","Future types",null,null],[3,"ResponseFuture","tower_retry::future","The `Future` returned by a `Retry` service.",null,null],[11,"new","tower_retry","Create a new `RetryLayer` from a retry policy",1,[[["p"]],["self"]]],[8,"Policy","","A \"retry policy\" to classify if a request should be retried.",null,null],[16,"Future","","The `Future` type returned by `Policy::retry()`.",2,null],[10,"retry","","Check the policy if a certain request should be retried.",2,[[["result"],["res"],["req"],["self"],["e"]],["option"]]],[10,"clone_request","","Tries to clone a request before being passed to the inner…",2,[[["req"],["self"]],["option"]]],[11,"new","","Retry the inner service depending on this `Policy`.",3,[[["s"],["p"]],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","tower_retry::budget","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","tower_retry::future","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"clone","tower_retry","",3,[[["self"]],["retry"]]],[11,"default","tower_retry::budget","",0,[[],["budget"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_retry::future","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_retry","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"poll","tower_retry::future","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",5,[[["self"],["pin"]]]],[11,"drop","tower_retry","",3,[[["self"],["pin"]]]],[11,"poll_ready","","",3,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",3,[[["self"],["request"]]]],[11,"layer","","",1,[[["s"],["self"]]]]],"p":[[3,"Budget"],[3,"RetryLayer"],[8,"Policy"],[3,"Retry"],[3,"Overdrawn"],[3,"ResponseFuture"]]};
searchIndex["tower_service"] = {"doc":"Definition of the core `Service` trait to Tower","i":[[8,"Service","tower_service","An asynchronous function from a `Request` to a `Response`.",null,null],[16,"Response","","Responses given by the service.",0,null],[16,"Error","","Errors produced by the service.",0,null],[16,"Future","","The future response value.",0,null],[10,"poll_ready","","Returns `Poll::Ready(Ok(()))` when the service is able to…",0,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"call","","Process the request and return the response asynchronously.",0,[[["self"],["request"]]]]],"p":[[8,"Service"]]};
searchIndex["tower_timeout"] = {"doc":"Tower middleware that applies a timeout to requests.","i":[[3,"TimeoutLayer","tower_timeout","Applies a timeout to requests via the supplied inner…",null,null],[3,"Timeout","","Applies a timeout to requests.",null,null],[0,"error","","Error types",null,null],[3,"Elapsed","tower_timeout::error","The timeout elapsed.",null,null],[11,"new","","Construct a new elapsed error",0,[[],["self"]]],[0,"future","tower_timeout","Future types",null,null],[3,"ResponseFuture","tower_timeout::future","`Timeout` response future",null,null],[11,"new","tower_timeout","Create a timeout from a duration",1,[[["duration"]],["self"]]],[11,"new","","Creates a new Timeout",2,[[["t"],["duration"]],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tower_timeout::error","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","tower_timeout::future","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll","","",3,[[["pin"],["f"],["context"]],["poll"]]],[11,"clone","tower_timeout","",2,[[["self"]],["timeout"]]],[11,"fmt","tower_timeout::error","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_timeout::future","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_timeout","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_timeout::error","",0,[[["formatter"],["self"]],["result"]]],[11,"poll","tower_timeout::future","",3,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",3,[[["self"],["pin"]]]],[11,"layer","tower_timeout","",1,[[["s"],["self"]]]],[11,"poll_ready","","",2,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",2,[[["self"],["request"]]]]],"p":[[3,"Elapsed"],[3,"TimeoutLayer"],[3,"Timeout"],[3,"ResponseFuture"]]};
searchIndex["tower_util"] = {"doc":"Various utility types and functions that are generally…","i":[[3,"BoxService","tower_util","A boxed `Service + Send` trait object.",null,null],[3,"UnsyncBoxService","","A boxed `Service` trait object.",null,null],[3,"Oneshot","","A `Future` consuming a `Service` and request, waiting…",null,null],[3,"Optional","","Optionally forwards requests to an inner service.",null,null],[3,"Ready","","A future that resolves when a `Service` is ready to accept…",null,null],[3,"ReadyAnd","","A future that yields a mutable reference to the service…",null,null],[3,"ReadyOneshot","","A future that yields the service when it is ready to…",null,null],[3,"ServiceFn","","A `Service` implemented by a closure.",null,null],[3,"CallAll","","This is a `futures::Stream` of responses resulting from…",null,null],[3,"CallAllUnordered","","A stream of responses received from the inner service in…",null,null],[4,"Either","","Combine two different service types into a single type.",null,null],[13,"A","","One type of backing `Service`.",0,null],[13,"B","","The other type of backing `Service`.",0,null],[5,"service_fn","","Returns a new `ServiceFn` with the given closure.",null,[[["t"]],["servicefn"]]],[11,"new","","",1,[[["s"]],["self"]]],[11,"new","","",2,[[["s"]],["self"]]],[11,"new","","Create new `CallAll` combinator.",3,[[["s"],["svc"]],["callall"]]],[11,"into_inner","","Extract the wrapped `Service`.",3,[[],["svc"]]],[11,"take_service","","Extract the wrapped `Service`.",3,[[["pin"],["self"]],["svc"]]],[11,"unordered","","Return responses as they are ready, regardless of the…",3,[[],["callallunordered"]]],[11,"new","","Create new `CallAllUnordered` combinator.",4,[[["s"],["svc"]],["callallunordered"]]],[11,"into_inner","","Extract the wrapped `Service`.",4,[[],["svc"]]],[11,"take_service","","Extract the wrapped `Service`.",4,[[["pin"],["self"]],["svc"]]],[11,"new","","",5,[[["s"],["req"]],["self"]]],[11,"new","","Create a new `OptionService`",6,[[["option"]],["optional"]]],[11,"new","","",7,[[["t"]],["self"]]],[11,"new","","",8,[[["t"]],["self"]]],[11,"new","","",9,[[["t"]],["self"]]],[0,"error","","Error types",null,null],[0,"optional","tower_util::error","Error types for `OptionalService`.",null,null],[3,"None","tower_util::error::optional","Error returned if the inner `Service` has not been set.",null,null],[0,"future","tower_util","Future types",null,null],[0,"optional","tower_util::future","Future types for `OptionalService`.",null,null],[3,"ResponseFuture","tower_util::future::optional","Response future returned by `Optional`.",null,null],[8,"ServiceExt","tower_util","An extension trait for `Service`s that provides a variety…",null,null],[11,"ready","","Resolves when the service is ready to accept a request.",10,[[["self"]],["ready"]]],[11,"ready_and","","Yields a mutable reference to the service when it is ready…",10,[[["self"]],["readyand"]]],[11,"ready_oneshot","","Yields the service when it is ready to accept a request.",10,[[],["readyoneshot"]]],[11,"oneshot","","Consume this `Service`, calling with the providing request…",10,[[["request"]],["oneshot"]]],[11,"call_all","","Process all requests from the given `Stream`, and produce…",10,[[["s"]],["callall"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"try_poll","","",9,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_poll","","",8,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll_next","","",3,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll_next","","",4,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"try_poll","","",0,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tower_util::error::optional","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","tower_util::future::optional","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"try_poll","","",13,[[["pin"],["f"],["context"]],["poll"]]],[11,"clone","tower_util","",0,[[["self"]],["either"]]],[11,"clone","","",11,[[["self"]],["servicefn"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_util::error::optional","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_util::future::optional","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_util","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","tower_util::error::optional","",12,[[["formatter"],["self"]],["result"]]],[11,"poll","tower_util","",0,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tower_util::future::optional","",13,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tower_util","",7,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",8,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",9,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll_ready","","",1,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",1,[[["self"],["t"]],[["pin",["box"]],["box",["future"]]]]],[11,"poll_ready","","",2,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",2,[[["self"],["t"]],[["pin",["box"]],["box",["future"]]]]],[11,"poll_ready","","",0,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",0,[[["self"],["request"]]]],[11,"poll_ready","","",6,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"call","","",6,[[["self"],["request"]]]],[11,"poll_ready","","",11,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"call","","",11,[[["self"],["request"]]]],[11,"poll_next","","",3,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",4,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"drop","","",3,[[["self"],["pin"]]]],[11,"drop","","",4,[[["self"],["pin"]]]],[11,"drop","","",0,[[["self"],["pin"]]]],[11,"drop","","",5,[[["self"],["pin"]]]],[11,"drop","tower_util::future::optional","",13,[[["self"],["pin"]]]]],"p":[[4,"Either"],[3,"BoxService"],[3,"UnsyncBoxService"],[3,"CallAll"],[3,"CallAllUnordered"],[3,"Oneshot"],[3,"Optional"],[3,"ReadyOneshot"],[3,"ReadyAnd"],[3,"Ready"],[8,"ServiceExt"],[3,"ServiceFn"],[3,"None"],[3,"ResponseFuture"]]};
searchIndex["tracing"] = {"doc":"A scoped, structured logging and diagnostics system.","i":[[3,"Dispatch","tracing","`Dispatch` trace data to a [`Subscriber`].",null,null],[3,"Event","","`Event`s represent single points in time where something…",null,null],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given `Visitor`.",0,[[["field"],["self"],["visit"]]]],[8,"Subscriber","","Trait representing the functions required to collect trace…",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",1,[[["metadata"],["self"]],["interest"]]],[10,"enabled","","Returns true if a span or event with the specified…",1,[[["self"],["metadata"]],["bool"]]],[10,"new_span","","Visit the construction of a new span, returning a new…",1,[[["self"],["attributes"]],["id"]]],[10,"record","","Record a set of values on a span.",1,[[["id"],["self"],["record"]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",1,[[["id"],["self"]]]],[10,"event","","Records that an [`Event`] has occurred.",1,[[["event"],["self"]]]],[10,"enter","","Records that a span has been entered.",1,[[["id"],["self"]]]],[10,"exit","","Records that a span has been exited.",1,[[["id"],["self"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",1,[[["id"],["self"]],["id"]]],[11,"drop_span","","This method is deprecated.",1,[[["self"],["id"]]]],[11,"try_close","","Notifies the subscriber that a [`span ID`] has been…",1,[[["self"],["id"]],["bool"]]],[11,"current_span","","Returns a type representing this subscriber's view of the…",1,[[["self"]],["current"]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",1,[[["self"],["typeid"]],["option"]]],[0,"event","","Events represent single points in time during the…",null,null],[3,"Event","tracing::event","`Event`s represent single points in time where something…",null,null],[3,"Level","tracing","Describes the level of verbosity of a span or event.",null,null],[3,"Metadata","","Metadata describing a [span] or [event].",null,null],[23,"instrument","","Instruments a function to create and enter a `tracing`…",null,null],[3,"Span","","A handle representing a span, with the capability to enter…",null,null],[0,"dispatcher","","Dispatches trace events to [`Subscriber`]s.",null,null],[5,"set_default","tracing::dispatcher","Sets the dispatch as the default dispatch for the duration…",null,[[["dispatch"]],["defaultguard"]]],[5,"with_default","","Sets this dispatch as the default for the duration of a…",null,[[["dispatch"]],["t"]]],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the…",null,null],[5,"get_default","","Executes a closure with a reference to this thread's…",null,[[["f"]],["t"]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration…",null,[[["dispatch"]],[["result",["setglobaldefaulterror"]],["setglobaldefaulterror"]]]],[3,"Dispatch","","`Dispatch` trace data to a [`Subscriber`].",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[0,"field","tracing","Structured data associated with `Span`s and `Event`s.",null,null],[3,"Field","tracing::field","An opaque key allowing O(1) access to a field in a…",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",2,[[["field"],["self"],["i64"]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",2,[[["field"],["self"],["u64"]]]],[11,"record_bool","","Visit a boolean value.",2,[[["field"],["self"],["bool"]]]],[11,"record_str","","Visit a string value.",2,[[["field"],["self"],["str"]]]],[11,"record_error","","Records a type implementing `Error`.",2,[[["field"],["self"],["error"]]]],[10,"record_debug","","Visit a value implementing `fmt::Debug`.",2,[[["field"],["self"],["debug"]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given `Visitor`.",0,[[["field"],["self"],["visit"]]]],[3,"DisplayValue","","A `Value` which serializes using `fmt::Display`.",null,null],[3,"DebugValue","","A `Value` which serializes as a string using `fmt::Debug`.",null,null],[5,"display","","Wraps a type implementing `fmt::Display` as a `Value` that…",null,[[["t"]],["displayvalue"]]],[5,"debug","","Wraps a type implementing `fmt::Debug` as a `Value` that…",null,[[["t"]],["debugvalue"]]],[8,"AsField","","Trait implemented to allow a type to be used as a field key.",null,null],[10,"as_field","","Attempts to convert `&self` into a `Field` with the…",3,[[["metadata"],["self"]],[["field"],["option",["field"]]]]],[0,"level_filters","tracing","Trace verbosity level filtering.",null,null],[3,"LevelFilter","tracing::level_filters","A filter comparable to trace verbosity `Level`.",null,null],[17,"STATIC_MAX_LEVEL","","The statically configured maximum trace level.",null,null],[18,"OFF","","The \"off\" level.",4,null],[18,"ERROR","","The \"error\" level.",4,null],[18,"WARN","","The \"warn\" level.",4,null],[18,"INFO","","The \"info\" level.",4,null],[18,"DEBUG","","The \"debug\" level.",4,null],[18,"TRACE","","The \"trace\" level.",4,null],[11,"from_level","","Returns a `LevelFilter` that enables spans and events with…",4,[[["level"]],["self"]]],[11,"into_level","","Returns the most verbose [`Level`] that this filter…",4,[[],[["level"],["option",["level"]]]]],[0,"span","tracing","Spans represent periods of time in which a program was…",null,null],[3,"Attributes","tracing::span","Attributes provided to a `Subscriber` describing a new…",null,null],[3,"Id","","Identifies a span within the context of a subscriber.",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[3,"Span","","A handle representing a span, with the capability to enter…",null,null],[3,"Entered","","A guard representing a span which has been entered and is…",null,null],[8,"AsId","","Trait implemented by types which have a span `Id`.",null,null],[10,"as_id","","Returns the `Id` of the span that `self` corresponds to,…",5,[[["self"]],[["option",["id"]],["id"]]]],[11,"new","","Constructs a new `Span` with the given [metadata] and set…",6,[[["metadata"],["valueset"]],["span"]]],[11,"new_root","","Constructs a new `Span` as the root of its own trace tree,…",6,[[["metadata"],["valueset"]],["span"]]],[11,"child_of","","Constructs a new `Span` as child of the given parent span,…",6,[[["metadata"],["valueset"]],["span"]]],[11,"new_disabled","","Constructs a new disabled span with the given `Metadata`.",6,[[["metadata"]],["span"]]],[11,"none","","Constructs a new span that is completely disabled.",6,[[],["span"]]],[11,"current","","Returns a handle to the span [considered by the…",6,[[],["span"]]],[11,"enter","","Enters this span, returning a guard that will exit the…",6,[[["self"]],["entered"]]],[11,"in_scope","","Executes the given function in the context of this span.",6,[[["fnonce"],["self"]],["t"]]],[11,"field","","Returns a `Field` for the field with the given `name`, if…",6,[[["self"],["q"]],[["option",["field"]],["field"]]]],[11,"has_field","","Returns true if this `Span` has a field for the given…",6,[[["self"],["q"]],["bool"]]],[11,"record","","Records that the field described by `field` has the value…",6,[[["v"],["self"],["q"]],["self"]]],[11,"record_all","","Records all the fields in the provided `ValueSet`.",6,[[["self"],["valueset"]],["self"]]],[11,"is_disabled","","Returns `true` if this span was disabled by the subscriber…",6,[[["self"]],["bool"]]],[11,"is_none","","Returns `true` if this span was constructed by…",6,[[["self"]],["bool"]]],[11,"follows_from","","Indicates that the span with the given ID has an indirect…",6,[[["self"]],["self"]]],[11,"id","","Returns this span's `Id`, if it is enabled.",6,[[["self"]],[["option",["id"]],["id"]]]],[11,"metadata","","Returns this span's `Metadata`, if it is enabled.",6,[[["self"]],[["option",["metadata"]],["metadata"]]]],[11,"with_subscriber","","Invokes a function with a reference to this span's ID and…",6,[[["self"]],["option"]]],[0,"subscriber","tracing","Collects and records trace data.",null,null],[8,"Subscriber","tracing::subscriber","Trait representing the functions required to collect trace…",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",1,[[["metadata"],["self"]],["interest"]]],[10,"enabled","","Returns true if a span or event with the specified…",1,[[["self"],["metadata"]],["bool"]]],[10,"new_span","","Visit the construction of a new span, returning a new…",1,[[["self"],["attributes"]],["id"]]],[10,"record","","Record a set of values on a span.",1,[[["id"],["self"],["record"]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",1,[[["id"],["self"]]]],[10,"event","","Records that an [`Event`] has occurred.",1,[[["event"],["self"]]]],[10,"enter","","Records that a span has been entered.",1,[[["id"],["self"]]]],[10,"exit","","Records that a span has been exited.",1,[[["id"],["self"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",1,[[["id"],["self"]],["id"]]],[11,"drop_span","","This method is deprecated.",1,[[["self"],["id"]]]],[11,"try_close","","Notifies the subscriber that a [`span ID`] has been…",1,[[["self"],["id"]],["bool"]]],[11,"current_span","","Returns a type representing this subscriber's view of the…",1,[[["self"]],["current"]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",1,[[["self"],["typeid"]],["option"]]],[3,"Interest","","Indicates a [`Subscriber`]'s interest in a particular…",null,null],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the…",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[5,"with_default","","Sets this subscriber as the default for the duration of a…",null,[[["s"]],["t"]]],[5,"set_global_default","","Sets this subscriber as the global default for the…",null,[[["s"]],[["result",["setglobaldefaulterror"]],["setglobaldefaulterror"]]]],[5,"set_default","","Sets the subscriber as the default for the duration of the…",null,[[["s"]],["defaultguard"]]],[14,"span","tracing","Constructs a new span.",null,null],[14,"trace_span","","Constructs a span at the trace level.",null,null],[14,"debug_span","","Constructs a span at the debug level.",null,null],[14,"info_span","","Constructs a span at the info level.",null,null],[14,"warn_span","","Constructs a span at the warn level.",null,null],[14,"error_span","","Constructs a span at the error level.",null,null],[14,"event","","Constructs a new `Event`.",null,null],[14,"trace","","Constructs an event at the trace level.",null,null],[14,"debug","","Constructs an event at the debug level.",null,null],[14,"info","","Constructs an event at the info level.",null,null],[14,"warn","","Constructs an event at the warn level.",null,null],[14,"error","","Constructs an event at the error level.",null,null],[11,"from","tracing::dispatcher","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","tracing::event","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","tracing","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","tracing::span","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tracing::subscriber","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","tracing::field","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","tracing::level_filters","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","tracing::span","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","tracing::subscriber","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"eq","tracing::span","",21,[[["id"],["self"]],["bool"]]],[11,"ne","","",21,[[["id"],["self"]],["bool"]]],[11,"eq","tracing::field","",14,[[["empty"],["self"]],["bool"]]],[11,"eq","tracing","",9,[[["self"],["level"]],["bool"]]],[11,"ne","","",9,[[["self"],["level"]],["bool"]]],[11,"eq","tracing::field","",13,[[["field"],["self"]],["bool"]]],[11,"cmp","tracing","",9,[[["self"],["level"]],["ordering"]]],[11,"clone","tracing::field","",13,[[["self"]],["field"]]],[11,"clone","tracing","",9,[[["self"]],["level"]]],[11,"clone","tracing::field","",19,[[["self"]],["debugvalue"]]],[11,"clone","tracing::subscriber","",24,[[["self"]],["interest"]]],[11,"clone","tracing::span","",21,[[["self"]],["id"]]],[11,"clone","tracing::field","",18,[[["self"]],["displayvalue"]]],[11,"clone","tracing::dispatcher","",7,[[["self"]],["dispatch"]]],[11,"fmt","tracing::field","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::event","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::subscriber","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::span","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::dispatcher","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::span","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::field","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::span","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::field","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::subscriber","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::field","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::subscriber","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from_str","","",9,[[["str"]],[["level"],["parselevelerror"],["result",["level","parselevelerror"]]]]],[11,"as_ref","tracing::field","",13,[[["self"]],["str"]]],[11,"partial_cmp","tracing","",9,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["self"],["level"]],["bool"]]],[11,"le","","",9,[[["self"],["level"]],["bool"]]],[11,"gt","","",9,[[["self"],["level"]],["bool"]]],[11,"ge","","",9,[[["self"],["level"]],["bool"]]],[11,"default","tracing::dispatcher","Returns the current default dispatcher",7,[[],["dispatch"]]],[11,"from","","",7,[[["s"]],["dispatch"]]],[11,"next","tracing::field","",17,[[["self"]],[["option",["field"]],["field"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::subscriber","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","tracing::field","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",13,[[["self"],["h"]]]],[11,"hash","tracing::span","",21,[[["self"],["__h"]]]],[11,"drop","tracing::subscriber","",11,[[["self"]]]],[11,"record","tracing::field","",19,[[["field"],["self"],["visit"]]]],[11,"record","","",14,[[["field"],["self"],["visit"]]]],[11,"record","","",18,[[["field"],["self"],["visit"]]]],[11,"as_field","","",13,[[["metadata"],["self"]],[["field"],["option",["field"]]]]],[11,"drop","tracing::span","",6,[[["self"]]]],[11,"drop","","",23,[[["self"]]]],[11,"from","tracing::level_filters","",4,[[["level"]],["self"]]],[11,"into","tracing::span","",6,[[],[["option",["id"]],["id"]]]],[11,"clone","tracing::level_filters","",4,[[["self"]],["levelfilter"]]],[11,"clone","tracing::span","",6,[[["self"]],["span"]]],[11,"cmp","tracing::level_filters","",4,[[["self"],["levelfilter"]],["ordering"]]],[11,"eq","","",4,[[["self"],["levelfilter"]],["bool"]]],[11,"ne","","",4,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","tracing","",9,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","tracing::span","",6,[[["self"]],["bool"]]],[11,"partial_cmp","tracing::level_filters","",4,[[["self"],["levelfilter"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",4,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",4,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",4,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",4,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","tracing","",9,[[["self"],["levelfilter"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","tracing::level_filters","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing::span","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",6,[[["self"],["h"]]]],[11,"none","tracing::dispatcher","Returns a new `Dispatch` that discards events and spans.",7,[[],["dispatch"]]],[11,"new","","Returns a `Dispatch` that forwards to the given…",7,[[["s"]],["dispatch"]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",7,[[["metadata"],["self"]],["interest"]]],[11,"new_span","","Record the construction of a new span, returning a new…",7,[[["self"],["attributes"]],["id"]]],[11,"record","","Record a set of values on a span.",7,[[["id"],["self"],["record"]]]],[11,"record_follows_from","","Adds an indication that `span` follows from the span with…",7,[[["id"],["self"]]]],[11,"enabled","","Returns true if a span with the specified [metadata] would…",7,[[["self"],["metadata"]],["bool"]]],[11,"event","","Records that an [`Event`] has occurred.",7,[[["event"],["self"]]]],[11,"enter","","Records that a span has been can_enter.",7,[[["id"],["self"]]]],[11,"exit","","Records that a span has been exited.",7,[[["id"],["self"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",7,[[["id"],["self"]],["id"]]],[11,"drop_span","","Notifies the subscriber that a [span ID] has been dropped.",7,[[["self"],["id"]]]],[11,"try_close","","Notifies the subscriber that a [span ID] has been dropped,…",7,[[["self"],["id"]],["bool"]]],[11,"current_span","","Returns a type representing this subscriber's view of the…",7,[[["self"]],["current"]]],[11,"is","","Returns `true` if this `Dispatch` forwards to a…",7,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to the `Subscriber` this `Dispatch`…",7,[[["self"]],[["t"],["option"]]]],[11,"dispatch","tracing::event","Constructs a new `Event` with the specified metadata and…",8,[[["metadata"],["valueset"]]]],[11,"new","","Returns a new `Event` in the current span, with the…",8,[[["metadata"],["valueset"]],["event"]]],[11,"new_child_of","","Returns a new `Event` as a child of the specified span,…",8,[[["metadata"],["valueset"]],["event"]]],[11,"child_of","","Constructs a new `Event` with the specified metadata and…",8,[[["metadata"],["valueset"]]]],[11,"record","","Visits all the fields on this `Event` with the specified…",8,[[["self"],["visit"]]]],[11,"fields","","Returns an iterator over the set of values on this `Event`.",8,[[["self"]],["iter"]]],[11,"metadata","","Returns [metadata] describing this `Event`.",8,[[["self"]],["metadata"]]],[11,"is_root","","Returns true if the new event should be a root.",8,[[["self"]],["bool"]]],[11,"is_contextual","","Returns true if the new event's parent should be…",8,[[["self"]],["bool"]]],[11,"parent","","Returns the new event's explicitly-specified parent, if…",8,[[["self"]],[["option",["id"]],["id"]]]],[11,"is","tracing::subscriber","Returns `true` if this `Subscriber` is the same type as `T`.",1,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to this `Subscriber` value if it is…",1,[[["self"]],[["t"],["option"]]]],[18,"ERROR","tracing","The \"error\" level.",9,null],[18,"WARN","","The \"warn\" level.",9,null],[18,"INFO","","The \"info\" level.",9,null],[18,"DEBUG","","The \"debug\" level.",9,null],[18,"TRACE","","The \"trace\" level.",9,null],[11,"new","","Construct new metadata for a span or event, with a name,…",10,[[["option",["u32"]],["str"],["u32"],["option",["str"]],["fieldset"],["kind"],["level"],["str"]],["metadata"]]],[11,"fields","","Returns the names of the fields on the described span or…",10,[[["self"]],["fieldset"]]],[11,"level","","Returns the level of verbosity of the described span or…",10,[[["self"]],["level"]]],[11,"name","","Returns the name of the span.",10,[[["self"]],["str"]]],[11,"target","","Returns a string describing the part of the system where…",10,[[["self"]],["str"]]],[11,"module_path","","Returns the path to the Rust module where the span…",10,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","Returns the name of the source code file where the span…",10,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","Returns the line number in the source code file where the…",10,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"callsite","","Returns an opaque `Identifier` that uniquely identifies…",10,[[["self"]],["identifier"]]],[11,"is_event","","Returns true if the callsite kind is `Event`.",10,[[["self"]],["bool"]]],[11,"is_span","","Return true if the callsite kind is `Span`.",10,[[["self"]],["bool"]]],[11,"callsite","tracing::field","Returns an [`Identifier`] that uniquely identifies the…",13,[[["self"]],["identifier"]]],[11,"name","","Returns a string representing the name of the field.",13,[[["self"]],["str"]]],[11,"new","","Constructs a new `FieldSet` with the given array of field…",15,[[["identifier"]],["fieldset"]]],[11,"field","","Returns the [`Field`] named `name`, or `None` if no such…",15,[[["self"],["q"]],[["option",["field"]],["field"]]]],[11,"contains","","Returns `true` if `self` contains the given `field`.",15,[[["field"],["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Field`s in this `FieldSet`.",15,[[["self"]],["iter"]]],[11,"len","","Returns the number of fields in this `FieldSet`.",15,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether or not this `FieldSet` has fields.",15,[[["self"]],["bool"]]],[11,"callsite","","Returns an [`Identifier`] that uniquely identifies the…",16,[[["self"]],["identifier"]]],[11,"new","tracing::span","Returns `Attributes` describing a new child span of the…",20,[[["metadata"],["valueset"]],["attributes"]]],[11,"new_root","","Returns `Attributes` describing a new span at the root of…",20,[[["metadata"],["valueset"]],["attributes"]]],[11,"child_of","","Returns `Attributes` describing a new child span of the…",20,[[["metadata"],["valueset"],["id"]],["attributes"]]],[11,"metadata","","Returns a reference to the new span's metadata.",20,[[["self"]],["metadata"]]],[11,"values","","Returns a reference to a `ValueSet` containing any values…",20,[[["self"]],["valueset"]]],[11,"is_root","","Returns true if the new span should be a root.",20,[[["self"]],["bool"]]],[11,"is_contextual","","Returns true if the new span's parent should be determined…",20,[[["self"]],["bool"]]],[11,"parent","","Returns the new span's explicitly-specified parent, if…",20,[[["self"]],[["option",["id"]],["id"]]]],[11,"record","","Records all the fields in this set of `Attributes` with…",20,[[["self"],["visit"]]]],[11,"contains","","Returns `true` if this set of `Attributes` contains a…",20,[[["field"],["self"]],["bool"]]],[11,"is_empty","","Returns true if this set of `Attributes` contains no values.",20,[[["self"]],["bool"]]],[11,"from_u64","","Constructs a new span ID from the given `u64`.",21,[[["u64"]],["id"]]],[11,"into_u64","","Returns the span's ID as a  `u64`.",21,[[["self"]],["u64"]]],[11,"new","","Constructs a new `Record` from a `ValueSet`.",22,[[["valueset"]],["record"]]],[11,"record","","Records all the fields in this `Record` with the provided…",22,[[["self"],["visit"]]]],[11,"contains","","Returns `true` if this `Record` contains a value for the…",22,[[["field"],["self"]],["bool"]]],[11,"is_empty","","Returns true if this `Record` contains no values.",22,[[["self"]],["bool"]]],[11,"never","tracing::subscriber","Returns an `Interest` indicating that the subscriber is…",24,[[],["interest"]]],[11,"sometimes","","Returns an `Interest` indicating the subscriber is…",24,[[],["interest"]]],[11,"always","","Returns an `Interest` indicating the subscriber is always…",24,[[],["interest"]]],[11,"is_never","","Returns `true` if the subscriber is never interested in…",24,[[["self"]],["bool"]]],[11,"is_sometimes","","Returns `true` if the subscriber is sometimes interested…",24,[[["self"]],["bool"]]],[11,"is_always","","Returns `true` if the subscriber is always interested in…",24,[[["self"]],["bool"]]]],"p":[[8,"Value"],[8,"Subscriber"],[8,"Visit"],[8,"AsField"],[3,"LevelFilter"],[8,"AsId"],[3,"Span"],[3,"Dispatch"],[3,"Event"],[3,"Level"],[3,"Metadata"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Field"],[3,"Empty"],[3,"FieldSet"],[3,"ValueSet"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"Attributes"],[3,"Id"],[3,"Record"],[3,"Entered"],[3,"Interest"]]};
searchIndex["tracing_attributes"] = {"doc":"A procedural macro attribute for instrumenting functions…","i":[[23,"instrument","tracing_attributes","Instruments a function to create and enter a `tracing`…",null,null]],"p":[]};
searchIndex["tracing_core"] = {"doc":"Core primitives for `tracing`.","i":[[3,"Dispatch","tracing_core","`Dispatch` trace data to a [`Subscriber`].",null,null],[3,"Event","","`Event`s represent single points in time where something…",null,null],[3,"Field","","An opaque key allowing O(1) access to a field in a…",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"Metadata","","Metadata describing a [span] or [event].",null,null],[0,"callsite","","Callsites represent the source locations from which spans…",null,null],[3,"Identifier","tracing_core::callsite","Uniquely identifies a [`Callsite`]",null,null],[5,"rebuild_interest_cache","","Clear and reregister interest on every [`Callsite`]",null,[[]]],[5,"register","","Register a new `Callsite` with the global registry.",null,[[["callsite"]]]],[8,"Callsite","","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the [`Interest`] for this callsite.",0,[[["interest"],["self"]]]],[10,"metadata","","Returns the [metadata] associated with the callsite.",0,[[["self"]],["metadata"]]],[0,"dispatcher","tracing_core","Dispatches trace events to [`Subscriber`]s.",null,null],[3,"Dispatch","tracing_core::dispatcher","`Dispatch` trace data to a [`Subscriber`].",null,null],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the…",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[5,"with_default","","Sets this dispatch as the default for the duration of a…",null,[[["dispatch"]],["t"]]],[5,"set_default","","Sets the dispatch as the default dispatch for the duration…",null,[[["dispatch"]],["defaultguard"]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration…",null,[[["dispatch"]],[["result",["setglobaldefaulterror"]],["setglobaldefaulterror"]]]],[5,"get_default","","Executes a closure with a reference to this thread's…",null,[[["f"]],["t"]]],[11,"none","","Returns a new `Dispatch` that discards events and spans.",1,[[],["self"]]],[11,"new","","Returns a `Dispatch` that forwards to the given…",1,[[["s"]],["self"]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",1,[[["self"],["metadata"]],["interest"]]],[11,"new_span","","Record the construction of a new span, returning a new…",1,[[["self"],["attributes"]],["id"]]],[11,"record","","Record a set of values on a span.",1,[[["id"],["self"],["record"]]]],[11,"record_follows_from","","Adds an indication that `span` follows from the span with…",1,[[["id"],["self"]]]],[11,"enabled","","Returns true if a span with the specified [metadata] would…",1,[[["self"],["metadata"]],["bool"]]],[11,"event","","Records that an [`Event`] has occurred.",1,[[["self"],["event"]]]],[11,"enter","","Records that a span has been can_enter.",1,[[["id"],["self"]]]],[11,"exit","","Records that a span has been exited.",1,[[["id"],["self"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",1,[[["id"],["self"]],["id"]]],[11,"drop_span","","Notifies the subscriber that a [span ID] has been dropped.",1,[[["id"],["self"]]]],[11,"try_close","","Notifies the subscriber that a [span ID] has been dropped,…",1,[[["id"],["self"]],["bool"]]],[11,"current_span","","Returns a type representing this subscriber's view of the…",1,[[["self"]],["current"]]],[11,"is","","Returns `true` if this `Dispatch` forwards to a…",1,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to the `Subscriber` this `Dispatch`…",1,[[["self"]],[["t"],["option"]]]],[0,"event","tracing_core","Events represent single points in time during the…",null,null],[3,"Event","tracing_core::event","`Event`s represent single points in time where something…",null,null],[11,"dispatch","","Constructs a new `Event` with the specified metadata and…",2,[[["valueset"],["metadata"]]]],[11,"new","","Returns a new `Event` in the current span, with the…",2,[[["metadata"],["valueset"]],["self"]]],[11,"new_child_of","","Returns a new `Event` as a child of the specified span,…",2,[[["metadata"],["valueset"]],["self"]]],[11,"child_of","","Constructs a new `Event` with the specified metadata and…",2,[[["valueset"],["metadata"]]]],[11,"record","","Visits all the fields on this `Event` with the specified…",2,[[["visit"],["self"]]]],[11,"fields","","Returns an iterator over the set of values on this `Event`.",2,[[["self"]],["iter"]]],[11,"metadata","","Returns [metadata] describing this `Event`.",2,[[["self"]],["metadata"]]],[11,"is_root","","Returns true if the new event should be a root.",2,[[["self"]],["bool"]]],[11,"is_contextual","","Returns true if the new event's parent should be…",2,[[["self"]],["bool"]]],[11,"parent","","Returns the new event's explicitly-specified parent, if…",2,[[["self"]],[["option",["id"]],["id"]]]],[0,"field","tracing_core","Span and `Event` key-value data.",null,null],[3,"Field","tracing_core::field","An opaque key allowing O(1) access to a field in a…",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[3,"DisplayValue","","A `Value` which serializes using `fmt::Display`.",null,null],[3,"DebugValue","","A `Value` which serializes as a string using `fmt::Debug`.",null,null],[5,"display","","Wraps a type implementing `fmt::Display` as a `Value` that…",null,[[["t"]],["displayvalue"]]],[5,"debug","","Wraps a type implementing `fmt::Debug` as a `Value` that…",null,[[["t"]],["debugvalue"]]],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",3,[[["i64"],["self"],["field"]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",3,[[["self"],["field"],["u64"]]]],[11,"record_bool","","Visit a boolean value.",3,[[["self"],["field"],["bool"]]]],[11,"record_str","","Visit a string value.",3,[[["str"],["self"],["field"]]]],[11,"record_error","","Records a type implementing `Error`.",3,[[["self"],["field"],["error"]]]],[10,"record_debug","","Visit a value implementing `fmt::Debug`.",3,[[["self"],["field"],["debug"]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given `Visitor`.",4,[[["visit"],["self"],["field"]]]],[11,"callsite","","Returns an [`Identifier`] that uniquely identifies the…",5,[[["self"]],["identifier"]]],[11,"name","","Returns a string representing the name of the field.",5,[[["self"]],["str"]]],[11,"new","","Constructs a new `FieldSet` with the given array of field…",6,[[["identifier"]],["self"]]],[11,"field","","Returns the [`Field`] named `name`, or `None` if no such…",6,[[["self"],["q"]],[["option",["field"]],["field"]]]],[11,"contains","","Returns `true` if `self` contains the given `field`.",6,[[["self"],["field"]],["bool"]]],[11,"iter","","Returns an iterator over the `Field`s in this `FieldSet`.",6,[[["self"]],["iter"]]],[11,"len","","Returns the number of fields in this `FieldSet`.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether or not this `FieldSet` has fields.",6,[[["self"]],["bool"]]],[11,"callsite","","Returns an [`Identifier`] that uniquely identifies the…",7,[[["self"]],["identifier"]]],[0,"metadata","tracing_core","Metadata describing trace data.",null,null],[3,"Metadata","tracing_core::metadata","Metadata describing a [span] or [event].",null,null],[3,"Kind","","Indicates whether the callsite is a span or event.",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"ParseLevelError","","Returned if parsing a `Level` fails.",null,null],[11,"new","","Construct new metadata for a span or event, with a name,…",8,[[["str"],["u32"],["option",["str"]],["option",["u32"]],["kind"],["level"],["fieldset"],["str"]],["self"]]],[11,"fields","","Returns the names of the fields on the described span or…",8,[[["self"]],["fieldset"]]],[11,"level","","Returns the level of verbosity of the described span or…",8,[[["self"]],["level"]]],[11,"name","","Returns the name of the span.",8,[[["self"]],["str"]]],[11,"target","","Returns a string describing the part of the system where…",8,[[["self"]],["str"]]],[11,"module_path","","Returns the path to the Rust module where the span…",8,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","Returns the name of the source code file where the span…",8,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","Returns the line number in the source code file where the…",8,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"callsite","","Returns an opaque `Identifier` that uniquely identifies…",8,[[["self"]],["identifier"]]],[11,"is_event","","Returns true if the callsite kind is `Event`.",8,[[["self"]],["bool"]]],[11,"is_span","","Return true if the callsite kind is `Span`.",8,[[["self"]],["bool"]]],[18,"EVENT","","`Event` callsite",9,null],[18,"SPAN","","`Span` callsite",9,null],[11,"is_span","","Return true if the callsite kind is `Span`",9,[[["self"]],["bool"]]],[11,"is_event","","Return true if the callsite kind is `Event`",9,[[["self"]],["bool"]]],[18,"ERROR","","The \"error\" level.",10,null],[18,"WARN","","The \"warn\" level.",10,null],[18,"INFO","","The \"info\" level.",10,null],[18,"DEBUG","","The \"debug\" level.",10,null],[18,"TRACE","","The \"trace\" level.",10,null],[0,"span","tracing_core","Spans represent periods of time in the execution of a…",null,null],[3,"Id","tracing_core::span","Identifies a span within the context of a subscriber.",null,null],[3,"Attributes","","Attributes provided to a `Subscriber` describing a new…",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[3,"Current","","Indicates what [the `Subscriber` considers] the \"current\"…",null,null],[11,"from_u64","","Constructs a new span ID from the given `u64`.",11,[[["u64"]],["self"]]],[11,"into_u64","","Returns the span's ID as a  `u64`.",11,[[["self"]],["u64"]]],[11,"new","","Returns `Attributes` describing a new child span of the…",12,[[["metadata"],["valueset"]],["self"]]],[11,"new_root","","Returns `Attributes` describing a new span at the root of…",12,[[["metadata"],["valueset"]],["self"]]],[11,"child_of","","Returns `Attributes` describing a new child span of the…",12,[[["valueset"],["id"],["metadata"]],["self"]]],[11,"metadata","","Returns a reference to the new span's metadata.",12,[[["self"]],["metadata"]]],[11,"values","","Returns a reference to a `ValueSet` containing any values…",12,[[["self"]],["valueset"]]],[11,"is_root","","Returns true if the new span should be a root.",12,[[["self"]],["bool"]]],[11,"is_contextual","","Returns true if the new span's parent should be determined…",12,[[["self"]],["bool"]]],[11,"parent","","Returns the new span's explicitly-specified parent, if…",12,[[["self"]],[["option",["id"]],["id"]]]],[11,"record","","Records all the fields in this set of `Attributes` with…",12,[[["visit"],["self"]]]],[11,"contains","","Returns `true` if this set of `Attributes` contains a…",12,[[["field"],["self"]],["bool"]]],[11,"is_empty","","Returns true if this set of `Attributes` contains no values.",12,[[["self"]],["bool"]]],[11,"new","","Constructs a new `Record` from a `ValueSet`.",13,[[["valueset"]],["self"]]],[11,"record","","Records all the fields in this `Record` with the provided…",13,[[["visit"],["self"]]]],[11,"contains","","Returns `true` if this `Record` contains a value for the…",13,[[["field"],["self"]],["bool"]]],[11,"is_empty","","Returns true if this `Record` contains no values.",13,[[["self"]],["bool"]]],[11,"new","","Constructs a new `Current` that indicates the current…",14,[[["id"],["metadata"]],["self"]]],[11,"none","","Constructs a new `Current` that indicates the current…",14,[[],["self"]]],[11,"is_known","","Returns `true` if the `Subscriber` that constructed this…",14,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self` and returns the span `Id` and `Metadata`…",14,[[],["option"]]],[11,"id","","Borrows the `Id` of the current span, if one exists and is…",14,[[["self"]],[["option",["id"]],["id"]]]],[11,"metadata","","Borrows the `Metadata` of the current span, if one exists…",14,[[["self"]],[["option",["metadata"]],["metadata"]]]],[0,"subscriber","tracing_core","Subscribers collect and record trace data.",null,null],[3,"Interest","tracing_core::subscriber","Indicates a [`Subscriber`]'s interest in a particular…",null,null],[8,"Subscriber","","Trait representing the functions required to collect trace…",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",15,[[["self"],["metadata"]],["interest"]]],[10,"enabled","","Returns true if a span or event with the specified…",15,[[["self"],["metadata"]],["bool"]]],[10,"new_span","","Visit the construction of a new span, returning a new…",15,[[["self"],["attributes"]],["id"]]],[10,"record","","Record a set of values on a span.",15,[[["id"],["self"],["record"]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",15,[[["id"],["self"]]]],[10,"event","","Records that an [`Event`] has occurred.",15,[[["self"],["event"]]]],[10,"enter","","Records that a span has been entered.",15,[[["id"],["self"]]]],[10,"exit","","Records that a span has been exited.",15,[[["id"],["self"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",15,[[["id"],["self"]],["id"]]],[11,"drop_span","","This method is deprecated.",15,[[["id"],["self"]]]],[11,"try_close","","Notifies the subscriber that a [`span ID`] has been…",15,[[["id"],["self"]],["bool"]]],[11,"current_span","","Returns a type representing this subscriber's view of the…",15,[[["self"]],["current"]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",15,[[["self"],["typeid"]],["option"]]],[11,"is","","Returns `true` if this `Subscriber` is the same type as `T`.",15,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to this `Subscriber` value if it is…",15,[[["self"]],[["t"],["option"]]]],[11,"never","","Returns an `Interest` indicating that the subscriber is…",16,[[],["self"]]],[11,"sometimes","","Returns an `Interest` indicating the subscriber is…",16,[[],["self"]]],[11,"always","","Returns an `Interest` indicating the subscriber is always…",16,[[],["self"]]],[11,"is_never","","Returns `true` if the subscriber is never interested in…",16,[[["self"]],["bool"]]],[11,"is_sometimes","","Returns `true` if the subscriber is sometimes interested…",16,[[["self"]],["bool"]]],[11,"is_always","","Returns `true` if the subscriber is always interested in…",16,[[["self"]],["bool"]]],[8,"Callsite","tracing_core","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the [`Interest`] for this callsite.",0,[[["interest"],["self"]]]],[10,"metadata","","Returns the [metadata] associated with the callsite.",0,[[["self"]],["metadata"]]],[8,"Subscriber","","Trait representing the functions required to collect trace…",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",15,[[["self"],["metadata"]],["interest"]]],[10,"enabled","","Returns true if a span or event with the specified…",15,[[["self"],["metadata"]],["bool"]]],[10,"new_span","","Visit the construction of a new span, returning a new…",15,[[["self"],["attributes"]],["id"]]],[10,"record","","Record a set of values on a span.",15,[[["id"],["self"],["record"]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",15,[[["id"],["self"]]]],[10,"event","","Records that an [`Event`] has occurred.",15,[[["self"],["event"]]]],[10,"enter","","Records that a span has been entered.",15,[[["id"],["self"]]]],[10,"exit","","Records that a span has been exited.",15,[[["id"],["self"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",15,[[["id"],["self"]],["id"]]],[11,"drop_span","","This method is deprecated.",15,[[["id"],["self"]]]],[11,"try_close","","Notifies the subscriber that a [`span ID`] has been…",15,[[["id"],["self"]],["bool"]]],[11,"current_span","","Returns a type representing this subscriber's view of the…",15,[[["self"]],["current"]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",15,[[["self"],["typeid"]],["option"]]],[14,"identify_callsite","","Statically constructs an [`Identifier`] for the provided…",null,null],[14,"metadata","","Statically constructs new span [metadata].",null,null],[11,"from","tracing_core::dispatcher","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tracing_core::event","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tracing_core::field","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","tracing_core::metadata","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","tracing_core::callsite","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","tracing_core::dispatcher","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","tracing_core::field","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","tracing_core::metadata","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","tracing_core::span","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","tracing_core::subscriber","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"record","tracing_core::field","",22,[[["visit"],["self"],["field"]]]],[11,"record","","",23,[[["visit"],["self"],["field"]]]],[11,"record","","",20,[[["visit"],["self"],["field"]]]],[11,"drop","tracing_core::dispatcher","",18,[[["self"]]]],[11,"as_ref","tracing_core::field","",5,[[["self"]],["str"]]],[11,"from","tracing_core::dispatcher","",1,[[["s"]],["self"]]],[11,"into","tracing_core::span","",14,[[],[["id"],["option",["id"]]]]],[11,"next","tracing_core::field","",21,[[["self"]],[["option",["field"]],["field"]]]],[11,"clone","tracing_core::callsite","",17,[[["self"]],["identifier"]]],[11,"clone","tracing_core::dispatcher","",1,[[["self"]],["dispatch"]]],[11,"clone","tracing_core::field","",22,[[["self"]],["displayvalue"]]],[11,"clone","","",23,[[["self"]],["debugvalue"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","tracing_core::metadata","",9,[[["self"]],["kind"]]],[11,"clone","","",10,[[["self"]],["level"]]],[11,"clone","tracing_core::span","",11,[[["self"]],["id"]]],[11,"clone","tracing_core::subscriber","",16,[[["self"]],["interest"]]],[11,"default","tracing_core::dispatcher","Returns the current default dispatcher",1,[[],["self"]]],[11,"cmp","tracing_core::metadata","",10,[[["self"],["level"]],["ordering"]]],[11,"eq","tracing_core::callsite","",17,[[["self"],["identifier"]],["bool"]]],[11,"eq","tracing_core::field","",20,[[["self"],["empty"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","tracing_core::metadata","",9,[[["kind"],["self"]],["bool"]]],[11,"ne","","",9,[[["kind"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["level"]],["bool"]]],[11,"ne","","",10,[[["self"],["level"]],["bool"]]],[11,"eq","tracing_core::span","",11,[[["self"],["id"]],["bool"]]],[11,"ne","","",11,[[["self"],["id"]],["bool"]]],[11,"partial_cmp","tracing_core::metadata","",10,[[["self"],["level"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",10,[[["self"],["level"]],["bool"]]],[11,"le","","",10,[[["self"],["level"]],["bool"]]],[11,"gt","","",10,[[["self"],["level"]],["bool"]]],[11,"ge","","",10,[[["self"],["level"]],["bool"]]],[11,"fmt","tracing_core::callsite","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::dispatcher","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::event","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::field","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::metadata","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::span","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::subscriber","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::dispatcher","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::field","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","tracing_core::metadata","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"hash","tracing_core::callsite","",17,[[["self"],["h"]]]],[11,"hash","tracing_core::field","",5,[[["self"],["h"]]]],[11,"hash","tracing_core::span","",11,[[["self"],["__h"]]]],[11,"from_str","tracing_core::metadata","",10,[[["str"]],[["parselevelerror"],["result",["parselevelerror"]]]]]],"p":[[8,"Callsite"],[3,"Dispatch"],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,"Metadata"],[3,"Kind"],[3,"Level"],[3,"Id"],[3,"Attributes"],[3,"Record"],[3,"Current"],[8,"Subscriber"],[3,"Interest"],[3,"Identifier"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Empty"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"ParseLevelError"]]};
searchIndex["tracing_futures"] = {"doc":"Futures compatibility for [`tracing`].","i":[[3,"Instrumented","tracing_futures","A future, stream, sink, or executor that has been…",null,null],[3,"WithDispatch","","A future, stream, sink, or executor that has been…",null,null],[0,"executor","","Implementations for `Instrument`ed future executors.",null,null],[8,"Instrument","","Extension trait allowing futures, streams, sinks, and…",null,null],[11,"instrument","","Instruments this type with the provided `Span`, returning…",0,[[["span"]],["instrumented"]]],[11,"in_current_span","","Instruments this type with the [current] `Span`, returning…",0,[[],["instrumented"]]],[8,"WithSubscriber","","Extension trait allowing futures, streams, and skins to be…",null,null],[11,"with_subscriber","","Attaches the provided [`Subscriber`] to this type,…",1,[[["s"]],["withdispatch"]]],[11,"with_current_subscriber","","Attaches the current [default] [`Subscriber`] to this…",1,[[],["withdispatch"]]],[11,"span","","Borrows the `Span` that this type is instrumented by.",2,[[["self"]],["span"]]],[11,"span_mut","","Mutably borrows the `Span` that this type is instrumented…",2,[[["self"]],["span"]]],[11,"inner","","Borrows the wrapped type.",2,[[["self"]],["t"]]],[11,"inner_mut","","Mutably borrows the wrapped type.",2,[[["self"]],["t"]]],[11,"inner_pin_ref","","Get a pinned reference to the wrapped type.",2,[[["pin"],["self"]],[["t"],["pin"]]]],[11,"inner_pin_mut","","Get a pinned mutable reference to the wrapped type.",2,[[["pin"],["self"]],[["pin"],["t"]]]],[11,"into_inner","","Consumes the `Instrumented`, returning the wrapped type.",2,[[],["t"]]],[11,"with_dispatch","","Wrap a future, stream, sink or executor with the same…",3,[[["u"],["self"]],["withdispatch"]]],[11,"dispatch","","Borrows the `Dispatch` that this type is instrumented by.",3,[[["self"]],["dispatch"]]],[11,"inner_pin_ref","","Get a pinned reference to the wrapped type.",3,[[["pin"],["self"]],[["t"],["pin"]]]],[11,"inner_pin_mut","","Get a pinned mutable reference to the wrapped type.",3,[[["pin"],["self"]],[["pin"],["t"]]]],[11,"inner","","Borrows the wrapped type.",3,[[["self"]],["t"]]],[11,"inner_mut","","Mutably borrows the wrapped type.",3,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `WithDispatch`, returning the wrapped type.",3,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["instrumented"]]],[11,"clone","","",3,[[["self"]],["withdispatch"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"poll","","",2,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",3,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",2,[[["self"],["pin"]]]],[11,"drop","","",3,[[["self"],["pin"]]]]],"p":[[8,"Instrument"],[8,"WithSubscriber"],[3,"Instrumented"],[3,"WithDispatch"]]};
searchIndex["try_lock"] = {"doc":"A light-weight lock guarded by an atomic boolean.","i":[[3,"TryLock","try_lock","A light-weight lock guarded by an atomic boolean.",null,null],[3,"Locked","","A locked value acquired from a `TryLock`.",null,null],[11,"new","","Create a `TryLock` around the value.",0,[[["t"]],["trylock"]]],[11,"try_lock","","Try to acquire the lock of this value.",0,[[["self"]],[["option",["locked"]],["locked"]]]],[11,"try_lock_order","","Try to acquire the lock of this value using the lock and…",0,[[["self"],["ordering"]],[["option",["locked"]],["locked"]]]],[11,"into_inner","","Take the value back out of the lock when this is the sole…",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"default","","",0,[[],["trylock"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"TryLock"],[3,"Locked"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional…","i":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,null],[4,"BidiClass","","Represents values of the Unicode character property…",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",null,[[["range",["usize"]],["usize"]],[["vec",["levelrun"]],["levelrun"]]]],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,[[],["bool"]]],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",null,null],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],[["level"],["error"],["result",["level","error"]]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],[["level"],["error"],["result",["level","error"]]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],[["level"],["error"],["result",["level","error"]]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],[["level"],["error"],["result",["level","error"]]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],[["level"],["error"],["result",["level","error"]]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,[[],[["level"],["vec",["level"]]]]],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["level"],["option",["level"]]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["level"],["option",["level"]]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]],[["level"],["vec",["level"]]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]],[["level"],["vec",["level"]]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]],[["str"],["cow",["str"]]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]]]],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","unicode_bidi::level","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","Create level by number",5,[[["u8"]],["level"]]],[11,"into","","Convert to the level number",5,[[],["u8"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"cmp","unicode_bidi::level","",5,[[["level"],["self"]],["ordering"]]],[11,"eq","","",5,[[["level"],["self"]],["bool"]]],[11,"ne","","",5,[[["level"],["self"]],["bool"]]],[11,"eq","","",4,[[["error"],["self"]],["bool"]]],[11,"eq","","",5,[[["str"],["self"]],["bool"]]],[11,"eq","","",5,[[["string"],["self"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["bidiclass"],["self"]],["bool"]]],[11,"eq","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"eq","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"ne","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"partial_cmp","unicode_bidi::level","",5,[[["level"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["level"],["self"]],["bool"]]],[11,"le","","",5,[[["level"],["self"]],["bool"]]],[11,"gt","","",5,[[["level"],["self"]],["bool"]]],[11,"ge","","",5,[[["level"],["self"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities…","i":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",null,null],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkc","","Authoritatively check if a string is in NFKC.",null,[[["str"]],["bool"]]],[5,"is_nfkc_quick","","Quickly check if a string is in NFKC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkd","","Authoritatively check if a string is in NFKD.",null,[[["str"]],["bool"]]],[5,"is_nfkd_quick","","Quickly check if a string is in NFKD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,[[["iterator"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",null,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",null,[[["fnmut"],["char"]]]],[5,"compose","","Compose two characters into a single character, if…",null,[[["char"]],[["option",["char"]],["char"]]]],[5,"canonical_combining_class","","Look up the canonical combining class for a codepoint.",null,[[["char"]],["u8"]]],[5,"is_combining_mark","","Return whether the given character is a combining mark…",null,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",null,null],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[],["streamsafe"]]],[11,"nfd","","",2,[[],["decompositions"]]],[11,"nfkd","","",2,[[],["decompositions"]]],[11,"nfc","","",2,[[],["recompositions"]]],[11,"nfkc","","",2,[[],["recompositions"]]],[11,"stream_safe","","",2,[[],["streamsafe"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[],["decompositions"]]],[11,"nfkd","","",3,[[],["decompositions"]]],[11,"nfc","","",3,[[],["recompositions"]]],[11,"nfkc","","",3,[[],["recompositions"]]],[11,"stream_safe","","",3,[[],["streamsafe"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[],["decompositions"]]],[11,"nfkd","","",4,[[],["decompositions"]]],[11,"nfc","","",4,[[],["recompositions"]]],[11,"nfkc","","",4,[[],["recompositions"]]],[11,"stream_safe","","",4,[[],["streamsafe"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],[["option",["char"]],["char"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["char"]],["char"]]]],[11,"next","","",4,[[["self"]],[["option",["char"]],["char"]]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"eq","","",0,[[["isnormalized"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]]],"p":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
searchIndex["untrusted"] = {"doc":"untrusted.rs: Safe, fast, zero-panic, zero-crashing,…","i":[[3,"Input","untrusted","A wrapper around `&'a [u8]` that helps in writing…",null,null],[3,"Reader","","A read-only, forward-only* cursor into the data in an…",null,null],[3,"Mark","","An index into the already-parsed input of a `Reader`.",null,null],[3,"EndOfInput","","The error type used to indicate the end of the input was…",null,null],[5,"read_all_optional","","Calls `read` with the given input as a `Reader`, ensuring…",null,[[["option",["input"]],["e"],["input"],["f"]],["result"]]],[11,"from","","Construct a new `Input` for the given input `bytes`.",0,[[],["self"]]],[11,"is_empty","","Returns `true` if the input is empty and false otherwise.",0,[[["self"]],["bool"]]],[11,"len","","Returns the length of the `Input`.",0,[[["self"]],["usize"]]],[11,"read_all","","Calls `read` with the given input as a `Reader`, ensuring…",0,[[["f"],["self"],["e"]],["result"]]],[11,"as_slice_less_safe","","Access the input as a slice so it can be processed by…",0,[[["self"]]]],[11,"new","","Construct a new Reader for the given input. Use `read_all`…",1,[[["input"]],["self"]]],[11,"at_end","","Returns `true` if the reader is at the end of the input,…",1,[[["self"]],["bool"]]],[11,"get_input_between_marks","","Returns an `Input` for already-parsed input that has had…",1,[[["mark"],["self"]],[["result",["input","endofinput"]],["input"],["endofinput"]]]],[11,"mark","","Return the current position of the `Reader` for future use…",1,[[["self"]],["mark"]]],[11,"peek","","Returns `true` if there is at least one more byte in the…",1,[[["self"],["u8"]],["bool"]]],[11,"read_byte","","Reads the next input byte.",1,[[["self"]],[["endofinput"],["result",["u8","endofinput"]],["u8"]]]],[11,"read_bytes","","Skips `num_bytes` of the input, returning the skipped…",1,[[["self"],["usize"]],[["result",["input","endofinput"]],["input"],["endofinput"]]]],[11,"read_bytes_to_end","","Skips the reader to the end of the input, returning the…",1,[[["self"]],["input"]]],[11,"read_partial","","Calls `read()` with the given input as a `Reader`. On…",1,[[["self"],["f"]],["result"]]],[11,"skip","","Skips `num_bytes` of the input.",1,[[["self"],["usize"]],[["result",["endofinput"]],["endofinput"]]]],[11,"skip_to_end","","Skips the reader to the end of the input.",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["input"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["endofinput"]],["bool"]]],[11,"clone","","",0,[[["self"]],["input"]]],[11,"clone","","",3,[[["self"]],["endofinput"]]]],"p":[[3,"Input"],[3,"Reader"],[3,"Mark"],[3,"EndOfInput"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the…","i":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is…",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically…",null,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII…",0,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization…",0,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization…",0,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",2,null],[13,"IdnaError","","",2,null],[13,"InvalidPort","","",2,null],[13,"InvalidIpv4Address","","",2,null],[13,"InvalidIpv6Address","","",2,null],[13,"InvalidDomainCharacter","","",2,null],[13,"RelativeUrlWithoutBase","","",2,null],[13,"RelativeUrlWithCannotBeABaseBase","","",2,null],[13,"SetHostOnCannotBeABaseUrl","","",2,null],[13,"Overflow","","",2,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",3,null],[13,"C0SpaceIgnored","","",3,null],[13,"EmbeddedCredentials","","",3,null],[13,"ExpectedDoubleSlash","","",3,null],[13,"ExpectedFileDoubleSlash","","",3,null],[13,"FileWithHostAndWindowsDrive","","",3,null],[13,"NonUrlCodePoint","","",3,null],[13,"NullInFragment","","",3,null],[13,"PercentDecode","","",3,null],[13,"TabOrNewlineIgnored","","",3,null],[13,"UnencodedAtSign","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",0,[[["self"]],[["host",["string"]],["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square…",0,[[["str"]],[["result",["parseerror"]],["parseerror"]]]],[11,"parse_opaque","","",0,[[["str"]],[["result",["parseerror"]],["parseerror"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","…",1,[[["self"]],["string"]]],[11,"unicode_serialization","","…",1,[[["self"]],["string"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"clear","","Remove all segments in the path, leaving the minimal…",5,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,…",5,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",5,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",5,[[["str"],["self"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of…",5,[[["self"],["i"]],["self"]]],[0,"form_urlencoded","","Parser and serializer for the…",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of…",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the…",null,[[],["parse"]]],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,[[],["byteserialize"]]],[8,"Target","","",null,null],[10,"as_mut_string","","",6,[[["self"]],["string"]]],[10,"finish","","",6,[[]]],[16,"Finished","","",6,null],[11,"into_owned","","Return a new iterator that yields pairs of `String`…",7,[[],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded`…",8,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded`…",8,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",8,[[["self"]],["self"]]],[11,"encoding_override","","Set the character encoding to be used for names and values…",8,[[["self"],["encodingoverride"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",8,[[["str"],["self"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",8,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and…",8,[[["self"]]]],[6,"EncodingOverride","url","",null,null],[11,"base_url","","Change the base URL",9,[[["option",["url"]],["url"]],["self"]]],[11,"encoding_override","","Override the character encoding of query strings. This is…",9,[[["encodingoverride"]],["self"]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal…",9,[[["option",["fn"]],["fn"]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",9,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"parse","","Parse an absolute URL from a string.",10,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",10,[[["str"],["i"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",10,[[["str"],["self"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",10,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",10,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",10,[[],["string"]]],[11,"origin","","Return the origin of this URL…",10,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",10,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",10,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",10,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",10,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",10,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"host","","Return the parsed representation of the host for this URL.…",10,[[["self"]],[["option",["host"]],["host",["str"]]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"port","","Return the port number for this URL, if any.",10,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",10,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to `SocketAddr`.",10,[[["self"]],[["vec",["socketaddr"]],["result",["vec"]]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",10,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",10,[[["self"]],[["split",["char"]],["option",["split"]]]]],[11,"query","","Return this URL’s query string, if any, as a…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",10,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",10,[[["str"],["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",10,[[["str"],["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",10,[[["self"]],[["urlquery"],["serializer",["urlquery"]]]]],[11,"set_path","","Change this URL’s path.",10,[[["str"],["self"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",10,[[["self"]],[["result",["pathsegmentsmut"]],["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",10,[[["option",["u16"]],["self"],["u16"]],["result"]]],[11,"set_host","","Change this URL’s host.",10,[[["str"],["self"],["option",["str"]]],[["parseerror"],["result",["parseerror"]]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",10,[[["ipaddr"],["self"]],["result"]]],[11,"set_password","","Change this URL’s password.",10,[[["str"],["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",10,[[["str"],["self"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",10,[[["str"],["self"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",10,[[["path"],["asref",["path"]]],[["url"],["result",["url"]]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",10,[[["path"],["asref",["path"]]],[["url"],["result",["url"]]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",10,[[["self"]],[["result",["pathbuf"]],["pathbuf"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","url::form_urlencoded","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"as_mut_string","url","",12,[[["self"]],["string"]]],[11,"finish","","",12,[[],["url"]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"as_ref","","",10,[[["self"]],["str"]]],[11,"from","","",2,[[["errors"]],["parseerror"]]],[11,"next","url::form_urlencoded","",7,[[["self"]],["option"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"next","","",14,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",14,[[["self"]]]],[11,"clone","url","",0,[[["self"]],["host"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",11,[[["self"]],["opaqueorigin"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"clone","","",3,[[["self"]],["syntaxviolation"]]],[11,"clone","","",4,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",7,[[["self"]],["parse"]]],[11,"clone","url","",10,[[["self"]],["url"]]],[11,"clone","","",9,[[["self"]],["parseoptions"]]],[11,"cmp","","",0,[[["host"],["self"]],["ordering"]]],[11,"cmp","","",10,[[["self"]],["ordering"]]],[11,"eq","","",0,[[["host"],["self"]],["bool"]]],[11,"ne","","",0,[[["host"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",11,[[["opaqueorigin"],["self"]],["bool"]]],[11,"ne","","",11,[[["opaqueorigin"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",3,[[["self"],["syntaxviolation"]],["bool"]]],[11,"eq","","",10,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["host"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["host"],["self"]],["bool"]]],[11,"le","","",0,[[["host"],["self"]],["bool"]]],[11,"gt","","",0,[[["host"],["self"]],["bool"]]],[11,"ge","","",0,[[["host"],["self"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","url::form_urlencoded","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","url","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"index","","",10,[[["self"],["rangefull"]],["str"]]],[11,"index","","",10,[[["position"],["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",10,[[["rangeto",["position"]],["self"],["position"]],["str"]]],[11,"index","","",10,[[["range",["position"]],["self"],["position"]],["str"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"from_str","","",10,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]};
searchIndex["want"] = {"doc":"A Futures channel-like utility to signal when a value is…","i":[[3,"Giver","want","An entity that gives a value when wanted.",null,null],[3,"Taker","","An entity that wants a value.",null,null],[3,"SharedGiver","","A cloneable `Giver`.",null,null],[3,"Closed","","The `Taker` has canceled its interest in a value.",null,null],[5,"new","","Create a new `want` channel.",null,[[]]],[11,"want","","Returns a `Future` that fulfills when the `Taker` has done…",0,[[["self"]]]],[11,"poll_want","","Poll whether the `Taker` has registered interest in…",0,[[["self"],["context"]],[["poll",["result"]],["result",["closed"]]]]],[11,"give","","Mark the state as idle, if the Taker currently is wanting.",0,[[["self"]],["bool"]]],[11,"is_wanting","","Check if the `Taker` has called `want()` without parking a…",0,[[["self"]],["bool"]]],[11,"is_canceled","","Check if the `Taker` has canceled interest without parking…",0,[[["self"]],["bool"]]],[11,"shared","","Converts this into a `SharedGiver`.",0,[[],["sharedgiver"]]],[11,"is_wanting","","Check if the `Taker` has called `want()` without parking a…",1,[[["self"]],["bool"]]],[11,"is_canceled","","Check if the `Taker` has canceled interest without parking…",1,[[["self"]],["bool"]]],[11,"cancel","","Signal to the `Giver` that the want is canceled.",2,[[["self"]]]],[11,"want","","Signal to the `Giver` that a value is wanted.",2,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",1,[[["self"]],["sharedgiver"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Giver"],[3,"SharedGiver"],[3,"Taker"],[3,"Closed"]]};
searchIndex["webpki"] = {"doc":"webpki: Web PKI X.509 Certificate Validation.","i":[[3,"DNSNameRef","webpki","A reference to a DNS Name suitable for use in the TLS…",null,null],[3,"InvalidDNSNameError","","An error indicating that a `DNSNameRef` could not built…",null,null],[3,"DNSName","","A DNS Name suitable for use in the TLS Server Name…",null,null],[3,"SignatureAlgorithm","","A signature algorithm.",null,null],[3,"Time","","The time type.",null,null],[3,"EndEntityCert","","An end-entity certificate.",null,null],[3,"TrustAnchor","","A trust anchor (a.k.a. root CA).",null,null],[12,"subject","","The value of the `subject` field of the trust anchor.",0,null],[12,"spki","","The value of the `subjectPublicKeyInfo` field of the trust…",0,null],[12,"name_constraints","","The value of a DER-encoded NameConstraints, containing…",0,null],[3,"TLSServerTrustAnchors","","Trust anchors which may be used for authenticating servers.",null,null],[12,"0","","",1,null],[3,"TLSClientTrustAnchors","","Trust anchors which may be used for authenticating clients.",null,null],[12,"0","","",2,null],[4,"Error","","An error that occurs during certificate validation or name…",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",3,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",3,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity certificate.",3,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being…",3,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being…",3,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is…",3,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA certificate.",3,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",3,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is…",3,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",3,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",3,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length…",3,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \"signature\" field of a…",3,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage…",3,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",3,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",3,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical extension.",3,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature's algorithm does not match the algorithm of…",3,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set…",3,null],[11,"as_ref","","Returns a `DNSNameRef` that refers to this `DNSName`.",4,[[["self"]],["dnsnameref"]]],[11,"try_from_ascii","","Constructs a `DNSNameRef` from the given input if the…",5,[[],[["result",["invaliddnsnameerror"]],["invaliddnsnameerror"]]]],[11,"try_from_ascii_str","","Constructs a `DNSNameRef` from the given input if the…",5,[[["str"]],[["result",["invaliddnsnameerror"]],["invaliddnsnameerror"]]]],[11,"to_owned","","Constructs a `DNSName` from this `DNSNameRef`",5,[[["self"]],["dnsname"]]],[11,"try_from","","Create a `webpki::Time` from a `std::time::SystemTime`.",6,[[["systemtime"]],[["time"],["result",["time","unspecified"]],["unspecified"]]]],[11,"from_seconds_since_unix_epoch","","Create a `webpki::Time` from a unix timestamp.",6,[[["u64"]],["time"]]],[0,"trust_anchor_util","","Utilities for efficiently embedding trust anchors in…",null,null],[5,"cert_der_as_trust_anchor","webpki::trust_anchor_util","Interprets the given DER-encoded certificate as a…",null,[[],[["error"],["trustanchor"],["result",["trustanchor","error"]]]]],[5,"generate_code_for_trust_anchors","","Generates code for hard-coding the given trust anchors…",null,[[["str"]],["string"]]],[7,"ECDSA_P256_SHA256","webpki","ECDSA signatures using the P-256 curve and SHA-256.",null,null],[7,"ECDSA_P256_SHA384","","ECDSA signatures using the P-256 curve and SHA-384.…",null,null],[7,"ECDSA_P384_SHA256","","ECDSA signatures using the P-384 curve and SHA-256.…",null,null],[7,"ECDSA_P384_SHA384","","ECDSA signatures using the P-384 curve and SHA-384.",null,null],[7,"ED25519","","ED25519 signatures according to RFC 8410",null,null],[7,"RSA_PKCS1_2048_8192_SHA256","","RSA PKCS#1 1.5 signatures using SHA-256 for keys of…",null,null],[7,"RSA_PKCS1_2048_8192_SHA384","","RSA PKCS#1 1.5 signatures using SHA-384 for keys of…",null,null],[7,"RSA_PKCS1_2048_8192_SHA512","","RSA PKCS#1 1.5 signatures using SHA-512 for keys of…",null,null],[7,"RSA_PKCS1_3072_8192_SHA384","","RSA PKCS#1 1.5 signatures using SHA-384 for keys of…",null,null],[7,"RSA_PSS_2048_8192_SHA256_LEGACY_KEY","","RSA PSS signatures using SHA-256 for keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA384_LEGACY_KEY","","RSA PSS signatures using SHA-384 for keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA512_LEGACY_KEY","","RSA PSS signatures using SHA-512 for keys of 2048-8192…",null,null],[11,"from","","Parse the ASN.1 DER-encoded X.509 encoding of the…",7,[[],[["result",["error"]],["error"]]]],[11,"verify_is_valid_tls_server_cert","","Verifies that the end-entity certificate is valid for use…",7,[[["time"],["tlsservertrustanchors"],["self"]],[["error"],["result",["error"]]]]],[11,"verify_is_valid_tls_client_cert","","Verifies that the end-entity certificate is valid for use…",7,[[["tlsclienttrustanchors"],["time"],["self"]],[["error"],["result",["error"]]]]],[11,"verify_is_valid_for_dns_name","","Verifies that the certificate is valid for the given DNS…",7,[[["self"],["dnsnameref"]],[["error"],["result",["error"]]]]],[11,"verify_is_valid_for_at_least_one_dns_name","","Verifies that the certificate is valid for at least one of…",7,[[["self"],["names"]],[["result",["vec","error"]],["vec",["dnsnameref"]],["error"]]]],[11,"verify_signature","","Verifies the signature `signature` of message `msg` using…",7,[[["signaturealgorithm"],["self"]],[["error"],["result",["error"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"as_ref","","",4,[[["self"]],["str"]]],[11,"from","","",4,[[["dnsnameref"]],["self"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["dnsname"]]],[11,"clone","","",5,[[["self"]],["dnsnameref"]]],[11,"clone","","",8,[[["self"]],["invaliddnsnameerror"]]],[11,"clone","","",6,[[["self"]],["time"]]],[11,"eq","","",3,[[["error"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["dnsname"]],["bool"]]],[11,"ne","","",4,[[["self"],["dnsname"]],["bool"]]],[11,"eq","","",8,[[["self"],["invaliddnsnameerror"]],["bool"]]],[11,"eq","","",6,[[["self"],["time"]],["bool"]]],[11,"ne","","",6,[[["self"],["time"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["time"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",6,[[["self"],["time"]],["bool"]]],[11,"le","","",6,[[["self"],["time"]],["bool"]]],[11,"gt","","",6,[[["self"],["time"]],["bool"]]],[11,"ge","","",6,[[["self"],["time"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",4,[[["self"],["__h"]]]]],"p":[[3,"TrustAnchor"],[3,"TLSServerTrustAnchors"],[3,"TLSClientTrustAnchors"],[4,"Error"],[3,"DNSName"],[3,"DNSNameRef"],[3,"Time"],[3,"EndEntityCert"],[3,"InvalidDNSNameError"],[3,"SignatureAlgorithm"]]};
searchIndex["webpki_roots"] = {"doc":"This library is automatically generated from the Mozilla…","i":[[7,"TLS_SERVER_ROOTS","webpki_roots","",null,null]],"p":[]};
searchIndex["yup_oauth2"] = {"doc":"This library can be used to acquire oauth2.0…","i":[[3,"DeviceFlowAuthenticator","yup_oauth2","Create an authenticator that uses the device flow. `#…",null,null],[3,"InstalledFlowAuthenticator","","Create an authenticator that uses the installed flow. `#…",null,null],[3,"ServiceAccountAuthenticator","","Create an authenticator that uses a service account. `#…",null,null],[3,"ServiceAccountKey","","JSON schema of secret service account key. You can obtain…",null,null],[12,"key_type","","key_type",0,null],[12,"project_id","","project_id",0,null],[12,"private_key_id","","private_key_id",0,null],[12,"private_key","","private_key",0,null],[12,"client_email","","client_email",0,null],[12,"client_id","","client_id",0,null],[12,"auth_uri","","auth_uri",0,null],[12,"token_uri","","token_uri",0,null],[12,"auth_provider_x509_cert_url","","auth_provider_x509_cert_url",0,null],[12,"client_x509_cert_url","","client_x509_cert_url",0,null],[3,"AccessToken","","Represents an access token returned by oauth2 servers. All…",null,null],[3,"ApplicationSecret","","Represents either 'installed' or 'web' applications in a…",null,null],[12,"client_id","","The client ID.",1,null],[12,"client_secret","","The client secret.",1,null],[12,"token_uri","","The token server endpoint URI.",1,null],[12,"auth_uri","","The authorization server endpoint URI.",1,null],[12,"redirect_uris","","The redirect uris.",1,null],[12,"project_id","","Name of the google project the credentials are associated…",1,null],[12,"client_email","","The service account email associated with the client.",1,null],[12,"auth_provider_x509_cert_url","","The URL of the public x509 certificate, used to verify the…",1,null],[12,"client_x509_cert_url","","The URL of the public x509 certificate, used to verify…",1,null],[3,"ConsoleApplicationSecret","","A type to facilitate reading and writing the json secret…",null,null],[12,"web","","web app secret",2,null],[12,"installed","","installed app secret",2,null],[4,"InstalledFlowReturnMethod","","cf.…",null,null],[13,"Interactive","","Involves showing a URL to the user and asking to copy a…",3,null],[13,"HTTPRedirect","","Involves spinning up a local HTTP server and Google…",3,null],[4,"Error","","Encapsulates all possible results of the `token(...)`…",null,null],[13,"HttpError","","Indicates connection failure",4,null],[13,"AuthError","","The server returned an error.",4,null],[13,"JSONError","","Error while decoding a JSON response.",4,null],[13,"UserError","","Error within user input.",4,null],[13,"LowLevelError","","A lower level IO error.",4,null],[5,"read_application_secret","","Read an application secret from a file.",null,[[["path"],["asref",["path"]]]]],[5,"parse_application_secret","","Read an application secret from a JSON string.",null,[[["asref"]],[["applicationsecret"],["result",["applicationsecret"]]]]],[5,"read_service_account_key","","Read a service account key from a JSON file. You can…",null,[[["path"],["asref",["path"]]]]],[0,"authenticator","","Module contianing the core functionality for OAuth2…",null,null],[3,"Authenticator","yup_oauth2::authenticator","Authenticator is responsible for fetching tokens, handling…",null,null],[3,"AuthenticatorBuilder","","Configure an Authenticator using the builder pattern.",null,null],[3,"InstalledFlowAuthenticator","","Create an authenticator that uses the installed flow. `#…",null,null],[3,"DeviceFlowAuthenticator","","Create an authenticator that uses the device flow. `#…",null,null],[3,"ServiceAccountAuthenticator","","Create an authenticator that uses a service account. `#…",null,null],[3,"DefaultHyperClient","","The builder value used when the default hyper client…",null,null],[8,"HyperClientBuilder","","A trait implemented for any hyper::Client as well as the…",null,null],[16,"Connector","","The hyper connector that the resulting hyper client will…",5,null],[10,"build_hyper_client","","Create a hyper::Client",5,[[],["client"]]],[11,"token","","Return the current token for the provided scopes.",6,[[["self"]]]],[11,"force_refreshed_token","","Return a token for the provided scopes, but don't reuse…",6,[[["self"]]]],[11,"builder","","Use the builder pattern to create an Authenticator that…",7,[[["applicationsecret"],["installedflowreturnmethod"]],[["installedflow"],["defaulthyperclient"],["authenticatorbuilder",["defaulthyperclient","installedflow"]]]]],[11,"builder","","Use the builder pattern to create an Authenticator that…",8,[[["applicationsecret"]],[["deviceflow"],["defaulthyperclient"],["authenticatorbuilder",["defaulthyperclient","deviceflow"]]]]],[11,"builder","","Use the builder pattern to create an Authenticator that…",9,[[["serviceaccountkey"]],[["serviceaccountflowopts"],["authenticatorbuilder",["defaulthyperclient","serviceaccountflowopts"]],["defaulthyperclient"]]]],[11,"hyper_client","","Use the provided hyper client.",10,[[["client"]],[["authenticatorbuilder",["client"]],["client"]]]],[11,"persist_tokens_to_disk","","Persist tokens to disk in the provided filename.",10,[[["into",["pathbuf"]],["pathbuf"]],["authenticatorbuilder"]]],[11,"device_code_url","","Use the provided device code url.",10,[[],["self"]]],[11,"flow_delegate","","Use the provided DeviceFlowDelegate.",10,[[["box",["deviceflowdelegate"]],["deviceflowdelegate"]],["self"]]],[11,"grant_type","","Use the provided grant type.",10,[[],["self"]]],[11,"build","","Create the authenticator.",10,[[]]],[11,"flow_delegate","","Use the provided InstalledFlowDelegate.",10,[[["box",["installedflowdelegate"]],["installedflowdelegate"]],["self"]]],[11,"build","","Create the authenticator.",10,[[]]],[11,"subject","","Use the provided subject.",10,[[],["self"]]],[11,"build","","Create the authenticator.",10,[[]]],[0,"authenticator_delegate","yup_oauth2","Module containing types related to delegates.",null,null],[3,"DeviceAuthResponse","yup_oauth2::authenticator_delegate","Contains state of pending authentication requests",null,null],[12,"device_code","","The device verification code.",11,null],[12,"user_code","","Code the user must enter ...",11,null],[12,"verification_uri","","... at the verification URI",11,null],[12,"expires_at","","The `user_code` expires at the given time It's the time…",11,null],[12,"interval","","The interval in which we may poll for a status change The…",11,null],[3,"DefaultDeviceFlowDelegate","","Uses all default implementations in the DeviceFlowDelegate…",null,null],[3,"DefaultInstalledFlowDelegate","","Uses all default implementations in the DeviceFlowDelegate…",null,null],[8,"DeviceFlowDelegate","","DeviceFlowDelegate methods are called when a device flow…",null,null],[11,"present_user_code","","The server has returned a `user_code` which must be shown…",12,[[["self"],["deviceauthresponse"]],[["pin",["box"]],["box",["future"]]]]],[8,"InstalledFlowDelegate","","InstalledFlowDelegate methods are called when an installed…",null,null],[11,"redirect_uri","","Configure a custom redirect uri if needed.",13,[[["self"]],[["str"],["option",["str"]]]]],[11,"present_user_url","","We need the user to navigate to a URL using their browser…",13,[[["str"],["self"],["bool"]],[["box",["future"]],["pin",["box"]]]]],[0,"error","yup_oauth2","Module containing various error types.",null,null],[3,"AuthError","yup_oauth2::error","Error returned by the authorization server.…",null,null],[12,"error","","Error code from the server.",14,null],[12,"error_description","","Human-readable text providing additional information.",14,null],[12,"error_uri","","A URI identifying a human-readable web page with…",14,null],[4,"AuthErrorCode","","The error code returned by the authorization server.",null,null],[13,"InvalidRequest","","invalid_request",15,null],[13,"InvalidClient","","invalid_client",15,null],[13,"InvalidGrant","","invalid_grant",15,null],[13,"UnauthorizedClient","","unauthorized_client",15,null],[13,"UnsupportedGrantType","","unsupported_grant_type",15,null],[13,"InvalidScope","","invalid_scope",15,null],[13,"AccessDenied","","access_denied",15,null],[13,"ExpiredToken","","expired_token",15,null],[13,"Other","","other error",15,null],[4,"Error","","Encapsulates all possible results of the `token(...)`…",null,null],[13,"HttpError","","Indicates connection failure",4,null],[13,"AuthError","","The server returned an error.",4,null],[13,"JSONError","","Error while decoding a JSON response.",4,null],[13,"UserError","","Error within user input.",4,null],[13,"LowLevelError","","A lower level IO error.",4,null],[11,"as_str","","The error code as a &str",15,[[["self"]],["str"]]],[11,"as_str","yup_oauth2","A string representation of the access token.",16,[[["self"]],["str"]]],[11,"expiration_time","","The time the access token will expire, if any.",16,[[["self"]],[["option",["datetime"]],["datetime",["utc"]]]]],[11,"is_expired","","Determine if the access token is expired. This will report…",16,[[["self"]],["bool"]]],[11,"from","yup_oauth2::authenticator","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","yup_oauth2","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","yup_oauth2::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","yup_oauth2::authenticator","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","yup_oauth2::authenticator_delegate","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","yup_oauth2::error","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"equivalent","","",14,[[["k"],["self"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"equivalent","","",15,[[["k"],["self"]],["bool"]]],[11,"build_hyper_client","yup_oauth2::authenticator","",17,[[],["client"]]],[11,"as_ref","yup_oauth2","",16,[[["self"]],["str"]]],[11,"from","yup_oauth2::error","",15,[[["string"]],["self"]]],[11,"from","","",15,[[["str"]],["self"]]],[11,"from","","",4,[[["error"]],["error"]]],[11,"from","","",4,[[["autherror"]],["error"]]],[11,"from","","",4,[[["error"]],["error"]]],[11,"from","","",4,[[["error"]],["error"]]],[11,"clone","yup_oauth2::authenticator_delegate","",11,[[["self"]],["deviceauthresponse"]]],[11,"clone","","",18,[[["self"]],["defaultdeviceflowdelegate"]]],[11,"clone","","",19,[[["self"]],["defaultinstalledflowdelegate"]]],[11,"clone","yup_oauth2::error","",15,[[["self"]],["autherrorcode"]]],[11,"clone","yup_oauth2","",0,[[["self"]],["serviceaccountkey"]]],[11,"clone","","",16,[[["self"]],["accesstoken"]]],[11,"clone","","",1,[[["self"]],["applicationsecret"]]],[11,"default","","",1,[[],["applicationsecret"]]],[11,"default","","",2,[[],["consoleapplicationsecret"]]],[11,"cmp","","",16,[[["accesstoken"],["self"]],["ordering"]]],[11,"eq","yup_oauth2::authenticator_delegate","",11,[[["self"],["deviceauthresponse"]],["bool"]]],[11,"ne","","",11,[[["self"],["deviceauthresponse"]],["bool"]]],[11,"eq","yup_oauth2::error","",14,[[["autherror"],["self"]],["bool"]]],[11,"ne","","",14,[[["autherror"],["self"]],["bool"]]],[11,"eq","","",15,[[["autherrorcode"],["self"]],["bool"]]],[11,"ne","","",15,[[["autherrorcode"],["self"]],["bool"]]],[11,"eq","yup_oauth2","",16,[[["accesstoken"],["self"]],["bool"]]],[11,"ne","","",16,[[["accesstoken"],["self"]],["bool"]]],[11,"partial_cmp","","",16,[[["accesstoken"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",16,[[["accesstoken"],["self"]],["bool"]]],[11,"le","","",16,[[["accesstoken"],["self"]],["bool"]]],[11,"gt","","",16,[[["accesstoken"],["self"]],["bool"]]],[11,"ge","","",16,[[["accesstoken"],["self"]],["bool"]]],[11,"fmt","yup_oauth2::authenticator_delegate","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","yup_oauth2::error","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","yup_oauth2","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","yup_oauth2::error","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"hash","yup_oauth2","",16,[[["self"],["__h"]]]],[11,"source","yup_oauth2::error","",4,[[["self"]],[["option",["stderror"]],["stderror"]]]],[11,"serialize","yup_oauth2","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","yup_oauth2::authenticator_delegate","",11,[[["d"]],["result"]]],[11,"deserialize","yup_oauth2::error","",14,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["d"]],["result"]]],[11,"deserialize","yup_oauth2","",0,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]]],"p":[[3,"ServiceAccountKey"],[3,"ApplicationSecret"],[3,"ConsoleApplicationSecret"],[4,"InstalledFlowReturnMethod"],[4,"Error"],[8,"HyperClientBuilder"],[3,"Authenticator"],[3,"InstalledFlowAuthenticator"],[3,"DeviceFlowAuthenticator"],[3,"ServiceAccountAuthenticator"],[3,"AuthenticatorBuilder"],[3,"DeviceAuthResponse"],[8,"DeviceFlowDelegate"],[8,"InstalledFlowDelegate"],[3,"AuthError"],[4,"AuthErrorCode"],[3,"AccessToken"],[3,"DefaultHyperClient"],[3,"DefaultDeviceFlowDelegate"],[3,"DefaultInstalledFlowDelegate"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);